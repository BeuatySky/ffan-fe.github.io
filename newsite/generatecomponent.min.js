webpackJsonp([15],{502:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(503),p=t(o);exports.default=angular.module("generateComponent",[]).component("generateComponent",p.default)},503:function(n,exports,e){"use strict";function t(n){return n&&n.__esModule?n:{default:n}}Object.defineProperty(exports,"__esModule",{value:!0});var o=e(504),p=t(o),a=e(505),c=t(a);e(506),exports.default={restrict:"E",bindings:{},template:p.default,controller:c.default,controllerAs:"vm"}},504:function(n,exports){n.exports='<section class="intro-content">\n\t<h1>生成模块</h1>\n\t<p>增加一个页面模块, 执行 gulp component --name componentName.</p>\n\t<p>增加一个页面模块, 执行 gulp component --name componentName.</p>\n\t<p>一定确定没有重名的模块,因为 --name 会覆盖已有同名模块 大小写不敏感.</p>\n\t<p>模块默认会生成在 client/app/components 目录下. 可以通过修改 --parent 参数来改变生成的目录, 基准目录是 client/app/components/.</p>\n\t<p>比如, 执行 gulp component --name signup --parent auth 将会在创建在 client/app/components/auth/signup 下.</p>\n\t<p>生成一个公共模块 执行 gulp component --name commonheader --parent ../common 就创建了BP后台的公共头部 client/app/common/footer.</p>\n</section>\n'},505:function(n,exports){"use strict";function e(n,e){if(!(n instanceof e))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var t=function n(){e(this,n),this.name="generatecomponent"};exports.default=t},506:function(n,exports,e){var t=e(507);"string"==typeof t&&(t=[[n.id,t,""]]);e(100)(t,{});t.locals&&(n.exports=t.locals)},507:function(n,exports,e){exports=n.exports=e(94)(),exports.push([n.id,"",""])}});
//# sourceMappingURL=generatecomponent.min.js.map