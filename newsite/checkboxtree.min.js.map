{"version":3,"sources":["webpack:///checkboxtree.min.js","webpack:///./client/app/components/checkboxtree/checkboxtree.js","webpack:///./client/app/components/checkboxtree/checkboxtree.component.js","webpack:///./client/app/components/checkboxtree/checkboxtree.html","webpack:///./client/app/components/checkboxtree/checkboxtree.controller.js","webpack:///./client/app/components/checkboxtree/checkboxtree.less?d15e","webpack:///./client/app/components/checkboxtree/checkboxtree.less"],"names":["webpackJsonp","646","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_checkboxtree","_checkboxtree2","_fancyui","angular","checkboxtree","name","component","647","_checkboxtree3","_checkboxtree4","restrict","bindings","template","controller","controllerAs","648","649","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","props","i","length","descriptor","enumerable","configurable","writable","key","protoProps","staticProps","prototype","CheckboxtreeController","$q","this","loadPromise","mockService","mock","categoryId","child","config","fieldOfChildren","fieldOfName","fieldOfId","form","category","$inject","self","data","deferred","defer","resolve","promise","650","content","id","locals","651","push"],"mappings":"AAAAA,cAAc,KAERC,IACA,SAASC,EAAQC,QAASC,GCHhC,YAcA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAZvFG,OAAOC,eAAeP,QAAS,cAC7BQ,OAAO,GAHT,IAAAC,GAAAR,EAAA,KAQIS,EAAiBR,EAAuBO,EAP5CR,GAAA,IACA,IAAAU,GAAAV,EAAA,IAcAD,SAAQK,QAZOO,QAAQb,OAAO,oBAC5B,UACAY,EAAAE,aAAaC,OAEdC,UAAU,mBAJIL,EAAAL,UDqBTW,IACA,SAASjB,EAAQC,QAASC,GE1BhC,YAgBA,SAASC,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,QAASF,GAdvFG,OAAOC,eAAeP,QAAS,cAC7BQ,OAAO,GAHT,IAAAC,GAAAR,EAAA,KAQIS,EAAiBR,EAAuBO,GAP5CQ,EAAAhB,EAAA,KAWIiB,EAAiBhB,EAAuBe,EAV5ChB,GAAA,KAgBAD,QAAQK,SAbNc,SAAU,IACVC,YACAC,mBACAC,qBACAC,aAAc,OF+CVC,IACA,SAASzB,EAAQC,SGzDvBD,EAAAC,QAAA,4mEH+DMyB,IACA,SAAS1B,EAAQC,SIhEvB,YAQA,SAAS0B,GAAgBC,EAAUC,GAAe,KAAMD,YAAoBC,IAAgB,KAAM,IAAIC,WAAU,qCANhHvB,OAAOC,eAAeP,QAAS,cAC7BQ,OAAO,GAGT,IAAIsB,GAAe,WAAc,QAASC,GAAiBC,EAAQC,GAAS,IAAK,GAAIC,GAAI,EAAGA,EAAID,EAAME,OAAQD,IAAK,CAAE,GAAIE,GAAaH,EAAMC,EAAIE,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMjC,OAAOC,eAAeyB,EAAQI,EAAWI,IAAKJ,IAAiB,MAAO,UAAUR,EAAaa,EAAYC,GAAiJ,MAA9HD,IAAYV,EAAiBH,EAAYe,UAAWF,GAAiBC,GAAaX,EAAiBH,EAAac,GAAqBd,MJsE3hBgB,EAAyB,WI1E5B,QAAAA,GAAYC,GACV,UADcnB,GAAAoB,KAAAF,GAEdE,KAAKD,GAAKA,EAEVC,KAAKC,YAAcD,KAAKE,cAAcC,OACpCnC,KAAM,QACNoC,WAAY,KACZC,QACErC,KAAM,YACNoC,WAAY,UAGZpC,KAAM,aACNoC,WAAY,YAIZpC,KAAM,eACNoC,WAAY,QAIhBJ,KAAKM,QAEHC,gBAAiB,QAEjBC,YAAa,OAEbC,UAAW,cAGbT,KAAKU,QAGLV,KAAKU,KAAKC,WAEN3C,KAAM,eACNoC,WAAY,OA2BlB,MJWCN,GAAuBc,SAAW,MIzBnC5B,EAAac,IACXJ,IAAK,cACLhC,MAAO,WATP,GAAImD,GAAOb,IACX,QACEG,KADK,SACAW,GACH,GAAIC,GAAWF,EAAKd,GAAGiB,OAEvB,OADAD,GAASE,QAAQH,GACVC,EAASG,cAgBfpB,IAGT5C,SAAQK,QApEauC,GJ2IfqB,IACA,SAASlE,EAAQC,QAASC,GK1IhC,GAAAiE,GAAAjE,EAAA,IACA,iBAAAiE,SAAAnE,EAAAoE,GAAAD,EAAA,KAEAjE,GAAA,KAAAiE,KACAA,GAAAE,SAAArE,EAAAC,QAAAkE,EAAAE,SLgKMC,IACA,SAAStE,EAAQC,QAASC,GMxKhCD,QAAAD,EAAAC,QAAAC,EAAA,MAKAD,QAAAsE,MAAAvE,EAAAoE,GAAA","file":"checkboxtree.min.js","sourcesContent":["webpackJsonp([17],{\n\n/***/ 646:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _checkboxtree = __webpack_require__(647);\n\t\n\tvar _checkboxtree2 = _interopRequireDefault(_checkboxtree);\n\t\n\t__webpack_require__(306);\n\t\n\tvar _fancyui = __webpack_require__(305);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = angular.module('democheckboxtree', ['ui.tree', _fancyui.checkboxtree.name]).component('democheckboxtree', _checkboxtree2.default);\n\n/***/ },\n\n/***/ 647:\n/***/ function(module, exports, __webpack_require__) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _checkboxtree = __webpack_require__(648);\n\t\n\tvar _checkboxtree2 = _interopRequireDefault(_checkboxtree);\n\t\n\tvar _checkboxtree3 = __webpack_require__(649);\n\t\n\tvar _checkboxtree4 = _interopRequireDefault(_checkboxtree3);\n\t\n\t__webpack_require__(650);\n\t\n\tfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\t\n\texports.default = {\n\t  restrict: 'E',\n\t  bindings: {},\n\t  template: _checkboxtree2.default,\n\t  controller: _checkboxtree4.default,\n\t  controllerAs: 'vm'\n\t};\n\n/***/ },\n\n/***/ 648:\n/***/ function(module, exports) {\n\n\tmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>树</h1>\\n\\t<p>支持checkbox，配置的树组件</p>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>安装</h2>\\n\\t<p>安装fancyui</p>\\n</section>\\n<div ng-repeat=\\\"node in vm.list\\\">\\n\\t{{node}}\\n</div>\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save\\nnpm install angular-ui-tree --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>注入fancyui的checkboxTree模块</p>\\n</section>\\n\\n<div class=\\\"example-block no-border\\\">\\n\\t<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nimport checkboxtreeComponent from './checkboxtree.component';\\nimport 'angular-ui-tree';\\nimport {checkboxtree} from 'fancyui';\\nexport default angular.module('checkboxtree', [\\n  'ui.tree',\\n  checkboxtree.name\\n])\\n.component('checkboxtree', checkboxtreeComponent);</div>\\n</div>\\n\\n<h2>示例</h2>\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"bs-example pop-confirm-example\\\">\\n\\t\\t<bp-checkboxtree \\n\\t\\t\\tlist-promise=\\\"vm.loadPromise\\\" \\n\\t\\t\\tng-model=\\\"vm.form.category\\\"\\n\\t\\t\\tconfig=\\\"vm.config\\\"></bp-checkboxtree>\\n\\t</div>\\n</div>\\n\\n<h2>组件使用</h2>\\n<h3>view代码</h3>\\n<div class=\\\"example-block no-border\\\">\\n<div class=\\\"highlight\\\" hljs hljs-no-escape>\\n&lt;bp-checkboxtree \\n  list-promise=\\\"vm.loadPromise\\\" \\n  ng-model=\\\"vm.form.category\\\"\\n  config=\\\"vm.config\\\"&gt;\\n&lt;/bp-checkboxtree&gt;\\n</div>\\n</div>\\n\\n<h3>controller代码</h3>\\n<div class=\\\"example-block no-border\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\n/**演示mock 数据 */\\nthis.loadPromise = this.mockService().mock([{\\n    name: '第一个节点',\\n    categoryId: 1001,\\n    child: [{\\n      name: '第一个节点的子节点',\\n      categoryId: 1001001\\n  },{\\n      name:'第一个节点的子节点2',\\n      categoryId: 1001002\\n\\t}]\\n  },\\n  {\\n    name: '第二个节点(没有子节点)',\\n    categoryId: 1002\\n  }]);\\n\\n//这个配置用于避免或减少数据转换\\nthis.config = {\\n  //指示子节点的字段名\\n  fieldOfChildren: 'child',\\n  //指示节点名的字段\\n  fieldOfName: 'name',\\n  //指示节点id的字段\\n  fieldOfId: 'categoryId'\\n};\\n\\nthis.form = {};\\n/**发送给服务端的数据，以及数据回填操作 */\\nthis.form.category = [\\n{\\n  name: '第二个节点(没有子节点)',\\n  categoryId: 1002\\n}];\\n</div>\\n</div>\\n\"\n\n/***/ },\n\n/***/ 649:\n/***/ function(module, exports) {\n\n\t'use strict';\n\t\n\tObject.defineProperty(exports, \"__esModule\", {\n\t  value: true\n\t});\n\t\n\tvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\t\n\tfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\t\n\tvar CheckboxtreeController = function () {\n\t  CheckboxtreeController.$inject = [\"$q\"];\n\t  function CheckboxtreeController($q) {\n\t    'ngInject';\n\t\n\t    _classCallCheck(this, CheckboxtreeController);\n\t\n\t    this.$q = $q;\n\t    /** service 获取数据  */\n\t    this.loadPromise = this.mockService().mock([{\n\t      name: '第一个节点',\n\t      categoryId: 1001,\n\t      child: [{\n\t        name: '第一个节点的子节点',\n\t        categoryId: 1001001\n\t      }, {\n\t        name: '第一个节点的子节点2',\n\t        categoryId: 1001002\n\t      }]\n\t    }, {\n\t      name: '第二个节点(没有子节点)',\n\t      categoryId: 1002\n\t    }]);\n\t\n\t    //这个配置用于避免或减少数据转换\n\t    this.config = {\n\t      //指示子节点的字段名\n\t      fieldOfChildren: 'child',\n\t      //指示节点名的字段\n\t      fieldOfName: 'name',\n\t      //指示节点id的字段\n\t      fieldOfId: 'categoryId'\n\t    };\n\t\n\t    this.form = {};\n\t\n\t    /**发送给服务端的数据，以及数据回填操作 */\n\t    this.form.category = [{\n\t      name: '第二个节点(没有子节点)',\n\t      categoryId: 1002\n\t    }];\n\t  }\n\t\n\t  _createClass(CheckboxtreeController, [{\n\t    key: 'mockService',\n\t    value: function mockService() {\n\t      var self = this;\n\t      return {\n\t        mock: function mock(data) {\n\t          var deferred = self.$q.defer();\n\t          deferred.resolve(data);\n\t          return deferred.promise;\n\t        }\n\t      };\n\t    }\n\t  }]);\n\t\n\t  return CheckboxtreeController;\n\t}();\n\t\n\texports.default = CheckboxtreeController;\n\n/***/ },\n\n/***/ 650:\n/***/ function(module, exports, __webpack_require__) {\n\n\t// style-loader: Adds some css to the DOM by adding a <style> tag\n\t\n\t// load the styles\n\tvar content = __webpack_require__(651);\n\tif(typeof content === 'string') content = [[module.id, content, '']];\n\t// add the styles to the DOM\n\tvar update = __webpack_require__(100)(content, {});\n\tif(content.locals) module.exports = content.locals;\n\t// Hot Module Replacement\n\tif(false) {\n\t\t// When the styles change, update the <style> tags\n\t\tif(!content.locals) {\n\t\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./checkboxtree.less\", function() {\n\t\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./checkboxtree.less\");\n\t\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\t\tupdate(newContent);\n\t\t\t});\n\t\t}\n\t\t// When the module is disposed, remove the <style> tags\n\t\tmodule.hot.dispose(function() { update(); });\n\t}\n\n/***/ },\n\n/***/ 651:\n/***/ function(module, exports, __webpack_require__) {\n\n\texports = module.exports = __webpack_require__(94)();\n\t// imports\n\t\n\t\n\t// module\n\texports.push([module.id, \"\", \"\"]);\n\t\n\t// exports\n\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// checkboxtree.min.js","import checkboxtreeComponent from './checkboxtree.component';\nimport 'angular-ui-tree';\nimport {checkboxtree} from 'fancyui';\n\nexport default angular.module('democheckboxtree', [\n  'ui.tree',\n  checkboxtree.name\n])\n.component('democheckboxtree', checkboxtreeComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/checkboxtree/checkboxtree.js","import template from './checkboxtree.html';\nimport controller from './checkboxtree.controller';\nimport './checkboxtree.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/checkboxtree/checkboxtree.component.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1>树</h1>\\n\\t<p>支持checkbox，配置的树组件</p>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>安装</h2>\\n\\t<p>安装fancyui</p>\\n</section>\\n<div ng-repeat=\\\"node in vm.list\\\">\\n\\t{{node}}\\n</div>\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save\\nnpm install angular-ui-tree --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>注入模块</h2>\\n\\t<p>注入fancyui的checkboxTree模块</p>\\n</section>\\n\\n<div class=\\\"example-block no-border\\\">\\n\\t<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nimport checkboxtreeComponent from './checkboxtree.component';\\nimport 'angular-ui-tree';\\nimport {checkboxtree} from 'fancyui';\\nexport default angular.module('checkboxtree', [\\n  'ui.tree',\\n  checkboxtree.name\\n])\\n.component('checkboxtree', checkboxtreeComponent);</div>\\n</div>\\n\\n<h2>示例</h2>\\n<div class=\\\"example-block\\\">\\n\\t<div class=\\\"bs-example pop-confirm-example\\\">\\n\\t\\t<bp-checkboxtree \\n\\t\\t\\tlist-promise=\\\"vm.loadPromise\\\" \\n\\t\\t\\tng-model=\\\"vm.form.category\\\"\\n\\t\\t\\tconfig=\\\"vm.config\\\"></bp-checkboxtree>\\n\\t</div>\\n</div>\\n\\n<h2>组件使用</h2>\\n<h3>view代码</h3>\\n<div class=\\\"example-block no-border\\\">\\n<div class=\\\"highlight\\\" hljs hljs-no-escape>\\n&lt;bp-checkboxtree \\n  list-promise=\\\"vm.loadPromise\\\" \\n  ng-model=\\\"vm.form.category\\\"\\n  config=\\\"vm.config\\\"&gt;\\n&lt;/bp-checkboxtree&gt;\\n</div>\\n</div>\\n\\n<h3>controller代码</h3>\\n<div class=\\\"example-block no-border\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\n/**演示mock 数据 */\\nthis.loadPromise = this.mockService().mock([{\\n    name: '第一个节点',\\n    categoryId: 1001,\\n    child: [{\\n      name: '第一个节点的子节点',\\n      categoryId: 1001001\\n  },{\\n      name:'第一个节点的子节点2',\\n      categoryId: 1001002\\n\\t}]\\n  },\\n  {\\n    name: '第二个节点(没有子节点)',\\n    categoryId: 1002\\n  }]);\\n\\n//这个配置用于避免或减少数据转换\\nthis.config = {\\n  //指示子节点的字段名\\n  fieldOfChildren: 'child',\\n  //指示节点名的字段\\n  fieldOfName: 'name',\\n  //指示节点id的字段\\n  fieldOfId: 'categoryId'\\n};\\n\\nthis.form = {};\\n/**发送给服务端的数据，以及数据回填操作 */\\nthis.form.category = [\\n{\\n  name: '第二个节点(没有子节点)',\\n  categoryId: 1002\\n}];\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/checkboxtree/checkboxtree.html\n// module id = 648\n// module chunks = 17","\nexport default class CheckboxtreeController {\n  constructor($q) {\n    'ngInject'\n    this.$q = $q;\n    /** service 获取数据  */\n    this.loadPromise = this.mockService().mock([{\n      name: '第一个节点',\n      categoryId: 1001,\n      child: [{\n        name: '第一个节点的子节点',\n        categoryId: 1001001\n      },\n      {\n        name: '第一个节点的子节点2',\n        categoryId: 1001002\n      }]\n    },\n      {\n        name: '第二个节点(没有子节点)',\n        categoryId: 1002\n      }]);\n\n    //这个配置用于避免或减少数据转换\n    this.config = {\n      //指示子节点的字段名\n      fieldOfChildren: 'child',\n      //指示节点名的字段\n      fieldOfName: 'name',\n      //指示节点id的字段\n      fieldOfId: 'categoryId'\n    };\n\n    this.form = {};\n\n    /**发送给服务端的数据，以及数据回填操作 */\n    this.form.category = [\n      {\n        name: '第二个节点(没有子节点)',\n        categoryId: 1002\n      }];\n\n  }\n\n  mockService() {\n    let self = this;\n    return {\n      mock(data) {\n        let deferred = self.$q.defer();\n        deferred.resolve(data);\n        return deferred.promise;\n      }\n    }\n  }\n}\n\n\n// WEBPACK FOOTER //\n// ./client/app/components/checkboxtree/checkboxtree.controller.js","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./checkboxtree.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./checkboxtree.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./checkboxtree.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./client/app/components/checkboxtree/checkboxtree.less\n// module id = 650\n// module chunks = 17","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./client/app/components/checkboxtree/checkboxtree.less\n// module id = 651\n// module chunks = 17"],"sourceRoot":""}