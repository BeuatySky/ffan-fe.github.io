webpackJsonp([17],{640:function(e,exports,n){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var o=n(641),c=t(o);n(300);var i=n(299);exports.default=angular.module("democheckboxtree",["ui.tree",i.checkboxtree.name]).component("democheckboxtree",c.default)},641:function(e,exports,n){"use strict";function t(e){return e&&e.__esModule?e:{default:e}}Object.defineProperty(exports,"__esModule",{value:!0});var o=n(642),c=t(o),i=n(643),r=t(i);n(644),exports.default={restrict:"E",bindings:{},template:c.default,controller:r.default,controllerAs:"vm"}},642:function(e,exports){e.exports='<section class="intro-content">\n\t<h1>树</h1>\n\t<p>支持checkbox，配置的树组件</p>\n</section>\n\n<section class="intro-content">\n\t<h2>安装</h2>\n\t<p>安装fancyui</p>\n</section>\n<div ng-repeat="node in vm.list">\n\t{{node}}\n</div>\n<div class="example-block">\n\t<div class="highlight" hljs hljs-language="bash">\nnpm install fancyui --save\nnpm install angular-ui-tree --save</div>\n</div>\n\n<section class="intro-content">\n\t<h2>注入模块</h2>\n\t<p>注入fancyui的checkboxTree模块</p>\n</section>\n\n<div class="example-block no-border">\n\t<div class="highlight" hljs hljs-language="javascript">\nimport checkboxtreeComponent from \'./checkboxtree.component\';\nimport \'angular-ui-tree\';\nimport {checkboxtree} from \'fancyui\';\nexport default angular.module(\'checkboxtree\', [\n  \'ui.tree\',\n  checkboxtree.name\n])\n.component(\'checkboxtree\', checkboxtreeComponent);</div>\n</div>\n\n<h2>示例</h2>\n<div class="example-block">\n\t<div class="bs-example pop-confirm-example">\n\t\t<bp-checkboxtree \n\t\t\tlist-promise="vm.loadPromise" \n\t\t\tng-model="vm.form.category"\n\t\t\tconfig="vm.config"></bp-checkboxtree>\n\t</div>\n</div>\n\n<h2>组件使用</h2>\n<h3>view代码</h3>\n<div class="example-block no-border">\n<div class="highlight" hljs hljs-no-escape>\n&lt;bp-checkboxtree \n  list-promise="vm.loadPromise" \n  ng-model="vm.form.category"\n  config="vm.config"&gt;\n&lt;/bp-checkboxtree&gt;\n</div>\n</div>\n\n<h3>controller代码</h3>\n<div class="example-block no-border">\n<div class="highlight" hljs hljs-language="javascript">\n/**演示mock 数据 */\nthis.loadPromise = this.mockService().mock([{\n    name: \'第一个节点\',\n    categoryId: 1001,\n    child: [{\n      name: \'第一个节点的子节点\',\n      categoryId: 1001001\n  },{\n      name:\'第一个节点的子节点2\',\n      categoryId: 1001002\n\t}]\n  },\n  {\n    name: \'第二个节点(没有子节点)\',\n    categoryId: 1002\n  }]);\n\n//这个配置用于避免或减少数据转换\nthis.config = {\n  //指示子节点的字段名\n  fieldOfChildren: \'child\',\n  //指示节点名的字段\n  fieldOfName: \'name\',\n  //指示节点id的字段\n  fieldOfId: \'categoryId\'\n};\n\nthis.form = {};\n/**发送给服务端的数据，以及数据回填操作 */\nthis.form.category = [\n{\n  name: \'第二个节点(没有子节点)\',\n  categoryId: 1002\n}];\n</div>\n</div>\n'},643:function(e,exports){"use strict";function n(e,n){if(!(e instanceof n))throw new TypeError("Cannot call a class as a function")}Object.defineProperty(exports,"__esModule",{value:!0});var t=function(){function e(e,n){for(var t=0;t<n.length;t++){var o=n[t];o.enumerable=o.enumerable||!1,o.configurable=!0,"value"in o&&(o.writable=!0),Object.defineProperty(e,o.key,o)}}return function(n,t,o){return t&&e(n.prototype,t),o&&e(n,o),n}}(),o=function(){function e(t){"ngInject";n(this,e),this.$q=t,this.loadPromise=this.mockService().mock([{name:"第一个节点",categoryId:1001,child:[{name:"第一个节点的子节点",categoryId:1001001},{name:"第一个节点的子节点2",categoryId:1001002}]},{name:"第二个节点(没有子节点)",categoryId:1002}]),this.config={fieldOfChildren:"child",fieldOfName:"name",fieldOfId:"categoryId"},this.form={},this.form.category=[{name:"第二个节点(没有子节点)",categoryId:1002}]}return e.$inject=["$q"],t(e,[{key:"mockService",value:function(){var e=this;return{mock:function(n){var t=e.$q.defer();return t.resolve(n),t.promise}}}}]),e}();exports.default=o},644:function(e,exports,n){var t=n(645);"string"==typeof t&&(t=[[e.id,t,""]]);n(100)(t,{});t.locals&&(e.exports=t.locals)},645:function(e,exports,n){exports=e.exports=n(94)(),exports.push([e.id,"",""])}});
//# sourceMappingURL=checkboxtree.min.js.map