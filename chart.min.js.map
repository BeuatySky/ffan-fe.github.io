{"version":3,"sources":["webpack:///chart.min.js","webpack:///./example/app/components/piechart/piechart.html","webpack:///./example/app/components/gaugechart/gaugechart.less?8347","webpack:///./example/app/components/linechart/linechart.less?1f67","webpack:///./example/app/components/piechart/piechart.less?df19","webpack:///./lib/Charts/chart.less?56ca","webpack:///./~/zrender/lib/Handler.js","webpack:///./~/zrender/lib/Layer.js","webpack:///./~/zrender/lib/Painter.js","webpack:///./~/zrender/lib/Storage.js","webpack:///./~/zrender/lib/animation/Animation.js","webpack:///./~/zrender/lib/animation/Clip.js","webpack:///./~/zrender/lib/animation/easing.js","webpack:///./~/zrender/lib/contain/arc.js","webpack:///./~/zrender/lib/contain/cubic.js","webpack:///./~/zrender/lib/contain/line.js","webpack:///./~/zrender/lib/contain/path.js","webpack:///./~/zrender/lib/contain/quadratic.js","webpack:///./~/zrender/lib/contain/windingLine.js","webpack:///./~/zrender/lib/core/GestureMgr.js","webpack:///./~/zrender/lib/core/LRU.js","webpack:///./~/zrender/lib/core/bbox.js","webpack:///./~/zrender/lib/dom/HandlerProxy.js","webpack:///./~/zrender/lib/graphic/CompoundPath.js","webpack:///./~/zrender/lib/graphic/LinearGradient.js","webpack:///./~/zrender/lib/graphic/RadialGradient.js","webpack:///./~/zrender/lib/graphic/Text.js","webpack:///./~/zrender/lib/graphic/helper/roundRect.js","webpack:///./~/zrender/lib/graphic/helper/smoothBezier.js","webpack:///./~/zrender/lib/graphic/helper/smoothSpline.js","webpack:///./~/zrender/lib/graphic/mixin/RectText.js","webpack:///./~/zrender/lib/graphic/shape/Arc.js","webpack:///./~/zrender/lib/graphic/shape/BezierCurve.js","webpack:///./~/zrender/lib/graphic/shape/Circle.js","webpack:///./~/zrender/lib/graphic/shape/Line.js","webpack:///./~/zrender/lib/graphic/shape/Polygon.js","webpack:///./~/zrender/lib/graphic/shape/Polyline.js","webpack:///./~/zrender/lib/graphic/shape/Rect.js","webpack:///./~/zrender/lib/graphic/shape/Ring.js","webpack:///./~/zrender/lib/graphic/shape/Sector.js","webpack:///./~/zrender/lib/mixin/Animatable.js","webpack:///./~/zrender/lib/mixin/Draggable.js","webpack:///./~/zrender/lib/mixin/Transformable.js","webpack:///./~/zrender/lib/tool/path.js","webpack:///./~/zrender/lib/tool/transformPath.js","webpack:///./~/zrender/lib/zrender.js","webpack:///./example/app/components/gaugechart/gaugechart.js","webpack:///./example/app/components/linechart/linechart.js","webpack:///./example/app/components/piechart/piechart.js","webpack:///./~/zrender/lib/core/util.js","webpack:///./~/echarts/lib/echarts.js","webpack:///./~/echarts/lib/util/graphic.js","webpack:///./~/echarts/lib/util/number.js","webpack:///./~/zrender/lib/graphic/Path.js","webpack:///./~/zrender/lib/core/vector.js","webpack:///./~/echarts/lib/util/format.js","webpack:///./~/echarts/lib/util/model.js","webpack:///./~/zrender/lib/core/BoundingRect.js","webpack:///./~/echarts/lib/model/Model.js","webpack:///./~/zrender/lib/core/env.js","webpack:///./~/echarts/lib/model/Component.js","webpack:///./~/echarts/lib/util/clazz.js","webpack:///./~/echarts/lib/util/layout.js","webpack:///./~/zrender/lib/contain/text.js","webpack:///./~/zrender/lib/core/curve.js","webpack:///./~/zrender/lib/core/matrix.js","webpack:///./~/zrender/lib/mixin/Eventful.js","webpack:///./~/zrender/lib/tool/color.js","webpack:///./~/echarts/lib/data/List.js","webpack:///./~/echarts/lib/scale/Scale.js","webpack:///./~/echarts/lib/view/Chart.js","webpack:///./~/zrender/lib/config.js","webpack:///./~/zrender/lib/container/Group.js","webpack:///./~/zrender/lib/core/PathProxy.js","webpack:///./~/zrender/lib/core/event.js","webpack:///./~/echarts/lib/CoordinateSystem.js","webpack:///./~/echarts/lib/coord/axisHelper.js","webpack:///./~/echarts/lib/model/Series.js","webpack:///./~/echarts/lib/model/mixin/makeStyleMapper.js","webpack:///./~/echarts/lib/scale/Interval.js","webpack:///./~/echarts/lib/util/component.js","webpack:///./lib/Charts/index.js","webpack:///./~/zrender/lib/core/timsort.js","webpack:///./~/zrender/lib/graphic/Displayable.js","webpack:///./~/zrender/lib/graphic/Gradient.js","webpack:///./~/echarts/lib/chart/helper/Symbol.js","webpack:///./~/echarts/lib/coord/cartesian/AxisModel.js","webpack:///./~/echarts/lib/data/helper/completeDimensions.js","webpack:///./~/echarts/lib/model/mixin/colorPalette.js","webpack:///./~/echarts/lib/util/symbol.js","webpack:///(webpack)/buildin/global.js","webpack:///./~/zrender/lib/Element.js","webpack:///./~/zrender/lib/animation/Animator.js","webpack:///./~/zrender/lib/animation/requestAnimationFrame.js","webpack:///./~/zrender/lib/contain/util.js","webpack:///./~/zrender/lib/core/guid.js","webpack:///./~/zrender/lib/core/log.js","webpack:///./~/zrender/lib/graphic/Image.js","webpack:///./~/zrender/lib/graphic/Pattern.js","webpack:///./~/zrender/lib/graphic/Style.js","webpack:///./~/zrender/lib/graphic/helper/poly.js","webpack:///./example/app/components/gaugechart/gaugechart.less","webpack:///./example/app/components/linechart/linechart.less","webpack:///./example/app/components/piechart/piechart.less","webpack:///./lib/Charts/chart.less","webpack:///./~/echarts/lib/ExtensionAPI.js","webpack:///./~/echarts/lib/action/createDataSelectAction.js","webpack:///./~/echarts/lib/chart/gauge.js","webpack:///./~/echarts/lib/chart/gauge/GaugeSeries.js","webpack:///./~/echarts/lib/chart/gauge/GaugeView.js","webpack:///./~/echarts/lib/chart/gauge/PointerPath.js","webpack:///./~/echarts/lib/chart/helper/SymbolDraw.js","webpack:///./~/echarts/lib/chart/helper/createListFromArray.js","webpack:///./~/echarts/lib/chart/line.js","webpack:///./~/echarts/lib/chart/line/LineSeries.js","webpack:///./~/echarts/lib/chart/line/LineView.js","webpack:///./~/echarts/lib/chart/line/lineAnimationDiff.js","webpack:///./~/echarts/lib/chart/line/poly.js","webpack:///./~/echarts/lib/chart/pie.js","webpack:///./~/echarts/lib/chart/pie/PieSeries.js","webpack:///./~/echarts/lib/chart/pie/PieView.js","webpack:///./~/echarts/lib/chart/pie/labelLayout.js","webpack:///./~/echarts/lib/chart/pie/pieLayout.js","webpack:///./~/echarts/lib/component/axis.js","webpack:///./~/echarts/lib/component/axis/AxisBuilder.js","webpack:///./~/echarts/lib/component/axis/AxisView.js","webpack:///./~/echarts/lib/component/grid.js","webpack:///./~/echarts/lib/component/helper/listComponent.js","webpack:///./~/echarts/lib/component/helper/selectableMixin.js","webpack:///./~/echarts/lib/component/legend.js","webpack:///./~/echarts/lib/component/legend/LegendModel.js","webpack:///./~/echarts/lib/component/legend/LegendView.js","webpack:///./~/echarts/lib/component/legend/legendAction.js","webpack:///./~/echarts/lib/component/legend/legendFilter.js","webpack:///./~/echarts/lib/component/title.js","webpack:///./~/echarts/lib/component/tooltip.js","webpack:///./~/echarts/lib/component/tooltip/TooltipContent.js","webpack:///./~/echarts/lib/component/tooltip/TooltipModel.js","webpack:///./~/echarts/lib/component/tooltip/TooltipView.js","webpack:///./~/echarts/lib/coord/Axis.js","webpack:///./~/echarts/lib/coord/axisDefault.js","webpack:///./~/echarts/lib/coord/axisModelCommonMixin.js","webpack:///./~/echarts/lib/coord/axisModelCreator.js","webpack:///./~/echarts/lib/coord/axisModelZoomMixin.js","webpack:///./~/echarts/lib/coord/cartesian/Axis2D.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian.js","webpack:///./~/echarts/lib/coord/cartesian/Cartesian2D.js","webpack:///./~/echarts/lib/coord/cartesian/Grid.js","webpack:///./~/echarts/lib/coord/cartesian/GridModel.js","webpack:///./~/echarts/lib/coord/cartesian/axisLabelInterval.js","webpack:///./~/echarts/lib/data/DataDiffer.js","webpack:///./~/echarts/lib/layout/points.js","webpack:///./~/echarts/lib/loading/default.js","webpack:///./~/echarts/lib/model/Global.js","webpack:///./~/echarts/lib/model/OptionManager.js","webpack:///./~/echarts/lib/model/globalDefault.js","webpack:///./~/echarts/lib/model/mixin/areaStyle.js","webpack:///./~/echarts/lib/model/mixin/boxLayout.js","webpack:///./~/echarts/lib/model/mixin/itemStyle.js","webpack:///./~/echarts/lib/model/mixin/lineStyle.js","webpack:///./~/echarts/lib/model/mixin/textStyle.js","webpack:///./~/echarts/lib/preprocessor/backwardCompat.js","webpack:///./~/echarts/lib/preprocessor/helper/compatStyle.js","webpack:///./~/echarts/lib/processor/dataFilter.js","webpack:///./~/echarts/lib/processor/dataSample.js","webpack:///./~/echarts/lib/scale/Log.js","webpack:///./~/echarts/lib/scale/Ordinal.js","webpack:///./~/echarts/lib/scale/Time.js","webpack:///./~/echarts/lib/util/throttle.js","webpack:///./~/echarts/lib/view/Component.js","webpack:///./~/echarts/lib/visual/dataColor.js","webpack:///./~/echarts/lib/visual/seriesColor.js","webpack:///./~/echarts/lib/visual/symbol.js","webpack:///./example/app/components/gaugechart/gaugechart.component.js","webpack:///./example/app/components/gaugechart/gaugechart.controller.js","webpack:///./example/app/components/linechart/linechart.component.js","webpack:///./example/app/components/linechart/linechart.controller.js","webpack:///./example/app/components/piechart/piechart.component.js","webpack:///./example/app/components/piechart/piechart.controller.js","webpack:///./example/app/components/gaugechart/gaugechart.html","webpack:///./example/app/components/linechart/linechart.html"],"names":["webpackJsonp","1007","module","exports","1057","__webpack_require__","content","i","locals","1066","1075","1093","1111","makeEventPacket","eveType","target","event","type","cancelBubble","offsetX","zrX","offsetY","zrY","gestureEvent","pinchX","pinchY","pinchScale","wheelDelta","zrDelta","zrByTouch","EmptyProxy","isHover","displayable","x","y","rectHover","el","silent","clipPath","contain","parent","util","Draggable","Eventful","prototype","dispose","handlerNames","Handler","storage","painter","proxy","painterRoot","call","this","handler","_hovered","_lastTouchMoment","_lastX","_lastY","each","name","on","constructor","mousemove","hovered","findHover","lastHovered","setCursor","cursor","__zr","dispatchToElement","mouseout","innerDom","element","toElement","relatedTarget","parentNode","nodeType","trigger","resize","dispatch","eventName","eventArgs","setCursorStyle","cursorStyle","targetEl","eventHandler","eventPacket","eachOtherLayer","layer","exclude","list","getDisplayList","length","ignore","_downel","_upel","mixin","1112","returnFalse","createDom","id","dpr","newDom","document","createElement","width","getWidth","height","getHeight","newDomStyle","style","position","left","top","setAttribute","config","Style","Pattern","Layer","dom","devicePixelRatio","isObject","domStyle","onselectstart","domBack","ctxBack","clearColor","motionBlur","lastFrameAlpha","elCount","__dirty","initContext","ctx","getContext","createBackBuffer","scale","clear","clearAll","haveMotionBLur","globalCompositeOperation","drawImage","clearRect","clearColorGradientOrPattern","colorStops","__canvasGradient","getGradient","image","getCanvasPattern","save","fillStyle","fillRect","restore","globalAlpha","1113","parseInt10","val","parseInt","isLayerValid","isBuildin","preProcessLayer","__unusedCount","postProcessLayer","isDisplayableCulled","tmpRect","copy","getBoundingRect","transform","applyTransform","viewRect","intersect","isClipPathChanged","clipPaths","prevClipPaths","doClip","path","setTransform","beginPath","buildPath","shape","clip","restoreTransform","createRoot","domRoot","cssText","join","log","BoundingRect","timsort","requestAnimationFrame","MAX_PROGRESSIVE_LAYER_NUMBER","Painter","root","opts","singleCanvas","nodeName","toUpperCase","_opts","extend","_singleCanvas","rootStyle","innerHTML","zlevelList","_zlevelList","layers","_layers","_layerConfig","_width","_height","mainLayer","push","_getSize","_domRoot","appendChild","pathToImage","_createPathToImage","_progressiveLayers","_hoverlayer","_hoverElements","isSingleCanvas","getViewportRoot","refresh","paintAll","_paintList","z","refreshHover","_startProgessive","addHover","hoverStyle","__hoverMir","elMirror","__from","setStyle","removeHover","hoverElements","idx","indexOf","splice","clearHover","from","len","hoverLayer","displayableSortFunc","getLayer","scope","originalEl","invisible","invTransform","__clipPaths","_doPaintEl","step","token","self","_progressiveToken","_doPaintList","_furtherProgressive","_progress","Date","_clearProgressive","_updateLayerStatus","eachBuildinLayer","flushProgressiveLayer","shadowBlur","currentLayer","currentZLevel","currentProgressiveLayer","layerProgress","progressiveLayerIdx","frame","l","elZLevel","zlevel","elFrame","__frame","Math","min","renderScope","__progress","__maxProgress","__nextIdxNotProg","forcePaint","m","opacity","culling","prevClipLayer","prevElClipPaths","prevEl","beforeBrush","brush","afterBrush","merge","insertLayer","layersMap","prevLayer","prevDom","nextSibling","insertBefore","firstChild","eachLayer","cb","context","getLayers","progressiveLayers","elCountsLastFrame","progressiveElCountsLastFrame","lastProgressiveKey","progressiveLayerCount","frameCount","elProgress","progressive","max","_clearLayer","configLayer","layerConfig","delLayer","removeChild","display","hasOwnProperty","clearLayer","getRenderedCanvas","imageLayer","pixelRatio","backgroundColor","displayList","whIdx","wh","cwh","plt","prb","parseFloat","stl","defaultView","getComputedStyle","_pathToImage","canvas","pathTransform","rotation","ImageShape","imgShape","me","e","1114","shapeCompareFunc","a","b","z2","env","Group","Storage","_elements","_roots","_displayList","_displayListLen","traverse","update","includeIgnore","updateDisplayList","roots","_updateAndAddDisplayable","canvasSupported","beforeUpdate","afterUpdate","updateTransform","slice","isGroup","children","_children","child","addRoot","addChildrenToStorage","addToMap","delRoot","elId","delChildrenFromStorage","Array","delFromMap","__storage","dirty","get","elements","_renderList","1115","Dispatcher","Animator","Animation","options","stage","onframe","_clips","_running","_time","_pausedTime","_pauseStart","_paused","addClip","addAnimator","animator","animation","clips","getClips","removeClip","removeAnimator","_update","time","getTime","delta","deferredEvents","deferredClips","_needsRemove","pop","fire","_startLoop","start","stop","pause","resume","animate","loop","getter","setter","1116","Clip","_target","_life","life","_delay","delay","_initialized","gap","easing","ondestroy","onrestart","easingFuncs","globalTime","_startTime","percent","easingFunc","schedule","restart","remainder","eventType","arg","1117","linear","k","quadraticIn","quadraticOut","quadraticInOut","cubicIn","cubicOut","cubicInOut","quarticIn","quarticOut","quarticInOut","quinticIn","quinticOut","quinticInOut","sinusoidalIn","cos","PI","sinusoidalOut","sin","sinusoidalInOut","exponentialIn","pow","exponentialOut","exponentialInOut","circularIn","sqrt","circularOut","circularInOut","elasticIn","s","p","asin","elasticOut","elasticInOut","backIn","backOut","backInOut","bounceIn","bounceOut","bounceInOut","1118","normalizeRadian","PI2","containStroke","cx","cy","r","startAngle","endAngle","anticlockwise","lineWidth","_l","d","abs","tmp","angle","atan2","1119","curve","x0","y0","x1","y1","x2","y2","x3","y3","cubicProjectPoint","1120","_a","_b","_s","1121","isAroundEqual","EPSILON","swapExtrema","extrema","windingCubic","nRoots","cubicRootAt","y0_","y1_","w","nExtrema","t","unit","x_","cubicAt","cubicExtrema","windingQuadratic","quadraticRootAt","quadraticExtremum","y_","quadraticAt","windingArc","diff","dir","containPath","data","isStroke","xi","yi","cmd","CMD","M","windingLine","L","C","cubic","Q","quadratic","A","rx","ry","theta","dTheta","_x","arc","R","Z","line","pathData","1122","quadraticProjectPoint","1123","1124","dist","pointPair","dx","dy","center","eventUtil","GestureMgr","_track","recognize","_doTrack","_recognize","touches","trackItem","points","touch","pos","clientToLocal","recognizers","gestureInfo","pinch","track","trackLen","pinchEnd","pinchPre","isFinite","pinchCenter","1125","LinkedList","head","tail","_len","linkedListProto","insert","entry","Entry","insertEntry","next","prev","remove","value","LRU","maxSize","_list","_map","_maxSize","LRUProto","put","key","map","leastUsedEntry","1126","vec2","bbox","mathMin","mathMax","mathSin","mathCos","create","end","extremity","fromPoints","right","bottom","fromLine","xDim","yDim","fromCubic","n","Infinity","fromQuadratic","tx","ty","fromArc","vec2Min","vec2Max","1127","eventNameFix","browser","firefox","processGesture","gestureMgr","_gestureMgr","setTouchTimer","instance","_touching","clearTimeout","_touchTimer","setTimeout","useTouchEvent","touchEventsSupported","initDomHandler","makeMouseHandler","fn","apply","arguments","touchHandlerNames","_handlers","zrUtil","bind","domHandlers","mouseHandlerNames","HandlerDomProxy","mountHandlers","addEventListener","eventTool","removeEventListener","normalizeEvent","TOUCH_CLICK_DELAY","touchstart","mousedown","touchmove","touchend","mouseup","click","handlerDomProxyProto","concat","1128","Path","paths","_updatePathDirty","dirtyPath","__dirtyPath","getGlobalScale","setScale","1129","Gradient","LinearGradient","globalCoord","global","inherits","1130","RadialGradient","1131","Displayable","textContain","Text","text","textBaseline","textAlign","font","textFont","textVerticalAlign","rect","lineHeight","measureText","textLines","split","hasFill","fillText","hasStroke","strokeText","_rect","1132","r1","r2","r3","r4","total","moveTo","lineTo","quadraticCurveTo","1133","v2Min","v2Max","v2Scale","v2Distance","distance","v2Add","add","smooth","isLoop","constraint","prevPoint","nextPoint","cps","v","v1","v2","point","clone","sub","d0","d1","sum","cp0","cp1","shift","1134","interpolate","p0","p1","p2","p3","t2","t3","v0","ret","segs","floor","w2","w3","1135","parsePercent","maxValue","lastIndexOf","RectText","drawRectText","textRect","textPosition","textDistance","align","baseline","verticalAlign","textTransform","res","adjustTextPositionOnRect","textFill","textStroke","strokeStyle","textShadowBlur","shadowColor","textShadowColor","shadowOffsetX","textShadowOffsetX","shadowOffsetY","textShadowOffsetY","textRotation","translate","rotate","1136","clockwise","stroke","fill","unitX","unitY","1137","someVectorAt","isTangent","cpx2","cpy2","cubicDerivativeAt","cpx1","cpy1","quadraticDerivativeAt","curveTool","quadraticSubdivide","cubicSubdivide","out","bezierCurveTo","pointAt","tangentAt","normalize","1138","inBundle","1139","1140","polyHelper","smoothConstraint","1141","1142","roundRectHelper","closePath","1143","r0","1144","1145","isString","isFunction","Animatable","animators","animatingShape","zr","pathSplitted","prop","during","done","stopAnimation","forwardToLast","animateTo","callback","count","_animateToShallow","source","objShallow","propertyCount","isArrayLike","props","attr","when","1146","_dragStart","_drag","_dragEnd","draggingTarget","draggable","_draggingTarget","dragging","_y","drift","dropTarget","lastDropTarget","_dropTarget","1147","isNotAroundZero","matrix","vector","mIdentity","identity","Transformable","origin","transformableProto","needLocalTransform","parentHasTransform","getLocalTransform","mul","invert","tmpTransform","decomposeTransform","sx","sy","transformCoordToLocal","transformCoordToGlobal","1148","processArc","fa","fs","psiDeg","psi","xp","yp","lambda","mathSqrt","f","cxp","cyp","vAngle","u","vRatio","addData","createPathProxyFromString","cs","replace","cc","RegExp","prevCmd","arr","cpx","cpy","PathProxy","str","c","charAt","off","isNaN","ctlPtx","ctlPty","toStatic","createPathOptions","pathProxy","setData","transformPath","rebuildPath","vMag","acos","createFromString","extendFromString","mergePath","pathEls","pathList","pathEl","pathBundle","appendPath","1149","nPoint","j","mathAtan2","v2ApplyTransform","1150","delInstance","instances","guid","HandlerProxy","useVML","painterCtors","zrender","version","init","ZRender","getInstance","registerPainter","Ctor","rendererType","renderer","vml","Error","handerProxy","node","flush","_needsRefresh","oldDelFromMap","oldAddToMap","removeSelfFromZr","addSelfToZr","getId","zLevel","refreshImmediately","_needsRefreshHover","refreshHoverImmediately","clearAnimation","292","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","_gaugechartComponent","_gaugechartComponent2","_index","_index2","angular","component","301","_linechartComponent","_linechartComponent2","310","_piechartComponent","_piechartComponent2","412","result","typeStr","objToString","TYPED_ARRAY","BUILTIN_OBJECT","isDom","overwrite","targetProp","sourceProp","isArray","isBuildInObject","mergeAll","targetAndSources","defaults","overlay","createCanvas","_ctx","array","clazz","baseClazz","F","clazzPrototype","superClass","forEach","nativeForEach","nativeMap","reduce","memo","nativeReduce","filter","nativeFilter","find","func","args","nativeSlice","curry","ownerDocument","retrieve","values","Function","assert","condition","message","[object Function]","[object RegExp]","[object Date]","[object Error]","[object CanvasGradient]","[object CanvasPattern]","[object Image]","[object Canvas]","[object Int8Array]","[object Uint8Array]","[object Uint8ClampedArray]","[object Int16Array]","[object Uint16Array]","[object Int32Array]","[object Uint32Array]","[object Float32Array]","[object Float64Array]","toString","arrayProto","noop","421","createRegisterEventWithLowercaseName","method","toLowerCase","MessageCenter","ECharts","theme","prioritySortFunc","prio","themeStorage","group","_dom","_zr","_throttledZrFlush","throttle","_theme","_chartsViews","_chartsMap","_componentsViews","_componentsMap","_api","ExtensionAPI","_coordSysMgr","CoordinateSystemManager","_messageCenter","_initEvents","_pendingActions","visualFuncs","dataProcessorFuncs","_onframe","doConvertPixel","methodName","finder","ecModel","_model","coordSysList","getCoordinateSystems","modelUtil","parseFinder","coordSys","__DEV__","console","warn","toggleHighlight","payload","eachComponent","mainType","query","seriesModel","index","chartView","__viewId","__alive","doDispatchAction","actionWrap","actions","actionInfo","updateMethod","IN_MAIN_PROCESS","payloads","batched","batch","item","eventObj","eventObjBatch","isHighlightOrDownplay","batchItem","action","updateMethods","OPTION_UPDATED","prepareAndUpdate","flushPendingActions","pendingActions","invokeUpdateMethod","api","componentModel","__model","updateZ","eachSeries","chart","updateProgressiveAndBlend","updateHoverLayerStatus","prepareView","isComponent","viewList","viewMap","componentType","model","viewId","view","classType","ComponentModel","parseClassType","Clazz","ComponentView","getClass","main","ChartView","__id","processData","process","stackSeriesData","stackedDataMap","series","stack","getData","previousStack","stackedOn","doLayout","visual","isLayout","doVisualEncoding","clearColorPalette","doRender","componentView","render","useHoverLayer","frameDrawNum","needProgressive","blendMode","enableConnect","updateConnectedChartsStatus","charts","status","otherChart","STATUS_KEY","STATUS_PENDING","STATUS_UPDATING","STATUS_UPDATED","eventActionMap","actionType","connectedGroups","makeActionFromEvent","otherCharts","dispatchAction","window","GlobalModel","OptionManager","SeriesModel","graphic","colorTool","PRIORITY_PROCESSOR_FILTER","PRIORITY_PROCESSOR_STATISTIC","PRIORITY_VISUAL_LAYOUT","PRIORITY_VISUAL_GLOBAL","PRIORITY_VISUAL_CHART","PRIORITY_VISUAL_COMPONENT","PRIORITY_VISUAL_BRUSH","HAS_GRADIENT_OR_PATTERN_BG","one","echartsProto","getDom","getZr","setOption","option","notMerge","lazyUpdate","optionManager","__lastOnlyGraphic","o","optionPreprocessorFuncs","setTheme","getModel","getOption","getDataURL","excludeComponents","excludesComponentViews","url","toDataURL","getConnectedDataURL","groupId","MAX_NUMBER","canvasList","boundingRect","getBoundingClientRect","targetCanvas","img","Image","convertToPixel","convertFromPixel","containPixel","models","coordinateSystem","containPoint","getVisual","visualType","defaultMainType","dataIndexInside","indexOfRawIndex","dataIndex","getItemVisual","coordSysMgr","restoreData","colorArr","parse","stringify","background","updateView","clearAllVisual","updateVisual","updateLayout","highlight","downplay","optionChanged","resetOption","_loadingFX","showLoading","cfg","hideLoading","loadingEffects","opt","weChat","MOUSE_EVENT_NAMES","eveName","params","dataModel","getSeriesByIndex","seriesIndex","getDataParams","dataType","eventData","isDisposed","_disposed","idBase","groupIdBase","DOM_ATTRIBUTE_KEY","echarts","dependencies","clientWidth","clientHeight","connect","disConnect","getInstanceByDom","getAttribute","getInstanceById","registerTheme","registerPreprocessor","preprocessorFunc","registerProcessor","priority","processorFunc","registerAction","registerCoordinateSystem","CoordinateSystem","register","registerLayout","layoutFunc","registerVisual","visualFunc","registerLoading","loadingFx","extendComponentModel","extendComponentView","extendSeriesModel","extendChartView","setCanvasCreator","creator","List","Model","number","format","color","PRIORITY","PROCESSOR","FILTER","STATISTIC","VISUAL","LAYOUT","GLOBAL","CHART","COMPONENT","BRUSH","422","hasFillOrStroke","fillOrStroke","liftColor","lift","cacheElementStl","__hoverStlDirty","__hoverStl","normalStyle","__normalStl","doSingleEnterHover","__isHover","doSingleLeaveHover","normalStl","doEnterHover","doLeaveHover","setElementHoverStl","hoverStl","onElementMouseOver","__hoverSilentOnTouch","__isEmphasis","onElementMouseOut","enterEmphasis","leaveEmphasis","animateOrSetProps","isUpdate","animatableModel","animationEnabled","ifEnableAnimation","getShallow","postfix","duration","animationEasing","animationDelay","pathTool","round","Circle","Sector","Ring","Polygon","Polyline","Rect","Line","BezierCurve","Arc","CompoundPath","extendShape","extendPath","makePath","layout","aspect","resizePath","pathRect","calculateTransform","subPixelOptimizeLine","param","subPixelOptimize","subPixelOptimizeRect","originX","originY","originWidth","originHeight","positiveOrNegative","doubledPosition","setHoverStyle","hoverSilentOnTouch","setText","textStyle","labelModel","labelPosition","labelColor","textStyleModel","getFont","getTextColor","updateProps","initProps","getTransform","ancestor","mat","vertex","transformDirection","direction","hBase","vBase","groupTransition","g1","g2","getElMap","g","elMap","anid","getAnimatableProps","elMap1","oldEl","newProp","444","_trim","RADIAN_EPSILON","linearMap","domain","range","clamp","subDomain","subRange","all","match","NaN","precision","toFixed","asc","sort","getPrecision","getPrecisionSafe","dotIndex","getPixelPrecision","dataExtent","pixelExtent","LN10","dataQuantity","sizeQuantity","MAX_SAFE_INTEGER","remRadian","radian","pi2","isRadianAroundZero","parseDate","quantity","nice","nf","exp10","reformIntervals","littleThan","lg","interval","close","curr","currClose","553","pathContain","strokeContainThreshold","hasFillGradient","hasStrokeGradient","hasFillPattern","hasStrokePattern","_fillGradient","_strokeGradient","lineDash","lineDashOffset","ctxLineDash","setLineDash","setLineDashOffset","shapeCfg","needsUpdateRect","rectWithStroke","_rectWithStroke","lineScale","strokeNoScale","getLineScale","localPos","__clipTarget","animateShape","attrKV","setShape","Sub","extendFrom","defaultShape","thisShape","555","ArrayCtor","Float32Array","set","scaleAndAdd","lenSquare","div","dot","distanceSquare","negate","lerp","lengthSquare","distSquare","557","numberUtil","formatUtil","addCommas","toCamelCase","upperCaseFirst","group1","normalizeCssArray","encodeHTML","String","TPL_VAR_ALIAS","wrapVar","varName","seriesIdx","formatTpl","tpl","paramsList","seriesLen","$vars","alias","s2d","formatTime","date","getFullYear","getMonth","getDate","h","getHours","getMinutes","getSeconds","capitalFirst","substr","truncateText","558","has","nubmerUtil","normalizeToArray","defaultEmphasis","subOpts","emphasisOpt","emphasis","normalOpt","normal","subOptName","LABEL_OPTIONS","getDataItemValue","dataItem","isDataItemOption","converDataValue","dimInfo","dimType","createDataFormatModel","dataFormatMixin","subType","seriesName","rawValue","getRawValue","rawDataIndex","getRawIndex","getName","itemOpt","getRawDataItem","componentSubType","seriesType","getFormattedLabel","dimIndex","itemModel","getItemModel","formatter","formatTooltip","mappingToExists","exists","newCptOptions","exist","cptOption","isIdInner","makeIdAndName","mapResult","idMap","existCpt","keyInfo","idNum","compressBatches","batchA","batchB","makeMap","sourceBatch","otherMap","seriesId","dataIndices","otherDataIndices","lenj","mapToArray","isData","mapA","mapB","queryDataIndex","indexOfName","parsedKey","queryType","queryParam","queryComponents","574","union","other","lt","rb","lb","rt","maxX","maxY","ax0","ax1","ay0","ay1","bx0","bx1","by0","by1","plain","575","parentModel","clazzUtil","mergeOption","ignoreParent","thisParentModel","isEmpty","setReadOnly","properties","enableClassExtend","576","detect","ua","os","ie","edge","test","pointerEventsSupported","navigator","userAgent","578","getDependencies","deps","getClassesByMainType","arrayPush","componentUtil","componentIndex","defaultOption","dependentModels","uid","layoutMode","$constructor","extraOpt","getUID","mergeDefaultAndTheme","inputPositionParams","getLayoutParams","themeModel","getTheme","getDefaultOption","mergeLayoutParam","optionUpdated","newCptOption","isInit","optList","Class","__defaultOption","getReferringComponents","enableClassManagement","registerWhenExtend","enableSubTypeDefaulter","enableTopologicalTravel","602","superCall","superApply","TYPE_DELIMITER","IS_CONTAINER","RootClass","mandatoryMethods","proto","ExtendedClass","entity","makeContainer","container","registerClass","componentTypeMain","throwWhenNotFound","hasClass","getAllClassMainTypes","types","hasSubTypes","originalExtend","603","boxLayout","orient","maxWidth","maxHeight","currentLineMaxSize","eachChild","nextX","nextY","nextChild","childAt","nextChildRect","moveX","newline","moveY","LOCATION_PARAMS","box","vbox","hbox","getAvailableSize","positionInfo","containerRect","margin","containerWidth","containerHeight","getLayoutRect","verticalMargin","horizontalMargin","positionElement","hv","boundingMode","elPos","targetOption","newOption","names","newParams","newValueCount","merged","mergedValueCount","enoughParamNumber","ignoreSize","hasProp","hasValue","hNames","vNames","hResult","vResult","copyLayoutParams","604","getTextWidth","textWidthCache","textWidthCacheCounter","TEXT_CACHE_MAX","getTextRect","textLineLen","textHeight","halfHeight","ellipsis","maxIterations","minChar","cnCharWidth","ascCharWidth","placeholder","contentWidth","ellipsisWidth","textLine","subLength","estimateLength","charCode","charCodeAt","605","isAroundZero","onet","B","t1","disc","K","discSqrt","Y1","Y2","mathPow","ONE_THIRD","T","ASqrt","THREE_SQRT","p01","p12","p23","p012","p123","p0123","d2","_v0","_t","_v1","v2DistSquare","EPSILON_NUMERIC","_v2","divider","v2Create","612","m1","m2","out0","out1","out2","out3","out4","out5","rad","aa","ac","atx","ab","ad","aty","st","ct","vx","vy","det","613","arrySlice","_$handlers","_h","isSilent","newList","argLen","triggerWithContext","614","clampCssByte","clampCssAngle","clampCssFloat","parseCssInt","parseCssFloat","cssHueToRgb","colorStr","kCSSColorTable","op","ep","fname","alpha","hsla2rgba","iv","hsla","rgba","rgba2hsla","H","S","G","vMin","vMax","deltaR","deltaG","deltaB","level","toHex","fastMapToColor","normalizedValue","colors","leftIndex","rightIndex","ceil","leftColor","rightColor","dv","mapToColor","fullOutput","modifyHSL","modifyAlpha","arrColor","transparent","aliceblue","antiquewhite","aqua","aquamarine","azure","beige","bisque","black","blanchedalmond","blue","blueviolet","brown","burlywood","cadetblue","chartreuse","chocolate","coral","cornflowerblue","cornsilk","crimson","cyan","darkblue","darkcyan","darkgoldenrod","darkgray","darkgreen","darkgrey","darkkhaki","darkmagenta","darkolivegreen","darkorange","darkorchid","darkred","darksalmon","darkseagreen","darkslateblue","darkslategray","darkslategrey","darkturquoise","darkviolet","deeppink","deepskyblue","dimgray","dimgrey","dodgerblue","firebrick","floralwhite","forestgreen","fuchsia","gainsboro","ghostwhite","gold","goldenrod","gray","green","greenyellow","grey","honeydew","hotpink","indianred","indigo","ivory","khaki","lavender","lavenderblush","lawngreen","lemonchiffon","lightblue","lightcoral","lightcyan","lightgoldenrodyellow","lightgray","lightgreen","lightgrey","lightpink","lightsalmon","lightseagreen","lightskyblue","lightslategray","lightslategrey","lightsteelblue","lightyellow","lime","limegreen","linen","magenta","maroon","mediumaquamarine","mediumblue","mediumorchid","mediumpurple","mediumseagreen","mediumslateblue","mediumspringgreen","mediumturquoise","mediumvioletred","midnightblue","mintcream","mistyrose","moccasin","navajowhite","navy","oldlace","olive","olivedrab","orange","orangered","orchid","palegoldenrod","palegreen","paleturquoise","palevioletred","papayawhip","peachpuff","peru","pink","plum","powderblue","purple","red","rosybrown","royalblue","saddlebrown","salmon","sandybrown","seagreen","seashell","sienna","silver","skyblue","slateblue","slategray","slategrey","snow","springgreen","steelblue","tan","teal","thistle","tomato","turquoise","violet","wheat","white","whitesmoke","yellow","yellowgreen","615","normalizeDimensions","dimensions","cloneListForMapAndSample","original","excludeDimensions","allDimensions","getDimensionInfo","hostModel","transferProperties","_storage","originalStorage","dim","dimStore","UNDEFINED","globalObj","Float64Array","Int32Array","dataCtors","float","int","ordinal","DataDiffer","TRANSFERABLE_PROPERTIES","__wrappedMethods","propName","dimensionInfos","dimensionNames","dimensionName","dimensionInfo","stackable","_dimensionInfos","indices","_nameList","_idList","_optionModels","_visual","_layout","_itemVisuals","_itemLayouts","_graphicEls","_rawData","_extent","listProto","hasItemOption","getDimension","initData","nameList","dimValueGetter","size","dimensionInfoMap","idList","nameRepeatCount","DataCtor","dimName","dimStorage","stackedValue","getValues","getDataExtent","dimData","dimExtent","getSum","rawIndex","mid","indexOfNearest","maxDistance","nearestIdx","minDist","Number","MAX_VALUE","rawIdx","dims","dimSize","filterSelf","newIndices","keep","mapArray","tmpRetValue","retValue","downSample","dimension","rate","sampleValue","sampleIndex","targetStorage","originalIndices","frameValues","frameIndices","frameSize","otherList","otherIdList","prefix","setVisual","setLayout","getLayout","getItemLayout","setItemLayout","clearItemLayouts","itemVisual","setItemVisual","setItemDataAndSeriesIndex","setItemGraphicEl","getItemGraphicEl","eachItemGraphicEl","cloneShallow","dimensionInfoList","wrapMethod","injectFunction","originalMethod","TRANSFERABLE_METHODS","CHANGABLE_METHODS","616","Scale","_interval","scaleProto","extent","unionExtent","getExtent","setExtent","thisExtent","getTicksLabels","labels","ticks","getTicks","getLabel","617","Chart","elSetState","state","childCount","dataIdx","removeAll","chartProto","624","debugMode","625","Element","childOfName","_doAdd","addBefore","includeChildren","tmpMat","childRect","626","min2","max2","mathAbs","hasTypedArray","_xi","_yi","_x0","_y0","_ux","_uy","_lineDash","_dashOffset","_dashIdx","_dashSum","exceedUnit","_needsDash","_dashedLineTo","_dashedBezierTo","_dashedQuadraticTo","arcTo","radius","lineDashSum","offset","appendSize","appendPathData","_expandData","_prevCmd","newData","dash","dashSum","nDash","bezierLen","tmpLen","ux","uy","scaleX","scaleY","isEllipse","627","calculate","defaultGetZrXY","layerX","layerY","clientX","clientY","isTouch","targetTouches","changedTouches","detail","isDomLevel2","attachEvent","detachEvent","preventDefault","stopPropagation","returnValue","630","_coordinateSystems","coordinateSystemCreators","coordinateSystems","creater","coordinateSystemCreator","631","OrdinalScale","IntervalScale","axisHelper","getScaleExtent","axis","originalExtent","span","getMin","getMax","crossZero","getNeedCrossZero","boundaryGap","fixMin","fixMax","niceScaleExtent","splitNumber","base","niceExtent","minInterval","getInterval","intervalScale","setInterval","createScaleByModel","axisType","getCategories","ifAxisCrossZero","getAxisLabelInterval","tickCoords","isAxisHorizontal","textSpaceTakenRect","autoLabelInterval","accumulatedLabelInterval","tickCoord","getFormattedLabels","labelFormatter","tick","632","colorPaletteMixin","legendDataProvider","visualColorAccessPath","_dataBeforeProcessed","getInitialData","_data","label","fillDataTextStyle","newSeriesOption","getLinkedData","getRawData","coordDimToDataDim","coordDim","dataDimToCoordDim","dataDim","getBaseAxis","multipleSeries","formatArrayValue","valStr","formattedValue","colorEl","getColorFromPalette","getAxisTooltipDataIndex","getTooltipPosition","633","excludes","634","mathFloor","mathCeil","roundingErrorFix","niceTicks","_niceExtent","safeLimit","reverse","expandSize","635","DELIMITER","random","subTypeDefaulters","registerSubTypeDefaulter","defaulter","determineSubType","dependencyGetter","makeDepndencyGraph","fullNameList","graph","noEntryList","thisItem","createDependencyGraphItem","originalDeps","availableDeps","getAvailableDependencies","entryCount","dependentName","predecessor","thatItem","successor","dep","topologicalTravel","targetNameList","removeEdge","succComponentType","removeEdgeAndAdd","targetNameSet","currComponentType","currVertex","isInTargetNameSet","641","directive","link","attrs","ctrl","refreshChart","dataLoaded","$watch","restrict","654","minRunLength","DEFAULT_MIN_MERGE","makeAscendingRun","lo","hi","compare","runHi","reverseRun","binaryInsertionSort","pivot","gallopLeft","hint","lastOffset","maxOffset","gallopRight","TimSort","pushRun","_runStart","_runLength","runStart","stackSize","runLength","mergeRuns","mergeAt","forceMergeRuns","start1","length1","start2","length2","mergeLow","mergeHigh","cursor1","cursor2","dest","count1","count2","exit","_minGallop","minGallop","DEFAULT_MIN_GALLOPING","customCursor","customDest","tmpStorageLength","DEFAULT_TMP_STORAGE_LENGTH","stackLength","remaining","ts","minRun","force","655","rectContain","coord","animateStyle","useStyle","656","addColorStop","657","normalizeSymbolSize","symbolSize","Symbol","seriesScope","updateData","driftSymbol","symbolUtil","symbolProto","_createSymbol","symbolType","symbolPath","createSymbol","_symbolType","stopSymbolAnimation","toLastFrame","getSymbolPath","getScale","setZ","setDraggable","_updateCommon","_seriesModel","normalStyleAccessPath","emphasisStyleAccessPath","normalLabelAccessPath","emphasisLabelAccessPath","itemStyle","hoverItemStyle","symbolRotate","symbolOffset","hoverLabelModel","hoverAnimation","getItemStyle","elStyle","setColor","valueDim","onEmphasis","ratio","onNormal","fadeOut","658","getAxisType","axisDim","axisModelCreator","AxisModel","resetRange","findGridModel","extraOption","659","completeDimensions","defaultNames","extraPrefix","value0","retrieveValue","guessOrdinal","660","_colorIdx","_colorNameMap","colorIdx","colorNameMap","colorPalette","661","Triangle","Diamond","Pin","tanX","tanY","cpLen","cpLen2","Arrow","symbolCtors","roundRect","square","circle","diamond","pin","arrow","triangle","symbolShapeMakers","symbolBuildProxies","proxySymbol","symbolPathSetColor","symbolStyle","symbolShape","__isEmptyBrush","664","eval","665","hide","show","setClipPath","removeClipPath","666","defaultGetter","defaultSetter","interpolateNumber","interpolateString","interpolateArray","arrDim","len2","fillArr","arr0","arr1","arr0Len","arr1Len","isPreviousLarger","arraySlice","isArraySame","catmullRomInterpolateArray","catmullRomInterpolate","cloneValue","rgba2String","createTrackClip","oneTrackDone","keyframes","_getter","_setter","useSpline","trackMaxTime","firstVal","isValueArray","isValueColor","isValueString","kfPercents","kfValues","prevValue","isAllValueEqual","colorArray","lastValue","lastFrame","lastFramePercent","_loop","_tracks","_clipCount","_doneList","_onframeList","_clipList","tracks","_doneCallback","doneList","lastClip","clipCount","oldOnFrame","clipList","667","msRequestAnimationFrame","mozRequestAnimationFrame","webkitRequestAnimationFrame","668","669","idStart","670","671","ZImage","globalImageCache","src","_image","cachedImgObj","onload","pending","sWidth","sHeight","672","repeat","_canvasPattern","createPattern","673","createLinearGradient","canvasGradient","createRadialGradient","STYLE_COMMON_PROPS","blend","prevStyle","firstDraw","styleName","otherStyle","newStyle","styleProto","674","smoothSpline","smoothBezier","controlPoints","cp2","687","696","705","723","741","chartInstance","echartsAPIList","742","actionInfos","selected","isSelected","743","744","GaugeSeries","dataOpt","legendHoverLink","axisLine","lineStyle","splitLine","axisTick","axisLabel","pointer","title","offsetCenter","fontSize","borderWidth","borderColor","745","parsePosition","formatLabel","PointerPath","GaugeView","colorList","posInfo","_renderMain","axisLineModel","lineStyleModel","angleRangeSpan","prevEndAngle","axisLineWidth","sector","getLineStyle","getColor","_renderTicks","_renderPointer","_renderTitle","_renderDetail","minVal","maxVal","splitLineModel","tickModel","subSplitNumber","splitLineLen","tickLen","subStep","splitLineStyle","tickLineStyle","tickLine","valueExtent","angleExtent","oldData","newIdx","oldIdx","execute","pointerModel","titleModel","detailModel","746","747","SymbolDraw","symbolCtor","_symbolCtor","symbolNeedsDraw","isIgnore","symbolDrawProto","SymbolCtor","symbolEl","enableAnimation","748","firstDataNotNull","ifNeedCompleteOrdinalData","sampleItem","createListFromArray","coordSysName","creators","registeredCoordSys","axesInfo","categoryIndex","createNameList","categories","categoryAxesModels","isStackable","getDimTypeByAxis","categoryAxisModel","categoryDim","dataLen","cartesian2d","axesModels","xAxisModel","yAxisModel","xAxisType","yAxisType","isXAxisCateogry","isYAxisCategory","polar","polarModel","angleAxisModel","findAxisModel","radiusAxisModel","radiusAxisType","angleAxisType","isAngleAxisCateogry","isRadiusAxisCateogry","geo","749","750","clipOverflow","smoothMonotone","symbol","showSymbol","showAllSymbol","connectNulls","sampling","hoverLayerThreshold","751","isPointsSame","points1","points2","getSmooth","getAxisExtentWithGap","getGlobalExtent","onBand","halfBandWidth","getBandWidth","sign","getStackedOnPoints","baseAxis","valueAxis","getOtherAxis","valueStart","onZero","baseDataOffset","stackedOnSameSign","stackedData","dataToPoint","createGridClipShape","cartesian","hasAnimation","xExtent","getAxis","yExtent","isHorizontal","createPolarClipShape","angleAxis","getAngleAxis","radiusAxis","getRadiusAxis","radiusExtent","RADIAN","inverse","createClipShape","turnPointsIntoStep","stepTurnAt","baseIndex","stepPoints","nextPt","pt","stepPt","middle","stepPt2","getVisualGradient","visualMetaList","visualMeta","stops","toGlobalCoord","dataToCoord","stopLen","outerColors","tinyExtent","minCoord","maxCoord","coordSpan","unshift","gradient","lineAnimationDiff","lineGroup","symbolDraw","_symbolDraw","_lineGroup","areaStyleModel","isCoordSysPolar","prevCoordSys","_coordSys","polyline","_polyline","polygon","_polygon","isAreaChart","stackedOnPoints","isSymbolIgnore","_getSymbolIgnoreFunc","__temp","_step","_newPolygon","_stackedOnPoints","_points","_updateAnimation","_newPolyline","visualColor","lineJoin","stackedOnSmooth","getAreaStyle","stackedOnSeries","categoryAxis","getAxesByScale","isLabelIgnored","current","stackedOnCurrent","stackedOnNext","__points","updatedDataInfo","diffStatus","idx1","ptIdx","752","getStackedOnPoint","diffData","diffResult","oldStackedOnPoints","newStackedOnPoints","oldCoordSys","newCoordSys","currPoints","nextPoints","currStackedPoints","nextStackedPoints","sortedIndices","rawIndices","diffItem","pointAdded","currentPt","sortedCurrPoints","sortedNextPoints","sortedCurrStackedPoints","sortedNextStackedPoints","sortedStatus","753","isPointNull","drawSegment","segLen","allLen","smoothMin","smoothMax","prevIdx","v2Copy","nextIdx","nextP","ratioNextSeg","prevP","lenPrevSeg","lenNextSeg","getBoundingBox","ptMin","ptMax","stackedOnBBox","754","755","dataSelectableMixin","PieSeries","updateSelectedMap","_defaultLabelLine","labelLine","labelLineNormalOpt","labelLineEmphasisOpt","minAngle","selectedOffset","avoidLabelOverlap","756","updateDataSelected","toggleItemSelected","midAngle","PiePiece","hoverIgnore","normalIgnore","getLabelStyle","isLabelInside","piePieceProto","firstCreate","sectorShape","itemStyleModel","_updateLabel","labelText","labelLayout","linePoints","labelHoverModel","labelLineModel","labelLineHoverModel","Pie","sectorGroup","_sectorGroup","isFirstRender","onSectorClick","selectedMode","piePiece","_createClipPath","itemLayout","757","adjustSingleSide","viewWidth","viewHeight","shiftDown","shiftUp","changeX","isDownList","lastDeltaX","deltaY","deltaX","lastY","upList","downList","avoidOverlap","labelLayoutList","leftList","rightList","hasLabelRotate","textX","textY","labelLineLen","labelLineLen2","labelRotate","758","eachSeriesByType","unitRadian","roseType","restAngle","valueSumLargerThanMinAngle","currentAngle","759","760","makeAxisEventDataBase","axisModel","innerTextLayout","rotationDiff","endTextLayout","textRotate","onLeft","tooltipOpt","AxisBuilder","labelOffset","nameDirection","tickDirection","labelDirection","dumbGroup","_transform","_dumbGroup","hasBuilder","builders","getGroup","pt1","pt2","lineCap","tickInterval","labelInterval","ticksCoords","getTicksCoords","ifIgnoreOnTick","isTwoLabelOverlapped","firstRect","nextRect","axisLabelShow","labelMargin","labelRotation","categoryData","textEls","triggerEvent","tickVal","itemTextStyleModel","textColor","labelBeforeFormat","textEl","targetType","firstLabel","nextLabel","lastLabel","prevLabel","axisName","nameLocation","gapSignal","nameRotation","axisNameAvailableWidth","truncateOpt","truncatedText","formatterParams","__fullText","__truncatedText","tooltip","rawTick","761","layoutAxis","gridModel","getZero","theAxis","grid","rawAxisPosition","axisPosition","getRect","rectBound","axisOffset","posMap","dirMap","getLabelInterval","axisBuilderAttrs","selfBuilderAttrs","AxisView","oldAxisGroup","_axisGroup","axisBuilder","_splitLine","lineColors","lineInterval","gridRect","lineCount","colorIndex","_splitArea","splitAreaModel","areaColors","prevX","prevY","areaInterval","areaStyle","762","xAxis","yAxis","763","positionGroup","getBoxLayoutParams","addBackground","padding","764","targetList","_selectTargetMap","targetMap","select","unSelect","toggleSelected","765","766","LegendModel","_updateData","legendData","hasSelected","availableNames","getSeries","_availableNames","itemGap","itemWidth","itemHeight","inactiveColor","767","dispatchSelectAction","dispatchHighlightAction","dataName","dispatchDownplayAction","symbolCreator","listComponentHelper","_symbolTypeStore","legendModel","selectMode","itemAlign","legendDrawedMap","getSeriesByName","legendSymbolType","itemGroup","_createItem","eachRawSeries","itemIcon","tooltipModel","legendGlobalTooltipModel","hitRect","legendIndex","768","legendSelectActionHandler","selectedMap","isToggleSelect","isItemSelected","769","legendModels","findComponents","filterSeries","770","subtext","subtarget","fontWeight","subtextStyle","subtextStyleModel","subText","subTextEl","sublink","open","groupRect","layoutOption","layoutRect","alignStyle","771","772","assembleTransition","transitionCurve","transitionText","vendors","vendorPrefix","assembleFont","assembleCssText","transitionDuration","zrColor","borderName","camelCase","TooltipContent","_container","_show","_hideTimeout","onmouseenter","enterable","_inContent","onmousemove","onmouseleave","hideLater","_hideDelay","gCssText","currentStyle","setContent","isShow","773","showContent","triggerOn","alwaysShowContent","confine","showDelay","hideDelay","borderRadius","extraCssText","axisPointer","animationDurationUpdate","animationEasingUpdate","crossStyle","shadowStyle","774","dataEqual","makeLineShape","makeRectShape","makeSectorShape","refixTooltipPosition","confineTooltipPosition","calcTooltipPosition","domWidth","domHeight","rectWidth","rectHeight","updatePosition","positionExpr","ifSeriesSupportAxisTrigger","_axisPointers","tooltipContent","_tooltipContent","_manuallyShowTip","_manuallyHideTip","_tooltipModel","_ecModel","_lastHover","_alwaysShowContent","_seriesGroupByAxis","_prepareAxisTriggerData","crossText","_crossText","_refreshUpdateTimeout","_tryShow","_mousemove","_hide","_showTimeout","seriesHaveDataOnIndex","_series","isTriggerAxis","seriesGroupByAxis","globalTrigger","_showAxisTooltip","_ticket","_hideAxisPointer","_resetLastHover","_showItemTooltipContent","subTooltipModel","defaultHtml","asyncTicket","_showTooltipContent","axisPointerModel","axisPointerType","_showAxisPointer","allNotShow","seriesCoordSysSameAxis","allCoordSys","pointToData","contentNotChange","lastHover","valIndex","_showSinglePointer","_showPolarPointer","_showCartesianPointer","_dispatchAndShowSeriesTooltipContent","moveGridLine","otherExtent","targetShape","pointerEl","_getPointerElement","moveAnimation","moveGridShadow","bandWidth","_updateCrossText","otherAxis","single","moveSingleLine","movePolarLine","mouseCoord","pointToCoord","coordToPoint","movePolarShadow","crossStyleModel","initShape","axisPointers","pointerType","styleModel","isShadow","elementType","seriesList","sampleSeriesIndex","rootTooltipModel","baseDimIndex","payloadBatch","firstDataIndex","firstLine","seriesTooltipModel","html","ticket","cbTicket","775","fixExtentWithBands","nTick","normalizedExtent","Axis","containData","coordToData","alignWithLabel","bands","getBands","coords","getLabelsCoords","axisExtent","776","nameRotate","nameTruncate","nameTextStyle","nameGap","inside","splitArea","timeAxis","logAxis","logBase","777","778","axisDefault","AXIS_TYPES","BaseAxisModelClass","axisTypeDefaulter","extraDefaultOption","779","rangeStart","rangeEnd","setRange","780","axisLabelInterval","Axis2D","coordExtent","_labelInterval","toLocalCoord","781","dimAxisMapper","_axes","Cartesian","_dimList","getAxes","scaleType","addAxis","_dataCoordConvert","input","dimList","output","782","Cartesian2D","axisX","axisY","dataToPoints","783","isAxisUsedInTheGrid","getLabelUnionRect","labelCount","singleRect","Grid","_coordsMap","_coordsList","_axesMap","_axesList","_initCartesian","updateAxisTransfrom","coordBase","axisExtentSum","findAxesModels","axesTypes","isCartesian2D","gridProto","ifAxisCanNotOnZero","otherAxisDim","axes","axesMap","_updateScale","adjustAxes","axesList","labelUnionRect","axisIndex","axesMapOnDim","getCartesian","xAxisIndex","yAxisIndex","coordList","_findConvertTarget","coordsList","createAxisCreator","axisPositionUsed","isCategory","axesCount","grids","784","containLabel","785","786","defaultKeyGetter","oldArr","newArr","oldKeyGetter","newKeyGetter","_old","_new","_oldKeyGetter","_newKeyGetter","initIndexMap","keyArr","keyGetter","existence","_add","_remove","oldDataIndexMap","newDataIndexMap","oldDataKeyArr","newDataKeyArr","787","788","maskColor","mask","labelRect","789","mergeTheme","themeItem","initBase","baseOption","OPTION_INNER_KEY","_seriesIndices","globalDefault","getComponentsByTypes","componentsMap","existComponent","createSeriesIndices","seriesModels","filterBySubType","components","cpt","assertSeriesInitialized","_optionManager","mountOption","timelineOption","getTimelineOption","mediaOptions","getMediaOption","mediaOption","visitComponent","newCptOptionList","resultItem","ComponentModelClass","newCptTypes","componentOption","getComponent","cpts","isIdArray","isNameArray","getQueryCond","q","indexAttr","idAttr","nameAttr","doFilter","queryCond","queryResult","oneSeries","getSeriesByType","rawSeriesIndex","eachRawSeriesByType","isSeriesFiltered","filteredSeries","componentTypes","790","_timelineOptions","_mediaList","_mediaDefault","_currentMediaIndices","_optionBackup","_newBaseOption","parseRawOption","rawOption","isNew","mediaDefault","timelineOptions","mediaList","timelineOpt","timeline","media","singleMedia","preProcess","applyMediaQuery","ecWidth","ecHeight","realMap","aspectratio","applicatable","matched","QUERY_REG","operator","realAttr","real","expect","indicesEquals","indices1","indices2","oldOption","newCptOpt","oldCptOpt","oldOptionBackup","newParsedOption","isRecreate","optionBackup","timelineModel","getCurrentIndex","791","platform","fontFamily","fontStyle","animationDuration","animationThreshold","progressiveThreshold","792","793","794","getBorderLineDash","lineType","795","getLineDash","dotSize","dashSize","796","gTextStyleModel","797","compatLayoutProperties","LAYOUT_PROPERTIES","compatStyle","COMPATITABLE_COMPONENTS","COMPATITABLE_SERIES","seriesOpt","clockWise","pointerColor","dataRange","visualMap","componentName","798","compatItemStyle","itemStyleOpt","POSSIBLE_STYLES","normalItemStyleOpt","emphasisItemStyleOpt","markPoint","markLine","mpData","mlData","799","800","samplers","average","nearest","indexSampler","sampler","801","fixRoundingError","originalVal","intervalScaleProto","mathLog","LogScale","_originalScale","originalScale","powVal","__fixMin","__fixMax","approxTickNum","err","802","rank","803","ONE_SECOND","ONE_MINUTE","ONE_HOUR","ONE_DAY","bisect","TimeScale","stepLvl","_stepLvl","approxInterval","scaleLevelsLen","scaleLevels","yearSpan","yearStep","804","lib","ORIGIN_METHOD","RATE","THROTTLE_TYPE","debounce","exec","lastExec","timer","currCall","lastCall","createOrUpdate","fnAttr","throttleType","originFn","lastThrottleType","lastRate","805","Component","componentProto","806","paletteScope","dataAll","idxMap","filteredIdx","singleDataColor","807","encodeColor","colorAccessPath","808","defaultSymbolType","legendSymbol","itemSymbolType","itemSymbolSize","839","_gaugechart","_gaugechart2","_gaugechartController","_gaugechartController2","bindings","template","controller","controllerAs","840","_classCallCheck","Constructor","TypeError","_createClass","defineProperties","descriptor","enumerable","configurable","writable","protoProps","staticProps","GaugechartController","$state","initGaugeChart","$inject","gaugeConfig","gaugeOption","857","_linechart","_linechart2","_linechartController","_linechartController2","858","LinechartController","initLineChart","lineConfig","lineOption","legend","876","_piechart","_piechart2","_piechartController","_piechartController2","877","PiechartController","initPieChart","pieConfig","pieOption","oa","989","998"],"mappings":"AAAAA,cAAc,IAERC,KACA,SAASC,EAAQC,SCHvBD,EAAAC,QAAA,w6EDSMC,KACA,SAASF,EAAQC,QAASE,GEPhC,GAAAC,GAAAD,EAAA,IACA,iBAAAC,SAAAJ,EAAAK,EAAAD,EAAA,KAEAD,GAAA,GAAAC,KACAA,GAAAE,SAAAN,EAAAC,QAAAG,EAAAE,SF6BMC,KACA,SAASP,EAAQC,QAASE,GGlChC,GAAAC,GAAAD,EAAA,IACA,iBAAAC,SAAAJ,EAAAK,EAAAD,EAAA,KAEAD,GAAA,GAAAC,KACAA,GAAAE,SAAAN,EAAAC,QAAAG,EAAAE,SHwDME,KACA,SAASR,EAAQC,QAASE,GI7DhC,GAAAC,GAAAD,EAAA,IACA,iBAAAC,SAAAJ,EAAAK,EAAAD,EAAA,KAEAD,GAAA,GAAAC,KACAA,GAAAE,SAAAN,EAAAC,QAAAG,EAAAE,SJmFMG,KACA,SAAST,EAAQC,QAASE,GKxFhC,GAAAC,GAAAD,EAAA,IACA,iBAAAC,SAAAJ,EAAAK,EAAAD,EAAA,KAEAD,GAAA,GAAAC,KACAA,GAAAE,SAAAN,EAAAC,QAAAG,EAAAE,SL8GMI,KACA,SAASV,EAAQC,QAASE,GAEhC,YMzGA,SAAAQ,GAAAC,EAAAC,EAAAC,GACA,OACAC,KAAAH,EACAE,QACAD,SACAG,cAAA,EACAC,QAAAH,EAAAI,IACAC,QAAAL,EAAAM,IACAC,aAAAP,EAAAO,aACAC,OAAAR,EAAAQ,OACAC,OAAAT,EAAAS,OACAC,WAAAV,EAAAU,WACAC,WAAAX,EAAAY,QACAC,UAAAb,EAAAa,WAIA,QAAAC,MAmPA,QAAAC,GAAAC,EAAAC,EAAAC,GACA,GAAAF,IAAAG,UAAA,yBAAAF,EAAAC,GAAA,CAEA,IADA,GAAAE,GAAAJ,EACAI,GAAA,CAEA,GAAAA,EAAAC,QAAAD,EAAAE,WAAAF,EAAAE,SAAAC,QAAAN,EAAAC,GACA,QAEAE,KAAAI,OAEA,SAGA,SAtRA,GAAAC,GAAApC,EAAA,KACAqC,EAAArC,EAAA,MAEAsC,EAAAtC,EAAA,IAoBAyB,GAAAc,UAAAC,QAAA,YAEA,IAAAC,IACA,2CACA,iDAWAC,EAAA,SAAAC,EAAAC,EAAAC,EAAAC,GACAR,EAAAS,KAAAC,MAEAA,KAAAL,UAEAK,KAAAJ,UAEAI,KAAAF,cAEAD,KAAA,GAAApB,GAKAuB,KAAAH,QAGAA,EAAAI,QAAAD,KAMAA,KAAAE,SAMAF,KAAAG,iBAMAH,KAAAI,OAMAJ,KAAAK,OAGAhB,EAAAU,KAAAC,MAEAZ,EAAAkB,KAAAb,EAAA,SAAAc,GACAV,EAAAW,IAAAX,EAAAW,GAAAD,EAAAP,KAAAO,GAAAP,OACSA,MAGTN,GAAAH,WAEAkB,YAAAf,EAEAgB,UAAA,SAAA/C,GACA,GAAAiB,GAAAjB,EAAAI,IACAc,EAAAlB,EAAAM,IAEA0C,EAAAX,KAAAY,UAAAhC,EAAAC,EAAA,MACAgC,EAAAb,KAAAE,SACAL,EAAAG,KAAAH,KAEAG,MAAAE,SAAAS,EAEAd,EAAAiB,WAAAjB,EAAAiB,UAAAH,IAAAI,OAAA,WAGAF,GAAAF,IAAAE,KAAAG,MACAhB,KAAAiB,kBAAAJ,EAAA,WAAAlD,GAIAqC,KAAAiB,kBAAAN,EAAA,YAAAhD,GAGAgD,OAAAE,GACAb,KAAAiB,kBAAAN,EAAA,YAAAhD,IAIAuD,SAAA,SAAAvD,GACAqC,KAAAiB,kBAAAjB,KAAAE,SAAA,WAAAvC,EAOA,IACAwD,GADAC,EAAAzD,EAAA0D,WAAA1D,EAAA2D,aAEA,GACAF,QAAAG,iBAEAH,GAAA,GAAAA,EAAAI,YACAL,EAAAC,IAAApB,KAAAF,eAGAqB,GAAAnB,KAAAyB,QAAA,aAAoD9D,WAMpD+D,OAAA,SAAA/D,GACAqC,KAAAE,SAAA,MAQAyB,SAAA,SAAAC,EAAAC,GACA,GAAA5B,GAAAD,KAAA4B,EACA3B,MAAAF,KAAAC,KAAA6B,IAMArC,QAAA,WAEAQ,KAAAH,MAAAL,UAEAQ,KAAAL,QACAK,KAAAH,MACAG,KAAAJ,QAAA,MAOAkC,eAAA,SAAAC,GACA,GAAAlC,GAAAG,KAAAH,KACAA,GAAAiB,WAAAjB,EAAAiB,UAAAiB,IAWAd,kBAAA,SAAAe,EAAAJ,EAAAjE,GAMA,IALA,GAAAsE,GAAA,KAAAL,EACAM,EAAA1E,EAAAoE,EAAAI,EAAArE,GAEAoB,EAAAiD,EAEAjD,IACAA,EAAAkD,KACAC,EAAArE,aAAAkB,EAAAkD,GAAAlC,KAAAhB,EAAAmD,IAEAnD,EAAA0C,QAAAG,EAAAM,GAEAnD,IAAAI,QAEA+C,EAAArE,gBAKAqE,EAAArE,eAEAmC,KAAAyB,QAAAG,EAAAM,GAGAlC,KAAAJ,SAAAI,KAAAJ,QAAAuC,eAAA,SAAAC,GACA,kBAAAA,GAAAH,IACAG,EAAAH,GAAAlC,KAAAqC,EAAAF,GAEAE,EAAAX,SACAW,EAAAX,QAAAG,EAAAM,OAaAtB,UAAA,SAAAhC,EAAAC,EAAAwD,GAEA,OADAC,GAAAtC,KAAAL,QAAA4C,iBACArF,EAAAoF,EAAAE,OAAA,EAAyCtF,GAAA,EAASA,IAClD,IAAAoF,EAAApF,GAAA8B,QACAsD,EAAApF,KAAAmF,IAEAC,EAAApF,GAAAuF,QACA/D,EAAA4D,EAAApF,GAAA0B,EAAAC,GACA,MAAAyD,GAAApF,KAOAkC,EAAAkB,MAAA,8EAAAC,GACAb,EAAAH,UAAAgB,GAAA,SAAA5C,GAEA,GAAAgD,GAAAX,KAAAY,UAAAjD,EAAAI,IAAAJ,EAAAM,IAAA,KAEA,kBAAAsC,EACAP,KAAA0C,QAAA/B,EAEAX,KAAA2C,MAAAhC,MAEA,gBAAAJ,EACAP,KAAA2C,MAAAhC,MAEA,cAAAJ,GACAP,KAAA0C,UAAA1C,KAAA2C,MACA,MAIA3C,MAAAiB,kBAAAN,EAAAJ,EAAA5C,MAoBAyB,EAAAwD,MAAAlD,EAAAJ,GACAF,EAAAwD,MAAAlD,EAAAL,GAEAxC,EAAAC,QAAA4C,GN8HMmD,KACA,SAAShG,EAAQC,QAASE,GO1ZhC,QAAA8F,KACA,SAYA,QAAAC,GAAAC,EAAApF,EAAAgC,EAAAqD,GACA,GAAAC,GAAAC,SAAAC,cAAAxF,GACAyF,EAAAzD,EAAA0D,WACAC,EAAA3D,EAAA4D,YAEAC,EAAAP,EAAAQ,KAYA,OAVAD,GAAAE,SAAA,WACAF,EAAAG,KAAA,EACAH,EAAAI,IAAA,EACAJ,EAAAJ,QAAA,KACAI,EAAAF,SAAA,KACAL,EAAAG,QAAAJ,EACAC,EAAAK,SAAAN,EAGAC,EAAAY,aAAA,iBAAAd,GACAE,EAnCA,GAAA9D,GAAApC,EAAA,KACA+G,EAAA/G,EAAA,KACAgH,EAAAhH,EAAA,KACAiH,EAAAjH,EAAA,KA2CAkH,EAAA,SAAAlB,EAAApD,EAAAqD,GACA,GAAAkB,EACAlB,MAAAc,EAAAK,iBACA,gBAAApB,GACAmB,EAAApB,EAAAC,EAAA,SAAApD,EAAAqD,GAGA7D,EAAAiF,SAAArB,KACAmB,EAAAnB,EACAA,EAAAmB,EAAAnB,IAEAhD,KAAAgD,KACAhD,KAAAmE,KAEA,IAAAG,GAAAH,EAAAT,KACAY,KACAH,EAAAI,cAAAzB,EACAwB,EAAA,8BACAA,EAAA,sBACAA,EAAA,gCACAA,EAAA,+CACAA,EAAA,UACAA,EAAA,SACAA,EAAA,mBAGAtE,KAAAwE,QAAA,KACAxE,KAAAyE,QAAA,KAEAzE,KAAAJ,UAEAI,KAAA+D,OAAA,KAQA/D,KAAA0E,WAAA,EAMA1E,KAAA2E,YAAA,EAMA3E,KAAA4E,eAAA,GAMA5E,KAAAiD,MAGAiB,GAAA3E,WAEAkB,YAAAyD,EAEAW,QAAA,EAEAC,SAAA,EAEAC,YAAA,WACA/E,KAAAgF,IAAAhF,KAAAmE,IAAAc,WAAA,MAEAjF,KAAAgF,IAAA/B,IAAAjD,KAAAiD,KAGAiC,iBAAA,WACA,GAAAjC,GAAAjD,KAAAiD,GAEAjD,MAAAwE,QAAAzB,EAAA,QAAA/C,KAAAgD,GAAA,SAAAhD,KAAAJ,QAAAqD,GACAjD,KAAAyE,QAAAzE,KAAAwE,QAAAS,WAAA,MAEA,GAAAhC,GACAjD,KAAAyE,QAAAU,MAAAlC,MAQAvB,OAAA,SAAA2B,EAAAE,GACA,GAAAN,GAAAjD,KAAAiD,IAEAkB,EAAAnE,KAAAmE,IACAG,EAAAH,EAAAT,MACAc,EAAAxE,KAAAwE,OAEAF,GAAAjB,QAAA,KACAiB,EAAAf,SAAA,KAEAY,EAAAd,QAAAJ,EACAkB,EAAAZ,SAAAN,EAEAuB,IACAA,EAAAnB,QAAAJ,EACAuB,EAAAjB,SAAAN,EAEA,GAAAA,GACAjD,KAAAyE,QAAAU,MAAAlC,OASAmC,MAAA,SAAAC,GACA,GAAAlB,GAAAnE,KAAAmE,IACAa,EAAAhF,KAAAgF,IACA3B,EAAAc,EAAAd,MACAE,EAAAY,EAAAZ,OAEAmB,EAAA1E,KAAA0E,WACAY,EAAAtF,KAAA2E,aAAAU,EACAT,EAAA5E,KAAA4E,eAEA3B,EAAAjD,KAAAiD,GAgBA,IAdAqC,IACAtF,KAAAwE,SACAxE,KAAAkF,mBAGAlF,KAAAyE,QAAAc,yBAAA,OACAvF,KAAAyE,QAAAe,UACArB,EAAA,IACAd,EAAAJ,EACAM,EAAAN,IAIA+B,EAAAS,UAAA,IAAApC,EAAAE,GACAmB,EAAA,CACA,GAAAgB,EAEAhB,GAAAiB,YAEAD,EAAAhB,EAAAkB,kBAAA5B,EAAA6B,YAAAb,EAAAN,GACA9F,EAAA,EACAC,EAAA,EACAwE,QACAE,WAGAmB,EAAAkB,iBAAAF,GAGAhB,EAAAoB,QACAJ,EAAAzB,EAAA1E,UAAAwG,iBAAAhG,KAAA2E,EAAAM,IAEAA,EAAAgB,OACAhB,EAAAiB,UAAAP,GAAAhB,EACAM,EAAAkB,SAAA,IAAA7C,EAAAE,GACAyB,EAAAmB,UAGA,GAAAb,EAAA,CACA,GAAAd,GAAAxE,KAAAwE,OACAQ,GAAAgB,OACAhB,EAAAoB,YAAAxB,EACAI,EAAAQ,UAAAhB,EAAA,IAAAnB,EAAAE,GACAyB,EAAAmB,aAKAtJ,EAAAC,QAAAoH,GP4aMmC,KACA,SAASxJ,EAAQC,QAASE,GAEhC,YQznBA,SAAAsJ,GAAAC,GACA,MAAAC,UAAAD,EAAA,IAGA,QAAAE,GAAArE,GACA,QAAAA,MAIAA,EAAAsE,WAIA,kBAAAtE,GAAA,QACA,kBAAAA,GAAA,SAQA,QAAAuE,GAAAvE,GACAA,EAAAwE,gBAGA,QAAAC,GAAAzE,GACA,GAAAA,EAAAwE,eACAxE,EAAAgD,QAMA,QAAA0B,GAAA/H,EAAAsE,EAAAE,GAOA,MANAwD,GAAAC,KAAAjI,EAAAkI,mBACAlI,EAAAmI,WACAH,EAAAI,eAAApI,EAAAmI,WAEAE,EAAA/D,QACA+D,EAAA7D,UACAwD,EAAAM,UAAAD,GAGA,QAAAE,GAAAC,EAAAC,GACA,GAAAD,GAAAC,EACA,QAGA,KAAAD,IAAAC,GAAAD,EAAA/E,SAAAgF,EAAAhF,OACA,QAEA,QAAAtF,GAAA,EAAuBA,EAAAqK,EAAA/E,OAAsBtF,IAC7C,GAAAqK,EAAArK,KAAAsK,EAAAtK,GACA,SAKA,QAAAuK,GAAAF,EAAAvC,GACA,OAAA9H,GAAA,EAAuBA,EAAAqK,EAAA/E,OAAsBtF,IAAA,CAC7C,GAAA+B,GAAAsI,EAAArK,GACAwK,EAAAzI,EAAAyI,IAEAzI,GAAA0I,aAAA3C,GACA0C,EAAAE,UAAA5C,GACA/F,EAAA4I,UAAAH,EAAAzI,EAAA6I,OACA9C,EAAA+C,OAEA9I,EAAA+I,iBAAAhD,IAIA,QAAAiD,GAAA5E,EAAAE,GACA,GAAA2E,GAAA/E,SAAAC,cAAA,MAaA,OAVA8E,GAAAxE,MAAAyE,SACA,oBACA,kBACA,SAAA9E,EAAA,KACA,UAAAE,EAAA,KACA,YACA,WACA,kBACA6E,KAAA,KAAiB,IAEjBF,EAvGA,GAAAnE,GAAA/G,EAAA,KACAoC,EAAApC,EAAA,KACAqL,EAAArL,EAAA,KACAsL,EAAAtL,EAAA,KACAuL,EAAAvL,EAAA,KAEAkH,EAAAlH,EAAA,MAEAwL,EAAAxL,EAAA,KAMAyL,EAAA,EAkCA1B,EAAA,GAAAuB,GAAA,SACAlB,EAAA,GAAAkB,GAAA,SAgEAI,EAAA,SAAAC,EAAAhJ,EAAAiJ,GAEA,GAAAC,IAAAF,EAAAG,UACA,WAAAH,EAAAG,SAAAC,aAEA/I,MAAAgJ,MAAAJ,EAAAxJ,EAAA6J,UAA0CL,OAK1C5I,KAAAiD,IAAA2F,EAAAxE,kBAAAL,EAAAK,iBAKApE,KAAAkJ,cAAAL,EAKA7I,KAAA2I,MAEA,IAAAQ,GAAAR,EAAAjF,KAEAyF,KACAA,EAAA,6CACAA,EAAA,uBACAA,EAAA,eACAA,EAAA,gCAEAR,EAAAS,UAAA,IAMApJ,KAAAL,SAMA,IAAA0J,GAAArJ,KAAAsJ,eAMAC,EAAAvJ,KAAAwJ,UAQA,IAFAxJ,KAAAyJ,gBAEAZ,EASA,CAEA,GAAAxF,GAAAsF,EAAAtF,MACAE,EAAAoF,EAAApF,MACAvD,MAAA0J,OAAArG,EACArD,KAAA2J,QAAApG,CAIA,IAAAqG,GAAA,GAAA1F,GAAAyE,EAAA3I,KAAA,EACA4J,GAAA7E,cAGAwE,EAAA,GAAAK,EACAP,EAAAQ,KAAA,OAvBA,CACA7J,KAAA0J,OAAA1J,KAAA8J,SAAA,GACA9J,KAAA2J,QAAA3J,KAAA8J,SAAA,EAEA,IAAA5B,GAAAlI,KAAA+J,SAAA9B,EACAjI,KAAA0J,OAAA1J,KAAA2J,QAEAhB,GAAAqB,YAAA9B,GAmBAlI,KAAAiK,YAAAjK,KAAAkK,qBAGAlK,KAAAmK,sBAMAnK,KAAAoK,YAEApK,KAAAqK,kBAGA3B,GAAAnJ,WAEAkB,YAAAiI,EAMA4B,eAAA,WACA,MAAAtK,MAAAkJ,eAKAqB,gBAAA,WACA,MAAAvK,MAAAkJ,cAAAlJ,KAAAwJ,QAAA,GAAArF,IAAAnE,KAAA+J,UAOAS,QAAA,SAAAC,GAEA,GAAAnI,GAAAtC,KAAAL,QAAA4C,gBAAA,GAEA8G,EAAArJ,KAAAsJ,WAEAtJ,MAAA0K,WAAApI,EAAAmI,EAGA,QAAAvN,GAAA,EAA2BA,EAAAmM,EAAA7G,OAAuBtF,IAAA,CAClD,GAAAyN,GAAAtB,EAAAnM,GACAkF,EAAApC,KAAAwJ,QAAAmB,IACAvI,EAAAsE,WAAAtE,EAAAoI,SACApI,EAAAoI,UAUA,MANAxK,MAAA4K,eAEA5K,KAAAmK,mBAAA3H,QACAxC,KAAA6K,mBAGA7K,MAGA8K,SAAA,SAAA/L,EAAAgM,GACA,IAAAhM,EAAAiM,WAAA,CAGA,GAAAC,GAAA,GAAAlM,GAAA0B,aACAiD,MAAA3E,EAAA2E,MACAoE,MAAA/I,EAAA+I,OAEAmD,GAAAC,OAAAnM,EACAA,EAAAiM,WAAAC,EACAA,EAAAE,SAAAJ,GACA/K,KAAAqK,eAAAR,KAAAoB,KAGAG,YAAA,SAAArM,GACA,GAAAkM,GAAAlM,EAAAiM,WACAK,EAAArL,KAAAqK,eACAiB,EAAAlM,EAAAmM,QAAAF,EAAAJ,EACAK,IAAA,GACAD,EAAAG,OAAAF,EAAA,GAEAvM,EAAAiM,WAAA,MAGAS,WAAA,SAAA1M,GAEA,OADAsM,GAAArL,KAAAqK,eACAnN,EAAA,EAA2BA,EAAAmO,EAAA7I,OAA0BtF,IAAA,CACrD,GAAAwO,GAAAL,EAAAnO,GAAAgO,MACAQ,KACAA,EAAAV,WAAA,MAGAK,EAAA7I,OAAA,GAGAoI,aAAA,WACA,GAAAS,GAAArL,KAAAqK,eACAsB,EAAAN,EAAA7I,OACAoJ,EAAA5L,KAAAoK,WAGA,IAFAwB,KAAAxG,QAEAuG,EAAA,CAGApD,EAAA8C,EAAArL,KAAAL,QAAAkM,qBAIAD,IACAA,EAAA5L,KAAAoK,YAAApK,KAAA8L,SAAA,KAGA,IAAAC,KACAH,GAAA5G,IAAAgB,MACA,QAAA9I,GAAA,EAA2BA,EAAAyO,GAAS,CACpC,GAAA5M,GAAAsM,EAAAnO,GACA8O,EAAAjN,EAAAmM,MAGAc,MAAAhL,MAMA9D,IAIA8O,EAAAC,YACAlN,EAAAmI,UAAA8E,EAAA9E,UACAnI,EAAAmN,aAAAF,EAAAE,aACAnN,EAAAoN,YAAAH,EAAAG,YAEAnM,KAAAoM,WAAArN,EAAA6M,GAAA,EAAAG,MAdAV,EAAAG,OAAAtO,EAAA,GACA8O,EAAAhB,WAAA,KACAW,KAeAC,EAAA5G,IAAAmB,YAGA0E,iBAAA,WAcA,QAAAwB,KAEAC,IAAAC,EAAAC,mBAAAD,EAAA5M,UAEA4M,EAAAE,aAAAF,EAAA5M,QAAA4C,kBAEAgK,EAAAG,qBACAH,EAAAI,YACAnE,EAAA6D,IAGAE,EAAAC,sBAxBA,GAAAD,GAAAvM,IAEA,IAAAuM,EAAAG,oBAAA,CAMA,GAAAJ,GAAAC,EAAAC,mBAAA,GAAAI,KAEAL,GAAAI,YACAnE,EAAA6D,KAmBAQ,kBAAA,WACA7M,KAAAwM,qBACAxM,KAAA2M,UAAA,EACAvN,EAAAkB,KAAAN,KAAAmK,mBAAA,SAAA/H,GACAA,EAAA0C,SAAA1C,EAAAgD,WAIAsF,WAAA,SAAApI,EAAAmI,GAEA,MAAAA,IACAA,GAAA,GAGAzK,KAAA8M,mBAAAxK,GAEAtC,KAAA6M,oBAEA7M,KAAA+M,iBAAApG,GAEA3G,KAAAyM,aAAAnK,EAAAmI,GAEAzK,KAAA+M,iBAAAlG,IAGA4F,aAAA,SAAAnK,EAAAmI,GAeA,QAAAuC,GAAA5K,GACA,GAAAa,GAAA+B,EAAA/B,KAAA,CACA+B,GAAAgB,OACAhB,EAAAoB,YAAA,EACApB,EAAAiI,WAAA,EAEAC,EAAApI,SAAA,EACAE,EAAA2C,aAAA,aACA3C,EAAAQ,UAAApD,EAAA+B,IAAA,IAAAd,EAAAJ,EAAAM,EAAAN,GACA+B,EAAAmB,UAGA,OA1BA+G,GACAC,EACAnI,EAGA+G,EAGAqB,EAIAC,EALAC,EAAA,EAGAjK,EAAArD,KAAA0J,OACAnG,EAAAvD,KAAA2J,QAEA4D,EAAAvN,KAAA2M,UAaAzP,EAAA,EAAAsQ,EAAAlL,EAAAE,OAA4CtF,EAAAsQ,EAAOtQ,IAAA,CACnD,GAAA6B,GAAAuD,EAAApF,GACAuQ,EAAAzN,KAAAkJ,cAAA,EAAAnK,EAAA2O,OAEAC,EAAA5O,EAAA6O,OAwCA,IApCAD,EAAA,GAAAP,IACAJ,EAAAI,GACAA,EAAA,MAIAD,IAAAM,IACAzI,GACAA,EAAAmB,UAIA4F,KAGAoB,EAAAM,EACAP,EAAAlN,KAAA8L,SAAAqB,GAEAD,EAAAxG,WACA2B,EACA,UAAA8E,EACA,kCAAAD,EAAAlK,IAIAgC,EAAAkI,EAAAlI,IACAA,EAAAgB,OAGAkH,EAAAtG,cAAA,GAEAsG,EAAApI,SAAA2F,IACAyC,EAAA9H,SAIA8H,EAAApI,SAAA2F,EAAA,CAIA,GAAAkD,GAAA,GAEA,IAAAP,EAAA,CAQA,GAPAA,EAAApN,KAAAmK,mBACA0D,KAAAC,IAAAR,IAAA7E,EAAA,IAGA2E,EAAApI,IAAAgB,OACAoH,EAAAW,eAEAX,GACAA,EAAAY,WAAAZ,EAAAa,cACA,CAIA/Q,EAAAkQ,EAAAc,iBAAA,CAEA,UAGAb,EAAAD,EAAAY,WAEAZ,EAAAtI,UAEAyI,EAAAF,GAGAD,EAAAY,WAAAT,EAAA,EAGAI,IAAAJ,GACAvN,KAAAoM,WAAArN,EAAAqO,GAAA,EAAAA,EAAAW,iBAIA/N,MAAAoM,WAAArN,EAAAmO,EAAAzC,EAAAsB,EAGAhN,GAAA+F,SAAA,GAGAsI,GACAJ,EAAAI,GAIApI,KAAAmB,UAMAnG,KAAA0M,qBAAA,EACAtN,EAAAkB,KAAAN,KAAAmK,mBAAA,SAAA/H,GACAA,EAAA6L,eAAA7L,EAAA4L,aACAhO,KAAA0M,qBAAA,IAEa1M,OAGboM,WAAA,SAAArN,EAAAmO,EAAAiB,EAAApC,GACA,GAAA/G,GAAAkI,EAAAlI,IACAoJ,EAAArP,EAAAmI,SACA,KACAgG,EAAApI,SAAAqJ,KAEApP,EAAAkN,WAEA,IAAAlN,EAAA2E,MAAA2K,WAIAD,KAAA,IAAAA,EAAA,OAEArP,EAAAuP,UAAAxH,EAAA/H,EAAAiB,KAAA0J,OAAA1J,KAAA2J,UACA,CAEA,GAAApC,GAAAxI,EAAAoN,aAGAJ,EAAAwC,gBAAArB,GACA5F,EAAAC,EAAAwE,EAAAyC,oBAGAzC,EAAAyC,kBACAzC,EAAAwC,cAAAvJ,IAAAmB,UACA4F,EAAAwC,cAAAxC,EAAAyC,gBAAA,KAGAzC,EAAA0C,OAAA,MAGAlH,IACAvC,EAAAgB,OACAyB,EAAAF,EAAAvC,GACA+G,EAAAwC,cAAArB,EACAnB,EAAAyC,gBAAAjH,IAGAxI,EAAA2P,aAAA3P,EAAA2P,YAAA1J,GAEAjG,EAAA4P,MAAA3J,EAAA+G,EAAA0C,QAAA,MACA1C,EAAA0C,OAAA1P,EAEAA,EAAA6P,YAAA7P,EAAA6P,WAAA5J,KASA8G,SAAA,SAAA4B,GACA,GAAA1N,KAAAkJ,cACA,MAAAlJ,MAAAwJ,QAAA,EAGA,IAAApH,GAAApC,KAAAwJ,QAAAkE,EAiBA,OAhBAtL,KAEAA,EAAA,GAAA8B,GAAA,MAAAwJ,EAAA1N,UAAAiD,KACAb,EAAAsE,WAAA,EAEA1G,KAAAyJ,aAAAiE,IACAtO,EAAAyP,MAAAzM,EAAApC,KAAAyJ,aAAAiE,IAAA,GAGA1N,KAAA8O,YAAApB,EAAAtL,GAIAA,EAAA2C,eAGA3C,GAGA0M,YAAA,SAAApB,EAAAtL,GAEA,GAAA2M,GAAA/O,KAAAwJ,QACAH,EAAArJ,KAAAsJ,YACAqC,EAAAtC,EAAA7G,OACAwM,EAAA,KACA9R,KACAgL,EAAAlI,KAAA+J,QAEA,IAAAgF,EAAArB,GAEA,WADArF,GAAA,UAAAqF,EAAA,yBAIA,KAAAjH,EAAArE,GAEA,WADAiG,GAAA,mBAAAqF,EAAA,gBAIA,IAAA/B,EAAA,GAAA+B,EAAArE,EAAA,IACA,IAAAnM,EAAA,EAA2BA,EAAAyO,EAAA,KAE3BtC,EAAAnM,GAAAwQ,GACArE,EAAAnM,EAAA,GAAAwQ,GAHwCxQ,KAQxC8R,EAAAD,EAAA1F,EAAAnM,IAIA,GAFAmM,EAAAmC,OAAAtO,EAAA,IAAAwQ,GAEAsB,EAAA,CACA,GAAAC,GAAAD,EAAA7K,GACA8K,GAAAC,YACAhH,EAAAiH,aACA/M,EAAA+B,IACA8K,EAAAC,aAIAhH,EAAA8B,YAAA5H,EAAA+B,SAIA+D,GAAAkH,WACAlH,EAAAiH,aAAA/M,EAAA+B,IAAA+D,EAAAkH,YAGAlH,EAAA8B,YAAA5H,EAAA+B,IAIA4K,GAAArB,GAAAtL,GAIAiN,UAAA,SAAAC,EAAAC,GACA,GACA5E,GACAzN,EAFAmM,EAAArJ,KAAAsJ,WAGA,KAAApM,EAAA,EAAuBA,EAAAmM,EAAA7G,OAAuBtF,IAC9CyN,EAAAtB,EAAAnM,GACAoS,EAAAvP,KAAAwP,EAAAvP,KAAAwJ,QAAAmB,OAKAoC,iBAAA,SAAAuC,EAAAC,GACA,GACAnN,GACAuI,EACAzN,EAHAmM,EAAArJ,KAAAsJ,WAIA,KAAApM,EAAA,EAAuBA,EAAAmM,EAAA7G,OAAuBtF,IAC9CyN,EAAAtB,EAAAnM,GACAkF,EAAApC,KAAAwJ,QAAAmB,GACAvI,EAAAsE,WACA4I,EAAAvP,KAAAwP,EAAAnN,EAAAuI,IAMAxI,eAAA,SAAAmN,EAAAC,GACA,GACAnN,GACAuI,EACAzN,EAHAmM,EAAArJ,KAAAsJ,WAIA,KAAApM,EAAA,EAAuBA,EAAAmM,EAAA7G,OAAuBtF,IAC9CyN,EAAAtB,EAAAnM,GACAkF,EAAApC,KAAAwJ,QAAAmB,GACAvI,EAAAsE,WACA4I,EAAAvP,KAAAwP,EAAAnN,EAAAuI,IASA6E,UAAA,WACA,MAAAxP,MAAAwJ,SAGAsD,mBAAA,SAAAxK,GAEA,GAAAiH,GAAAvJ,KAAAwJ,QACAiG,EAAAzP,KAAAmK,mBAEAuF,KACAC,IAEA3P,MAAA+M,iBAAA,SAAA3K,EAAAuI,GACA+E,EAAA/E,GAAAvI,EAAAyC,QACAzC,EAAAyC,QAAA,EACAzC,EAAA0C,SAAA,IAGA1F,EAAAkB,KAAAmP,EAAA,SAAArN,EAAAkJ,GACAqE,EAAArE,GAAAlJ,EAAAyC,QACAzC,EAAAyC,QAAA,EACAzC,EAAA0C,SAAA,GAOA,QAHAsI,GACAwC,EAFAC,EAAA,EAGAC,EAAA,EACA5S,EAAA,EAAAsQ,EAAAlL,EAAAE,OAA4CtF,EAAAsQ,EAAOtQ,IAAA,CACnD,GAAA6B,GAAAuD,EAAApF,GACAwQ,EAAA1N,KAAAkJ,cAAA,EAAAnK,EAAA2O,OACAtL,EAAAmH,EAAAmE,GACAqC,EAAAhR,EAAAiR,WAOA,IANA5N,IACAA,EAAAyC,UACAzC,EAAA0C,QAAA1C,EAAA0C,SAAA/F,EAAA+F,SAIAiL,GAAA,GAEAH,IAAAG,IACAH,EAAAG,EACAD,IAEA,IAAAnC,GAAA5O,EAAA6O,QAAAkC,EAAA,CACA,KAAA1C,EAAA,CACA,GAAA9B,GAAAuC,KAAAC,IAAA+B,EAAApH,EAAA,EACA2E,GAAAqC,EAAAnE,GACA8B,IACAA,EAAAqC,EAAAnE,GAAA,GAAApH,GACA,cAAAlE,UAAAiD,KAEAmK,EAAArI,eAEAqI,EAAAa,cAAA,EAEAb,EAAAtI,QAAAsI,EAAAtI,SAAA/F,EAAA+F,QACAsI,EAAAvI,UAEAuI,EAAAa,cAAAJ,KAAAoC,IACA7C,EAAAa,cAAAN,GAGAP,EAAAa,eAAAb,EAAAY,aAEA5L,EAAA0C,SAAA,OAIA/F,GAAA6O,WAEAR,IACAA,EAAAc,iBAAAhR,EACA2S,IACAzC,EAAA,MAKAA,IACAyC,IACAzC,EAAAc,iBAAAhR,GAIA8C,KAAA+M,iBAAA,SAAA3K,EAAAuI,GACA+E,EAAA/E,KAAAvI,EAAAyC,UACAzC,EAAA0C,SAAA,KAIA2K,EAAAjN,OAAAqL,KAAAC,IAAA+B,EAAApH,GACArJ,EAAAkB,KAAAmP,EAAA,SAAArN,EAAAkJ,GACAqE,EAAArE,KAAAlJ,EAAAyC,UACA9F,EAAA+F,SAAA,GAEA1C,EAAA0C,UACA1C,EAAA4L,WAAA,MAQA5I,MAAA,WAEA,MADApF,MAAA+M,iBAAA/M,KAAAkQ,aACAlQ,MAGAkQ,YAAA,SAAA9N,GACAA,EAAAgD,SAaA+K,YAAA,SAAAzC,EAAA3J,GACA,GAAAA,EAAA,CACA,GAAAqM,GAAApQ,KAAAyJ,YACA2G,GAAA1C,GAIAtO,EAAAyP,MAAAuB,EAAA1C,GAAA3J,GAAA,GAHAqM,EAAA1C,GAAA3J,CAMA,IAAA3B,GAAApC,KAAAwJ,QAAAkE,EAEAtL,IACAhD,EAAAyP,MAAAzM,EAAAgO,EAAA1C,IAAA,KASA2C,SAAA,SAAA3C,GACA,GAAAnE,GAAAvJ,KAAAwJ,QACAH,EAAArJ,KAAAsJ,YACAlH,EAAAmH,EAAAmE,EACAtL,KAGAA,EAAA+B,IAAA5C,WAAA+O,YAAAlO,EAAA+B,WACAoF,GAAAmE,GAEArE,EAAAmC,OAAApM,EAAAmM,QAAAlC,EAAAqE,GAAA,KAMAhM,OAAA,SAAA2B,EAAAE,GACA,GAAA2E,GAAAlI,KAAA+J,QAEA7B,GAAAxE,MAAA6M,QAAA,MAGA,IAAA3H,GAAA5I,KAAAgJ,KAUA,IATA,MAAA3F,IAAAuF,EAAAvF,SACA,MAAAE,IAAAqF,EAAArF,UAEAF,EAAArD,KAAA8J,SAAA,GACAvG,EAAAvD,KAAA8J,SAAA,GAEA5B,EAAAxE,MAAA6M,QAAA,GAGAvQ,KAAA0J,QAAArG,GAAAE,GAAAvD,KAAA2J,QAAA,CACAzB,EAAAxE,MAAAL,QAAA,KACA6E,EAAAxE,MAAAH,SAAA,IAEA,QAAAP,KAAAhD,MAAAwJ,QACAxJ,KAAAwJ,QAAAgH,eAAAxN,IACAhD,KAAAwJ,QAAAxG,GAAAtB,OAAA2B,EAAAE,EAGAnE,GAAAkB,KAAAN,KAAAmK,mBAAA,SAAA/H,GACAA,EAAAV,OAAA2B,EAAAE,KAGAvD,KAAAwK,SAAA,GAMA,MAHAxK,MAAA0J,OAAArG,EACArD,KAAA2J,QAAApG,EAEAvD,MAOAyQ,WAAA,SAAA/C,GACA,GAAAtL,GAAApC,KAAAwJ,QAAAkE,EACAtL,IACAA,EAAAgD,SAOA5F,QAAA,WACAQ,KAAA2I,KAAAS,UAAA,GAEApJ,KAAA2I,KACA3I,KAAAL,QAEAK,KAAA+J,SACA/J,KAAAwJ,QAAA,MAQAkH,kBAAA,SAAA9H,GAEA,GADAA,QACA5I,KAAAkJ,cACA,MAAAlJ,MAAAwJ,QAAA,GAAArF,GAGA,IAAAwM,GAAA,GAAAzM,GAAA,QAAAlE,KAAA4I,EAAAgI,YAAA5Q,KAAAiD,IACA0N,GAAA5L,cAEA4L,EAAAjM,WAAAkE,EAAAiI,gBACAF,EAAAvL,OAKA,QAHA0L,GAAA9Q,KAAAL,QAAA4C,gBAAA,GAEAwJ,KACA7O,EAAA,EAA2BA,EAAA4T,EAAAtO,OAAwBtF,IAAA,CACnD,GAAA6B,GAAA+R,EAAA5T,EACA8C,MAAAoM,WAAArN,EAAA4R,GAAA,EAAA5E,GAGA,MAAA4E,GAAAxM,KAKAb,SAAA,WACA,MAAAtD,MAAA0J,QAMAlG,UAAA,WACA,MAAAxD,MAAA2J,SAGAG,SAAA,SAAAiH,GACA,GAAAnI,GAAA5I,KAAAgJ,MACAgI,GAAA,kBAAAD,GACAE,GAAA,8BAAAF,GACAG,GAAA,4BAAAH,GACAI,GAAA,gCAAAJ,EAEA,UAAAnI,EAAAoI,IAAA,SAAApI,EAAAoI,GACA,MAAAI,YAAAxI,EAAAoI,GAGA,IAAArI,GAAA3I,KAAA2I,KACA0I,EAAAlO,SAAAmO,YAAAC,iBAAA5I,EAEA,QACAA,EAAAsI,IAAA3K,EAAA+K,EAAAL,KAAA1K,EAAAqC,EAAAjF,MAAAsN,MACA1K,EAAA+K,EAAAH,KAAA,IACA5K,EAAA+K,EAAAF,KAAA,GACA,GAGAK,aAAA,SAAAxO,EAAA0E,EAAArE,EAAAE,EAAAN,GACA,GAAAwO,GAAAtO,SAAAC,cAAA,UACA4B,EAAAyM,EAAAxM,WAAA,KAEAwM,GAAApO,QAAAJ,EACAwO,EAAAlO,SAAAN,EAEA+B,EAAAS,UAAA,IAAApC,EAAAJ,EAAAM,EAAAN,EAEA,IAAAyO,IACA/N,SAAA+D,EAAA/D,SACAgO,SAAAjK,EAAAiK,SACAxM,MAAAuC,EAAAvC,MAEAuC,GAAA/D,UAAA,OACA+D,EAAAiK,SAAA,EACAjK,EAAAvC,OAAA,KACAuC,GACAA,EAAAiH,MAAA3J,EAGA,IAAA4M,GAAA5U,EAAA,KACA6U,EAAA,GAAAD,IACA5O,KACAU,OACA9E,EAAA,EACAC,EAAA,EACAiH,MAAA2L,IAgBA,OAZA,OAAAC,EAAA/N,WACAkO,EAAAlO,SAAA+D,EAAA/D,SAAA+N,EAAA/N,UAGA,MAAA+N,EAAAC,WACAE,EAAAF,SAAAjK,EAAAiK,SAAAD,EAAAC,UAGA,MAAAD,EAAAvM,QACA0M,EAAA1M,MAAAuC,EAAAvC,MAAAuM,EAAAvM,OAGA0M,GAGA3H,mBAAA,WACA,GAAA4H,GAAA9R,IAEA,iBAAAgD,EAAA+O,EAAA1O,EAAAE,GACA,MAAAuO,GAAAN,aACAxO,EAAA+O,EAAA1O,EAAAE,EAAAuO,EAAA7O,QAMApG,EAAAC,QAAA4L,GR0pBMsJ,KACA,SAASnV,EAAQC,QAASE,GAEhC,YShrDA,SAAAiV,GAAAC,EAAAC,GACA,MAAAD,GAAAxE,SAAAyE,EAAAzE,OACAwE,EAAAvH,IAAAwH,EAAAxH,EAOAuH,EAAAE,GAAAD,EAAAC,GAEAF,EAAAvH,EAAAwH,EAAAxH,EAEAuH,EAAAxE,OAAAyE,EAAAzE,OAtBA,GAAAtO,GAAApC,EAAA,KACAqV,EAAArV,EAAA,KAEAsV,EAAAtV,EAAA,KAIAuL,EAAAvL,EAAA,KAsBAuV,EAAA,WAEAvS,KAAAwS,aAEAxS,KAAAyS,UAEAzS,KAAA0S,gBAEA1S,KAAA2S,gBAAA,EAGAJ,GAAAhT,WAEAkB,YAAA8R,EAMAK,SAAA,SAAAtD,EAAAC,GACA,OAAArS,GAAA,EAA2BA,EAAA8C,KAAAyS,OAAAjQ,OAAwBtF,IACnD8C,KAAAyS,OAAAvV,GAAA0V,SAAAtD,EAAAC,IAYAhN,eAAA,SAAAsQ,EAAAC,GAKA,MAJAA,OAAA,EACAD,GACA7S,KAAA+S,kBAAAD,GAEA9S,KAAA0S,cASAK,kBAAA,SAAAD,GACA9S,KAAA2S,gBAAA,CAGA,QAFAK,GAAAhT,KAAAyS,OACA3B,EAAA9Q,KAAA0S,aACAxV,EAAA,EAAAyO,EAAAqH,EAAAxQ,OAA+CtF,EAAAyO,EAASzO,IACxD8C,KAAAiT,yBAAAD,EAAA9V,GAAA,KAAA4V,EAEAhC,GAAAtO,OAAAxC,KAAA2S,gBAOAN,EAAAa,iBAAA3K,EAAAuI,EAAAmB,IAGAgB,yBAAA,SAAAlU,EAAAwI,EAAAuL,GAEA,IAAA/T,EAAA0D,QAAAqQ,EAAA,CAIA/T,EAAAoU,eAEApU,EAAA+F,SAEA/F,EAAA8T,SAIA9T,EAAAqU,aAEA,IAAAnU,GAAAF,EAAAE,QAgBA,IAfAA,IAEAA,EAAAE,OAAAJ,EACAE,EAAAoU,kBAGA9L,GACAA,IAAA+L,QACA/L,EAAAsC,KAAA5K,IAGAsI,GAAAtI,IAIAF,EAAAwU,QAAA,CAGA,OAFAC,GAAAzU,EAAA0U,UAEAvW,EAAA,EAA+BA,EAAAsW,EAAAhR,OAAqBtF,IAAA,CACpD,GAAAwW,GAAAF,EAAAtW,EAIA6B,GAAA+F,UACA4O,EAAA5O,SAAA,GAGA9E,KAAAiT,yBAAAS,EAAAnM,EAAAuL,GAIA/T,EAAA+F,SAAA,MAIA/F,GAAAoN,YAAA5E,EAEAvH,KAAA0S,aAAA1S,KAAA2S,mBAAA5T,IAQA4U,QAAA,SAAA5U,GAEAiB,KAAAwS,UAAAzT,EAAAiE,MAIAjE,YAAAuT,IACAvT,EAAA6U,qBAAA5T,MAGAA,KAAA6T,SAAA9U,GACAiB,KAAAyS,OAAA5I,KAAA9K,KAOA+U,QAAA,SAAAC,GACA,SAAAA,EAAA,CAEA,OAAA7W,GAAA,EAA+BA,EAAA8C,KAAAyS,OAAAjQ,OAAwBtF,IAAA,CACvD,GAAAyL,GAAA3I,KAAAyS,OAAAvV,EACAyL,aAAA2J,IACA3J,EAAAqL,uBAAAhU,MASA,MALAA,MAAAwS,aACAxS,KAAAyS,UACAzS,KAAA0S,qBACA1S,KAAA2S,gBAAA,GAKA,GAAAoB,YAAAE,OACA,OAAA/W,GAAA,EAAAsQ,EAAAuG,EAAAvR,OAAgDtF,EAAAsQ,EAAOtQ,IACvD8C,KAAA8T,QAAAC,EAAA7W,QAFA,CAOA,GAAA6B,EAEAA,GADA,mBACAiB,KAAAwS,UAAAuB,GAGAA,CAGA,IAAAzI,GAAAlM,EAAAmM,QAAAvL,KAAAyS,OAAA1T,EACAuM,IAAA,IACAtL,KAAAkU,WAAAnV,EAAAiE,IACAhD,KAAAyS,OAAAjH,OAAAF,EAAA,GACAvM,YAAAuT,IACAvT,EAAAiV,uBAAAhU,SAKA6T,SAAA,SAAA9U,GAQA,MAPAA,aAAAuT,KACAvT,EAAAoV,UAAAnU,MAEAjB,EAAAqV,OAAA,GAEApU,KAAAwS,UAAAzT,EAAAiE,IAAAjE,EAEAiB,MAGAqU,IAAA,SAAAN,GACA,MAAA/T,MAAAwS,UAAAuB,IAGAG,WAAA,SAAAH,GACA,GAAAO,GAAAtU,KAAAwS,UACAzT,EAAAuV,EAAAP,EAQA,OAPAhV,WACAuV,GAAAP,GACAhV,YAAAuT,KACAvT,EAAAoV,UAAA,OAIAnU,MAMAR,QAAA,WACAQ,KAAAwS,UACAxS,KAAAuU,YACAvU,KAAAyS,OAAA,MAGA5G,oBAAAoG,GAGApV,EAAAC,QAAAyV,GT0sDMiC,KACA,SAAS3X,EAAQC,QAASE,GAEhC,YU38DA,IAAAoC,GAAApC,EAAA,KACAyX,EAAAzX,EAAA,KAAAyX,WAEAjM,EAAAxL,EAAA,KAEA0X,EAAA1X,EAAA,KA6BA2X,EAAA,SAAAC,GAEAA,QAEA5U,KAAA6U,MAAAD,EAAAC,UAEA7U,KAAA8U,QAAAF,EAAAE,SAAA,aAGA9U,KAAA+U,UAEA/U,KAAAgV,UAAA,EAEAhV,KAAAiV,MAEAjV,KAAAkV,YAEAlV,KAAAmV,YAEAnV,KAAAoV,SAAA,EAEAX,EAAA1U,KAAAC,MAGA2U,GAAApV,WAEAkB,YAAAkU,EAKAU,QAAA,SAAAtN,GACA/H,KAAA+U,OAAAlL,KAAA9B,IAMAuN,YAAA,SAAAC,GACAA,EAAAC,UAAAxV,IAEA,QADAyV,GAAAF,EAAAG,WACAxY,EAAA,EAA2BA,EAAAuY,EAAAjT,OAAkBtF,IAC7C8C,KAAAqV,QAAAI,EAAAvY,KAOAyY,WAAA,SAAA5N,GACA,GAAAuD,GAAAlM,EAAAmM,QAAAvL,KAAA+U,OAAAhN,EACAuD,IAAA,GACAtL,KAAA+U,OAAAvJ,OAAAF,EAAA,IAQAsK,eAAA,SAAAL,GAEA,OADAE,GAAAF,EAAAG,WACAxY,EAAA,EAA2BA,EAAAuY,EAAAjT,OAAkBtF,IAC7C8C,KAAA2V,WAAAF,EAAAvY,GAEAqY,GAAAC,UAAA,MAGAK,QAAA,WASA,OAPAC,IAAA,GAAAlJ,OAAAmJ,UAAA/V,KAAAkV,YACAc,EAAAF,EAAA9V,KAAAiV,MACAQ,EAAAzV,KAAA+U,OACApJ,EAAA8J,EAAAjT,OAEAyT,KACAC,KACAhZ,EAAA,EAA2BA,EAAAyO,EAASzO,IAAA,CACpC,GAAA6K,GAAA0N,EAAAvY,GACA6U,EAAAhK,EAAAsE,KAAAyJ,EAGA/D,KACAkE,EAAApM,KAAAkI,GACAmE,EAAArM,KAAA9B,IAKA,OAAA7K,GAAA,EAA2BA,EAAAyO,GAC3B8J,EAAAvY,GAAAiZ,cACAV,EAAAvY,GAAAuY,EAAA9J,EAAA,GACA8J,EAAAW,MACAzK,KAGAzO,GAIAyO,GAAAsK,EAAAzT,MACA,QAAAtF,GAAA,EAA2BA,EAAAyO,EAASzO,IACpCgZ,EAAAhZ,GAAAmZ,KAAAJ,EAAA/Y,GAGA8C,MAAAiV,MAAAa,EAEA9V,KAAA8U,QAAAkB,GAEAhW,KAAAyB,QAAA,QAAAuU,GAEAhW,KAAA6U,MAAAhC,QACA7S,KAAA6U,MAAAhC,UAIAyD,WAAA,WAKA,QAAAjK,KACAE,EAAAyI,WAEAxM,EAAA6D,IAEAE,EAAA6I,SAAA7I,EAAAsJ,WATA,GAAAtJ,GAAAvM,IAEAA,MAAAgV,UAAA,EAWAxM,EAAA6D,IAMAkK,MAAA,WAEAvW,KAAAiV,OAAA,GAAArI,OAAAmJ,UACA/V,KAAAkV,YAAA,EAEAlV,KAAAsW,cAKAE,KAAA,WACAxW,KAAAgV,UAAA,GAMAyB,MAAA,WACAzW,KAAAoV,UACApV,KAAAmV,aAAA,GAAAvI,OAAAmJ,UACA/V,KAAAoV,SAAA,IAOAsB,OAAA,WACA1W,KAAAoV,UACApV,KAAAkV,cAAA,GAAAtI,OAAAmJ,UAAA/V,KAAAmV,YACAnV,KAAAoV,SAAA,IAOAhQ,MAAA,WACApF,KAAA+U,WAcA4B,QAAA,SAAAjZ,EAAAkX,GACAA,OACA,IAAAW,GAAA,GAAAb,GACAhX,EACAkX,EAAAgC,KACAhC,EAAAiC,OACAjC,EAAAkC,OAGA,OAAAvB,KAIAnW,EAAAwD,MAAA+R,EAAAF,GAEA5X,EAAAC,QAAA6X,GV89DMoC,KACA,SAASla,EAAQC,QAASE,GWtsEhC,QAAAga,GAAApC,GAEA5U,KAAAiX,QAAArC,EAAAlX,OAGAsC,KAAAkX,MAAAtC,EAAAuC,MAAA,IAEAnX,KAAAoX,OAAAxC,EAAAyC,OAAA,EAGArX,KAAAsX,cAAA,EAGAtX,KAAA4W,KAAA,MAAAhC,EAAAgC,MAAAhC,EAAAgC,KAEA5W,KAAAuX,IAAA3C,EAAA2C,KAAA,EAEAvX,KAAAwX,OAAA5C,EAAA4C,QAAA,SAEAxX,KAAA8U,QAAAF,EAAAE,QACA9U,KAAAyX,UAAA7C,EAAA6C,UACAzX,KAAA0X,UAAA9C,EAAA8C,UAvBA,GAAAC,GAAA3a,EAAA,KA0BAga,GAAAzX,WAEAkB,YAAAuW,EAEA3K,KAAA,SAAAuL,GAGA5X,KAAAsX,eACAtX,KAAA6X,WAAAD,EAAA5X,KAAAoX,OACApX,KAAAsX,cAAA,EAGA,IAAAQ,IAAAF,EAAA5X,KAAA6X,YAAA7X,KAAAkX,KAGA,MAAAY,EAAA,IAIAA,EAAAjK,KAAAC,IAAAgK,EAAA,EAEA,IAAAN,GAAAxX,KAAAwX,OACAO,EAAA,gBAAAP,GAAAG,EAAAH,KACAQ,EAAA,kBAAAD,GACAA,EAAAD,GACAA,CAKA,OAHA9X,MAAAqW,KAAA,QAAA2B,GAGA,GAAAF,EACA9X,KAAA4W,MACA5W,KAAAiY,QAAAL,GAGA,YAKA5X,KAAAmW,cAAA,EACA,WAGA,OAGA8B,QAAA,SAAAL,GACA,GAAAM,IAAAN,EAAA5X,KAAA6X,YAAA7X,KAAAkX,KACAlX,MAAA6X,WAAAD,EAAAM,EAAAlY,KAAAuX,IAEAvX,KAAAmW,cAAA,GAGAE,KAAA,SAAA8B,EAAAC,GACAD,EAAA,KAAAA,EACAnY,KAAAmY,IACAnY,KAAAmY,GAAAnY,KAAAiX,QAAAmB,KAKAvb,EAAAC,QAAAka,GXguEMqB,KACA,SAASxb,EAAQC,SYn0EvB,GAAA0a,IAKAc,OAAA,SAAAC,GACA,MAAAA,IAOAC,YAAA,SAAAD,GACA,MAAAA,MAMAE,aAAA,SAAAF,GACA,MAAAA,IAAA,EAAAA,IAMAG,eAAA,SAAAH,GACA,OAAAA,GAAA,KACA,GAAAA,WAEAA,KAAA,OAQAI,QAAA,SAAAJ,GACA,MAAAA,QAMAK,SAAA,SAAAL,GACA,QAAAA,MAAA,GAMAM,WAAA,SAAAN,GACA,OAAAA,GAAA,KACA,GAAAA,MAEA,KAAAA,GAAA,GAAAA,IAAA,IAQAO,UAAA,SAAAP,GACA,MAAAA,UAMAQ,WAAA,SAAAR,GACA,YAAAA,SAMAS,aAAA,SAAAT,GACA,OAAAA,GAAA,KACA,GAAAA,cAEAA,GAAA,GAAAA,MAAA,IAQAU,UAAA,SAAAV,GACA,MAAAA,YAMAW,WAAA,SAAAX,GACA,QAAAA,UAAA,GAMAY,aAAA,SAAAZ,GACA,OAAAA,GAAA,KACA,GAAAA,UAEA,KAAAA,GAAA,GAAAA,QAAA,IAQAa,aAAA,SAAAb,GACA,SAAA1K,KAAAwL,IAAAd,EAAA1K,KAAAyL,GAAA,IAMAC,cAAA,SAAAhB,GACA,MAAA1K,MAAA2L,IAAAjB,EAAA1K,KAAAyL,GAAA,IAMAG,gBAAA,SAAAlB,GACA,YAAA1K,KAAAwL,IAAAxL,KAAAyL,GAAAf,KAQAmB,cAAA,SAAAnB,GACA,WAAAA,EAAA,EAAA1K,KAAA8L,IAAA,KAAApB,EAAA,IAMAqB,eAAA,SAAArB,GACA,WAAAA,EAAA,IAAA1K,KAAA8L,IAAA,MAAApB,IAMAsB,iBAAA,SAAAtB,GACA,WAAAA,EACA,EAEA,IAAAA,EACA,GAEAA,GAAA,KACA,GAAA1K,KAAA8L,IAAA,KAAApB,EAAA,GAEA,KAAA1K,KAAA8L,IAAA,OAAApB,EAAA,QAQAuB,WAAA,SAAAvB,GACA,SAAA1K,KAAAkM,KAAA,EAAAxB,MAMAyB,YAAA,SAAAzB,GACA,MAAA1K,MAAAkM,KAAA,KAAAxB,MAMA0B,cAAA,SAAA1B,GACA,OAAAA,GAAA,UACA1K,KAAAkM,KAAA,EAAAxB,KAAA,GAEA,IAAA1K,KAAAkM,KAAA,GAAAxB,GAAA,GAAAA,GAAA,IAQA2B,UAAA,SAAA3B,GACA,GAAA4B,GACAjI,EAAA,GACAkI,EAAA,EACA,YAAA7B,EACA,EAEA,IAAAA,EACA,IAEArG,KAAA,GACAA,EAAA,EAAsBiI,EAAAC,EAAA,GAGtBD,EAAAC,EAAAvM,KAAAwM,KAAA,EAAAnI,IAAA,EAAArE,KAAAyL,MAEApH,EAAArE,KAAA8L,IAAA,MAAApB,GAAA,IACA1K,KAAA2L,KAAAjB,EAAA4B,IAAA,EAAAtM,KAAAyL,IAAAc,MAMAE,WAAA,SAAA/B,GACA,GAAA4B,GACAjI,EAAA,GACAkI,EAAA,EACA,YAAA7B,EACA,EAEA,IAAAA,EACA,IAEArG,KAAA,GACAA,EAAA,EAAsBiI,EAAAC,EAAA,GAGtBD,EAAAC,EAAAvM,KAAAwM,KAAA,EAAAnI,IAAA,EAAArE,KAAAyL,IAEApH,EAAArE,KAAA8L,IAAA,MAAApB,GACA1K,KAAA2L,KAAAjB,EAAA4B,IAAA,EAAAtM,KAAAyL,IAAAc,GAAA,IAMAG,aAAA,SAAAhC,GACA,GAAA4B,GACAjI,EAAA,GACAkI,EAAA,EACA,YAAA7B,EACA,EAEA,IAAAA,EACA,IAEArG,KAAA,GACAA,EAAA,EAAsBiI,EAAAC,EAAA,GAGtBD,EAAAC,EAAAvM,KAAAwM,KAAA,EAAAnI,IAAA,EAAArE,KAAAyL,KAEAf,GAAA,UACArG,EAAArE,KAAA8L,IAAA,MAAApB,GAAA,IACA1K,KAAA2L,KAAAjB,EAAA4B,IAAA,EAAAtM,KAAAyL,IAAAc,IAEAlI,EAAArE,KAAA8L,IAAA,OAAApB,GAAA,IACA1K,KAAA2L,KAAAjB,EAAA4B,IAAA,EAAAtM,KAAAyL,IAAAc,GAAA,OASAI,OAAA,SAAAjC,GACA,GAAA4B,GAAA,OACA,OAAA5B,OAAA4B,EAAA,GAAA5B,EAAA4B,IAMAM,QAAA,SAAAlC,GACA,GAAA4B,GAAA,OACA,SAAA5B,MAAA4B,EAAA,GAAA5B,EAAA4B,GAAA,GAMAO,UAAA,SAAAnC,GACA,GAAA4B,GAAA,SACA,QAAA5B,GAAA,KACA,IAAAA,MAAA4B,EAAA,GAAA5B,EAAA4B,IAEA,KAAA5B,GAAA,GAAAA,IAAA4B,EAAA,GAAA5B,EAAA4B,GAAA,IAQAQ,SAAA,SAAApC,GACA,SAAAf,EAAAoD,UAAA,EAAArC,IAMAqC,UAAA,SAAArC,GACA,MAAAA,GAAA,OACA,OAAAA,IAEAA,EAAA,OACA,QAAAA,GAAA,UAAAA,EAAA,IAEAA,EAAA,SACA,QAAAA,GAAA,WAAAA,EAAA,MAGA,QAAAA,GAAA,YAAAA,EAAA,SAOAsC,YAAA,SAAAtC,GACA,MAAAA,GAAA,GACA,GAAAf,EAAAmD,SAAA,EAAApC,GAEA,GAAAf,EAAAoD,UAAA,EAAArC,EAAA,OAIA1b,GAAAC,QAAA0a,GZk1EMsD,KACA,SAASje,EAAQC,QAASE,GavqFhC,GAAA+d,GAAA/d,EAAA,KAAA+d,gBACAC,EAAA,EAAAnN,KAAAyL,EAEAzc,GAAAC,SAcAme,cAAA,SACAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACAC,EAAA5c,EAAAC,GAGA,OAAA2c,EACA,QAEA,IAAAC,GAAAD,CAEA5c,IAAAsc,EACArc,GAAAsc,CACA,IAAAO,GAAA7N,KAAAkM,KAAAnb,IAAAC,IAEA,IAAA6c,EAAAD,EAAAL,GAAAM,EAAAD,EAAAL,EACA,QAEA,IAAAvN,KAAA8N,IAAAN,EAAAC,GAAAN,EAAA,KAEA,QAEA,IAAAO,EAAA,CACA,GAAAK,GAAAP,CACAA,GAAAN,EAAAO,GACAA,EAAAP,EAAAa,OAEAP,GAAAN,EAAAM,GACAC,EAAAP,EAAAO,EAEAD,GAAAC,IACAA,GAAAN,EAGA,IAAAa,GAAAhO,KAAAiO,MAAAjd,EAAAD,EAIA,OAHAid,GAAA,IACAA,GAAAb,GAEAa,GAAAR,GAAAQ,GAAAP,GACAO,EAAAb,GAAAK,GAAAQ,EAAAb,GAAAM,KbkrFMS,KACA,SAASlf,EAAQC,QAASE,Gc1uFhC,GAAAgf,GAAAhf,EAAA,IAEAH,GAAAC,SAgBAme,cAAA,SAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAhB,EAAA5c,EAAAC,GACA,OAAA2c,EACA,QAEA,IAAAC,GAAAD,CAEA,IACA3c,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GAAA5c,EAAAyd,EAAAb,GAAA5c,EAAA2d,EAAAf,GACA5c,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GAAA5c,EAAAyd,EAAAb,GAAA5c,EAAA2d,EAAAf,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,GAAA7c,EAAAyd,EAAAZ,GAAA7c,EAAA2d,EAAAd,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,GAAA7c,EAAAyd,EAAAZ,GAAA7c,EAAA2d,EAAAd,EAEA,QAEA,IAAAC,GAAAM,EAAAS,kBACAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA5d,EAAAC,EAAA,KAEA,OAAA6c,IAAAD,EAAA,KdqvFMiB,KACA,SAAS7f,EAAQC,Se3xFvBD,EAAAC,SAYAme,cAAA,SAAAgB,EAAAC,EAAAC,EAAAC,EAAAZ,EAAA5c,EAAAC,GACA,OAAA2c,EACA,QAEA,IAAAC,GAAAD,EACAmB,EAAA,EACAC,EAAAX,CAEA,IACApd,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GACA5c,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,EAEA,QAGA,IAAAQ,IAAAE,EAKA,MAAAtO,MAAA8N,IAAA/c,EAAAqd,IAAAR,EAAA,CAJAkB,IAAAT,EAAAE,IAAAH,EAAAE,GACAS,GAAAX,EAAAG,EAAAD,EAAAD,IAAAD,EAAAE,EAKA,IAAAP,GAAAe,EAAA/d,EAAAC,EAAA+d,EACAC,EAAAjB,KAAAe,IAAA,EACA,OAAAE,IAAApB,EAAA,EAAAA,EAAA,KfqyFMqB,KACA,SAASjgB,EAAQC,QAASE,GAEhC,YgB5zFA,SAAA+f,GAAA7K,EAAAC,GACA,MAAAtE,MAAA8N,IAAAzJ,EAAAC,GAAA6K,EAOA,QAAAC,KACA,GAAArB,GAAAsB,EAAA,EACAA,GAAA,GAAAA,EAAA,GACAA,EAAA,GAAAtB,EAGA,QAAAuB,GAAAlB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA5d,EAAAC,GAEA,GACAA,EAAAqd,GAAArd,EAAAud,GAAAvd,EAAAyd,GAAAzd,EAAA2d,GACA3d,EAAAqd,GAAArd,EAAAud,GAAAvd,EAAAyd,GAAAzd,EAAA2d,EAEA,QAEA,IAAAY,GAAApB,EAAAqB,YAAAnB,EAAAE,EAAAE,EAAAE,EAAA3d,EAAAmU,EACA,QAAAoK,EACA,QAMA,QADAE,GAAAC,EAFAC,EAAA,EACAC,KAEAvgB,EAAA,EAA2BA,EAAAkgB,EAAYlgB,IAAA,CACvC,GAAAwgB,GAAA1K,EAAA9V,GAGAygB,EAAA,IAAAD,GAAA,IAAAA,EAAA,KAEAE,EAAA5B,EAAA6B,QAAA5B,EAAAE,EAAAE,EAAAE,EAAAmB,EACAE,GAAAhf,IAGA6e,EAAA,IACAA,EAAAzB,EAAA8B,aAAA5B,EAAAE,EAAAE,EAAAE,EAAAU,GACAA,EAAA,GAAAA,EAAA,IAAAO,EAAA,GACAR,IAEAK,EAAAtB,EAAA6B,QAAA3B,EAAAE,EAAAE,EAAAE,EAAAU,EAAA,IACAO,EAAA,IACAF,EAAAvB,EAAA6B,QAAA3B,EAAAE,EAAAE,EAAAE,EAAAU,EAAA,MAMAM,GAHA,GAAAC,EAEAC,EAAAR,EAAA,GACAI,EAAApB,EAAAyB,KAEAD,EAAAR,EAAA,GACAK,EAAAD,EAAAK,KAGAnB,EAAAe,EAAAI,KAKAD,EAAAR,EAAA,GACAI,EAAApB,EAAAyB,KAGAnB,EAAAc,EAAAK,MAIA,MAAAH,GAIA,QAAAO,GAAA9B,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1d,EAAAC,GAEA,GACAA,EAAAqd,GAAArd,EAAAud,GAAAvd,EAAAyd,GACAzd,EAAAqd,GAAArd,EAAAud,GAAAvd,EAAAyd,EAEA,QAEA,IAAAc,GAAApB,EAAAgC,gBAAA9B,EAAAE,EAAAE,EAAAzd,EAAAmU,EACA,QAAAoK,EACA,QAGA,IAAAM,GAAA1B,EAAAiC,kBAAA/B,EAAAE,EAAAE,EACA,IAAAoB,GAAA,GAAAA,GAAA,GAGA,OAFAF,GAAA,EACAU,EAAAlC,EAAAmC,YAAAjC,EAAAE,EAAAE,EAAAoB,GACAxgB,EAAA,EAA+BA,EAAAkgB,EAAYlgB,IAAA,CAE3C,GAAAygB,GAAA,IAAA3K,EAAA9V,IAAA,IAAA8V,EAAA9V,GAAA,KAEA0gB,EAAA5B,EAAAmC,YAAAlC,EAAAE,EAAAE,EAAArJ,EAAA9V,GACA0gB,GAAAhf,IAIA4e,GADAxK,EAAA9V,GAAAwgB,EACAQ,EAAAhC,EAAAyB,KAGArB,EAAA4B,EAAAP,MAGA,MAAAH,GAIA,GAAAG,GAAA,IAAA3K,EAAA,QAAAA,EAAA,QAEA4K,EAAA5B,EAAAmC,YAAAlC,EAAAE,EAAAE,EAAArJ,EAAA,GACA,OAAA4K,GAAAhf,EACA,EAEA0d,EAAAJ,EAAAyB,KAOA,QAAAS,GACAlD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA3c,EAAAC,GAGA,GADAA,GAAAsc,EACAtc,EAAAuc,GAAAvc,GAAAuc,EACA,QAEA,IAAAQ,GAAA/N,KAAAkM,KAAAqB,IAAAvc,IACAmU,GAAA,IAAA4I,EACA5I,EAAA,GAAA4I,CAEA,IAAAyC,GAAAxQ,KAAA8N,IAAAN,EAAAC,EACA,IAAA+C,EAAA,KACA,QAEA,IAAAA,EAAArD,EAAA,MAEAK,EAAA,EACAC,EAAAN,CACA,IAAAsD,GAAA/C,EAAA,IACA,OAAA3c,IAAAoU,EAAA,GAAAkI,GAAAtc,GAAAoU,EAAA,GAAAkI,EACAoD,EAEA,EAIA,GAAA/C,EAAA,CACA,GAAAK,GAAAP,CACAA,GAAAN,EAAAO,GACAA,EAAAP,EAAAa,OAGAP,GAAAN,EAAAM,GACAC,EAAAP,EAAAO,EAEAD,GAAAC,IACAA,GAAAN,EAIA,QADAwC,GAAA,EACAtgB,EAAA,EAAuBA,EAAA,EAAOA,IAAA,CAC9B,GAAA0gB,GAAA5K,EAAA9V,EACA,IAAA0gB,EAAA1C,EAAAtc,EAAA,CACA,GAAAid,GAAAhO,KAAAiO,MAAAjd,EAAA+e,GACAU,EAAA/C,EAAA,IACAM,GAAA,IACAA,EAAAb,EAAAa,IAGAA,GAAAR,GAAAQ,GAAAP,GACAO,EAAAb,GAAAK,GAAAQ,EAAAb,GAAAM,KAEAO,EAAAhO,KAAAyL,GAAA,GAAAuC,EAAA,IAAAhO,KAAAyL,KACAgF,MAEAd,GAAAc,IAIA,MAAAd,GAGA,QAAAe,GAAAC,EAAAhD,EAAAiD,EAAA7f,EAAAC,GAOA,OANA2e,GAAA,EACAkB,EAAA,EACAC,EAAA,EACA1C,EAAA,EACAC,EAAA,EAEAhf,EAAA,EAAuBA,EAAAshB,EAAAhc,QAAiB,CACxC,GAAAoc,GAAAJ,EAAAthB,IAyBA,QAvBA0hB,IAAAC,EAAAC,GAAA5hB,EAAA,IAEAuhB,IACAjB,GAAAuB,EAAAL,EAAAC,EAAA1C,EAAAC,EAAAtd,EAAAC,KAQA,GAAA3B,IAKAwhB,EAAAF,EAAAthB,GACAyhB,EAAAH,EAAAthB,EAAA,GAEA+e,EAAAyC,EACAxC,EAAAyC,GAGAC,GACA,IAAAC,GAAAC,EAGA7C,EAAAuC,EAAAthB,KACAgf,EAAAsC,EAAAthB,KACAwhB,EAAAzC,EACA0C,EAAAzC,CACA,MACA,KAAA2C,GAAAG,EACA,GAAAP,GACA,GAAAxD,EAAAyD,EAAAC,EAAAH,EAAAthB,GAAAshB,EAAAthB,EAAA,GAAAse,EAAA5c,EAAAC,GACA,aAKA2e,IAAAuB,EAAAL,EAAAC,EAAAH,EAAAthB,GAAAshB,EAAAthB,EAAA,GAAA0B,EAAAC,IAAA,CAEA6f,GAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAI,EACA,GAAAR,GACA,GAAAS,EAAAjE,cAAAyD,EAAAC,EACAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACAse,EAAA5c,EAAAC,GAEA,aAIA2e,IAAAL,EACAuB,EAAAC,EACAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACA0B,EAAAC,IACA,CAEA6f,GAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAM,EACA,GAAAV,GACA,GAAAW,EAAAnE,cAAAyD,EAAAC,EACAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACAse,EAAA5c,EAAAC,GAEA,aAIA2e,IAAAO,EACAW,EAAAC,EACAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACA0B,EAAAC,IACA,CAEA6f,GAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAQ,EAEA,GAAAnE,GAAAsD,EAAAthB,KACAie,EAAAqD,EAAAthB,KACAoiB,EAAAd,EAAAthB,KACAqiB,EAAAf,EAAAthB,KACAsiB,EAAAhB,EAAAthB,KACAuiB,EAAAjB,EAAAthB,KAGAqe,GADAiD,EAAAthB,KACA,EAAAshB,EAAAthB,MACAif,EAAAtO,KAAAwL,IAAAmG,GAAAF,EAAApE,EACAkB,EAAAvO,KAAA2L,IAAAgG,GAAAD,EAAApE,CAEAje,GAAA,EACAsgB,GAAAuB,EAAAL,EAAAC,EAAAxC,EAAAC,EAAAxd,EAAAC,IAIAod,EAAAE,EACAD,EAAAE,EAGA,IAAAsD,IAAA9gB,EAAAsc,GAAAqE,EAAAD,EAAApE,CACA,IAAAuD,GACA,GAAAkB,EAAA1E,cACAC,EAAAC,EAAAoE,EAAAC,IAAAC,EAAAlE,EACAC,EAAAkE,EAAA7gB,GAEA,aAIA2e,IAAAY,EACAlD,EAAAC,EAAAoE,EAAAC,IAAAC,EAAAlE,EACAmE,EAAA7gB,EAGA6f,GAAA7Q,KAAAwL,IAAAmG,EAAAC,GAAAH,EAAApE,EACAyD,EAAA9Q,KAAA2L,IAAAgG,EAAAC,GAAAF,EAAApE,CACA,MACA,KAAA0D,GAAAe,EACA3D,EAAAyC,EAAAF,EAAAthB,KACAgf,EAAAyC,EAAAH,EAAAthB,IACA,IAAAmG,GAAAmb,EAAAthB,KACAqG,EAAAib,EAAAthB,KACAif,EAAAF,EAAA5Y,EACA+Y,EAAAF,EAAA3Y,CACA,IAAAkb,GACA,GAAAxD,EAAAgB,EAAAC,EAAAC,EAAAD,EAAAV,EAAA5c,EAAAC,IACAoc,EAAAkB,EAAAD,EAAAC,EAAAC,EAAAZ,EAAA5c,EAAAC,IACAoc,EAAAkB,EAAAC,EAAAH,EAAAG,EAAAZ,EAAA5c,EAAAC,IACAoc,EAAAgB,EAAAG,EAAAH,EAAAC,EAAAV,EAAA5c,EAAAC,GAEA,aAKA2e,IAAAuB,EAAA5C,EAAAD,EAAAC,EAAAC,EAAAxd,EAAAC,GACA2e,GAAAuB,EAAA9C,EAAAG,EAAAH,EAAAC,EAAAtd,EAAAC,EAEA,MACA,KAAAggB,GAAAgB,EACA,GAAApB,GACA,GAAAxD,EACAyD,EAAAC,EAAA1C,EAAAC,EAAAV,EAAA5c,EAAAC,GAEA,aAKA2e,IAAAuB,EAAAL,EAAAC,EAAA1C,EAAAC,EAAAtd,EAAAC,EAOA6f,GAAAzC,EACA0C,EAAAzC,GAOA,MAHAuC,IAAA1B,EAAA4B,EAAAzC,KACAsB,GAAAuB,EAAAL,EAAAC,EAAA1C,EAAAC,EAAAtd,EAAAC,IAAA,GAEA,IAAA2e,EAjYA,GAAAqB,GAAA7hB,EAAA,KAAA6hB,IACAiB,EAAA9iB,EAAA,MACAkiB,EAAAliB,EAAA,MACAoiB,EAAApiB,EAAA,MACA2iB,EAAA3iB,EAAA,MACA+d,EAAA/d,EAAA,KAAA+d,gBACAiB,EAAAhf,EAAA,KAEA+hB,EAAA/hB,EAAA,MAEAie,EAAA6E,EAAA7E,cAEAD,EAAA,EAAAnN,KAAAyL,GAEA0D,EAAA,KAOAhK,aACAkK,SA8WArgB,GAAAC,SACAoC,QAAA,SAAA6gB,EAAAnhB,EAAAC,GACA,MAAA0f,GAAAwB,EAAA,KAAAnhB,EAAAC,IAGAoc,cAAA,SAAA8E,EAAAvE,EAAA5c,EAAAC,GACA,MAAA0f,GAAAwB,EAAAvE,GAAA,EAAA5c,EAAAC,MhBu1FMmhB,KACA,SAASnjB,EAAQC,QAASE,GiBnuGhC,GAAAgf,GAAAhf,EAAA,IAEAH,GAAAC,SAcAme,cAAA,SAAAgB,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAd,EAAA5c,EAAAC,GACA,OAAA2c,EACA,QAEA,IAAAC,GAAAD,CAEA,IACA3c,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GAAA5c,EAAAyd,EAAAb,GACA5c,EAAAqd,EAAAT,GAAA5c,EAAAud,EAAAX,GAAA5c,EAAAyd,EAAAb,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,GAAA7c,EAAAyd,EAAAZ,GACA7c,EAAAqd,EAAAR,GAAA7c,EAAAud,EAAAV,GAAA7c,EAAAyd,EAAAZ,EAEA,QAEA,IAAAC,GAAAM,EAAAiE,sBACAhE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA1d,EAAAC,EAAA,KAEA,OAAA6c,IAAAD,EAAA,KjB8uGMyE,KACA,SAASrjB,EAAQC,SkBlxGvBD,EAAAC,QAAA,SAAAmf,EAAAC,EAAAC,EAAAC,EAAAxd,EAAAC,GACA,GAAAA,EAAAqd,GAAArd,EAAAud,GAAAvd,EAAAqd,GAAArd,EAAAud,EACA,QAGA,IAAAA,IAAAF,EACA,QAEA,IAAAoC,GAAAlC,EAAAF,EAAA,KACAwB,GAAA7e,EAAAqd,IAAAE,EAAAF,EAGA,KAAAwB,GAAA,IAAAA,IACAY,EAAAlC,EAAAF,EAAA,OAGA,IAAA0B,GAAAF,GAAAvB,EAAAF,IAEA,OAAA2B,GAAAhf,EAAA0f,EAAA,IlB2xGM6B,KACA,SAAStjB,EAAQC,QAASE,GAEhC,YmB9uGA,SAAAojB,GAAAC,GACA,GAAAC,GAAAD,EAAA,MAAAA,EAAA,MACAE,EAAAF,EAAA,MAAAA,EAAA,KAEA,OAAAxS,MAAAkM,KAAAuG,IAAAC,KAGA,QAAAC,GAAAH,GACA,QACAA,EAAA,MAAAA,EAAA,UACAA,EAAA,MAAAA,EAAA,UAvEA,GAAAI,GAAAzjB,EAAA,KAEA0jB,EAAA,WAMA1gB,KAAA2gB,UAGAD,GAAAnhB,WAEAkB,YAAAigB,EAEAE,UAAA,SAAAjjB,EAAAD,EAAAiL,GAEA,MADA3I,MAAA6gB,SAAAljB,EAAAD,EAAAiL,GACA3I,KAAA8gB,WAAAnjB,IAGAyH,MAAA,WAEA,MADApF,MAAA2gB,OAAAne,OAAA,EACAxC,MAGA6gB,SAAA,SAAAljB,EAAAD,EAAAiL,GACA,GAAAoY,GAAApjB,EAAAojB,OAEA,IAAAA,EAAA,CAWA,OAPAC,IACAC,UACAF,WACArjB,SACAC,SAGAT,EAAA,EAAAyO,EAAAoV,EAAAve,OAAiDtF,EAAAyO,EAASzO,IAAA,CAC1D,GAAAgkB,GAAAH,EAAA7jB,GACAikB,EAAAV,EAAAW,cAAAzY,EAAAuY,KACAF,GAAAC,OAAApX,MAAAsX,EAAApjB,IAAAojB,EAAAljB,MACA+iB,EAAAD,QAAAlX,KAAAqX,GAGAlhB,KAAA2gB,OAAA9W,KAAAmX,KAGAF,WAAA,SAAAnjB,GACA,OAAAiE,KAAAyf,GACA,GAAAA,EAAA7Q,eAAA5O,GAAA,CACA,GAAA0f,GAAAD,EAAAzf,GAAA5B,KAAA2gB,OAAAhjB,EACA,IAAA2jB,EACA,MAAAA,KAqBA,IAAAD,IAEAE,MAAA,SAAAC,EAAA7jB,GACA,GAAA8jB,GAAAD,EAAAhf,MAEA,IAAAif,EAAA,CAIA,GAAAC,IAAAF,EAAAC,EAAA,QAAqDR,OACrDU,GAAAH,EAAAC,EAAA,QAAqDR,QAAAS,CAErD,IAAAC,GACAA,EAAAnf,OAAA,GACAkf,GACAA,EAAAlf,OAAA,EACA,CACA,GAAAnE,GAAA+hB,EAAAsB,GAAAtB,EAAAuB,IACAC,SAAAvjB,OAAA,GAEAV,EAAAU,YAEA,IAAAwjB,GAAArB,EAAAkB,EAIA,OAHA/jB,GAAAQ,OAAA0jB,EAAA,GACAlkB,EAAAS,OAAAyjB,EAAA,IAGAjkB,KAAA,QACAF,OAAA8jB,EAAA,GAAA9jB,OACAC,YAQAd,GAAAC,QAAA4jB,GnBwzGMoB,KACA,SAASjlB,EAAQC,SoBv6GvB,GAAAilB,GAAA,WAKA/hB,KAAAgiB,KAAA,KAKAhiB,KAAAiiB,KAAA,KAEAjiB,KAAAkiB,KAAA,GAGAC,EAAAJ,EAAAxiB,SAMA4iB,GAAAC,OAAA,SAAA7b,GACA,GAAA8b,GAAA,GAAAC,GAAA/b,EAEA,OADAvG,MAAAuiB,YAAAF,GACAA,GAOAF,EAAAI,YAAA,SAAAF,GACAriB,KAAAgiB,MAIAhiB,KAAAiiB,KAAAO,KAAAH,EACAA,EAAAI,KAAAziB,KAAAiiB,KACAjiB,KAAAiiB,KAAAI,GALAriB,KAAAgiB,KAAAhiB,KAAAiiB,KAAAI,EAOAriB,KAAAkiB,QAOAC,EAAAO,OAAA,SAAAL,GACA,GAAAI,GAAAJ,EAAAI,KACAD,EAAAH,EAAAG,IACAC,GACAA,EAAAD,OAIAxiB,KAAAgiB,KAAAQ,EAEAA,EACAA,EAAAC,OAIAziB,KAAAiiB,KAAAQ,EAEAJ,EAAAG,KAAAH,EAAAI,KAAA,KACAziB,KAAAkiB,QAMAC,EAAAxW,IAAA,WACA,MAAA3L,MAAAkiB,KAOA,IAAAI,GAAA,SAAA/b,GAIAvG,KAAA2iB,MAAApc,EAKAvG,KAAAwiB,KAKAxiB,KAAAyiB,MAQAG,EAAA,SAAAC,GAEA7iB,KAAA8iB,MAAA,GAAAf,GAEA/hB,KAAA+iB,QAEA/iB,KAAAgjB,SAAAH,GAAA,IAGAI,EAAAL,EAAArjB,SAMA0jB,GAAAC,IAAA,SAAAC,EAAAR,GACA,GAAArgB,GAAAtC,KAAA8iB,MACAM,EAAApjB,KAAA+iB,IACA,UAAAK,EAAAD,GAAA,CACA,GAAAxX,GAAArJ,EAAAqJ,KACA,IAAAA,GAAA3L,KAAAgjB,UAAArX,EAAA,GAEA,GAAA0X,GAAA/gB,EAAA0f,IACA1f,GAAAogB,OAAAW,SACAD,GAAAC,EAAAF,KAGA,GAAAd,GAAA/f,EAAA8f,OAAAO,EACAN,GAAAc,MACAC,EAAAD,GAAAd,IAQAY,EAAA5O,IAAA,SAAA8O,GACA,GAAAd,GAAAriB,KAAA+iB,KAAAI,GACA7gB,EAAAtC,KAAA8iB,KACA,UAAAT,EAOA,MALAA,KAAA/f,EAAA2f,OACA3f,EAAAogB,OAAAL,GACA/f,EAAAigB,YAAAF,IAGAA,EAAAM,OAOAM,EAAA7d,MAAA,WACApF,KAAA8iB,MAAA1d,QACApF,KAAA+iB,SAGAlmB,EAAAC,QAAA8lB,GpBs7GMU,KACA,SAASzmB,EAAQC,QAASE,GqB1lHhC,GAAAumB,GAAAvmB,EAAA,KACAgf,EAAAhf,EAAA,KAEAwmB,KACAC,EAAA5V,KAAAC,IACA4V,EAAA7V,KAAAoC,IACA0T,EAAA9V,KAAA2L,IACAoK,EAAA/V,KAAAwL,IAEA9C,EAAAgN,EAAAM,SACAC,EAAAP,EAAAM,SACAE,EAAAR,EAAAM,SAEA7I,EAAA,EAAAnN,KAAAyL,EAQAkK,GAAAQ,WAAA,SAAA/C,EAAAnT,EAAAmC,GACA,OAAAgR,EAAAze,OAAA,CAGA,GAKAtF,GALAkd,EAAA6G,EAAA,GACArd,EAAAwW,EAAA,GACA6J,EAAA7J,EAAA,GACAvW,EAAAuW,EAAA,GACA8J,EAAA9J,EAAA,EAGA,KAAAld,EAAA,EAAmBA,EAAA+jB,EAAAze,OAAmBtF,IACtCkd,EAAA6G,EAAA/jB,GACA0G,EAAA6f,EAAA7f,EAAAwW,EAAA,IACA6J,EAAAP,EAAAO,EAAA7J,EAAA,IACAvW,EAAA4f,EAAA5f,EAAAuW,EAAA,IACA8J,EAAAR,EAAAQ,EAAA9J,EAAA,GAGAtM,GAAA,GAAAlK,EACAkK,EAAA,GAAAjK,EACAoM,EAAA,GAAAgU,EACAhU,EAAA,GAAAiU,IAYAV,EAAAW,SAAA,SAAAlI,EAAAC,EAAAC,EAAAC,EAAAtO,EAAAmC,GACAnC,EAAA,GAAA2V,EAAAxH,EAAAE,GACArO,EAAA,GAAA2V,EAAAvH,EAAAE,GACAnM,EAAA,GAAAyT,EAAAzH,EAAAE,GACAlM,EAAA,GAAAyT,EAAAxH,EAAAE,GAGA,IAAAgI,MACAC,IAeAb,GAAAc,UAAA,SACArI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAA1O,EAAAmC,GAEA,GAEA/S,GAFA4gB,EAAA9B,EAAA8B,aACAD,EAAA7B,EAAA6B,QAEA0G,EAAAzG,EAAA7B,EAAAE,EAAAE,EAAAE,EAAA6H,EAMA,KALAtW,EAAA,GAAA0W,IACA1W,EAAA,GAAA0W,IACAvU,EAAA,KAAAuU,KACAvU,EAAA,KAAAuU,KAEAtnB,EAAA,EAAmBA,EAAAqnB,EAAOrnB,IAAA,CAC1B,GAAA0B,GAAAif,EAAA5B,EAAAE,EAAAE,EAAAE,EAAA6H,EAAAlnB,GACA4Q,GAAA,GAAA2V,EAAA7kB,EAAAkP,EAAA,IACAmC,EAAA,GAAAyT,EAAA9kB,EAAAqR,EAAA,IAGA,IADAsU,EAAAzG,EAAA5B,EAAAE,EAAAE,EAAAE,EAAA6H,GACAnnB,EAAA,EAAmBA,EAAAqnB,EAAOrnB,IAAA,CAC1B,GAAA2B,GAAAgf,EAAA3B,EAAAE,EAAAE,EAAAE,EAAA6H,EAAAnnB,GACA4Q,GAAA,GAAA2V,EAAA5kB,EAAAiP,EAAA,IACAmC,EAAA,GAAAyT,EAAA7kB,EAAAoR,EAAA,IAGAnC,EAAA,GAAA2V,EAAAxH,EAAAnO,EAAA,IACAmC,EAAA,GAAAyT,EAAAzH,EAAAhM,EAAA,IACAnC,EAAA,GAAA2V,EAAAlH,EAAAzO,EAAA,IACAmC,EAAA,GAAAyT,EAAAnH,EAAAtM,EAAA,IAEAnC,EAAA,GAAA2V,EAAAvH,EAAApO,EAAA,IACAmC,EAAA,GAAAyT,EAAAxH,EAAAjM,EAAA,IACAnC,EAAA,GAAA2V,EAAAjH,EAAA1O,EAAA,IACAmC,EAAA,GAAAyT,EAAAlH,EAAAvM,EAAA,KAeAuT,EAAAiB,cAAA,SAAAxI,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAxO,EAAAmC,GACA,GAAAgO,GAAAjC,EAAAiC,kBACAE,EAAAnC,EAAAmC,YAEAuG,EACAhB,EACAD,EAAAxF,EAAAhC,EAAAE,EAAAE,GAAA,MAEAsI,EACAjB,EACAD,EAAAxF,EAAA/B,EAAAE,EAAAE,GAAA,MAGA1d,EAAAuf,EAAAlC,EAAAE,EAAAE,EAAAqI,GACA7lB,EAAAsf,EAAAjC,EAAAE,EAAAE,EAAAqI,EAEA7W,GAAA,GAAA2V,EAAAxH,EAAAI,EAAAzd,GACAkP,EAAA,GAAA2V,EAAAvH,EAAAI,EAAAzd,GACAoR,EAAA,GAAAyT,EAAAzH,EAAAI,EAAAzd,GACAqR,EAAA,GAAAyT,EAAAxH,EAAAI,EAAAzd,IAiBA2kB,EAAAoB,QAAA,SACAhmB,EAAAC,EAAAygB,EAAAC,EAAAlE,EAAAC,EAAAC,EAAAzN,EAAAmC,GAEA,GAAA4U,GAAAtB,EAAAzV,IACAgX,EAAAvB,EAAAtT,IAEAoO,EAAAxQ,KAAA8N,IAAAN,EAAAC,EAGA,IAAA+C,EAAArD,EAAA,MAAAqD,EAAA,KAMA,MAJAvQ,GAAA,GAAAlP,EAAA0gB,EACAxR,EAAA,GAAAjP,EAAA0gB,EACAtP,EAAA,GAAArR,EAAA0gB,OACArP,EAAA,GAAApR,EAAA0gB,EA6BA,IAzBAhJ,EAAA,GAAAqN,EAAAvI,GAAAiE,EAAA1gB,EACA2X,EAAA,GAAAoN,EAAAtI,GAAAkE,EAAA1gB,EAEAilB,EAAA,GAAAF,EAAAtI,GAAAgE,EAAA1gB,EACAklB,EAAA,GAAAH,EAAArI,GAAAiE,EAAA1gB,EAEAgmB,EAAA/W,EAAAyI,EAAAuN,GACAgB,EAAA7U,EAAAsG,EAAAuN,GAGAzI,GAAA,EACAA,EAAA,IACAA,GAAAL,GAEAM,GAAA,EACAA,EAAA,IACAA,GAAAN,GAGAK,EAAAC,IAAAC,EACAD,GAAAN,EAEAK,EAAAC,GAAAC,IACAF,GAAAL,GAEAO,EAAA,CACA,GAAAK,GAAAN,CACAA,GAAAD,EACAA,EAAAO,EAKA,OAAAC,GAAA,EAA2BA,EAAAP,EAAkBO,GAAAhO,KAAAyL,GAAA,EAC7CuC,EAAAR,IACA0I,EAAA,GAAAH,EAAA/H,GAAAyD,EAAA1gB,EACAmlB,EAAA,GAAAJ,EAAA9H,GAAA0D,EAAA1gB,EAEAgmB,EAAA/W,EAAAiW,EAAAjW,GACAgX,EAAA7U,EAAA8T,EAAA9T,KAKApT,EAAAC,QAAA0mB,GrBumHMuB,KACA,SAASloB,EAAQC,QAASE,GsBrzHhC,QAAAgoB,GAAAzkB,GACA,qBAAAA,GAAA8R,EAAA4S,QAAAC,QAAA,iBAAA3kB,EAGA,QAAA4kB,GAAAtlB,EAAAlC,EAAAkX,GACA,GAAAuQ,GAAAvlB,EAAAwlB,WAEA,WAAAxQ,GAAAuQ,EAAAhgB,OAEA,IAAAkc,GAAA8D,EAAAxE,UACAjjB,EACAkC,EAAAI,QAAAW,UAAAjD,EAAAI,IAAAJ,EAAAM,IAAA,MACA4B,EAAAsE,IAKA,IAFA,QAAA0Q,GAAAuQ,EAAAhgB,QAEAkc,EAAA,CAEA,GAAA1jB,GAAA0jB,EAAA1jB,IACAD,GAAAO,aAAAN,EAEAiC,EAAAI,QAAAgB,kBAAAqgB,EAAA5jB,OAAAE,EAAA0jB,EAAA3jB;EAWA,QAAA2nB,GAAAC,GACAA,EAAAC,WAAA,EACAC,aAAAF,EAAAG,aACAH,EAAAG,YAAAC,WAAA,WACAJ,EAAAC,WAAA,GACS,KAGT,QAAAI,KACA,MAAAvT,GAAAwT,qBA0IA,QAAAC,GAAAP,GAWA,QAAAQ,GAAAC,EAAAT,GACA,kBACA,IAAAA,EAAAC,UAGA,MAAAQ,GAAAC,MAAAV,EAAAW,YAfA,OAAAhpB,GAAA,EAAuBA,EAAAipB,EAAA3jB,OAA8BtF,IAAA,CACrD,GAAAqD,GAAA4lB,EAAAjpB,EACAqoB,GAAAa,UAAA7lB,GAAA8lB,EAAAC,KAAAC,EAAAhmB,GAAAglB,GAGA,OAAAroB,GAAA,EAAuBA,EAAAspB,EAAAhkB,OAA8BtF,IAAA,CACrD,GAAAqD,GAAAimB,EAAAtpB,EACAqoB,GAAAa,UAAA7lB,GAAAwlB,EAAAQ,EAAAhmB,GAAAglB,IAcA,QAAAkB,GAAAtiB,GAuCA,QAAAuiB,GAAAjnB,EAAA8lB,GACAc,EAAA/lB,KAAAb,EAAA,SAAAc,GACAomB,EAAAxiB,EAAA6gB,EAAAzkB,GAAAglB,EAAAa,UAAA7lB,KACaglB,GAzCbjmB,EAAAS,KAAAC,MAEAA,KAAAmE,MAMAnE,KAAAwlB,WAAA,EAMAxlB,KAAA0lB,YAMA1lB,KAAAqlB,YAAA,GAAA3E,GAEA1gB,KAAAomB,aAEAN,EAAA9lB,MAEA4lB,KACAc,EAAAP,EAAAnmB,MASA0mB,EAAAF,EAAAxmB,MApQA,GAAA4mB,GAAA5pB,EAAA,KACAqpB,EAAArpB,EAAA,KACAsC,EAAAtC,EAAA,KACAqV,EAAArV,EAAA,KACA0jB,EAAA1jB,EAAA,MAEA2pB,EAAAC,EAAAD,iBACAE,EAAAD,EAAAC,oBACAC,EAAAF,EAAAE,eAEAC,EAAA,IAEAP,GACA,2CACA,iDAGAL,GACA,qCAgDAI,GAMA7lB,UAAA,SAAA/C,GACAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,GAEAqC,KAAAyB,QAAA,YAAA9D,IAQAuD,SAAA,SAAAvD,GACAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,EAEA,IAAAyD,GAAAzD,EAAA0D,WAAA1D,EAAA2D,aACA,IAAAF,GAAApB,KAAAmE,IACA,KAAA/C,GAAA,GAAAA,EAAAI,UAAA,CAEA,GAAAJ,IAAApB,KAAAmE,IACA,MAGA/C,KAAAG,WAIAvB,KAAAyB,QAAA,WAAA9D,IAQAqpB,WAAA,SAAArpB,GAIAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,GAIAA,EAAAa,WAAA,EAEAwB,KAAAG,iBAAA,GAAAyM,MAEAuY,EAAAnlB,KAAArC,EAAA,SAIA4oB,EAAA7lB,UAAAX,KAAAC,KAAArC,GAEA4oB,EAAAU,UAAAlnB,KAAAC,KAAArC,GAEA2nB,EAAAtlB,OAQAknB,UAAA,SAAAvpB,GAEAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,GAIAA,EAAAa,WAAA,EAEA2mB,EAAAnlB,KAAArC,EAAA,UAKA4oB,EAAA7lB,UAAAX,KAAAC,KAAArC,GAEA2nB,EAAAtlB,OAQAmnB,SAAA,SAAAxpB,GAEAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,GAIAA,EAAAa,WAAA,EAEA2mB,EAAAnlB,KAAArC,EAAA,OAEA4oB,EAAAa,QAAArnB,KAAAC,KAAArC,IAYA,GAAAiP,MAAA5M,KAAAG,iBAAA4mB,GACAR,EAAAc,MAAAtnB,KAAAC,KAAArC,GAGA2nB,EAAAtlB,OAKAqmB,GAAA/lB,MAAA,8EAAAC,GACAgmB,EAAAhmB,GAAA,SAAA5C,GACAA,EAAAmpB,EAAA9mB,KAAAmE,IAAAxG,GACAqC,KAAAyB,QAAAlB,EAAA5C,KA8EA,IAAA2pB,GAAAb,EAAAlnB,SACA+nB,GAAA9nB,QAAA,WAGA,OAFAC,GAAA+mB,EAAAe,OAAApB,GAEAjpB,EAAA,EAAuBA,EAAAuC,EAAA+C,OAAyBtF,IAAA,CAChD,GAAAqD,GAAAd,EAAAvC,EACA2pB,GAAA7mB,KAAAmE,IAAA6gB,EAAAzkB,GAAAP,KAAAomB,UAAA7lB,MAIA+mB,EAAAxmB,UAAA,SAAAiB,GACA/B,KAAAmE,IAAAT,MAAA3C,OAAAgB,GAAA,WAGAskB,EAAAzjB,MAAA6jB,EAAAnnB,GAEAzC,EAAAC,QAAA2pB,GtBm1HMe,KACA,SAAS3qB,EAAQC,QAASE,GuBhnIhC,GAAAyqB,GAAAzqB,EAAA,IACAH,GAAAC,QAAA2qB,EAAAxe,QAEArL,KAAA,WAEAkK,OAEA4f,MAAA,MAGAC,iBAAA,WAGA,OAFAC,GAAA5nB,KAAA6nB,YACAH,EAAA1nB,KAAA8H,MAAA4f,MACAxqB,EAAA,EAA2BA,EAAAwqB,EAAAllB,OAAkBtF,IAE7C0qB,KAAAF,EAAAxqB,GAAA2qB,WAEA7nB,MAAA6nB,YAAAD,EACA5nB,KAAA8E,QAAA9E,KAAA8E,SAAA8iB,GAGAlZ,YAAA,WACA1O,KAAA2nB,kBAIA,QAHAD,GAAA1nB,KAAA8H,MAAA4f,UACAviB,EAAAnF,KAAA8nB,iBAEA5qB,EAAA,EAA2BA,EAAAwqB,EAAAllB,OAAkBtF,IAC7CwqB,EAAAxqB,GAAAwK,KAAAqgB,SAAA5iB,EAAA,GAAAA,EAAA,KAIA0C,UAAA,SAAA7C,EAAA8C,GAEA,OADA4f,GAAA5f,EAAA4f,UACAxqB,EAAA,EAA2BA,EAAAwqB,EAAAllB,OAAkBtF,IAC7CwqB,EAAAxqB,GAAA2K,UAAA7C,EAAA0iB,EAAAxqB,GAAA4K,OAAA,IAIA8G,WAAA,WAEA,OADA8Y,GAAA1nB,KAAA8H,MAAA4f,MACAxqB,EAAA,EAA2BA,EAAAwqB,EAAAllB,OAAkBtF,IAC7CwqB,EAAAxqB,GAAA2qB,aAAA,GAIA5gB,gBAAA,WAEA,MADAjH,MAAA2nB,mBACAF,EAAAloB,UAAA0H,gBAAAlH,KAAAC,UvB4nIMgoB,KACA,SAASnrB,EAAQC,QAASE,GAEhC,YwB9qIA,IAAAqpB,GAAArpB,EAAA,KAEAirB,EAAAjrB,EAAA,KAWAkrB,EAAA,SAAAtpB,EAAAC,EAAAwd,EAAAC,EAAA3W,EAAAwiB,GACAnoB,KAAApB,EAAA,MAAAA,EAAA,EAAAA,EAEAoB,KAAAnB,EAAA,MAAAA,EAAA,EAAAA,EAEAmB,KAAAqc,GAAA,MAAAA,EAAA,EAAAA,EAEArc,KAAAsc,GAAA,MAAAA,EAAA,EAAAA,EAGAtc,KAAApC,KAAA,SAGAoC,KAAAooB,OAAAD,IAAA,EAEAF,EAAAloB,KAAAC,KAAA2F,GAGAuiB,GAAA3oB,WAEAkB,YAAAynB,GAGA7B,EAAAgC,SAAAH,EAAAD,GAEAprB,EAAAC,QAAAorB,GxBurIMI,KACA,SAASzrB,EAAQC,QAASE,GAEhC,YyBhuIA,IAAAqpB,GAAArpB,EAAA,KAEAirB,EAAAjrB,EAAA,KAUAurB,EAAA,SAAA3pB,EAAAC,EAAAuc,EAAAzV,EAAAwiB,GACAnoB,KAAApB,EAAA,MAAAA,EAAA,GAAAA,EAEAoB,KAAAnB,EAAA,MAAAA,EAAA,GAAAA,EAEAmB,KAAAob,EAAA,MAAAA,EAAA,GAAAA,EAGApb,KAAApC,KAAA,SAGAoC,KAAAooB,OAAAD,IAAA,EAEAF,EAAAloB,KAAAC,KAAA2F,GAGA4iB,GAAAhpB,WAEAkB,YAAA8nB,GAGAlC,EAAAgC,SAAAE,EAAAN,GAEAprB,EAAAC,QAAAyrB,GzByuIMC,KACA,SAAS3rB,EAAQC,QAASE,G0BrwIhC,GAAAyrB,GAAAzrB,EAAA,KACAqpB,EAAArpB,EAAA,KACA0rB,EAAA1rB,EAAA,KAQA2rB,EAAA,SAAA/f,GACA6f,EAAA1oB,KAAAC,KAAA4I,GAGA+f,GAAAppB,WAEAkB,YAAAkoB,EAEA/qB,KAAA,OAEA+Q,MAAA,SAAA3J,EAAAyJ,GACA,GAAA/K,GAAA1D,KAAA0D,MACA9E,EAAA8E,EAAA9E,GAAA,EACAC,EAAA6E,EAAA7E,GAAA,EAEA+pB,EAAAllB,EAAAklB,IAQA,IALA,MAAAA,OAAA,IAGAllB,EAAA4iB,KAAAthB,EAAAhF,KAAAyO,GAEAma,EAAA,CAEA5oB,KAAA2H,aAAA3C,EAEA,IAAA6jB,GACAC,EAAAplB,EAAAolB,UACAC,EAAArlB,EAAAslB,UAAAtlB,EAAAqlB,IACA,IAAArlB,EAAAulB,kBAAA,CACA,GAAAC,GAAAR,EAAAzhB,gBACA2hB,EAAAG,EAAArlB,EAAAolB,UAAA,MAIA,QADAD,EAAA,SACAnlB,EAAAulB,mBACA,aACApqB,GAAAqqB,EAAA3lB,OAAA,EAAA2lB,EAAAC,WAAA,CACA,MACA,cACAtqB,GAAAqqB,EAAA3lB,OAAA2lB,EAAAC,WAAA,CACA,MACA,SACAtqB,GAAAqqB,EAAAC,WAAA,OAIAN,GAAAnlB,EAAAmlB,YAIA7jB,GAAA+jB,QAAA,kBACA/jB,EAAA8jB,aAAA,OAEA9jB,EAAA8jB,gBACA9jB,EAAA8jB,UAAA,QAEA9jB,EAAA6jB,gBAAA,aAEA7jB,EAAA6jB,mBACA7jB,EAAA6jB,aAAA,aAMA,QAHAM,GAAAT,EAAAU,YAAA,IAAApkB,EAAA+jB,MAAA1lB,MAEAgmB,EAAAT,EAAAU,MAAA,MACApsB,EAAA,EAA+BA,EAAAmsB,EAAA7mB,OAAsBtF,IACrDwG,EAAA6lB,WAAAvkB,EAAAwkB,SAAAH,EAAAnsB,GAAA0B,EAAAC,GACA6E,EAAA+lB,aAAAzkB,EAAA0kB,WAAAL,EAAAnsB,GAAA0B,EAAAC,GACAA,GAAAsqB,CAGAnpB,MAAAgI,iBAAAhD,KAIAiC,gBAAA,WACA,IAAAjH,KAAA2pB,MAAA,CACA,GAAAjmB,GAAA1D,KAAA0D,MACAulB,EAAAvlB,EAAAulB,kBACAC,EAAAR,EAAAzhB,gBACAvD,EAAAklB,KAAA,GAAAllB,EAAAslB,UAAAtlB,EAAAqlB,KAAArlB,EAAAolB,UACAG,EAAA,MAAAvlB,EAAAmlB,aAEA,QAAAI,GACA,aACAC,EAAArqB,GAAAqqB,EAAA3lB,OAAA,CACA,MACA,cACA2lB,EAAArqB,GAAAqqB,EAAA3lB,OAGA2lB,EAAAtqB,GAAA8E,EAAA9E,GAAA,EACAsqB,EAAArqB,GAAA6E,EAAA7E,GAAA,EACAmB,KAAA2pB,MAAAT,EAEA,MAAAlpB,MAAA2pB,QAIAtD,EAAAgC,SAAAM,EAAAF,GAEA5rB,EAAAC,QAAA6rB,G1BuxIMiB,KACA,SAAS/sB,EAAQC,S2Bl5IvBD,EAAAC,SACA+K,UAAA,SAAA7C,EAAA8C,GACA,GAKA+hB,GACAC,EACAC,EACAC,EARAprB,EAAAkJ,EAAAlJ,EACAC,EAAAiJ,EAAAjJ,EACAwE,EAAAyE,EAAAzE,MACAE,EAAAuE,EAAAvE,OACA6X,EAAAtT,EAAAsT,CAOA/X,GAAA,IACAzE,GAAAyE,EACAA,MAEAE,EAAA,IACA1E,GAAA0E,EACAA,MAGA,gBAAA6X,GACAyO,EAAAC,EAAAC,EAAAC,EAAA5O,EAEAA,YAAAnH,OACA,IAAAmH,EAAA5Y,OACAqnB,EAAAC,EAAAC,EAAAC,EAAA5O,EAAA,GAEA,IAAAA,EAAA5Y,QACAqnB,EAAAE,EAAA3O,EAAA,GACA0O,EAAAE,EAAA5O,EAAA,IAEA,IAAAA,EAAA5Y,QACAqnB,EAAAzO,EAAA,GACA0O,EAAAE,EAAA5O,EAAA,GACA2O,EAAA3O,EAAA,KAGAyO,EAAAzO,EAAA,GACA0O,EAAA1O,EAAA,GACA2O,EAAA3O,EAAA,GACA4O,EAAA5O,EAAA,IAIAyO,EAAAC,EAAAC,EAAAC,EAAA,CAGA,IAAAC,EACAJ,GAAAC,EAAAzmB,IACA4mB,EAAAJ,EAAAC,EACAD,GAAAxmB,EAAA4mB,EACAH,GAAAzmB,EAAA4mB,GAEAF,EAAAC,EAAA3mB,IACA4mB,EAAAF,EAAAC,EACAD,GAAA1mB,EAAA4mB,EACAD,GAAA3mB,EAAA4mB,GAEAH,EAAAC,EAAAxmB,IACA0mB,EAAAH,EAAAC,EACAD,GAAAvmB,EAAA0mB,EACAF,GAAAxmB,EAAA0mB,GAEAJ,EAAAG,EAAAzmB,IACA0mB,EAAAJ,EAAAG,EACAH,GAAAtmB,EAAA0mB,EACAD,GAAAzmB,EAAA0mB,GAEAjlB,EAAAklB,OAAAtrB,EAAAirB,EAAAhrB,GACAmG,EAAAmlB,OAAAvrB,EAAAyE,EAAAymB,EAAAjrB,GACA,IAAAirB,GAAA9kB,EAAAolB,iBACAxrB,EAAAyE,EAAAxE,EAAAD,EAAAyE,EAAAxE,EAAAirB,GAEA9kB,EAAAmlB,OAAAvrB,EAAAyE,EAAAxE,EAAA0E,EAAAwmB,GACA,IAAAA,GAAA/kB,EAAAolB,iBACAxrB,EAAAyE,EAAAxE,EAAA0E,EAAA3E,EAAAyE,EAAA0mB,EAAAlrB,EAAA0E,GAEAyB,EAAAmlB,OAAAvrB,EAAAorB,EAAAnrB,EAAA0E,GACA,IAAAymB,GAAAhlB,EAAAolB,iBACAxrB,EAAAC,EAAA0E,EAAA3E,EAAAC,EAAA0E,EAAAymB,GAEAhlB,EAAAmlB,OAAAvrB,EAAAC,EAAAgrB,GACA,IAAAA,GAAA7kB,EAAAolB,iBAAAxrB,EAAAC,EAAAD,EAAAirB,EAAAhrB,M3B65IMwrB,KACA,SAASxtB,EAAQC,QAASE,G4B3+IhC,GAAAumB,GAAAvmB,EAAA,KACAstB,EAAA/G,EAAAzV,IACAyc,EAAAhH,EAAAtT,IACAua,EAAAjH,EAAApe,MACAslB,EAAAlH,EAAAmH,SACAC,EAAApH,EAAAqH,GAaA/tB,GAAAC,QAAA,SAAAmkB,EAAA4J,EAAAC,EAAAC,GACA,GAKAC,GACAC,EAEAnd,EAAAmC,EARAib,KAEAC,KACAC,KACAC,IAKA,IAAAN,EAAA,CACAjd,GAAA0W,SACAvU,KAAAuU,YACA,QAAAtnB,GAAA,EAAAyO,EAAAsV,EAAAze,OAAgDtF,EAAAyO,EAASzO,IACzDotB,EAAAxc,IAAAmT,EAAA/jB,IACAqtB,EAAAta,IAAAgR,EAAA/jB,GAGAotB,GAAAxc,IAAAid,EAAA,IACAR,EAAAta,IAAA8a,EAAA,IAGA,OAAA7tB,GAAA,EAAAyO,EAAAsV,EAAAze,OAA4CtF,EAAAyO,EAASzO,IAAA,CACrD,GAAAouB,GAAArK,EAAA/jB,EAEA,IAAA4tB,EACAE,EAAA/J,EAAA/jB,IAAA,EAAAyO,EAAA,GACAsf,EAAAhK,GAAA/jB,EAAA,GAAAyO,OAEA,CACA,OAAAzO,OAAAyO,EAAA,GACAuf,EAAArhB,KAAA0Z,EAAAgI,MAAAtK,EAAA/jB,IACA,UAGA8tB,EAAA/J,EAAA/jB,EAAA,GACA+tB,EAAAhK,EAAA/jB,EAAA,GAIAqmB,EAAAiI,IAAAL,EAAAF,EAAAD,GAGAR,EAAAW,IAAAN,EAEA,IAAAY,GAAAhB,EAAAa,EAAAN,GACAU,EAAAjB,EAAAa,EAAAL,GACAU,EAAAF,EAAAC,CACA,KAAAC,IACAF,GAAAE,EACAD,GAAAC,GAGAnB,EAAAY,EAAAD,GAAAM,GACAjB,EAAAa,EAAAF,EAAAO,EACA,IAAAE,GAAAjB,KAAAW,EAAAF,GACAS,EAAAlB,KAAAW,EAAAD,EACAN,KACAR,EAAAqB,IAAA9d,GACAwc,EAAAsB,IAAA3b,GACAsa,EAAAsB,IAAA/d,GACAwc,EAAAuB,IAAA5b,IAEAib,EAAArhB,KAAA+hB,GACAV,EAAArhB,KAAAgiB,GAOA,MAJAf,IACAI,EAAArhB,KAAAqhB,EAAAY,SAGAZ,I5B6/IMa,KACA,SAASlvB,EAAQC,QAASE,G6BnlJhC,QAAAgvB,GAAAC,EAAAC,EAAAC,EAAAC,EAAA1O,EAAA2O,EAAAC,GACA,GAAAC,GAAA,IAAAJ,EAAAF,GACAb,EAAA,IAAAgB,EAAAF,EACA,WAAAA,EAAAC,GAAAI,EAAAnB,GAAAkB,OACAJ,EAAAC,GAAA,EAAAI,EAAAnB,GAAAiB,EACAE,EAAA7O,EAAAwO,EAVA,GAAA3I,GAAAvmB,EAAA,IAmBAH,GAAAC,QAAA,SAAAmkB,EAAA6J,GAKA,OAJAnf,GAAAsV,EAAAze,OACAgqB,KAEA9B,EAAA,EACAxtB,EAAA,EAAuBA,EAAAyO,EAASzO,IAChCwtB,GAAAnH,EAAAmH,SAAAzJ,EAAA/jB,EAAA,GAAA+jB,EAAA/jB,GAGA,IAAAuvB,GAAA/B,EAAA,CACA+B,KAAA9gB,IAAA8gB,CACA,QAAAvvB,GAAA,EAAuBA,EAAAuvB,EAAUvvB,IAAA,CACjC,GAKA+uB,GAEAE,EACAC,EARAjL,EAAAjkB,GAAAuvB,EAAA,IAAA3B,EAAAnf,IAAA,GACAL,EAAAuC,KAAA6e,MAAAvL,GAEA3D,EAAA2D,EAAA7V,EAGA4gB,EAAAjL,EAAA3V,EAAAK,EAGAmf,IAMAmB,EAAAhL,GAAA3V,EAAA,EAAAK,MACAwgB,EAAAlL,GAAA3V,EAAA,GAAAK,GACAygB,EAAAnL,GAAA3V,EAAA,GAAAK,KAPAsgB,EAAAhL,EAAA,IAAA3V,MAAA,GACA6gB,EAAAlL,EAAA3V,EAAAK,EAAA,EAAAA,EAAA,EAAAL,EAAA,GACA8gB,EAAAnL,EAAA3V,EAAAK,EAAA,EAAAA,EAAA,EAAAL,EAAA,GAQA,IAAAqhB,GAAAnP,IACAoP,EAAApP,EAAAmP,CAEAH,GAAA3iB,MACAmiB,EAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA5O,EAAAmP,EAAAC,GACAZ,EAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAA5O,EAAAmP,EAAAC,KAGA,MAAAJ,K7BymJMK,KACA,SAAShwB,EAAQC,QAASE,G8B/pJhC,QAAA8vB,GAAAnK,EAAAoK,GACA,sBAAApK,GACAA,EAAAqK,YAAA,QACA5b,WAAAuR,GAAA,IAAAoK,EAEA3b,WAAAuR,GAEAA,EAdA,GAAA+F,GAAA1rB,EAAA,KACAsL,EAAAtL,EAAA,KAEA+J,EAAA,GAAAuB,GAEA2kB,EAAA,YAYAA,GAAA1tB,WAEAkB,YAAAwsB,EAQAC,aAAA,SAAAloB,EAAAkkB,EAAAiE,GACA,GAAAzpB,GAAA1D,KAAA0D,MACAklB,EAAAllB,EAAAklB,IAGA,IADA,MAAAA,OAAA,IACAA,EAAA,CAKA5jB,EAAAgB,MAEA,IAAApH,GACAC,EACAuuB,EAAA1pB,EAAA0pB,aACA1C,EAAAhnB,EAAA2pB,aACAC,EAAA5pB,EAAAolB,UACAC,EAAArlB,EAAAslB,UAAAtlB,EAAAqlB,KACAwE,EAAA7pB,EAAAmlB,aACA2E,EAAA9pB,EAAAulB,iBAEAkE,MAAAzE,EAAAzhB,gBAAA2hB,EAAAG,EAAAuE,EAAAC,EAGA,IAAArmB,GAAAlH,KAAAkH,SAaA,IAZAxD,EAAA+pB,cAQAztB,KAAA2H,aAAA3C,GAPAkC,IACAH,EAAAC,KAAAkiB,GACAniB,EAAAI,eAAAD,GACAgiB,EAAAniB,GAQAqmB,YAAAnZ,QAOA,GALArV,EAAAsqB,EAAAtqB,EAAAkuB,EAAAM,EAAA,GAAAlE,EAAA7lB,OACAxE,EAAAqqB,EAAArqB,EAAAiuB,EAAAM,EAAA,GAAAlE,EAAA3lB,QACA+pB,KAAA,OACAC,KAAA,MAEAC,EAAA,CACA,OAAAA,GACA,aACA3uB,GAAAsuB,EAAA5pB,OAAA,EAAA4pB,EAAAhE,WAAA,CACA,MACA,cACAtqB,GAAAsuB,EAAA5pB,OAAA4pB,EAAAhE,WAAA,CACA,MACA,SACAtqB,GAAAsuB,EAAAhE,WAAA,EAGAoE,EAAA,cAGA,CACA,GAAAG,GAAAhF,EAAAiF,yBACAP,EAAAlE,EAAAiE,EAAAzC,EAEA9rB,GAAA8uB,EAAA9uB,EACAC,EAAA6uB,EAAA7uB,EAEAyuB,KAAAI,EAAA5E,UACAyE,KAAAG,EAAA7E,aAIA7jB,EAAA8jB,UAAAwE,GAAA,OAEAtoB,EAAA6jB,aAAA0E,GAAA,YAEA,IAAAK,GAAAlqB,EAAAkqB,SACAC,EAAAnqB,EAAAmqB,UACAD,KAAA5oB,EAAAiB,UAAA2nB,GACAC,IAAA7oB,EAAA8oB,YAAAD,GAGA7oB,EAAA+jB,QAAA,kBAIA/jB,EAAAiI,WAAAvJ,EAAAqqB,eACA/oB,EAAAgpB,YAAAtqB,EAAAuqB,iBAAA,cACAjpB,EAAAkpB,cAAAxqB,EAAAyqB,kBACAnpB,EAAAopB,cAAA1qB,EAAA2qB,iBAEA,IAAAhF,GAAAT,EAAAU,MAAA,KAEA5lB,GAAA4qB,eACApnB,GAAAlC,EAAAupB,UAAArnB,EAAA,GAAAA,EAAA,IACAlC,EAAAwpB,OAAA9qB,EAAA4qB,cACApnB,GAAAlC,EAAAupB,WAAArnB,EAAA,IAAAA,EAAA,IAGA,QAAAhK,GAAA,EAA2BA,EAAAmsB,EAAA7mB,OAAsBtF,IACjD0wB,GAAA5oB,EAAAwkB,SAAAH,EAAAnsB,GAAA0B,EAAAC,GACAgvB,GAAA7oB,EAAA0kB,WAAAL,EAAAnsB,GAAA0B,EAAAC,GACAA,GAAAsuB,EAAAhE,UAGAnkB,GAAAmB,aAIAtJ,EAAAC,QAAAmwB,G9BorJMwB,KACA,SAAS5xB,EAAQC,QAASE,G+B7zJhCH,EAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,MAEAkK,OAEAoT,GAAA,EAEAC,GAAA,EAEAC,EAAA,EAEAC,WAAA,EAEAC,SAAA,EAAAzN,KAAAyL,GAEAoV,WAAA,GAGAhrB,OAEAirB,OAAA,OAEAC,KAAA,MAGA/mB,UAAA,SAAA7C,EAAA8C,GAEA,GAAAlJ,GAAAkJ,EAAAoT,GACArc,EAAAiJ,EAAAqT,GACAC,EAAAvN,KAAAoC,IAAAnI,EAAAsT,EAAA,GACAC,EAAAvT,EAAAuT,WACAC,EAAAxT,EAAAwT,SACAoT,EAAA5mB,EAAA4mB,UAEAG,EAAAhhB,KAAAwL,IAAAgC,GACAyT,EAAAjhB,KAAA2L,IAAA6B,EAEArW,GAAAklB,OAAA2E,EAAAzT,EAAAxc,EAAAkwB,EAAA1T,EAAAvc,GACAmG,EAAA2a,IAAA/gB,EAAAC,EAAAuc,EAAAC,EAAAC,GAAAoT,O/B40JMK,KACA,SAASlyB,EAAQC,QAASE,GAEhC,YgC12JA,SAAAgyB,GAAAlnB,EAAA4V,EAAAuR,GACA,GAAAC,GAAApnB,EAAAonB,KACAC,EAAArnB,EAAAqnB,IACA,eAAAD,GAAA,OAAAC,IAEAF,EAAAG,EAAAvR,GAAA/V,EAAAqU,GAAArU,EAAAunB,KAAAvnB,EAAAonB,KAAApnB,EAAAuU,GAAAqB,IACAuR,EAAAG,EAAAvR,GAAA/V,EAAAsU,GAAAtU,EAAAwnB,KAAAxnB,EAAAqnB,KAAArnB,EAAAwU,GAAAoB,MAKAuR,EAAAM,EAAApR,GAAArW,EAAAqU,GAAArU,EAAAunB,KAAAvnB,EAAAuU,GAAAqB,IACAuR,EAAAM,EAAApR,GAAArW,EAAAsU,GAAAtU,EAAAwnB,KAAAxnB,EAAAwU,GAAAoB,IAvBA,GAAA8R,GAAAxyB,EAAA,KACAumB,EAAAvmB,EAAA,KACAyyB,EAAAD,EAAAC,mBACAC,EAAAF,EAAAE,eACAvR,EAAAqR,EAAArR,YACAN,EAAA2R,EAAA3R,QACA0R,EAAAC,EAAAD,sBACAH,EAAAI,EAAAJ,kBAEAO,IAkBA9yB,GAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,eAEAkK,OACAqU,GAAA,EACAC,GAAA,EACAC,GAAA,EACAC,GAAA,EACA+S,KAAA,EACAC,KAAA,EAKAxX,QAAA,GAGApU,OACAirB,OAAA,OACAC,KAAA,MAGA/mB,UAAA,SAAA7C,EAAA8C,GACA,GAAAqU,GAAArU,EAAAqU,GACAC,EAAAtU,EAAAsU,GACAC,EAAAvU,EAAAuU,GACAC,EAAAxU,EAAAwU,GACA+S,EAAAvnB,EAAAunB,KACAC,EAAAxnB,EAAAwnB,KACAJ,EAAApnB,EAAAonB,KACAC,EAAArnB,EAAAqnB,KACArX,EAAAhQ,EAAAgQ,OACA,KAAAA,IAIA9S,EAAAklB,OAAA/N,EAAAC,GAEA,MAAA8S,GAAA,MAAAC,GACArX,EAAA,IACA2X,EACAtT,EAAAkT,EAAAhT,EAAAvE,EAAA6X,GAEAN,EAAAM,EAAA,GACAtT,EAAAsT,EAAA,GACAF,EACArT,EAAAkT,EAAAhT,EAAAxE,EAAA6X,GAEAL,EAAAK,EAAA,GACArT,EAAAqT,EAAA,IAGA3qB,EAAAolB,iBACAiF,EAAAC,EACAjT,EAAAC,KAIAxE,EAAA,IACA4X,EACAvT,EAAAkT,EAAAH,EAAA7S,EAAAvE,EAAA6X,GAEAN,EAAAM,EAAA,GACAT,EAAAS,EAAA,GACAtT,EAAAsT,EAAA,GACAD,EACAtT,EAAAkT,EAAAH,EAAA7S,EAAAxE,EAAA6X,GAEAL,EAAAK,EAAA,GACAR,EAAAQ,EAAA,GACArT,EAAAqT,EAAA,IAEA3qB,EAAA4qB,cACAP,EAAAC,EACAJ,EAAAC,EACA9S,EAAAC,MAUAuT,QAAA,SAAAnS,GACA,MAAAsR,GAAAhvB,KAAA8H,MAAA4V,GAAA,IAQAoS,UAAA,SAAApS,GACA,GAAAtD,GAAA4U,EAAAhvB,KAAA8H,MAAA4V,GAAA,EACA,OAAA6F,GAAAwM,UAAA3V,ShCq4JM4V,KACA,SAASnzB,EAAQC,QAASE,GAEhC,YiCngKAH,GAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,SAEAkK,OACAoT,GAAA,EACAC,GAAA,EACAC,EAAA,GAIAvT,UAAA,SAAA7C,EAAA8C,EAAAmoB,GAGAA,GACAjrB,EAAAklB,OAAApiB,EAAAoT,GAAApT,EAAAsT,EAAAtT,EAAAqT,IAIAnW,EAAA2a,IAAA7X,EAAAoT,GAAApT,EAAAqT,GAAArT,EAAAsT,EAAA,IAAAvN,KAAAyL,IAAA,OjCohKM4W,KACA,SAASrzB,EAAQC,QAASE,GkC3iKhCH,EAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,OAEAkK,OAEAqU,GAAA,EACAC,GAAA,EAEAC,GAAA,EACAC,GAAA,EAEAxE,QAAA,GAGApU,OACAirB,OAAA,OACAC,KAAA,MAGA/mB,UAAA,SAAA7C,EAAA8C,GACA,GAAAqU,GAAArU,EAAAqU,GACAC,EAAAtU,EAAAsU,GACAC,EAAAvU,EAAAuU,GACAC,EAAAxU,EAAAwU,GACAxE,EAAAhQ,EAAAgQ,OAEA,KAAAA,IAIA9S,EAAAklB,OAAA/N,EAAAC,GAEAtE,EAAA,IACAuE,EAAAF,GAAA,EAAArE,GAAAuE,EAAAvE,EACAwE,EAAAF,GAAA,EAAAtE,GAAAwE,EAAAxE,GAEA9S,EAAAmlB,OAAA9N,EAAAC,KAQAuT,QAAA,SAAAzV,GACA,GAAAtS,GAAA9H,KAAA8H,KACA,QACAA,EAAAqU,IAAA,EAAA/B,GAAAtS,EAAAuU,GAAAjC,EACAtS,EAAAsU,IAAA,EAAAhC,GAAAtS,EAAAwU,GAAAlC,OlC2jKM+V,KACA,SAAStzB,EAAQC,QAASE,GmC5mKhC,GAAAozB,GAAApzB,EAAA,IAEAH,GAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,UAEAkK,OACAmZ,OAAA,KAEA4J,QAAA,EAEAwF,iBAAA,MAGAxoB,UAAA,SAAA7C,EAAA8C,GACAsoB,EAAAvoB,UAAA7C,EAAA8C,GAAA,OnC2nKMwoB,KACA,SAASzzB,EAAQC,QAASE,GoC5oKhC,GAAAozB,GAAApzB,EAAA,IAEAH,GAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,WAEAkK,OACAmZ,OAAA,KAEA4J,QAAA,EAEAwF,iBAAA,MAGA3sB,OACAirB,OAAA,OAEAC,KAAA,MAGA/mB,UAAA,SAAA7C,EAAA8C,GACAsoB,EAAAvoB,UAAA7C,EAAA8C,GAAA,OpC0pKMyoB,KACA,SAAS1zB,EAAQC,QAASE,GqC/qKhC,GAAAwzB,GAAAxzB,EAAA,KAEAH,GAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,OAEAkK,OAMAsT,EAAA,EAEAxc,EAAA,EACAC,EAAA,EACAwE,MAAA,EACAE,OAAA,GAGAsE,UAAA,SAAA7C,EAAA8C,GACA,GAAAlJ,GAAAkJ,EAAAlJ,EACAC,EAAAiJ,EAAAjJ,EACAwE,EAAAyE,EAAAzE,MACAE,EAAAuE,EAAAvE,MACAuE,GAAAsT,EAIAoV,EAAA3oB,UAAA7C,EAAA8C,GAHA9C,EAAAkkB,KAAAtqB,EAAAC,EAAAwE,EAAAE,GAKAyB,EAAAyrB,gBrCgsKMC,KACA,SAAS7zB,EAAQC,QAASE,GsChuKhCH,EAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,OAEAkK,OACAoT,GAAA,EACAC,GAAA,EACAC,EAAA,EACAuV,GAAA,GAGA9oB,UAAA,SAAA7C,EAAA8C,GACA,GAAAlJ,GAAAkJ,EAAAoT,GACArc,EAAAiJ,EAAAqT,GACAH,EAAA,EAAAnN,KAAAyL,EACAtU,GAAAklB,OAAAtrB,EAAAkJ,EAAAsT,EAAAvc,GACAmG,EAAA2a,IAAA/gB,EAAAC,EAAAiJ,EAAAsT,EAAA,EAAAJ,GAAA,GACAhW,EAAAklB,OAAAtrB,EAAAkJ,EAAA6oB,GAAA9xB,GACAmG,EAAA2a,IAAA/gB,EAAAC,EAAAiJ,EAAA6oB,GAAA,EAAA3V,GAAA,OtCgvKM4V,KACA,SAAS/zB,EAAQC,QAASE,GuClwKhCH,EAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,SAEAkK,OAEAoT,GAAA,EAEAC,GAAA,EAEAwV,GAAA,EAEAvV,EAAA,EAEAC,WAAA,EAEAC,SAAA,EAAAzN,KAAAyL,GAEAoV,WAAA,GAGA7mB,UAAA,SAAA7C,EAAA8C,GAEA,GAAAlJ,GAAAkJ,EAAAoT,GACArc,EAAAiJ,EAAAqT,GACAwV,EAAA9iB,KAAAoC,IAAAnI,EAAA6oB,IAAA,KACAvV,EAAAvN,KAAAoC,IAAAnI,EAAAsT,EAAA,GACAC,EAAAvT,EAAAuT,WACAC,EAAAxT,EAAAwT,SACAoT,EAAA5mB,EAAA4mB,UAEAG,EAAAhhB,KAAAwL,IAAAgC,GACAyT,EAAAjhB,KAAA2L,IAAA6B,EAEArW,GAAAklB,OAAA2E,EAAA8B,EAAA/xB,EAAAkwB,EAAA6B,EAAA9xB,GAEAmG,EAAAmlB,OAAA0E,EAAAzT,EAAAxc,EAAAkwB,EAAA1T,EAAAvc,GAEAmG,EAAA2a,IAAA/gB,EAAAC,EAAAuc,EAAAC,EAAAC,GAAAoT,GAEA1pB,EAAAmlB,OACAtc,KAAAwL,IAAAiC,GAAAqV,EAAA/xB,EACAiP,KAAA2L,IAAA8B,GAAAqV,EAAA9xB,GAGA,IAAA8xB,GACA3rB,EAAA2a,IAAA/gB,EAAAC,EAAA8xB,EAAArV,EAAAD,EAAAqT,GAGA1pB,EAAAyrB,gBvCmxKMI,KACA,SAASh0B,EAAQC,QAASE,GAEhC,YwCx0KA,IAAA0X,GAAA1X,EAAA,KACAoC,EAAApC,EAAA,KACA8zB,EAAA1xB,EAAA0xB,SACAC,EAAA3xB,EAAA2xB,WACA1sB,EAAAjF,EAAAiF,SACAgE,EAAArL,EAAA,KAMAg0B,EAAA,WAMAhxB,KAAAixB,aAGAD,GAAAzxB,WAEAkB,YAAAuwB,EAcAra,QAAA,SAAAjP,EAAAkP,GACA,GAAAlZ,GACAwzB,GAAA,EACAnyB,EAAAiB,KACAmxB,EAAAnxB,KAAAgB,IACA,IAAA0G,EAAA,CACA,GAAA0pB,GAAA1pB,EAAA4hB,MAAA,KACA+H,EAAAtyB,CAEAmyB,GAAA,UAAAE,EAAA,EACA,QAAAl0B,GAAA,EAAAsQ,EAAA4jB,EAAA5uB,OAAwDtF,EAAAsQ,EAAOtQ,IAC/Dm0B,IAGAA,IAAAD,EAAAl0B,IAEAm0B,KACA3zB,EAAA2zB,OAIA3zB,GAAAqB,CAGA,KAAArB,EAOA,WANA2K,GACA,aACAX,EACA,+BACA3I,EAAAiE,GAKA,IAAAiuB,GAAAlyB,EAAAkyB,UAEA1b,EAAA,GAAAb,GAAAhX,EAAAkZ,EAiBA,OAfArB,GAAA+b,OAAA,SAAA5zB,GACAqB,EAAAqV,MAAA8c,KAEAK,KAAA,WAEAN,EAAAzlB,OAAApM,EAAAmM,QAAA0lB,EAAA1b,GAAA,KAGA0b,EAAApnB,KAAA0L,GAGA4b,GACAA,EAAA3b,UAAAF,YAAAC,GAGAA,GAOAic,cAAA,SAAAC,GAGA,OAFAR,GAAAjxB,KAAAixB,UACAtlB,EAAAslB,EAAAzuB,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IACpC+zB,EAAA/zB,GAAAsZ,KAAAib,EAIA,OAFAR,GAAAzuB,OAAA,EAEAxC,MA4BA0xB,UAAA,SAAAh0B,EAAAoY,EAAAuB,EAAAG,EAAAma,GAmCA,QAAAJ,KACAK,IACAA,GACAD,OApCAb,EAAAzZ,IACAsa,EAAAna,EACAA,EAAAH,EACAA,EAAA,GAGA0Z,EAAAvZ,IACAma,EAAAna,EACAA,EAAA,SACAH,EAAA,GAGA0Z,EAAA1Z,IACAsa,EAAAta,EACAA,EAAA,GAGA0Z,EAAAjb,IACA6b,EAAA7b,EACAA,EAAA,KAGAA,IACAA,EAAA,KAGA9V,KAAAwxB,gBACAxxB,KAAA6xB,kBAAA,GAAA7xB,KAAAtC,EAAAoY,EAAAuB,EAAAG,EAAAma,EAIA,IAAAV,GAAAjxB,KAAAixB,UAAA3d,QACAse,EAAAX,EAAAzuB,MAUAovB,IACAD,MAIA,QAAAz0B,GAAA,EAA2BA,EAAA+zB,EAAAzuB,OAAsBtF,IACjD+zB,EAAA/zB,GACAq0B,QACAhb,MAAAiB,IA6BAqa,kBAAA,SAAAnqB,EAAAoqB,EAAAp0B,EAAAoY,EAAAuB,GACA,GAAA0a,MACAC,EAAA,CACA,QAAAzxB,KAAA7C,GACA,GAAAA,EAAA8S,eAAAjQ,GAIA,SAAAuxB,EAAAvxB,GACA8D,EAAA3G,EAAA6C,MAAAnB,EAAA6yB,YAAAv0B,EAAA6C,IACAP,KAAA6xB,kBACAnqB,IAAA,IAAAnH,IACAuxB,EAAAvxB,GACA7C,EAAA6C,GACAuV,EACAuB,IAIA0a,EAAAxxB,GAAA7C,EAAA6C,GACAyxB,SAGA,UAAAt0B,EAAA6C,GAGA,GAAAmH,EAGA,CACA,GAAAwqB,KACAA,GAAAxqB,MACAwqB,EAAAxqB,GAAAnH,GAAA7C,EAAA6C,GACAP,KAAAmyB,KAAAD,OANAlyB,MAAAmyB,KAAA5xB,EAAA7C,EAAA6C,GAiBA,OANAyxB,GAAA,GACAhyB,KAAA2W,QAAAjP,GAAA,GACA0qB,KAAA,MAAAtc,EAAA,IAAAA,EAAAic,GACA1a,SAAA,GAGArX,OAIAnD,EAAAC,QAAAk0B,GxCo1KMqB,KACA,SAASx1B,EAAQC,SyC7lLvB,QAAAuC,KAEAW,KAAAQ,GAAA,YAAAR,KAAAsyB,WAAAtyB,MACAA,KAAAQ,GAAA,YAAAR,KAAAuyB,MAAAvyB,MACAA,KAAAQ,GAAA,UAAAR,KAAAwyB,SAAAxyB,MACAA,KAAAQ,GAAA,YAAAR,KAAAwyB,SAAAxyB,MAQAX,EAAAE,WAEAkB,YAAApB,EAEAizB,WAAA,SAAAvgB,GACA,GAAA0gB,GAAA1gB,EAAArU,MACA+0B,MAAAC,YACA1yB,KAAA2yB,gBAAAF,EACAA,EAAAG,UAAA,EACA5yB,KAAA0f,GAAA3N,EAAAjU,QACAkC,KAAA6yB,GAAA9gB,EAAA/T,QAEAgC,KAAAiB,kBAAAwxB,EAAA,YAAA1gB,EAAApU,SAIA40B,MAAA,SAAAxgB,GACA,GAAA0gB,GAAAzyB,KAAA2yB,eACA,IAAAF,EAAA,CAEA,GAAA7zB,GAAAmT,EAAAjU,QACAe,EAAAkT,EAAA/T,QAEAsiB,EAAA1hB,EAAAoB,KAAA0f,GACAa,EAAA1hB,EAAAmB,KAAA6yB,EACA7yB,MAAA0f,GAAA9gB,EACAoB,KAAA6yB,GAAAh0B,EAEA4zB,EAAAK,MAAAxS,EAAAC,EAAAxO,GACA/R,KAAAiB,kBAAAwxB,EAAA,OAAA1gB,EAAApU,MAEA,IAAAo1B,GAAA/yB,KAAAY,UAAAhC,EAAAC,EAAA4zB,GACAO,EAAAhzB,KAAAizB,WACAjzB,MAAAizB,YAAAF,EAEAN,IAAAM,IACAC,GAAAD,IAAAC,GACAhzB,KAAAiB,kBAAA+xB,EAAA,YAAAjhB,EAAApU,OAEAo1B,OAAAC,GACAhzB,KAAAiB,kBAAA8xB,EAAA,YAAAhhB,EAAApU,UAMA60B,SAAA,SAAAzgB,GACA,GAAA0gB,GAAAzyB,KAAA2yB,eAEAF,KACAA,EAAAG,UAAA,GAGA5yB,KAAAiB,kBAAAwxB,EAAA,UAAA1gB,EAAApU,OAEAqC,KAAAizB,aACAjzB,KAAAiB,kBAAAjB,KAAAizB,YAAA,OAAAlhB,EAAApU,OAGAqC,KAAA2yB,gBAAA,KACA3yB,KAAAizB,YAAA,OAKAp2B,EAAAC,QAAAuC,GzCumLM6zB,KACA,SAASr2B,EAAQC,QAASE,GAEhC,Y0C7qLA,SAAAm2B,GAAA5sB,GACA,MAAAA,GAAAyW,GAAAzW,GAAAyW,EAPA,GAAAoW,GAAAp2B,EAAA,KACAq2B,EAAAr2B,EAAA,KACAs2B,EAAAF,EAAAG,SAEAvW,EAAA,KAUAwW,EAAA,SAAA5qB,GACAA,QAEAA,EAAAjF,WAMA3D,KAAA2D,UAAA,MAEA,MAAAiF,EAAA+I,WAMA3R,KAAA2R,SAAA,GAEA/I,EAAAzD,QAMAnF,KAAAmF,OAAA,MAOAnF,KAAAyzB,OAAAzzB,KAAAyzB,QAAA,MAGAC,EAAAF,EAAAj0B,SACAm0B,GAAAxsB,UAAA,KAMAwsB,EAAAC,mBAAA,WACA,MAAAR,GAAAnzB,KAAA2R,WACAwhB,EAAAnzB,KAAA2D,SAAA,KACAwvB,EAAAnzB,KAAA2D,SAAA,KACAwvB,EAAAnzB,KAAAmF,MAAA,OACAguB,EAAAnzB,KAAAmF,MAAA,OAGAuuB,EAAArgB,gBAAA,WACA,GAAAlU,GAAAa,KAAAb,OACAy0B,EAAAz0B,KAAA+H,UACAysB,EAAA3zB,KAAA2zB,qBAEAvlB,EAAApO,KAAAkH,SACA,OAAAysB,IAAAC,GAKAxlB,KAAAglB,EAAAvP,SAEA8P,EACA3zB,KAAA6zB,kBAAAzlB,GAGAklB,EAAAllB,GAIAwlB,IACAD,EACAP,EAAAU,IAAA1lB,EAAAjP,EAAA+H,UAAAkH,GAGAglB,EAAApsB,KAAAoH,EAAAjP,EAAA+H,YAIAlH,KAAAkH,UAAAkH,EAEApO,KAAAkM,aAAAlM,KAAAkM,cAAAknB,EAAAvP,aACAuP,GAAAW,OAAA/zB,KAAAkM,aAAAkC,SA1BAA,GAAAklB,EAAAllB,KA6BAslB,EAAAG,kBAAA,SAAAzlB,GACAA,QACAklB,EAAAllB,EAEA,IAAAqlB,GAAAzzB,KAAAyzB,OAEAtuB,EAAAnF,KAAAmF,MACAwM,EAAA3R,KAAA2R,SACAhO,EAAA3D,KAAA2D,QAmBA,OAlBA8vB,KAEArlB,EAAA,IAAAqlB,EAAA,GACArlB,EAAA,IAAAqlB,EAAA,IAEAL,EAAAjuB,MAAAiJ,IAAAjJ,GACAwM,GACAyhB,EAAA5E,OAAApgB,IAAAuD,GAEA8hB,IAEArlB,EAAA,IAAAqlB,EAAA,GACArlB,EAAA,IAAAqlB,EAAA,IAGArlB,EAAA,IAAAzK,EAAA,GACAyK,EAAA,IAAAzK,EAAA,GAEAyK,GAMAslB,EAAA/rB,aAAA,SAAA3C,GACA,GAAAoJ,GAAApO,KAAAkH,UACAjE,EAAA+B,EAAA/B,KAAA,CACAmL,GACApJ,EAAA2C,aAAA1E,EAAAmL,EAAA,GAAAnL,EAAAmL,EAAA,GAAAnL,EAAAmL,EAAA,GAAAnL,EAAAmL,EAAA,GAAAnL,EAAAmL,EAAA,GAAAnL,EAAAmL,EAAA,IAGApJ,EAAA2C,aAAA1E,EAAA,IAAAA,EAAA,MAIAywB,EAAA1rB,iBAAA,SAAAhD,GACA,GACA/B,IADAjD,KAAAkH,UACAlC,EAAA/B,KAAA,EACA+B,GAAA2C,aAAA1E,EAAA,IAAAA,EAAA,KAGA,IAAA+wB,KAKAN,GAAAO,mBAAA,WACA,GAAAj0B,KAAAkH,UAAA,CAGA,GAAA/H,GAAAa,KAAAb,OACAiP,EAAApO,KAAAkH,SACA/H,MAAA+H,YAEAksB,EAAAU,IAAAE,EAAA70B,EAAA+M,aAAAkC,GACAA,EAAA4lB,EAEA,IAAAE,GAAA9lB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACA+lB,EAAA/lB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GACAzK,EAAA3D,KAAA2D,SACAwB,EAAAnF,KAAAmF,KACAguB,GAAAe,EAAA,KACAA,EAAArmB,KAAAkM,KAAAma,IAEAf,EAAAgB,EAAA,KACAA,EAAAtmB,KAAAkM,KAAAoa,IAEA/lB,EAAA,OACA8lB,MAEA9lB,EAAA,OACA+lB,MAEAxwB,EAAA,GAAAyK,EAAA,GACAzK,EAAA,GAAAyK,EAAA,GACAjJ,EAAA,GAAA+uB,EACA/uB,EAAA,GAAAgvB,EACAn0B,KAAA2R,SAAA9D,KAAAiO,OAAA1N,EAAA,GAAA+lB,EAAA/lB,EAAA,GAAA8lB,KAOAR,EAAA5L,eAAA,WACA,GAAA1Z,GAAApO,KAAAkH,SACA,KAAAkH,EACA,WAEA,IAAA8lB,GAAArmB,KAAAkM,KAAA3L,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA+lB,EAAAtmB,KAAAkM,KAAA3L,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAOA,OANAA,GAAA,OACA8lB,MAEA9lB,EAAA,OACA+lB,OAEAD,EAAAC,IASAT,EAAAU,sBAAA,SAAAx1B,EAAAC,GACA,GAAAwsB,IAAAzsB,EAAAC,GACAqN,EAAAlM,KAAAkM,YAIA,OAHAA,IACAmnB,EAAAlsB,eAAAkkB,IAAAnf,GAEAmf,GAUAqI,EAAAW,uBAAA,SAAAz1B,EAAAC,GACA,GAAAwsB,IAAAzsB,EAAAC,GACAqI,EAAAlH,KAAAkH,SAIA,OAHAA,IACAmsB,EAAAlsB,eAAAkkB,IAAAnkB,GAEAmkB,GAGAxuB,EAAAC,QAAA02B,G1CksLMc,KACA,SAASz3B,EAAQC,QAASE,G2C95LhC,QAAAu3B,GAAApY,EAAAC,EAAAC,EAAAC,EAAAkY,EAAAC,EAAAnV,EAAAC,EAAAmV,EAAA9V,EAAAlX,GACA,GAAAitB,GAAAD,GAAApb,EAAA,KACAsb,EAAAhR,EAAA+Q,IAAAxY,EAAAE,GAAA,EACAsH,EAAAgR,IAAAvY,EAAAE,GAAA,EACAuY,KAAAlR,EAAAgR,IAAAxY,EAAAE,GAAA,EACAuH,EAAA+Q,IAAAvY,EAAAE,GAAA,EAEAwY,EAAAF,KAAAtV,KAAAuV,KAAAtV,IAEAuV,GAAA,IACAxV,GAAAyV,EAAAD,GACAvV,GAAAwV,EAAAD,GAGA,IAAAE,IAAAR,IAAAC,KAAA,GACAM,GAAAzV,KAAAC,KACAD,KAAAuV,KACAtV,KAAAqV,OAAAtV,KAAAuV,KACAtV,KAAAqV,QACA,EAEAK,EAAAD,EAAA1V,EAAAuV,EAAAtV,EACA2V,EAAAF,GAAAzV,EAAAqV,EAAAtV,EAEApE,GAAAiB,EAAAE,GAAA,EACAuH,EAAA+Q,GAAAM,EACAtR,EAAAgR,GAAAO,EACA/Z,GAAAiB,EAAAE,GAAA,EACAqH,EAAAgR,GAAAM,EACArR,EAAA+Q,GAAAO,EAEA1V,EAAA2V,GAAA,OAAAP,EAAAK,GAAA3V,GAAAuV,EAAAK,GAAA3V,IACA6V,IAAAR,EAAAK,GAAA3V,GAAAuV,EAAAK,GAAA3V,GACA4L,OAAAyJ,EAAAK,GAAA3V,MAAAuV,EAAAK,GAAA3V,GACAE,EAAA0V,EAAAC,EAAAjK,EAEAkK,GAAAD,EAAAjK,SACA1L,EAAAnG,GAEA+b,EAAAD,EAAAjK,IAAA,IACA1L,EAAA,GAEA,IAAAgV,GAAAhV,EAAA,IACAA,GAAA,EAAAnG,GAEA,IAAAmb,GAAAhV,EAAA,IACAA,GAAA,EAAAnG,GAGA5R,EAAA4tB,QAAA1W,EAAA1D,EAAAC,EAAAmE,EAAAC,EAAAC,EAAAC,EAAAkV,EAAAF,GAGA,QAAAc,GAAA/W,GACA,IAAAA,EACA,QAIA,IAKA+F,GALAiR,EAAAhX,EAAAiX,QAAA,WACAA,QAAA,WACAA,QAAA,UACAA,QAAA,UAIA,KAAAlR,EAAA,EAAmBA,EAAAmR,EAAAlzB,OAAe+hB,IAClCiR,IAAAC,QAAA,GAAAE,QAAAD,EAAAnR,GAAA,SAAAmR,EAAAnR,GAIA,IAQAqR,GARAC,EAAAL,EAAAlM,MAAA,KAEAwM,EAAA,EACAC,EAAA,EAEAruB,EAAA,GAAAsuB,GACAnX,EAAAmX,EAAAnX,GAGA,KAAA0F,EAAA,EAAmBA,EAAAsR,EAAArzB,OAAgB+hB,IAAA,CACnC,GAIA3F,GAJAqX,EAAAJ,EAAAtR,GACA2R,EAAAD,EAAAE,OAAA,GACAC,EAAA,EACAhc,EAAA6b,EAAA3iB,MAAA,GAAAmiB,QAAA,aAAAnM,MAAA,IAGAlP,GAAA5X,OAAA,QAAA4X,EAAA,IACAA,EAAA0R,OAGA,QAAA5uB,GAAA,EAA2BA,EAAAkd,EAAA5X,OAActF,IACzCkd,EAAAld,GAAAkU,WAAAgJ,EAAAld,GAEA,MAAAk5B,EAAAhc,EAAA5X,SAAA6zB,MAAAjc,EAAAgc,MACAC,MAAAjc,EAAA,KADA,CAIA,GAAAkc,GACAC,EAEAjX,EACAC,EACAoV,EACAH,EACAC,EAEAtY,EAAA2Z,EACA1Z,EAAA2Z,CAGA,QAAAG,GACA,QACAJ,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAD,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAD,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAC,EACApX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,GACAG,EAAA,GACA,MACA,SACAJ,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAC,EACApX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,GACAG,EAAA,GACA,MACA,SACAJ,GAAA1b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAD,EAAA1b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAA,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAA,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAG,EACAtX,EAAA4tB,QAAA1W,EAAAkX,EAAAC,EACA,MACA,SACAnX,EAAAC,EAAAI,EACAvX,EAAA4tB,QACA1W,EAAAxE,EAAAgc,KAAAhc,EAAAgc,KAAAhc,EAAAgc,KAAAhc,EAAAgc,KAAAhc,EAAAgc,KAAAhc,EAAAgc,MAEAN,EAAA1b,EAAAgc,EAAA,GACAL,EAAA3b,EAAAgc,EAAA,EACA,MACA,SACAxX,EAAAC,EAAAI,EACAvX,EAAA4tB,QACA1W,EACAxE,EAAAgc,KAAAN,EAAA1b,EAAAgc,KAAAL,EACA3b,EAAAgc,KAAAN,EAAA1b,EAAAgc,KAAAL,EACA3b,EAAAgc,KAAAN,EAAA1b,EAAAgc,KAAAL,GAEAD,GAAA1b,EAAAgc,EAAA,GACAL,GAAA3b,EAAAgc,EAAA,EACA,MACA,SACAE,EAAAR,EACAS,EAAAR,CACA,IAAApqB,GAAAjE,EAAAiE,MACAoU,EAAArY,EAAA8W,IACAoX,KAAA/W,EAAAI,IACAqX,GAAAR,EAAA/V,EAAApU,EAAA,GACA4qB,GAAAR,EAAAhW,EAAApU,EAAA,IAEAiT,EAAAC,EAAAI,EACA9C,EAAA/B,EAAAgc,KACAha,EAAAhC,EAAAgc,KACAN,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACA1uB,EAAA4tB,QAAA1W,EAAA0X,EAAAC,EAAApa,EAAAC,EAAA0Z,EAAAC,EACA,MACA,SACAO,EAAAR,EACAS,EAAAR,CACA,IAAApqB,GAAAjE,EAAAiE,MACAoU,EAAArY,EAAA8W,IACAoX,KAAA/W,EAAAI,IACAqX,GAAAR,EAAA/V,EAAApU,EAAA,GACA4qB,GAAAR,EAAAhW,EAAApU,EAAA,IAEAiT,EAAAC,EAAAI,EACA9C,EAAA2Z,EAAA1b,EAAAgc,KACAha,EAAA2Z,EAAA3b,EAAAgc,KACAN,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACA1uB,EAAA4tB,QAAA1W,EAAA0X,EAAAC,EAAApa,EAAAC,EAAA0Z,EAAAC,EACA,MACA,SACA5Z,EAAA/B,EAAAgc,KACAha,EAAAhC,EAAAgc,KACAN,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAM,EACAzX,EAAA4tB,QAAA1W,EAAAzC,EAAAC,EAAA0Z,EAAAC,EACA,MACA,SACA5Z,EAAA/B,EAAAgc,KAAAN,EACA1Z,EAAAhC,EAAAgc,KAAAL,EACAD,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAM,EACAzX,EAAA4tB,QAAA1W,EAAAzC,EAAAC,EAAA0Z,EAAAC,EACA,MACA,SACAO,EAAAR,EACAS,EAAAR,CACA,IAAApqB,GAAAjE,EAAAiE,MACAoU,EAAArY,EAAA8W,IACAoX,KAAA/W,EAAAM,IACAmX,GAAAR,EAAA/V,EAAApU,EAAA,GACA4qB,GAAAR,EAAAhW,EAAApU,EAAA,IAEAmqB,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAM,EACAzX,EAAA4tB,QAAA1W,EAAA0X,EAAAC,EAAAT,EAAAC,EACA,MACA,SACAO,EAAAR,EACAS,EAAAR,CACA,IAAApqB,GAAAjE,EAAAiE,MACAoU,EAAArY,EAAA8W,IACAoX,KAAA/W,EAAAM,IACAmX,GAAAR,EAAA/V,EAAApU,EAAA,GACA4qB,GAAAR,EAAAhW,EAAApU,EAAA,IAEAmqB,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAM,EACAzX,EAAA4tB,QAAA1W,EAAA0X,EAAAC,EAAAT,EAAAC,EACA,MACA,SACAzW,EAAAlF,EAAAgc,KACA7W,EAAAnF,EAAAgc,KACAzB,EAAAva,EAAAgc,KACA5B,EAAApa,EAAAgc,KACA3B,EAAAra,EAAAgc,KAEAja,EAAA2Z,EAAA1Z,EAAA2Z,EACAD,EAAA1b,EAAAgc,KACAL,EAAA3b,EAAAgc,KACAxX,EAAAC,EAAAQ,EACAkV,EACApY,EAAAC,EAAA0Z,EAAAC,EAAAvB,EAAAC,EAAAnV,EAAAC,EAAAoV,EAAA/V,EAAAlX,EAEA,MACA,SACA4X,EAAAlF,EAAAgc,KACA7W,EAAAnF,EAAAgc,KACAzB,EAAAva,EAAAgc,KACA5B,EAAApa,EAAAgc,KACA3B,EAAAra,EAAAgc,KAEAja,EAAA2Z,EAAA1Z,EAAA2Z,EACAD,GAAA1b,EAAAgc,KACAL,GAAA3b,EAAAgc,KACAxX,EAAAC,EAAAQ,EACAkV,EACApY,EAAAC,EAAA0Z,EAAAC,EAAAvB,EAAAC,EAAAnV,EAAAC,EAAAoV,EAAA/V,EAAAlX,IAMA,MAAAwuB,GAAA,MAAAA,IACAtX,EAAAC,EAAAgB,EACAnY,EAAA4tB,QAAA1W,IAGAgX,EAAAhX,EAKA,MAFAlX,GAAA8uB,WAEA9uB,EAIA,QAAA+uB,GAAAR,EAAArtB,GACA,GACA1B,GADAwvB,EAAAnB,EAAAU,EAqBA,OAnBArtB,SACAA,EAAAf,UAAA,SAAAH,GACAA,EAAAivB,QAAAD,EAAAlY,MACAtX,GAAA0vB,EAAAlvB,EAAAR,EAEA,IAAAlC,GAAA0C,EAAAzC,YACAD,IACA0C,EAAAmvB,YAAA7xB,IAIA4D,EAAAzB,eAAA,SAAAiH,GACAlH,IACAA,EAAAksB,EAAAvP,UAEAuP,EAAAU,IAAA5sB,EAAAkH,EAAAlH,GACAlH,KAAAoU,OAAA,IAGAxL,EA5VA,GAAA6e,GAAAzqB,EAAA,KACAg5B,EAAAh5B,EAAA,KACA45B,EAAA55B,EAAA,MACAo2B,EAAAp2B,EAAA,KAGA04B,GACA,wCACA,yCAGAX,EAAAlnB,KAAAkM,KACA4J,EAAA9V,KAAA2L,IACAoK,EAAA/V,KAAAwL,IACAC,EAAAzL,KAAAyL,GAEAwd,EAAA,SAAA3L,GACA,MAAAtd,MAAAkM,KAAAoR,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KAEAkK,EAAA,SAAAD,EAAAjK,GACA,OAAAiK,EAAA,GAAAjK,EAAA,GAAAiK,EAAA,GAAAjK,EAAA,KAAA2L,EAAA1B,GAAA0B,EAAA3L,KAEAgK,EAAA,SAAAC,EAAAjK,GACA,OAAAiK,EAAA,GAAAjK,EAAA,GAAAiK,EAAA,GAAAjK,EAAA,SACAtd,KAAAkpB,KAAA1B,EAAAD,EAAAjK,IAuUAtuB,GAAAC,SAMAk6B,iBAAA,SAAAf,EAAArtB,GACA,UAAA6e,GAAAgP,EAAAR,EAAArtB,KAQAquB,iBAAA,SAAAhB,EAAArtB,GACA,MAAA6e,GAAAxe,OAAAwtB,EAAAR,EAAArtB,KASAsuB,UAAA,SAAAC,EAAAvuB,GAGA,OAFAwuB,MACAzrB,EAAAwrB,EAAA30B,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IAAA,CACpC,GAAAm6B,GAAAF,EAAAj6B,EACAm6B,GAAAvyB,SACAuyB,EAAAxvB,UAAAwvB,EAAA3vB,KAAA2vB,EAAAvvB,OAAA,GAEAsvB,EAAAvtB,KAAAwtB,EAAA3vB,MAGA,GAAA4vB,GAAA,GAAA7P,GAAA7e,EAUA,OATA0uB,GAAAzvB,UAAA,SAAAH,GACAA,EAAA6vB,WAAAH,EAEA,IAAApyB,GAAA0C,EAAAzC,YACAD,IACA0C,EAAAmvB,YAAA7xB,IAIAsyB,K3Co8LME,KACA,SAAS36B,EAAQC,QAASE,G4C30MhC,QAAA45B,GAAAlvB,EAAA0G,GACA,GACAwQ,GACA6Y,EACAv6B,EACAw6B,EACAnf,EACA6B,EANAoE,EAAA9W,EAAA8W,KAQAM,EAAAD,EAAAC,EACAG,EAAAJ,EAAAI,EACAD,EAAAH,EAAAG,EACAY,EAAAf,EAAAe,EACAP,EAAAR,EAAAQ,EACAF,EAAAN,EAAAM,CAEA,KAAAjiB,EAAA,EAAAw6B,EAAA,EAA0Bx6B,EAAAshB,EAAAhc,QAAiB,CAK3C,OAJAoc,EAAAJ,EAAAthB,KACAw6B,EAAAx6B,EACAu6B,EAAA,EAEA7Y,GACA,IAAAE,GACA2Y,EAAA,CACA,MACA,KAAAzY,GACAyY,EAAA,CACA,MACA,KAAAxY,GACAwY,EAAA,CACA,MACA,KAAAtY,GACAsY,EAAA,CACA,MACA,KAAApY,GACA,GAAAzgB,GAAAwP,EAAA,GACAvP,EAAAuP,EAAA,GACA8lB,EAAAa,EAAA3mB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACA+lB,EAAAY,EAAA3mB,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IACAyN,EAAA8b,GAAAvpB,EAAA,GAAA+lB,EAAA/lB,EAAA,GAAA8lB,EAEA1V,GAAAthB,MAAA0B,EAEA4f,EAAAthB,MAAA2B,EAGA2f,EAAAthB,MAAAg3B,EACA1V,EAAAthB,MAAAi3B,EAGA3V,EAAAthB,MAAA2e,EAEA2C,EAAAthB,MAAA2e,EAEA3e,GAAA,EACAw6B,EAAAx6B,CACA,MACA,KAAA0iB,GAEAxF,EAAA,GAAAoE,EAAAthB,KACAkd,EAAA,GAAAoE,EAAAthB,KACA06B,EAAAxd,IAAAhM,GACAoQ,EAAAkZ,KAAAtd,EAAA,GACAoE,EAAAkZ,KAAAtd,EAAA,GAEAA,EAAA,IAAAoE,EAAAthB,KACAkd,EAAA,IAAAoE,EAAAthB,KACA06B,EAAAxd,IAAAhM,GACAoQ,EAAAkZ,KAAAtd,EAAA,GACAoE,EAAAkZ,KAAAtd,EAAA,GAGA,IAAA7B,EAAA,EAAuBA,EAAAkf,EAAYlf,IAAA,CACnC,GAAA6B,GAAA6G,EAAA1I,EACA6B,GAAA,GAAAoE,EAAAthB,KACAkd,EAAA,GAAAoE,EAAAthB,KAEA06B,EAAAxd,IAAAhM,GAEAoQ,EAAAkZ,KAAAtd,EAAA,GACAoE,EAAAkZ,KAAAtd,EAAA,KAvFA,GAAAyE,GAAA7hB,EAAA,KAAA6hB,IACA0E,EAAAvmB,EAAA,KACA46B,EAAArU,EAAApc,eAEA8Z,aACA8T,EAAAlnB,KAAAkM,KACA4d,EAAA9pB,KAAAiO,KAsFAjf,GAAAC,QAAA85B,G5C21MMiB,KACA,SAASh7B,EAAQC,QAASE,G6Ct2MhC,QAAA86B,GAAA90B,SACA+0B,GAAA/0B;;;;;;;;;AA1EA,GAAAg1B,GAAAh7B,EAAA,KACAqV,EAAArV,EAAA,KACAqpB,EAAArpB,EAAA,KAEA0C,EAAA1C,EAAA,MACAuV,EAAAvV,EAAA,MACA2X,EAAA3X,EAAA,MACAi7B,EAAAj7B,EAAA,MAEAk7B,GAAA7lB,EAAAa,gBAEAilB,GACA1mB,OAAAzU,EAAA,OAGA+6B,KAEAK,IAKAA,GAAAC,QAAA,QAYAD,EAAAE,KAAA,SAAAn0B,EAAAyE,GACA,GAAAuoB,GAAA,GAAAoH,GAAAP,IAAA7zB,EAAAyE,EAEA,OADAmvB,GAAA5G,EAAAnuB,IAAAmuB,EACAA,GAOAiH,EAAA54B,QAAA,SAAA2xB,GACA,GAAAA,EACAA,EAAA3xB,cAEA,CACA,OAAA2jB,KAAA4U,GACAA,EAAAvnB,eAAA2S,IACA4U,EAAA5U,GAAA3jB,SAGAu4B,MAGA,MAAAK,IAQAA,EAAAI,YAAA,SAAAx1B,GACA,MAAA+0B,GAAA/0B,IAGAo1B,EAAAK,gBAAA,SAAAl4B,EAAAm4B,GACAP,EAAA53B,GAAAm4B,EAqBA,IAAAH,GAAA,SAAAv1B,EAAAmB,EAAAyE,GAEAA,QAKA5I,KAAAmE,MAKAnE,KAAAgD,IAEA,IAAAuJ,GAAAvM,KACAL,EAAA,GAAA4S,GAEAomB,EAAA/vB,EAAAgwB,QACA,IAAAV,EAAA,CACA,IAAAC,EAAAU,IACA,SAAAC,OAAA,uDAEAH,GAAA,UAEAA,IAAAR,EAAAQ,KACAA,EAAA,SAEA,IAAA/4B,GAAA,GAAAu4B,GAAAQ,GAAAx0B,EAAAxE,EAAAiJ,EAEA5I,MAAAL,UACAK,KAAAJ,SAEA,IAAAm5B,GAAA1mB,EAAA2mB,KAAA,QAAAf,GAAAr4B,EAAA2K,kBACAvK,MAAAC,QAAA,GAAAP,GAAAC,EAAAC,EAAAm5B,EAAAn5B,EAAA+I,MAKA3I,KAAAwV,UAAA,GAAAb,IACAE,OACAhC,OAAAwT,EAAAC,KAAAtmB,KAAAi5B,MAAAj5B,SAGAA,KAAAwV,UAAAe,QAMAvW,KAAAk5B,aAIA,IAAAC,GAAAx5B,EAAAuU,WACAklB,EAAAz5B,EAAAkU,QAEAlU,GAAAuU,WAAA,SAAAH,GACA,GAAAhV,GAAAY,EAAA0U,IAAAN,EAEAolB,GAAAp5B,KAAAJ,EAAAoU,GAEAhV,KAAAs6B,iBAAA9sB,IAGA5M,EAAAkU,SAAA,SAAA9U,GACAq6B,EAAAr5B,KAAAJ,EAAAZ,GAEAA,EAAAu6B,YAAA/sB,IAIAgsB,GAAAh5B,WAEAkB,YAAA83B,EAKAgB,MAAA,WACA,MAAAv5B,MAAAgD,IAOA4nB,IAAA,SAAA7rB,GACAiB,KAAAL,QAAAgU,QAAA5U,GACAiB,KAAAk5B,eAAA,GAOAxW,OAAA,SAAA3jB,GACAiB,KAAAL,QAAAmU,QAAA/U,GACAiB,KAAAk5B,eAAA,GAWA/oB,YAAA,SAAAqpB,EAAAz1B,GACA/D,KAAAJ,QAAAuQ,YAAAqpB,EAAAz1B,GACA/D,KAAAk5B,eAAA,GAMAO,mBAAA,WAGAz5B,KAAAk5B,eAAA,EACAl5B,KAAAJ,QAAA4K,UAIAxK,KAAAk5B,eAAA,GAMA1uB,QAAA,WACAxK,KAAAk5B,eAAA,GAMAD,MAAA,WACAj5B,KAAAk5B,eACAl5B,KAAAy5B,qBAEAz5B,KAAA05B,oBACA15B,KAAA25B,2BASA7uB,SAAA,SAAA/L,EAAA2E,GACA1D,KAAAJ,QAAAkL,WACA9K,KAAAJ,QAAAkL,SAAA/L,EAAA2E,GACA1D,KAAA4K,iBAQAQ,YAAA,SAAArM,GACAiB,KAAAJ,QAAAwL,cACApL,KAAAJ,QAAAwL,YAAArM,GACAiB,KAAA4K,iBAQAa,WAAA,WACAzL,KAAAJ,QAAA6L,aACAzL,KAAAJ,QAAA6L,aACAzL,KAAA4K,iBAOAA,aAAA,WACA5K,KAAA05B,oBAAA,GAMAC,wBAAA,WACA35B,KAAA05B,oBAAA,EACA15B,KAAAJ,QAAAgL,cAAA5K,KAAAJ,QAAAgL,gBAUAlJ,OAAA,SAAAkH,GACAA,QACA5I,KAAAJ,QAAA8B,OAAAkH,EAAAvF,MAAAuF,EAAArF,QACAvD,KAAAC,QAAAyB,UAMAk4B,eAAA,WACA55B,KAAAwV,UAAApQ,SAMA9B,SAAA,WACA,MAAAtD,MAAAJ,QAAA0D,YAMAE,UAAA,WACA,MAAAxD,MAAAJ,QAAA4D,aAsBAyG,YAAA,SAAA8H,EAAA1O,EAAAE,GACA,GAAAP,GAAAg1B,GACA,OAAAh4B,MAAAJ,QAAAqK,YAAAjH,EAAA+O,EAAA1O,EAAAE,IAOAzB,eAAA,SAAAC,GACA/B,KAAAC,QAAA6B,eAAAC,IAUAvB,GAAA,SAAAoB,EAAAK,EAAAsN,GACAvP,KAAAC,QAAAO,GAAAoB,EAAAK,EAAAsN,IAQA6mB,IAAA,SAAAx0B,EAAAK,GACAjC,KAAAC,QAAAm2B,IAAAx0B,EAAAK,IASAR,QAAA,SAAAG,EAAAjE,GACAqC,KAAAC,QAAAwB,QAAAG,EAAAjE,IAOAyH,MAAA,WACApF,KAAAL,QAAAmU,UACA9T,KAAAJ,QAAAwF,SAMA5F,QAAA,WACAQ,KAAAwV,UAAAgB,OAEAxW,KAAAoF,QACApF,KAAAL,QAAAH,UACAQ,KAAAJ,QAAAJ,UACAQ,KAAAC,QAAAT,UAEAQ,KAAAwV,UACAxV,KAAAL,QACAK,KAAAJ,QACAI,KAAAC,QAAA,KAEA63B,EAAA93B,KAAAgD,MAIAnG,EAAAC,QAAAs7B,G7Ck8MMyB,IACA,SAASh9B,EAAQC,QAASE,GAEhC,YAeA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAZvFG,OAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,G8C/2NR,IAAAyX,GAAAp9B,EAAA,K9Co3NIq9B,EAAwBP,EAAuBM,G8Cn3NnDE,EAAAt9B,EAAA,K9Cu3NIu9B,EAAUT,EAAuBQ,EAIrCx9B,oB8Cz3Ne09B,QAAQ39B,OAAO,cAC7B09B,aAAOh6B,OAEPk6B,UAAU,aAHIJ,e9C63NTK,IACA,SAAS79B,EAAQC,QAASE,GAEhC,YAeA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAZvFG,OAAOC,eAAer9B,QAAS,cAC7B6lB,OAAO,G+Cv4NT,IAAAgY,GAAA39B,EAAA,K/C44NI49B,EAAuBd,EAAuBa,G+C34NlDL,EAAAt9B,EAAA,K/C+4NIu9B,EAAUT,EAAuBQ,EAIrCx9B,oB+Cj5Ne09B,QAAQ39B,OAAO,aAC5B09B,aAAOh6B,OAERk6B,UAAU,YAHIG,e/Cq5NTC,IACA,SAASh+B,EAAQC,QAASE,GAEhC,YAeA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAZvFG,OAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,GgD/5NR,IAAAmY,GAAA99B,EAAA,KhDo6NI+9B,EAAsBjB,EAAuBgB,GgDn6NjDR,EAAAt9B,EAAA,KhDu6NIu9B,EAAUT,EAAuBQ,EAIrCx9B,oBgDz6Ne09B,QAAQ39B,OAAO,YAC7B09B,aAAOh6B,OAEPk6B,UAAU,WAHIM,ehD66NTC,IACA,SAASn+B,EAAQC,SiD13NvB,QAAAyuB,GAAAuG,GACA,SAAAA,GAAA,gBAAAA,GACA,MAAAA,EAGA,IAAAmJ,GAAAnJ,EACAoJ,EAAAC,EAAAp7B,KAAA+xB,EAEA,uBAAAoJ,EAAA,CACAD,IACA,QAAA/9B,GAAA,EAAAyO,EAAAmmB,EAAAtvB,OAAgDtF,EAAAyO,EAASzO,IACzD+9B,EAAA/9B,GAAAquB,EAAAuG,EAAA50B,QAGA,IAAAk+B,EAAAF,GACAD,EAAAnJ,EAAArxB,YAAAiL,KAAAomB,OAEA,KAAAuJ,EAAAH,KAAAI,EAAAxJ,GAAA,CACAmJ,IACA,QAAA9X,KAAA2O,GACAA,EAAAthB,eAAA2S,KACA8X,EAAA9X,GAAAoI,EAAAuG,EAAA3O,KAKA,MAAA8X,GASA,QAAApsB,GAAAnR,EAAAo0B,EAAAyJ,GAGA,IAAAl3B,EAAAytB,KAAAztB,EAAA3G,GACA,MAAA69B,GAAAhQ,EAAAuG,GAAAp0B,CAGA,QAAAylB,KAAA2O,GACA,GAAAA,EAAAthB,eAAA2S,GAAA,CACA,GAAAqY,GAAA99B,EAAAylB,GACAsY,EAAA3J,EAAA3O,IAEA9e,EAAAo3B,KACAp3B,EAAAm3B,IACAE,EAAAD,IACAC,EAAAF,IACAF,EAAAG,IACAH,EAAAE,IACAG,EAAAF,IACAE,EAAAH,IAKAD,GAAApY,IAAAzlB,KAGAA,EAAAylB,GAAAoI,EAAAuG,EAAA3O,IAAA,IALAtU,EAAA2sB,EAAAC,EAAAF,GAUA,MAAA79B,GAQA,QAAAk+B,GAAAC,EAAAN,GAEA,OADAN,GAAAY,EAAA,GACA3+B,EAAA,EAAAyO,EAAAkwB,EAAAr5B,OAAsDtF,EAAAyO,EAASzO,IAC/D+9B,EAAApsB,EAAAosB,EAAAY,EAAA3+B,GAAAq+B,EAEA,OAAAN,GAQA,QAAAhyB,GAAAvL,EAAAo0B,GACA,OAAA3O,KAAA2O,GACAA,EAAAthB,eAAA2S,KACAzlB,EAAAylB,GAAA2O,EAAA3O,GAGA,OAAAzlB,GASA,QAAAo+B,GAAAp+B,EAAAo0B,EAAAiK,GACA,OAAA5Y,KAAA2O,GACAA,EAAAthB,eAAA2S,KACA4Y,EAAA,MAAAjK,EAAA3O,GAAA,MAAAzlB,EAAAylB,MAEAzlB,EAAAylB,GAAA2O,EAAA3O,GAGA,OAAAzlB,GAGA,QAAAs+B,KACA,MAAA74B,UAAAC,cAAA,UAIA,QAAA6B,KAMA,MALAg3B,KAGAA,EAAA78B,EAAA48B,eAAA/2B,WAAA,OAEAg3B,EAOA,QAAA1wB,GAAA2wB,EAAAvZ,GACA,GAAAuZ,EAAA,CACA,GAAAA,EAAA3wB,QACA,MAAA2wB,GAAA3wB,QAAAoX,EAEA,QAAAzlB,GAAA,EAAAyO,EAAAuwB,EAAA15B,OAA+CtF,EAAAyO,EAASzO,IACxD,GAAAg/B,EAAAh/B,KAAAylB,EACA,MAAAzlB,GAIA,SAUA,QAAAmrB,GAAA8T,EAAAC,GAEA,QAAAC,MADA,GAAAC,GAAAH,EAAA58B,SAEA88B,GAAA98B,UAAA68B,EAAA78B,UACA48B,EAAA58B,UAAA,GAAA88B,EAEA,QAAAhL,KAAAiL,GACAH,EAAA58B,UAAA8xB,GAAAiL,EAAAjL,EAEA8K,GAAA58B,UAAAkB,YAAA07B,EACAA,EAAAI,WAAAH,EASA,QAAAx5B,GAAAlF,EAAAo0B,EAAAiK,GACAr+B,EAAA,aAAAA,KAAA6B,UAAA7B,EACAo0B,EAAA,aAAAA,KAAAvyB,UAAAuyB,EAEAgK,EAAAp+B,EAAAo0B,EAAAiK,GAMA,QAAA9J,GAAAzT,GACA,GAAAA,EAGA,sBAAAA,IAGA,gBAAAA,GAAAhc,OAUA,QAAAlC,GAAAy5B,EAAAzqB,EAAAC,GACA,GAAAwqB,GAAAzqB,EAGA,GAAAyqB,EAAAyC,SAAAzC,EAAAyC,UAAAC,EACA1C,EAAAyC,QAAAltB,EAAAC,OAEA,IAAAwqB,EAAAv3B,UAAAu3B,EAAAv3B,OACA,OAAAtF,GAAA,EAAAyO,EAAAouB,EAAAv3B,OAA6CtF,EAAAyO,EAASzO,IACtDoS,EAAAvP,KAAAwP,EAAAwqB,EAAA78B,KAAA68B,OAIA,QAAA5W,KAAA4W,GACAA,EAAAvpB,eAAA2S,IACA7T,EAAAvP,KAAAwP,EAAAwqB,EAAA5W,KAAA4W,GAcA,QAAA3W,GAAA2W,EAAAzqB,EAAAC,GACA,GAAAwqB,GAAAzqB,EAAA,CAGA,GAAAyqB,EAAA3W,KAAA2W,EAAA3W,MAAAsZ,EACA,MAAA3C,GAAA3W,IAAA9T,EAAAC,EAIA,QADA0rB,MACA/9B,EAAA,EAAAyO,EAAAouB,EAAAv3B,OAA6CtF,EAAAyO,EAASzO,IACtD+9B,EAAApxB,KAAAyF,EAAAvP,KAAAwP,EAAAwqB,EAAA78B,KAAA68B,GAEA,OAAAkB,IAYA,QAAA0B,GAAA5C,EAAAzqB,EAAAstB,EAAArtB,GACA,GAAAwqB,GAAAzqB,EAAA,CAGA,GAAAyqB,EAAA4C,QAAA5C,EAAA4C,SAAAE,EACA,MAAA9C,GAAA4C,OAAArtB,EAAAstB,EAAArtB,EAGA,QAAArS,GAAA,EAAAyO,EAAAouB,EAAAv3B,OAA6CtF,EAAAyO,EAASzO,IACtD0/B,EAAAttB,EAAAvP,KAAAwP,EAAAqtB,EAAA7C,EAAA78B,KAAA68B,EAEA,OAAA6C,IAYA,QAAAE,GAAA/C,EAAAzqB,EAAAC,GACA,GAAAwqB,GAAAzqB,EAAA,CAGA,GAAAyqB,EAAA+C,QAAA/C,EAAA+C,SAAAC,EACA,MAAAhD,GAAA+C,OAAAxtB,EAAAC,EAIA,QADA0rB,MACA/9B,EAAA,EAAAyO,EAAAouB,EAAAv3B,OAA6CtF,EAAAyO,EAASzO,IACtDoS,EAAAvP,KAAAwP,EAAAwqB,EAAA78B,KAAA68B,IACAkB,EAAApxB,KAAAkwB,EAAA78B,GAGA,OAAA+9B,IAYA,QAAA+B,GAAAjD,EAAAzqB,EAAAC,GACA,GAAAwqB,GAAAzqB,EAGA,OAAApS,GAAA,EAAAyO,EAAAouB,EAAAv3B,OAAyCtF,EAAAyO,EAASzO,IAClD,GAAAoS,EAAAvP,KAAAwP,EAAAwqB,EAAA78B,KAAA68B,GACA,MAAAA,GAAA78B,GAWA,QAAAopB,GAAA2W,EAAA1tB,GACA,GAAA2tB,GAAAC,EAAAp9B,KAAAmmB,UAAA,EACA,mBACA,MAAA+W,GAAAhX,MAAA1W,EAAA2tB,EAAA3V,OAAA4V,EAAAp9B,KAAAmmB,cASA,QAAAkX,GAAAH,GACA,GAAAC,GAAAC,EAAAp9B,KAAAmmB,UAAA,EACA,mBACA,MAAA+W,GAAAhX,MAAAjmB,KAAAk9B,EAAA3V,OAAA4V,EAAAp9B,KAAAmmB,cASA,QAAAwV,GAAA/Y,GACA,yBAAAwY,EAAAp7B,KAAA4iB,GAQA,QAAAoO,GAAApO,GACA,wBAAAA,GAQA,QAAAmO,GAAAnO,GACA,0BAAAwY,EAAAp7B,KAAA4iB,GAQA,QAAAte,GAAAse,GAGA,GAAA/kB,SAAA+kB,EACA,oBAAA/kB,KAAA+kB,GAAA,UAAA/kB,EAQA,QAAA+9B,GAAAhZ,GACA,QAAA0Y,EAAAF,EAAAp7B,KAAA4iB,IAQA,QAAA2Y,GAAA3Y,GACA,sBAAAA,IACA,gBAAAA,GAAAnhB,UACA,gBAAAmhB,GAAA0a,cAQA,QAAAC,GAAAC,GACA,OAAArgC,GAAA,EAAAyO,EAAAua,UAAA1jB,OAA+CtF,EAAAyO,EAASzO,IACxD,SAAAgpB,UAAAhpB,GACA,MAAAgpB,WAAAhpB,GAYA,QAAAoW,KACA,MAAAkqB,UAAAz9B,KAAAkmB,MAAAkX,EAAAjX,WAQA,QAAAuX,GAAAC,EAAAC,GACA,IAAAD,EACA,SAAA5E,OAAA6E,GA5dA,GAuKA1B,GAvKAZ,GACAuC,oBAAA,EACAC,kBAAA,EACAC,gBAAA,EACAC,iBAAA,EACAC,0BAAA,EACAC,yBAAA,EAEAC,iBAAA,EACAC,kBAAA,GAGA/C,GACAgD,qBAAA,EACAC,sBAAA,EACAC,6BAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,sBAAA,EACAC,uBAAA,EACAC,wBAAA,EACAC,wBAAA,GAGAzD,EAAAjB,OAAA36B,UAAAs/B,SAEAC,EAAA7qB,MAAA1U,UACAk9B,EAAAqC,EAAAtC,QACAO,EAAA+B,EAAAhC,OACAK,EAAA2B,EAAAxrB,MACAopB,EAAAoC,EAAA1b,IACAyZ,EAAAiC,EAAAnC,OAicAv9B,GACAipB,WACAzlB,QACA2oB,QACA1c,QACA+sB,WACA3yB,SACA6yB,WACA72B,aACA+2B,eACAzwB,UACA+H,QACA0pB,OACA/K,cACA3xB,OACA8iB,MACAuZ,SACAG,SACAxW,OACA8W,QACA1B,UACA5K,WACAzsB,WACA0sB,aACA4K,kBACAL,QACAgC,WACAG,SACAsB,KAAA,aAEAliC,GAAAC,QAAAsC,GjDy7NM4/B,IACA,SAASniC,EAAQC,QAASE,IkD97OhC,SAAAorB,GAwEA,QAAA6W,GAAAC,GACA,gBAAAt9B,EAAA3B,EAAAsP,GAEA3N,OAAAu9B,cACA7/B,EAAAC,UAAA2/B,GAAAn/B,KAAAC,KAAA4B,EAAA3B,EAAAsP,IAOA,QAAA6vB,KACA9/B,EAAAS,KAAAC,MAUA,QAAAq/B,GAAAl7B,EAAAm7B,EAAA12B,GAmGA,QAAA22B,GAAArtB,EAAAC,GACA,MAAAD,GAAAstB,KAAArtB,EAAAqtB,KAnGA52B,QAGA,gBAAA02B,KACAA,EAAAG,GAAAH,IAMAt/B,KAAAgD,GAKAhD,KAAA0/B,MAKA1/B,KAAA2/B,KAAAx7B,CAKA,IAAAgtB,GAAAnxB,KAAA4/B,IAAAxH,EAAAE,KAAAn0B,GACAy0B,SAAAhwB,EAAAgwB,UAAA,SACAx0B,iBAAAwE,EAAAxE,iBACAf,MAAAuF,EAAAvF,MACAE,OAAAqF,EAAArF,QAQAvD,MAAA6/B,kBAAAC,WAAAzZ,EAAAC,KAAA6K,EAAA8H,MAAA9H,GAAA,IAMAnxB,KAAA+/B,OAAA1Z,EAAAkF,MAAA+T,GAMAt/B,KAAAggC,gBAMAhgC,KAAAigC,cAMAjgC,KAAAkgC,oBAMAlgC,KAAAmgC,kBAMAngC,KAAAogC,KAAA,GAAAC,GAAArgC,MAMAA,KAAAsgC,aAAA,GAAAC,GAEAjhC,EAAAS,KAAAC,MAMAA,KAAAwgC,eAAA,GAAApB,GAGAp/B,KAAAygC,cAGAzgC,KAAA0B,OAAA2kB,EAAAC,KAAAtmB,KAAA0B,OAAA1B,MAGAA,KAAA0gC,mBAKAn4B,EAAAo4B,GAAApB,GACAh3B,EAAAq4B,GAAArB,GAEApO,EAAA3b,UAAAhV,GAAA,QAAAR,KAAA6gC,SAAA7gC,MAyRA,QAAA8gC,GAAAC,EAAAC,EAAAre,GACA,GAEAsY,GAFAgG,EAAAjhC,KAAAkhC,OACAC,EAAAnhC,KAAAsgC,aAAAc,sBAGAJ,GAAAK,EAAAC,YAAAL,EAAAD,EAEA,QAAA9jC,GAAA,EAAuBA,EAAAikC,EAAA3+B,OAAyBtF,IAAA,CAChD,GAAAqkC,GAAAJ,EAAAjkC,EACA,IAAAqkC,EAAAR,IACA,OAAA9F,EAAAsG,EAAAR,GAAAE,EAAAD,EAAAre,IAEA,MAAAsY,GAIAuG,SACAC,QAAAC,KACA,sCAAAX,EAAA,+BAqSA,QAAAY,GAAAzC,EAAA0C,GACA,GAAAX,GAAAjhC,KAAAkhC,MAGAD,IAIAA,EAAAY,eACaC,SAAA,SAAAC,MAAAH,GACb,SAAAI,EAAAC,GACA,GAAAC,GAAAliC,KAAAigC,WAAA+B,EAAAG,SACAD,MAAAE,SACAF,EAAAhD,GACA8C,EAAAf,EAAAjhC,KAAAogC,KAAAwB,IAIA5hC,MA8HA,QAAAqiC,GAAAT,EAAA5iC,GACA,GAAAsjC,GAAAC,EAAAX,EAAAhkC,MACA4kC,EAAAF,EAAAE,WACAC,EAAAD,EAAA3vB,QAAA,QAEA7S,MAAA0iC,IAAA,CAEA,IAAAC,IAAAf,GACAgB,GAAA,CAEAhB,GAAAiB,QACAD,GAAA,EACAD,EAAAtc,EAAAjD,IAAAwe,EAAAiB,MAAA,SAAAC,GAGA,MAFAA,GAAAzc,EAAAyV,SAAAzV,EAAApd,UAAuD65B,GAAAlB,GACvDkB,EAAAD,MAAA,KACAC,IAOA,QAFAC,GADAC,KAEAC,EAAA,cAAArB,EAAAhkC,MAAA,aAAAgkC,EAAAhkC,KACAV,EAAA,EAAuBA,EAAAylC,EAAAngC,OAAqBtF,IAAA,CAC5C,GAAAgmC,GAAAP,EAAAzlC,EAEA6lC,GAAAT,EAAAa,OAAAD,EAAAljC,KAAAkhC,QAEA6B,KAAA1c,EAAApd,UAAmDi6B,GAEnDH,EAAAnlC,KAAA4kC,EAAA7kC,OAAAolC,EAAAnlC,KACAolC,EAAAn5B,KAAAk5B,GAGAE,GAAAG,EAAAX,GAAA1iC,KAAAC,KAAAkjC,GAGA,SAAAT,GAAAQ,IAEAjjC,KAAAqjC,IAEAD,EAAAE,iBAAAvjC,KAAAC,KAAA4hC,GACA5hC,KAAAqjC,IAAA,GAGAD,EAAAX,GAAA1iC,KAAAC,KAAA4hC,IAMAmB,EADAH,GAEAhlC,KAAA4kC,EAAA7kC,OAAAikC,EAAAhkC,KACAilC,MAAAG,GAIAA,EAAA,GAGAhjC,KAAA0iC,IAAA,GAEA1jC,GAAAgB,KAAAwgC,eAAA/+B,QAAAshC,EAAAnlC,KAAAmlC,GAGA,QAAAQ,GAAAvkC,GAEA,IADA,GAAAwkC,GAAAxjC,KAAA0gC,gBACA8C,EAAAhhC,QAAA,CACA,GAAAo/B,GAAA4B,EAAA1X,OACAuW,GAAAtiC,KAAAC,KAAA4hC,EAAA5iC,IAgBA,QAAAykC,GAAA1C,EAAAE,EAAAW,GACA,GAAA8B,GAAA1jC,KAAAogC,IAGA9/B,GAAAN,KAAAkgC,iBAAA,SAAAzF,GACA,GAAAkJ,GAAAlJ,EAAAmJ,OACAnJ,GAAAsG,GAAA4C,EAAA1C,EAAAyC,EAAA9B,GAEAiC,EAAAF,EAAAlJ,IACSz6B,MAGTihC,EAAA6C,WAAA,SAAA9B,EAAA12B,GACA,GAAAy4B,GAAA/jC,KAAAigC,WAAA+B,EAAAG,SACA4B,GAAAhD,GAAAiB,EAAAf,EAAAyC,EAAA9B,GAEAiC,EAAA7B,EAAA+B,GAEAC,EAAAhC,EAAA+B,IACS/jC,MAGTikC,EAAAjkC,KAAA4/B,IAAAqB,GAQA,QAAAiD,GAAAtmC,EAAAqjC,GAMA,OALAkD,GAAA,cAAAvmC,EACAwmC,EAAAD,EAAAnkC,KAAAkgC,iBAAAlgC,KAAAggC,aACAqE,EAAAF,EAAAnkC,KAAAmgC,eAAAngC,KAAAigC,WACA9O,EAAAnxB,KAAA4/B,IAEA1iC,EAAA,EAAuBA,EAAAknC,EAAA5hC,OAAqBtF,IAC5CknC,EAAAlnC,GAAAklC,SAAA,CAGAnB,GAAAkD,EAAA,uCAAAG,EAAAC,GACA,GAAAJ,GACA,cAAAG,EACA,WAIAC,GAAAD,CAIA,IAAAE,GAAAD,EAAAvhC,GAAA,IAAAuhC,EAAA3mC,KACA6mC,EAAAJ,EAAAG,EACA,KAAAC,EAAA,CACA,GAAAC,GAAAC,EAAAC,eAAAL,EAAA3mC,MACAinC,EAAAV,EACAW,EAAAC,SAAAL,EAAAM,KAAAN,EAAAlZ,KACAyZ,EAAAF,SAAAL,EAAAlZ,IACA,KAAAqZ,EASA,MARAJ,GAAA,GAAAI,GACAJ,EAAAnM,KAAA2I,EAAAjhC,KAAAogC,MACAiE,EAAAG,GAAAC,EACAL,EAAAv6B,KAAA46B,GACAtT,EAAAvG,IAAA6Z,EAAA/E,OAQA6E,EAAApC,SAAAqC,EACAC,EAAArC,SAAA,EACAqC,EAAAS,KAAAV,EACAC,EAAAb,QAAAW,GACSvkC,KAET,QAAA9C,GAAA,EAAuBA,EAAAknC,EAAA5hC,QAAqB,CAC5C,GAAAiiC,GAAAL,EAAAlnC,EACAunC,GAAArC,QAOAllC,KANAi0B,EAAAzO,OAAA+hB,EAAA/E,OACA+E,EAAAjlC,QAAAyhC,EAAAjhC,KAAAogC,MACAgE,EAAA54B,OAAAtO,EAAA,SACAmnC,GAAAI,EAAAS,QAcA,QAAAC,GAAAlE,EAAAyC,GACApjC,EAAAsgC,GAAA,SAAAwE,GACAA,EAAAnI,KAAAgE,EAAAyC,KAOA,QAAA2B,GAAApE,GACA,GAAAqE,KACArE,GAAA6C,WAAA,SAAAyB,GACA,GAAAC,GAAAD,EAAAlxB,IAAA,SACAmK,EAAA+mB,EAAAE,SACA,IAAAD,GAAA,SAAAhnB,EAAA5gB,KAAA,CACA,GAAA8nC,GAAAJ,EAAAE,EACAE,KACAlnB,EAAAmnB,UAAAD,GAEAJ,EAAAE,GAAAhnB,KAWA,QAAAonB,GAAA3E,EAAAW,GACA,GAAA8B,GAAA1jC,KAAAogC,IACA9/B,GAAAqgC,GAAA,SAAAkF,GACAA,EAAAC,UACAD,EAAA5I,KAAAgE,EAAAyC,EAAA9B,KAWA,QAAAmE,GAAA9E,EAAAW,GACA,GAAA8B,GAAA1jC,KAAAogC,IACAa,GAAA+E,oBACA/E,EAAA6C,WAAA,SAAA9B,GACAA,EAAAgE,sBAEA1lC,EAAAqgC,GAAA,SAAAkF,GACAA,EAAA5I,KAAAgE,EAAAyC,EAAA9B,KAQA,QAAAqE,GAAAhF,EAAAW,GACA,GAAA8B,GAAA1jC,KAAAogC,IAEA9/B,GAAAN,KAAAkgC,iBAAA,SAAAgG,GACA,GAAAvC,GAAAuC,EAAAtC,OACAsC,GAAAC,OAAAxC,EAAA1C,EAAAyC,EAAA9B,GAEAiC,EAAAF,EAAAuC,IACSlmC,MAETM,EAAAN,KAAAggC,aAAA,SAAA+D,GACAA,EAAA3B,SAAA,GACSpiC,MAGTihC,EAAA6C,WAAA,SAAA9B,EAAA12B,GACA,GAAA42B,GAAAliC,KAAAigC,WAAA+B,EAAAG,SACAD,GAAAE,SAAA,EACAF,EAAAiE,OAAAnE,EAAAf,EAAAyC,EAAA9B,GAEAM,EAAAxC,MAAA1gC,SAAAgjC,EAAA3tB,IAAA,UAEAwvB,EAAA7B,EAAAE,GAEA8B,EAAAhC,EAAAE,IAESliC,MAGTikC,EAAAjkC,KAAA4/B,IAAAqB,GAGA3gC,EAAAN,KAAAggC,aAAA,SAAA+D,GACAA,EAAA3B,SACA2B,EAAArhB,OAAAue,EAAAyC,IAES1jC,MAyFT,QAAAikC,GAAA9S,EAAA8P,GACA,GAAAthC,GAAAwxB,EAAAxxB,QACAkF,EAAA,CACAlF,GAAAiT,SAAA,SAAA7T,GACAA,EAAAwU,SACA1O,MAGAA,EAAAo8B,EAAA5sB,IAAA,yBAAAhC,EAAA2mB,MACAr5B,EAAAiT,SAAA,SAAA7T,GACAA,EAAAwU,UACAxU,EAAAqnC,eAAA,KAUA,QAAApC,GAAAhC,EAAAE,GAEA,GAAAr9B,GAAA,CACAq9B,GAAAxC,MAAA9sB,SAAA,SAAA7T,GACA,UAAAA,EAAAnB,MAAAmB,EAAA0D,QACAoC,KAGA,IAAAwhC,IAAArE,EAAA3tB,IAAA,eACAiyB,EAAAzhC,EAAAm9B,EAAA3tB,IAAA,yBAAAgyB,IAAAh0B,EAAA2mB,IACAsN,IACApE,EAAAxC,MAAA9sB,SAAA,SAAA7T,GAEAA,EAAAwU,UACAxU,EAAAiR,YAAAs2B,EACAz4B,KAAA6e,MAAA7nB,IAAAwhC,MACAC,GACAvnC,EAAAyyB,eAAA,KAOA,IAAA+U,GAAAvE,EAAA3tB,IAAA,kBACAmtB,WACAnvB,EAAAa,iBAAAqzB,GAAA,gBAAAA,GACA9E,QAAAC,KAAA,iCAGAQ,EAAAxC,MAAA9sB,SAAA,SAAA7T,GAEAA,EAAAwU,SACAxU,EAAAoM,SAAA,QAAAo7B,KAQA,QAAA1C,GAAAU,EAAAE,GACA,GAAA95B,GAAA45B,EAAAlwB,IAAA,KACA3G,EAAA62B,EAAAlwB,IAAA,SAEAowB,GAAA/E,MAAA9sB,SAAA,SAAA7T,GACA,UAAAA,EAAAnB,OACA,MAAA+M,IAAA5L,EAAA4L,KACA,MAAA+C,IAAA3O,EAAA2O,aAiEA,QAAA84B,GAAAzC,GAMA,QAAA0C,GAAAC,EAAAC,GACA,OAAAzpC,GAAA,EAA2BA,EAAAwpC,EAAAlkC,OAAmBtF,IAAA,CAC9C,GAAA0pC,GAAAF,EAAAxpC,EACA0pC,GAAAC,GAAAF,GAPA,GAAAG,GAAA,EACAC,EAAA,EACAC,EAAA,EACAH,EAAA,uBAOAxgB,GAAA/lB,KAAA2mC,GAAA,SAAAC,EAAA/uB,GACA4rB,EAAAvD,eAAAhgC,GAAA2X,EAAA,SAAAxa,GACA,GAAAwpC,GAAApD,EAAArE,QAAAqE,EAAA8C,KAAAC,EAAA,CACA,GAAA3D,GAAAY,EAAAqD,oBAAAzpC,GACA0pC,IAEAhhB,GAAA/lB,KAAAy3B,GAAA,SAAA6O,GACAA,IAAA7C,GAAA6C,EAAAlH,QAAAqE,EAAArE,OACA2H,EAAAx9B,KAAA+8B,KAIAH,EAAAY,EAAAP,GACAxmC,EAAA+mC,EAAA,SAAAT,GACAA,EAAAC,KAAAE,GACAH,EAAAU,eAAAnE,KAGAsD,EAAAY,EAAAL,QAt7CA,mBAAAxF,WAEA,mBAAA+F,QACAA,OAAA/F,SAAA,EAGA,mBAAApZ,KACAA,EAAAoZ,SAAA;;;;;;;;;AAmBA,GAAAnvB,GAAArV,EAAA,KAEAwqC,EAAAxqC,EAAA,KACAqjC,EAAArjC,EAAA,KACAujC,EAAAvjC,EAAA,KACAyqC,EAAAzqC,EAAA,KAEA2nC,EAAA3nC,EAAA,KACA0qC,EAAA1qC,EAAA,KAEA8nC,EAAA9nC,EAAA,KACAioC,EAAAjoC,EAAA,KACA2qC,EAAA3qC,EAAA,KACAqkC,EAAArkC,EAAA,KACA8iC,EAAA9iC,EAAA,KAEAo7B,EAAAp7B,EAAA,MACAqpB,EAAArpB,EAAA,KACA4qC,EAAA5qC,EAAA,KACAsC,EAAAtC,EAAA,KACAuL,EAAAvL,EAAA,KAEAsD,EAAA+lB,EAAA/lB,KAEAunC,EAAA,IACAC,EAAA,IAGAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IACAC,EAAA,IAOAzF,EAAA,sBACA0F,EAAA,2BACA/E,EAAA,iBAgBAjE,GAAA7/B,UAAAiB,GAAAy+B,EAAA,MACAG,EAAA7/B,UAAA62B,IAAA6I,EAAA,OACAG,EAAA7/B,UAAA8oC,IAAApJ,EAAA,OACA5Y,EAAAzjB,MAAAw8B,EAAA9/B,EAiHA,IAAAgpC,GAAAjJ,EAAA9/B,SAEA+oC,GAAAzH,SAAA,WAEA7gC,KAAAqjC,KAEArjC,KAAA0iC,IAAA,EAEAU,EAAAE,iBAAAvjC,KAAAC,MAEAA,KAAA0iC,IAAA,EAEA1iC,KAAAqjC,IAAA,IAMAiF,EAAAC,OAAA,WACA,MAAAvoC,MAAA2/B,MAMA2I,EAAAE,MAAA,WACA,MAAAxoC,MAAA4/B,KAQA0I,EAAAG,UAAA,SAAAC,EAAAC,EAAAC,GAOA,GANApH,SACAnb,EAAAoX,QAAAz9B,KAAA0iC,GAAA,yDAGA1iC,KAAA0iC,IAAA,GAEA1iC,KAAAkhC,QAAAyH,EAAA,CACA,GAAAE,GAAA,GAAApB,GAAAznC,KAAAogC,MACAd,EAAAt/B,KAAA+/B,OACAkB,EAAAjhC,KAAAkhC,OAAA,GAAAsG,GAAA,UAAAlI,EAAAuJ,EACA5H,GAAA3I,KAAA,UAAAgH,EAAAuJ,GAKA7oC,KAAA8oC,qBAAAJ,MAAAf,SACAthB,EAAA/lB,KAAAooC,EAAA,SAAAK,EAAAjH,GACA,YAAAA,IAAA9hC,KAAA8oC,mBAAA,IACS9oC,MAETA,KAAAkhC,OAAAuH,UAAAC,EAAAM,IAEAJ,EACA5oC,KAAAqjC,IAAA,GAGAD,EAAAE,iBAAAvjC,KAAAC,MAGAA,KAAA4/B,IAAA3G,QACAj5B,KAAAqjC,IAAA,GAGArjC,KAAA0iC,IAAA,EAEAa,EAAAxjC,KAAAC,MAAA,IAMAsoC,EAAAW,SAAA,WACAxH,QAAAp5B,IAAA,oDAMAigC,EAAAY,SAAA,WACA,MAAAlpC,MAAAkhC,QAMAoH,EAAAa,UAAA,WACA,MAAAnpC,MAAAkhC,QAAAlhC,KAAAkhC,OAAAiI,aAMAb,EAAAhlC,SAAA,WACA,MAAAtD,MAAA4/B,IAAAt8B,YAMAglC,EAAA9kC,UAAA,WACA,MAAAxD,MAAA4/B,IAAAp8B,aAQA8kC,EAAA53B,kBAAA,SAAA9H,GACA,GAAAyJ,EAAAa,gBAAA,CAGAtK,QACAA,EAAAgI,WAAAhI,EAAAgI,YAAA,EACAhI,EAAAiI,gBAAAjI,EAAAiI,iBACA7Q,KAAAkhC,OAAA7sB,IAAA,kBACA,IAAA8c,GAAAnxB,KAAA4/B,IACAt9B,EAAA6uB,EAAAxxB,QAAA4C,gBAKA,OAHA8jB,GAAA/lB,KAAAgC,EAAA,SAAAvD,GACAA,EAAAyyB,eAAA,KAEAL,EAAAvxB,QAAA8Q,kBAAA9H,KAUA0/B,EAAAc,WAAA,SAAAxgC,GACAA,OACA,IAAAygC,GAAAzgC,EAAAygC,kBACApI,EAAAjhC,KAAAkhC,OACAoI,KACA/8B,EAAAvM,IAEAM,GAAA+oC,EAAA,SAAA/E,GACArD,EAAAY,eACAC,SAAAwC,GACa,SAAA7J,GACb,GAAAgK,GAAAl4B,EAAA4zB,eAAA1F,EAAA0H,SACAsC,GAAA/E,MAAAj9B,SACA6mC,EAAAz/B,KAAA46B,GACAA,EAAA/E,MAAAj9B,QAAA,MAKA,IAAA8mC,GAAAvpC,KAAA0Q,kBAAA9H,GAAA4gC,UACA,UAAA5gC,KAAAhL,MAAA,OAMA,OAHA0C,GAAAgpC,EAAA,SAAA7E,GACAA,EAAA/E,MAAAj9B,QAAA,IAEA8mC,GAWAjB,EAAAmB,oBAAA,SAAA7gC,GACA,GAAAyJ,EAAAa,gBAAA,CAGA,GAAAw2B,GAAA1pC,KAAA0/B,MACAjc,EAAA5V,KAAAC,IACA4V,EAAA7V,KAAAoC,IACA05B,EAAAnlB,GACA,IAAA2iB,GAAAuC,GAAA,CACA,GAAA9lC,GAAA+lC,EACA9lC,EAAA8lC,EACA1lB,GAAA0lB,EACAzlB,GAAAylB,EACAC,KACA3mC,EAAA2F,KAAAgI,YAAA,CAEAyV,GAAA/lB,KAAAy3B,GAAA,SAAAgM,EAAA/gC,GACA,GAAA+gC,EAAArE,QAAAgK,EAAA,CACA,GAAAj4B,GAAAsyB,EAAArzB,kBACA2V,EAAAkF,MAAA3iB,IAEAihC,EAAA9F,EAAAwE,SAAAuB,uBACAlmC,GAAA6f,EAAAomB,EAAAjmC,QACAC,EAAA4f,EAAAomB,EAAAhmC,OACAogB,EAAAP,EAAAmmB,EAAA5lB,SACAC,EAAAR,EAAAmmB,EAAA3lB,UACA0lB,EAAA//B,MACA1F,IAAAsN,EACA7N,KAAAimC,EAAAjmC,KACAC,IAAAgmC,EAAAhmC,SAKAD,GAAAX,EACAY,GAAAZ,EACAghB,GAAAhhB,EACAihB,GAAAjhB,CACA,IAAAI,GAAA4gB,EAAArgB,EACAL,EAAA2gB,EAAArgB,EACAkmC,EAAA1jB,EAAA2V,cACA+N,GAAA1mC,QACA0mC,EAAAxmC,QACA,IAAA4tB,GAAAiH,EAAAE,KAAAyR,EAcA,OAZAzpC,GAAAspC,EAAA,SAAA9G,GACA,GAAAkH,GAAA,GAAArC,GAAAsC,OACAvmC,OACA9E,EAAAkkC,EAAAl/B,KAAAX,EAAAW,EACA/E,EAAAikC,EAAAj/B,IAAAZ,EAAAY,EACAiC,MAAAg9B,EAAA3+B,MAGAgtB,GAAAvG,IAAAof,KAEA7Y,EAAAsI,qBAEAsQ,EAAAP,UAAA,UAAA5gC,KAAAhL,MAAA,QAGA,MAAAoC,MAAAopC,WAAAxgC,KAsBA0/B,EAAA4B,eAAA7jB,EAAA+W,MAAA0D,EAAA,kBAoBAwH,EAAA6B,iBAAA9jB,EAAA+W,MAAA0D,EAAA,oBA0CAwH,EAAA8B,aAAA,SAAApJ,EAAAre,GACA,GACAsY,GADAgG,EAAAjhC,KAAAkhC,MAiCA,OA9BAF,GAAAK,EAAAC,YAAAL,EAAAD,GAEA3a,EAAA/lB,KAAA0gC,EAAA,SAAAqJ,EAAAlnB,GACAA,EAAA5X,QAAA,cAAA8a,EAAA/lB,KAAA+pC,EAAA,SAAA9F,GACA,GAAAhD,GAAAgD,EAAA+F,gBACA,IAAA/I,KAAAgJ,aACAtP,KAAAsG,EAAAgJ,aAAA5nB,OAEA,qBAAAQ,EAAA,CACA,GAAAshB,GAAAzkC,KAAAigC,WAAAsE,EAAApC,SACAsC,MAAA8F,aACAtP,GAAAwJ,EAAA8F,aAAA5nB,EAAA4hB,GAGA/C,SACAC,QAAAC,KAAAve,EAAA,MAAAshB,EACA,mDACA,gDAMAjD,UACAC,QAAAC,KAAAve,EAAA,oCAGanjB,OACJA,QAETi7B,GAkBAqN,EAAAkC,UAAA,SAAAxJ,EAAAyJ,GACA,GAAAxJ,GAAAjhC,KAAAkhC,MAEAF,GAAAK,EAAAC,YAAAL,EAAAD,GAAyD0J,gBAAA,UAEzD,IAAA1I,GAAAhB,EAAAgB,WAEAR,WACAQ,GACAP,QAAAC,KAAA,sCAIA,IAAAljB,GAAAwjB,EAAAyD,UAEAkF,EAAA3J,EAAAxwB,eAAA,mBACAwwB,EAAA2J,gBACA3J,EAAAxwB,eAAA,aACAgO,EAAAosB,gBAAA5J,EAAA6J,WACA,IAEA,cAAAF,EACAnsB,EAAAssB,cAAAH,EAAAF,GACAjsB,EAAAgsB,UAAAC,GAIA,IAAArH,IAMAvwB,OAAA,SAAA+uB,GAGA,GAAAX,GAAAjhC,KAAAkhC,OACAwC,EAAA1jC,KAAAogC,KACA2K,EAAA/qC,KAAAsgC,aACAnP,EAAAnxB,KAAA4/B,GAEA,IAAAqB,EAAA,CAKAA,EAAA+J,cAQAD,EAAAlnB,OAAA7jB,KAAAkhC,OAAAlhC,KAAAogC,MAEA+E,EAAAplC,KAAAC,KAAAihC,EAAAyC,GAEA2B,EAAAtlC,KAAAC,KAAAihC,GAEA8J,EAAAl4B,OAAAouB,EAAAyC,GAEAqC,EAAAhmC,KAAAC,KAAAihC,EAAAW,GAEAqE,EAAAlmC,KAAAC,KAAAihC,EAAAW,EAGA,IAAA/wB,GAAAowB,EAAA5sB,IAAA,kCAEAzU,EAAAuxB,EAAAvxB,OAEA,IAAAA,EAAA0K,gBAAA1K,EAAA0K,iBACA6mB,EAAAhhB,YAAA,GACAzL,WAAAmM,QAGA,CAEA,IAAAwB,EAAAa,gBAAA,CACA,GAAA+3B,GAAArD,EAAAsD,MAAAr6B,EACAA,GAAA+2B,EAAAuD,UAAAF,EAAA,OACA,IAAAA,EAAA,KACAp6B,EAAA,eAGAA,EAAAlL,YAAAkL,EAAA/K,OAGAqrB,EAAAhhB,YAAA,GACAzL,WAAAmM,IAEA7Q,KAAAooC,IAAA,EAEApoC,KAAA2/B,KAAAj8B,MAAA0nC,WAAA,gBAGAprC,KAAAooC,IACAjX,EAAAhhB,YAAA,GACAzL,WAAA,OAGA1E,KAAAooC,IAAA,EAEApoC,KAAA2/B,KAAAj8B,MAAA0nC,WAAAv6B,MAYAw6B,WAAA,SAAAzJ,GACA,GAAAX,GAAAjhC,KAAAkhC,MAGAD,KAIAA,EAAA6C,WAAA,SAAA9B,GACAA,EAAAyD,UAAA6F,mBAGAvF,EAAAhmC,KAAAC,KAAAihC,EAAAW,GAEA6B,EAAA1jC,KAAAC,KAAA,aAAAihC,EAAAW,KAOA2J,aAAA,SAAA3J,GACA,GAAAX,GAAAjhC,KAAAkhC,MAGAD,KAIAA,EAAA6C,WAAA,SAAA9B,GACAA,EAAAyD,UAAA6F,mBAGAvF,EAAAhmC,KAAAC,KAAAihC,EAAAW,GAEA6B,EAAA1jC,KAAAC,KAAA,eAAAihC,EAAAW,KAOA4J,aAAA,SAAA5J,GACA,GAAAX,GAAAjhC,KAAAkhC,MAGAD,KAIA2E,EAAA7lC,KAAAC,KAAAihC,EAAAW,GAEA6B,EAAA1jC,KAAAC,KAAA,eAAAihC,EAAAW,KAOA6J,UAAA,SAAA7J,GACAD,EAAA5hC,KAAAC,KAAA,YAAA4hC,IAOA8J,SAAA,SAAA9J,GACAD,EAAA5hC,KAAAC,KAAA,WAAA4hC,IAOA0B,iBAAA,SAAA1B,GACA,GAAAX,GAAAjhC,KAAAkhC,MAEAgD,GAAAnkC,KAAAC,KAAA,YAAAihC,GAEAiD,EAAAnkC,KAAAC,KAAA,QAAAihC,GAIAjhC,KAAA8oC,mBACAxoC,EAAAN,KAAAkgC,iBAAA,SAAAgG,GACA,GAAAvC,GAAAuC,EAAAtC,OACAD,IAAA,YAAAA,EAAA7B,WACAoE,EAAAC,OAAAxC,EAAA1C,EAAAjhC,KAAAogC,KAAAwB,GACAiC,EAAAF,EAAAuC,KAEiBlmC,MACjBA,KAAA8oC,mBAAA,GAGA1F,EAAAvwB,OAAA9S,KAAAC,KAAA4hC,IAqCA0G,GAAA5mC,OAAA,SAAAkH,GACA44B,SACAnb,EAAAoX,QAAAz9B,KAAA0iC,GAAA,sDAGA1iC,KAAA0iC,IAAA,EAEA1iC,KAAA4/B,IAAAl+B,OAAAkH,EAEA,IAAA+iC,GAAA3rC,KAAAkhC,QAAAlhC,KAAAkhC,OAAA0K,YAAA,QACAxI,GAAAuI,EAAA,6BAAA5rC,KAAAC,MAGAA,KAAA6rC,YAAA7rC,KAAA6rC,WAAAnqC,SAEA1B,KAAA0iC,IAAA,EAEAa,EAAAxjC,KAAAC,OAQAsoC,EAAAwD,YAAA,SAAAvrC,EAAAwrC,GAQA,GAPA1lB,EAAAhiB,SAAA9D,KACAwrC,EAAAxrC,EACAA,EAAA,IAEAA,KAAA,UAEAP,KAAAgsC,eACAC,GAAA1rC,GAIA,YAHAihC,SACAC,QAAAC,KAAA,mBAAAnhC,EAAA,gBAIA,IAAAxB,GAAAktC,GAAA1rC,GAAAP,KAAAogC,KAAA2L,GACA5a,EAAAnxB,KAAA4/B,GACA5/B,MAAA6rC,WAAA9sC,EAEAoyB,EAAAvG,IAAA7rB,IAMAupC,EAAA0D,YAAA,WACAhsC,KAAA6rC,YAAA7rC,KAAA4/B,IAAAld,OAAA1iB,KAAA6rC,YACA7rC,KAAA6rC,WAAA,MAOAvD,EAAAlB,oBAAA,SAAArE,GACA,GAAAnB,GAAAvb,EAAApd,UAAsC85B,EAEtC,OADAnB,GAAAhkC,KAAAqpC,GAAAlE,EAAAnlC,MACAgkC,GAeA0G,EAAAhB,eAAA,SAAA1F,EAAAsK,GAKA,GAJA7lB,EAAAhiB,SAAA6nC,KACAA,GAAmBltC,SAAAktC,IAGnB3J,EAAAX,EAAAhkC,MAAA,CAaA,GAAAoC,KAAA0iC,GAEA,WADA1iC,MAAA0gC,gBAAA72B,KAAA+3B,EAIAS,GAAAtiC,KAAAC,KAAA4hC,EAAAsK,EAAAltC,QAEAktC,EAAAjT,MACAj5B,KAAA4/B,IAAA3G,OAAA,GAEAiT,EAAAjT,SAAA,GAAA5mB,EAAA4S,QAAAknB,QAMAnsC,KAAA6/B,oBAGA0D,EAAAxjC,KAAAC,KAAAksC,EAAAltC,UA+EAspC,EAAA9nC,GAAAy+B,EAAA,MACAqJ,EAAAlS,IAAA6I,EAAA,OACAqJ,EAAAD,IAAApJ,EAAA,MA0MA,IAAAmN,IACA,sDACA,gDAKA9D,GAAA7H,YAAA,WACAngC,EAAA8rC,EAAA,SAAAC,GACArsC,KAAA4/B,IAAAp/B,GAAA6rC,EAAA,SAAAt6B,GACA,GAEAu6B,GAFArL,EAAAjhC,KAAAkpC,WACAnqC,EAAAgT,EAAArU,MAIA,kBAAA2uC,EACAC,SAEA,IAAAvtC,GAAA,MAAAA,EAAA8rC,UAAA,CACA,GAAA0B,GAAAxtC,EAAAwtC,WAAAtL,EAAAuL,iBAAAztC,EAAA0tC,YACAH,GAAAC,KAAAG,cAAA3tC,EAAA8rC,UAAA9rC,EAAA4tC,kBAGA5tC,MAAA6tC,YACAN,EAAAjmB,EAAApd,UAA6ClK,EAAA6tC,WAG7CN,KACAA,EAAA3uC,MAAAoU,EACAu6B,EAAA1uC,KAAAyuC,EACArsC,KAAAyB,QAAA4qC,EAAAC,KAGatsC,OACJA,MAETM,EAAA2mC,GAAA,SAAAC,EAAA/uB,GACAnY,KAAAwgC,eAAAhgC,GAAA2X,EAAA,SAAAxa,GACAqC,KAAAyB,QAAA0W,EAAAxa,IACaqC,OACJA,OAMTsoC,EAAAuE,WAAA,WACA,MAAA7sC,MAAA8sC,WAMAxE,EAAAljC,MAAA,WACApF,KAAAyoC,WAAwBlD,YAAa,IAKrC+C,EAAA9oC,QAAA,WACA,GAAAQ,KAAA8sC,UAIA,YAHAtL,SACAC,QAAAC,KAAA,YAAA1hC,KAAAgD,GAAA,sBAIAhD,MAAA8sC,WAAA,CAEA,IAAApJ,GAAA1jC,KAAAogC,KACAa,EAAAjhC,KAAAkhC,MAEA5gC,GAAAN,KAAAkgC,iBAAA,SAAAzF,GACAA,EAAAj7B,QAAAyhC,EAAAyC,KAEApjC,EAAAN,KAAAggC,aAAA,SAAA+D,GACAA,EAAAvkC,QAAAyhC,EAAAyC,KAIA1jC,KAAA4/B,IAAApgC,gBAEAu4B,IAAA/3B,KAAAgD,KAGAqjB,EAAAzjB,MAAAy8B,EAAA//B,EA+EA,IAAAijC,MAMA0E,MAOArG,MAMAoI,MAOArI,MAKAlB,MAIAwM,MAGAlU,MACAoP,MAEA4F,GAAA,GAAAngC,MAAA,EACAogC,GAAA,GAAApgC,MAAA,EACAqgC,GAAA,qBAIAC,IAIA7U,QAAA,QACA8U,cACA/U,QAAA,SAmDA8U,IAAA5U,KAAA,SAAAn0B,EAAAm7B,EAAA12B,GACA,GAAA44B,QAAA,CAEA,GAAApJ,EAAAC,QAAA5C,QAAA,UAAAyX,GAAAC,aAAA/U,QAAA3C,QAAA,UACA,SAAAqD,OACA,WAAAV,EAAAC,QACA,2BAAA6U,GAAA7U,QACA,kCACA6U,GAAAC,aAAA/U,QAAA,IAGA,KAAAj0B,EACA,SAAA20B,OAAA,oCAEAzS,EAAAiV,MAAAn3B,IAAA,WAAAA,EAAA2E,SAAAC,eAAA5E,EAAAipC,aAAAjpC,EAAAkpC,cACA5L,QAAAC,KAAA,iCAIA,GAAAqC,GAAA,GAAA1E,GAAAl7B,EAAAm7B,EAAA12B,EASA,OARAm7B,GAAA/gC,GAAA,MAAA+pC,KACAhV,GAAAgM,EAAA/gC,IAAA+gC,EAEA5/B,EAAAL,cACAK,EAAAL,aAAAmpC,GAAAlJ,EAAA/gC,IAEAwjC,EAAAzC,GAEAA,GAMAmJ,GAAAI,QAAA,SAAA5D,GAEA,GAAArjB,EAAAqV,QAAAgO,GAAA,CACA,GAAAhD,GAAAgD,CACAA,GAAA,KAEArjB,EAAA/lB,KAAAomC,EAAA,SAAA3C,GACA,MAAAA,EAAArE,QACAgK,EAAA3F,EAAArE,SAGAgK,KAAA,KAAAsD,KACA3mB,EAAA/lB,KAAAomC,EAAA,SAAA3C,GACAA,EAAArE,MAAAgK,IAIA,MADAvC,IAAAuC,IAAA,EACAA,GAMAwD,GAAAK,WAAA,SAAA7D,GACAvC,GAAAuC,IAAA,GAOAwD,GAAA1tC,QAAA,SAAAukC,GACA1d,EAAAiV,MAAAyI,GACAA,EAAAmJ,GAAAM,iBAAAzJ,GAEA,gBAAAA,KACAA,EAAAhM,GAAAgM,IAEAA,YAAA1E,KAAA0E,EAAA8I,cACA9I,EAAAvkC,WAQA0tC,GAAAM,iBAAA,SAAArpC,GACA,GAAAgf,GAAAhf,EAAAspC,aAAAR,GACA,OAAAlV,IAAA5U,IAMA+pB,GAAAQ,gBAAA,SAAAvqB,GACA,MAAA4U,IAAA5U,IAMA+pB,GAAAS,cAAA,SAAAptC,EAAA++B,GACAG,GAAAl/B,GAAA++B,GAOA4N,GAAAU,qBAAA,SAAAC,GACA7E,GAAAn/B,KAAAgkC,IAOAX,GAAAY,kBAAA,SAAAC,EAAAC,GAKA,GAJA,kBAAAD,KACAC,EAAAD,EACAA,EAAAlG,GAEArG,SACAnL,MAAA0X,GACA,SAAAjV,OAAA,4BAGA8H,IAAA/2B,MACA21B,KAAAuO,EACA9Q,KAAA+Q,KAoBAd,GAAAe,eAAA,SAAAzL,EAAA5gC,EAAAuhC,GACA,kBAAAvhC,KACAuhC,EAAAvhC,EACAA,EAAA,GAEA,IAAAslC,GAAA7gB,EAAAhiB,SAAAm+B,GACAA,EAAA5kC,MACA4kC,KACA7kC,MAAAiE,IACa,EAGb4gC,GAAA7kC,OAAA6kC,EAAA7kC,OAAAupC,GAAA/H,cACAv9B,EAAA4gC,EAAA7kC,MAEA4kC,EAAA2E,KACA3E,EAAA2E,IAAmC/D,SAAAX,eAEnCyE,GAAArlC,GAAAslC,GAOAgG,GAAAgB,yBAAA,SAAAtwC,EAAAuwC,GACA5N,EAAA6N,SAAAxwC,EAAAuwC,IAWAjB,GAAAmB,eAAA,SAAAN,EAAAO,GAKA,GAJA,kBAAAP,KACAO,EAAAP,EACAA,EAAAhG,GAEAvG,SACAnL,MAAA0X,GACA,SAAAjV,OAAA,yBAGA6H,IAAA92B,MACA21B,KAAAuO,EACA9Q,KAAAqR,EACAxI,UAAA,KAQAoH,GAAAqB,eAAA,SAAAR,EAAAS,GAKA,GAJA,kBAAAT,KACAS,EAAAT,EACAA,EAAA9F,GAEAzG,SACAnL,MAAA0X,GACA,SAAAjV,OAAA,yBAGA6H,IAAA92B,MACA21B,KAAAuO,EACA9Q,KAAAuR,KAOAtB,GAAAuB,gBAAA,SAAAluC,EAAAmuC,GACAzC,GAAA1rC,GAAAmuC,EAIA,IAAA9J,IAAAD,EAAAC,cAKAsI,IAAAyB,qBAAA,SAAA/lC,EAAA2zB,GACA,GAAAsI,GAAAF,CACA,IAAApI,EAAA,CACA,GAAAmI,GAAAE,GAAArI,EACAsI,GAAAF,EAAAI,SAAAL,EAAAM,KAAAN,EAAAlZ,KAAA,GAEA,MAAAqZ,GAAA57B,OAAAL,IAOAskC,GAAA0B,oBAAA,SAAAhmC,EAAA2zB,GACA,GAAAsI,GAAAC,CACA,IAAAvI,EAAA,CACA,GAAAmI,GAAAE,GAAArI,EACAsI,GAAAC,EAAAC,SAAAL,EAAAM,KAAAN,EAAAlZ,KAAA,GAEA,MAAAqZ,GAAA57B,OAAAL,IAOAskC,GAAA2B,kBAAA,SAAAjmC,EAAA2zB,GACA,GAAAsI,GAAA6C,CACA,IAAAnL,EAAA,CACAA,EAAA,UAAAA,EAAA9G,QAAA,aACA,IAAAiP,GAAAE,GAAArI,EACAsI,GAAAF,EAAAI,SAAAL,EAAAM,KAAAN,EAAAlZ,KAAA,GAEA,MAAAqZ,GAAA57B,OAAAL,IAOAskC,GAAA4B,gBAAA,SAAAlmC,EAAA2zB,GACA,GAAAsI,GAAAI,CACA,IAAA1I,EAAA,CACAA,EAAA9G,QAAA,aACA,IAAAiP,GAAAE,GAAArI,EACAsI,GAAAI,EAAAF,SAAAL,EAAAM,MAAA,GAEA,MAAAH,GAAA57B,OAAAL,IAmBAskC,GAAA6B,iBAAA,SAAAC,GACA3oB,EAAA2V,aAAAgT,GAGA9B,GAAAqB,eAAAvG,EAAAhrC,EAAA,MACAkwC,GAAAU,qBAAA5wC,EAAA,MACAkwC,GAAAuB,gBAAA,UAAAzxC,EAAA,MAGAkwC,GAAAe,gBACArwC,KAAA,YACAD,MAAA,YACAkV,OAAA,aACKwT,EAAA0Y,MACLmO,GAAAe,gBACArwC,KAAA,WACAD,MAAA,WACAkV,OAAA,YACKwT,EAAA0Y,MAOLmO,GAAA+B,KAAAjyC,EAAA,KACAkwC,GAAAgC,MAAAlyC,EAAA,KAEAkwC,GAAAvF,QAAA3qC,EAAA,KACAkwC,GAAAiC,OAAAnyC,EAAA,KACAkwC,GAAAkC,OAAApyC,EAAA,KACAkwC,GAAA9Z,OAAAp2B,EAAA,KACAkwC,GAAA7Z,OAAAr2B,EAAA,KACAkwC,GAAAmC,MAAAryC,EAAA,KAEAkwC,GAAA9tC,QACAkB,GACA,6DACA,4DACA,6BAEA,SAAAC,GACA2sC,GAAA9tC,KAAAmB,GAAA8lB,EAAA9lB,KAKA2sC,GAAAoC,UACAC,WACAC,OAAA3H,EACA4H,UAAA3H,GAEA4H,QACAC,OAAA5H,EACA6H,OAAA5H,EACA6H,MAAA5H,EACA6H,UAAA5H,EACA6H,MAAA5H,IAIAtrC,EAAAC,QAAAowC,KlDk8O6BntC,KAAKjD,QAASE,EAAoB,OAIzDgzC,IACA,SAASnzC,EAAQC,QAASE,GAEhC,YmDtjSA,SAAAizC,GAAAC,GACA,aAAAA,GAAA,QAAAA,EAGA,QAAAC,GAAAd,GACA,sBAAAA,GAAAzH,EAAAwI,KAAAf,SAMA,QAAAgB,GAAAtxC,GACA,GAAAA,EAAAuxC,gBAAA,CACA,GAAA3hB,GAAA5vB,EAAA2E,MAAAirB,OACAC,EAAA7vB,EAAA2E,MAAAkrB,KAGA7jB,EAAAhM,EAAAwxC,UACAxlC,GAAA6jB,KAAA7jB,EAAA6jB,OACAqhB,EAAArhB,GAAAuhB,EAAAvhB,GAAA,MACA7jB,EAAA4jB,OAAA5jB,EAAA4jB,SACAshB,EAAAthB,GAAAwhB,EAAAxhB,GAAA,KAEA,IAAA6hB,KACA,QAAAjwC,KAAAwK,GACAA,EAAAyF,eAAAjQ,KACAiwC,EAAAjwC,GAAAxB,EAAA2E,MAAAnD,GAIAxB,GAAA0xC,YAAAD,EAEAzxC,EAAAuxC,iBAAA,GAOA,QAAAI,GAAA3xC,GACAA,EAAA4xC,YAIAN,EAAAtxC,GAEAA,EAAAqnC,cACArnC,EAAAiC,MAAAjC,EAAAiC,KAAA8J,SAAA/L,IAAAwxC,aAGAxxC,EAAAoM,SAAApM,EAAAwxC,YACAxxC,EAAAqT,IAAA,GAGArT,EAAA4xC,WAAA,GAMA,QAAAC,GAAA7xC,GACA,GAAAA,EAAA4xC,UAAA,CAIA,GAAAE,GAAA9xC,EAAA0xC,WACA1xC,GAAAqnC,cACArnC,EAAAiC,MAAAjC,EAAAiC,KAAAoK,YAAArM,IAGA8xC,GAAA9xC,EAAAoM,SAAA0lC,GACA9xC,EAAAqT,IAAA,GAGArT,EAAA4xC,WAAA,GAMA,QAAAG,GAAA/xC,GACA,UAAAA,EAAAnB,KACAmB,EAAA6T,SAAA,SAAAc,GACA,UAAAA,EAAA9V,MACA8yC,EAAAh9B,KAGAg9B,EAAA3xC,GAGA,QAAAgyC,GAAAhyC,GACA,UAAAA,EAAAnB,KACAmB,EAAA6T,SAAA,SAAAc,GACA,UAAAA,EAAA9V,MACAgzC,EAAAl9B,KAGAk9B,EAAA7xC,GAMA,QAAAiyC,GAAAjyC,EAAAkyC,GAGAlyC,EAAAwxC,WAAAxxC,EAAAgM,YAAAkmC,MACAlyC,EAAAuxC,iBAAA,EAEAvxC,EAAA4xC,WACAN,EAAAtxC,GAOA,QAAAmyC,GAAAn/B,GACA/R,KAAAmxC,sBAAAp/B,EAAAvT,YAKAwB,KAAAoxC,cAAAN,EAAA9wC,MAMA,QAAAqxC,GAAAt/B,GACA/R,KAAAmxC,sBAAAp/B,EAAAvT,YAKAwB,KAAAoxC,cAAAL,EAAA/wC,MAMA,QAAAsxC,KACAtxC,KAAAoxC,cAAA,EACAN,EAAA9wC,MAMA,QAAAuxC,KACAvxC,KAAAoxC,cAAA,EACAL,EAAA/wC,MAyDA,QAAAwxC,GAAAC,EAAA1yC,EAAAmzB,EAAAwf,EAAA7G,EAAAv7B,GACA,kBAAAu7B,KACAv7B,EAAAu7B,EACAA,EAAA,KAEA,IAAA8G,GAAAD,IAEAA,EAAAE,kBACAF,EAAAE,oBAEAF,EAAAG,WAAA,aAGA,IAAAF,EAAA,CACA,GAAAG,GAAAL,EAAA,YACAM,EAAAL,GACAA,EAAAG,WAAA,oBAAAC,GACAE,EAAAN,GACAA,EAAAG,WAAA,kBAAAC,GACAG,EAAAP,GACAA,EAAAG,WAAA,iBAAAC,EACA,mBAAAG,KACAA,IAAApH,IAEAkH,EAAA,EACAhzC,EAAA2yB,UAAAQ,EAAA6f,EAAAE,GAAA,EAAAD,EAAA1iC,IACAvQ,EAAAozB,KAAAD,GAAA5iB,YAGAvQ,GAAAozB,KAAAD,GACA5iB,OA9aA,GAAA+W,GAAArpB,EAAA,KAEAk1C,EAAAl1C,EAAA,MACAm1C,EAAAtkC,KAAAskC,MACA1qB,EAAAzqB,EAAA,KACA4qC,EAAA5qC,EAAA,KACAo2B,EAAAp2B,EAAA,KACAq2B,EAAAr2B,EAAA,KAEA2qC,IAEAA,GAAAr1B,MAAAtV,EAAA,KAEA2qC,EAAAsC,MAAAjtC,EAAA,KAEA2qC,EAAAhf,KAAA3rB,EAAA,MAEA2qC,EAAAyK,OAAAp1C,EAAA,MAEA2qC,EAAA0K,OAAAr1C,EAAA,MAEA2qC,EAAA2K,KAAAt1C,EAAA,MAEA2qC,EAAA4K,QAAAv1C,EAAA,MAEA2qC,EAAA6K,SAAAx1C,EAAA,MAEA2qC,EAAA8K,KAAAz1C,EAAA,MAEA2qC,EAAA+K,KAAA11C,EAAA,MAEA2qC,EAAAgL,YAAA31C,EAAA,MAEA2qC,EAAAiL,IAAA51C,EAAA,MAEA2qC,EAAAkL,aAAA71C,EAAA,MAEA2qC,EAAAzf,eAAAlrB,EAAA,MAEA2qC,EAAApf,eAAAvrB,EAAA,MAEA2qC,EAAAr/B,aAAAtL,EAAA,KAKA2qC,EAAAmL,YAAA,SAAAlqC,GACA,MAAA6e,GAAAxe,OAAAL,IAMA++B,EAAAoL,WAAA,SAAAhzB,EAAAnX,GACA,MAAAspC,GAAAjb,iBAAAlX,EAAAnX,IAUA++B,EAAAqL,SAAA,SAAAjzB,EAAAnX,EAAAsgB,EAAA+pB,GACA,GAAAvrC,GAAAwqC,EAAAlb,iBAAAjX,EAAAnX,GACAihC,EAAAniC,EAAAT,iBACA,IAAAiiB,EAAA,CACA,GAAAgqB,GAAArJ,EAAAxmC,MAAAwmC,EAAAtmC,MAEA,eAAA0vC,EAAA,CAEA,GACA1vC,GADAF,EAAA6lB,EAAA3lB,OAAA2vC,CAEA7vC,IAAA6lB,EAAA7lB,MACAE,EAAA2lB,EAAA3lB,QAGAF,EAAA6lB,EAAA7lB,MACAE,EAAAF,EAAA6vC,EAEA,IAAAh4B,GAAAgO,EAAAtqB,EAAAsqB,EAAA7lB,MAAA,EACA8X,EAAA+N,EAAArqB,EAAAqqB,EAAA3lB,OAAA,CAEA2lB,GAAAtqB,EAAAsc,EAAA7X,EAAA,EACA6lB,EAAArqB,EAAAsc,EAAA5X,EAAA,EACA2lB,EAAA7lB,QACA6lB,EAAA3lB,SAGAvD,KAAAmzC,WAAAzrC,EAAAwhB,GAEA,MAAAxhB,IAGAigC,EAAAzQ,UAAAgb,EAAAhb,UAOAyQ,EAAAwL,WAAA,SAAAzrC,EAAAwhB,GACA,GAAAxhB,EAAAP,eAAA,CAIA,GAAAisC,GAAA1rC,EAAAT,kBAEAmH,EAAAglC,EAAAC,mBAAAnqB,EAEAxhB,GAAAP,eAAAiH,KAgBAu5B,EAAA2L,qBAAA,SAAAC,GACA,GAAAC,GAAA7L,EAAA6L,iBACA1rC,EAAAyrC,EAAAzrC,MACA0T,EAAA+3B,EAAA7vC,MAAA8X,SAQA,OANA22B,GAAA,EAAArqC,EAAAqU,MAAAg2B,EAAA,EAAArqC,EAAAuU,MACAvU,EAAAqU,GAAArU,EAAAuU,GAAAm3B,EAAA1rC,EAAAqU,GAAAX,GAAA,IAEA22B,EAAA,EAAArqC,EAAAsU,MAAA+1B,EAAA,EAAArqC,EAAAwU,MACAxU,EAAAsU,GAAAtU,EAAAwU,GAAAk3B,EAAA1rC,EAAAsU,GAAAZ,GAAA,IAEA+3B,GAgBA5L,EAAA8L,qBAAA,SAAAF,GACA,GAAAC,GAAA7L,EAAA6L,iBACA1rC,EAAAyrC,EAAAzrC,MACA0T,EAAA+3B,EAAA7vC,MAAA8X,UACAk4B,EAAA5rC,EAAAlJ,EACA+0C,EAAA7rC,EAAAjJ,EACA+0C,EAAA9rC,EAAAzE,MACAwwC,EAAA/rC,EAAAvE,MAWA,OAVAuE,GAAAlJ,EAAA40C,EAAA1rC,EAAAlJ,EAAA4c,GAAA,GACA1T,EAAAjJ,EAAA20C,EAAA1rC,EAAAjJ,EAAA2c,GAAA,GACA1T,EAAAzE,MAAAwK,KAAAoC,IACAujC,EAAAE,EAAAE,EAAAp4B,GAAA,GAAA1T,EAAAlJ,EACA,IAAAg1C,EAAA,KAEA9rC,EAAAvE,OAAAsK,KAAAoC,IACAujC,EAAAG,EAAAE,EAAAr4B,GAAA,GAAA1T,EAAAjJ,EACA,IAAAg1C,EAAA,KAEAN,GAWA5L,EAAA6L,iBAAA,SAAA7vC,EAAA6X,EAAAs4B,GAGA,GAAAC,GAAA5B,EAAA,EAAAxuC,EACA,QAAAowC,EAAA5B,EAAA32B,IAAA,MACAu4B,EAAA,GACAA,GAAAD,EAAA,UA6KAnM,EAAAqM,cAAA,SAAAj1C,EAAAgM,EAAAmhC,GACAntC,EAAAoyC,qBAAAjF,KAAA+H,mBAEA,UAAAl1C,EAAAnB,KACAmB,EAAA6T,SAAA,SAAAc,GACA,UAAAA,EAAA9V,MACAozC,EAAAt9B,EAAA3I,KAGAimC,EAAAjyC,EAAAgM,GAGAhM,EAAAyB,GAAA,YAAA0wC,GACA1wC,GAAA,WAAA6wC,GAGAtyC,EAAAyB,GAAA,WAAA8wC,GACA9wC,GAAA,SAAA+wC,IASA5J,EAAAuM,QAAA,SAAAC,EAAAC,EAAA/E,GACA,GAAAgF,GAAAD,EAAAvC,WAAA,sBACAyC,EAAAD,EAAA9oC,QAAA,qBAAA8jC,EACAkF,EAAAH,EAAAlL,SAAA,YACA7iB,GAAApd,OAAAkrC,GACA9mB,aAAA+mB,EAAAvC,WAAA,eACA7oB,SAAAurB,EAAAC,UACApnB,aAAAinB,EACAzmB,SAAA2mB,EAAAE,gBAAAH,KAqDA3M,EAAA+M,YAAA,SAAA31C,EAAAmzB,EAAAwf,EAAA7G,EAAAv7B,GACAkiC,GAAA,EAAAzyC,EAAAmzB,EAAAwf,EAAA7G,EAAAv7B,IAWAq4B,EAAAgN,UAAA,SAAA51C,EAAAmzB,EAAAwf,EAAA7G,EAAAv7B,GACAkiC,GAAA,EAAAzyC,EAAAmzB,EAAAwf,EAAA7G,EAAAv7B,IAUAq4B,EAAAiN,aAAA,SAAAl3C,EAAAm3C,GAGA,IAFA,GAAAC,GAAA1hB,EAAAG,aAEA71B,OAAAm3C,GACAzhB,EAAAU,IAAAghB,EAAAp3C,EAAAm2B,oBAAAihB,GACAp3C,IAAAyB,MAGA,OAAA21C,IAUAnN,EAAAxgC,eAAA,SAAA4tC,EAAA7tC,EAAA6sB,GAIA,MAHAA,KACA7sB,EAAAksB,EAAAW,UAAA7sB,IAEAmsB,EAAAlsB,kBAAA4tC,EAAA7tC,IASAygC,EAAAqN,mBAAA,SAAAC,EAAA/tC,EAAA6sB,GAGA,GAAAmhB,GAAA,IAAAhuC,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,EAAA2G,KAAA8N,IAAA,EAAAzU,EAAA,GAAAA,EAAA,IACAiuC,EAAA,IAAAjuC,EAAA,QAAAA,EAAA,QAAAA,EAAA,GACA,EAAA2G,KAAA8N,IAAA,EAAAzU,EAAA,GAAAA,EAAA,IAEA6tC,GACA,SAAAE,GAAAC,EAAA,UAAAD,EAAAC,EAAA,EACA,QAAAD,GAAAE,EAAA,WAAAF,EAAAE,EAAA,EAKA,OAFAJ,GAAApN,EAAAxgC,eAAA4tC,EAAA7tC,EAAA6sB,GAEAlmB,KAAA8N,IAAAo5B,EAAA,IAAAlnC,KAAA8N,IAAAo5B,EAAA,IACAA,EAAA,oBACAA,EAAA,qBAMApN,EAAAyN,gBAAA,SAAAC,EAAAC,EAAA5D,EAAApiC,GAKA,QAAAimC,GAAAC,GACA,GAAAC,KAMA,OALAD,GAAA5iC,SAAA,SAAA7T,IACAA,EAAAwU,SAAAxU,EAAA22C,OACAD,EAAA12C,EAAA22C,MAAA32C,KAGA02C,EAEA,QAAAE,GAAA52C,GACA,GAAAg7B,IACAp2B,SAAA0vB,EAAA9H,MAAAxsB,EAAA4E,UACAgO,SAAA5S,EAAA4S,SAKA,OAHA5S,GAAA+I,QACAiyB,EAAAjyB,MAAAue,EAAApd,UAA4ClK,EAAA+I,QAE5CiyB,EArBA,GAAAsb,GAAAC,EAAA,CAuBA,GAAAM,GAAAL,EAAAF,EAEAC,GAAA1iC,SAAA,SAAA7T,GACA,IAAAA,EAAAwU,SAAAxU,EAAA22C,KAAA,CACA,GAAAG,GAAAD,EAAA72C,EAAA22C,KACA,IAAAG,EAAA,CACA,GAAAC,GAAAH,EAAA52C,EACAA,GAAAozB,KAAAwjB,EAAAE,IACAlO,EAAA+M,YAAA31C,EAAA+2C,EAAApE,EAAA3yC,EAAA8rC,iBAWAhuC,EAAAC,QAAA6qC,GnD+vSMoO,IACA,SAASl5C,EAAQC,SoDjzTvB,QAAAk5C,GAAA/f,GACA,MAAAA,GAAAR,QAAA,WAAAA,QAAA,WALA,GAAA0Z,MAEA8G,EAAA,IAeA9G,GAAA+G,UAAA,SAAA3vC,EAAA4vC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,GAAAA,EAAA,GACAI,EAAAH,EAAA,GAAAA,EAAA,EAEA,QAAAE,EACA,WAAAC,EACAH,EAAA,IACAA,EAAA,GAAAA,EAAA,KAQA,IAAAC,EACA,GAAAC,EAAA,GACA,GAAA/vC,GAAA4vC,EAAA,GACA,MAAAC,GAAA,EAEA,IAAA7vC,GAAA4vC,EAAA,GACA,MAAAC,GAAA,OAGA,CACA,GAAA7vC,GAAA4vC,EAAA,GACA,MAAAC,GAAA,EAEA,IAAA7vC,GAAA4vC,EAAA,GACA,MAAAC,GAAA,OAIA,CACA,GAAA7vC,IAAA4vC,EAAA,GACA,MAAAC,GAAA,EAEA,IAAA7vC,IAAA4vC,EAAA,GACA,MAAAC,GAAA,GAIA,OAAA7vC,EAAA4vC,EAAA,IAAAG,EAAAC,EAAAH,EAAA,IAWAjH,EAAAriB,aAAA,SAAAhV,EAAA0+B,GACA,OAAA1+B,GACA,aACA,aACAA,EAAA,KACA,MACA,YACA,UACAA,EAAA,IACA,MACA,aACA,aACAA,EAAA,OAGA,sBAAAA,GACAk+B,EAAAl+B,GAAA2+B,MAAA,MACArlC,WAAA0G,GAAA,IAAA0+B,EAGAplC,WAAA0G,GAGA,MAAAA,EAAA4+B,KAAA5+B,GAQAq3B,EAAAgD,MAAA,SAAAvzC,EAAA+3C,GAMA,MALA,OAAAA,IACAA,EAAA,IAGAA,EAAA9oC,KAAAC,IAAAD,KAAAoC,IAAA,EAAA0mC,GAAA,OACA/3C,GAAAg4C,QAAAD,IAGAxH,EAAA0H,IAAA,SAAAhhB,GAIA,MAHAA,GAAAihB,KAAA,SAAA5kC,EAAAC,GACA,MAAAD,GAAAC,IAEA0jB,GAOAsZ,EAAA4H,aAAA,SAAAxwC,GAEA,GADAA,KACA8vB,MAAA9vB,GACA,QAQA,KAFA,GAAAwL,GAAA,EACA6f,EAAA,EACA/jB,KAAAskC,MAAA5rC,EAAAwL,OAAAxL,GACAwL,GAAA,GACA6f,GAEA,OAAAA,IAGAud,EAAA6H,iBAAA,SAAAzwC,GACA,GAAA0vB,GAAA1vB,EAAAs4B,WACAoY,EAAAhhB,EAAA1qB,QAAA,IACA,OAAA0rC,GAAA,EACA,EAEAhhB,EAAAzzB,OAAA,EAAAy0C,GAQA9H,EAAA+H,kBAAA,SAAAC,EAAAC,GACA,GAAA/uC,GAAAwF,KAAAxF,IACAgvC,EAAAxpC,KAAAwpC,KACAC,EAAAzpC,KAAA6e,MAAArkB,EAAA8uC,EAAA,GAAAA,EAAA,IAAAE,GACAE,EAAA1pC,KAAAskC,MAAA9pC,EAAAwF,KAAA8N,IAAAy7B,EAAA,GAAAA,EAAA,KAAAC,EACA,OAAAxpC,MAAAoC,KACAqnC,EAAAC,EACA,IAKApI,EAAAqI,iBAAA,iBAOArI,EAAAsI,UAAA,SAAAC,GACA,GAAAC,GAAA,EAAA9pC,KAAAyL,EACA,QAAAo+B,EAAAC,QAOAxI,EAAAyI,mBAAA,SAAArxC,GACA,MAAAA,IAAA0vC,GAAA1vC,EAAA0vC,GAOA9G,EAAA0I,UAAA,SAAAl1B,GACA,GAAAA,YAAA/V,MACA,MAAA+V,EAEA,oBAAAA,GAAA,CAEA,GAAA6J,GAAA,GAAA5f,MAAA+V,EAKA,OAJA0T,QAAA7J,KAEAA,EAAA,GAAA5f,MAAA,GAAAA,MAAA+V,EAAA8S,QAAA,cAAA7oB,MAAA,gBAEA4f,EAGA,UAAA5f,MAAAiB,KAAAskC,MAAAxvB,KAQAwsB,EAAA2I,SAAA,SAAAvxC,GACA,MAAAsH,MAAA8L,IAAA,GAAA9L,KAAA6e,MAAA7e,KAAAxF,IAAA9B,GAAAsH,KAAAwpC,QAWAlI,EAAA4I,KAAA,SAAAxxC,EAAA4rC,GACA,GAEA6F,GAFAC,EAAA9I,EAAA2I,SAAAvxC,GACAyuB,EAAAzuB,EAAA0xC,CAgBA,OAb0BD,GAD1B7F,EACAnd,EAAA,IAA0B,EAC1BA,EAAA,IAA+B,EAC/BA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EACX,GAGlBA,EAAA,EAAwB,EACxBA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EAC7BA,EAAA,EAA6B,EACX,GAElBgjB,EAAAC,GAyBA9I,EAAA+I,gBAAA,SAAA51C,GA8BA,QAAA61C,GAAAjmC,EAAAC,EAAAimC,GACA,MAAAlmC,GAAAmmC,SAAAD,GAAAjmC,EAAAkmC,SAAAD,IAEAlmC,EAAAmmC,SAAAD,KAAAjmC,EAAAkmC,SAAAD,KAEAlmC,EAAAomC,MAAAF,GAAAjmC,EAAAmmC,MAAAF,WAAA,KACAA,GAAAD,EAAAjmC,EAAAC,EAAA,IAnCA7P,EAAAw0C,KAAA,SAAA5kC,EAAAC,GACA,MAAAgmC,GAAAjmC,EAAAC,EAAA,SAKA,QAFAomC,KAAA/zB,KACAg0B,EAAA,EACAt7C,EAAA,EAAuBA,EAAAoF,EAAAE,QAAiB,CAIxC,OAHA61C,GAAA/1C,EAAApF,GAAAm7C,SACAC,EAAAh2C,EAAApF,GAAAo7C,MAEAF,EAAA,EAA4BA,EAAA,EAAQA,IACpCC,EAAAD,IAAAG,IACAF,EAAAD,GAAAG,EACAD,EAAAF,KAAA,IAAAI,GAEAD,EAAAF,EAAAD,GACAI,EAAAF,EAAAF,EAGAC,GAAA,KAAAA,EAAA,IAAAC,EAAA,GAAAA,EAAA,OACAh2C,EAAAkJ,OAAAtO,EAAA,GAGAA,IAIA,MAAAoF,IAcAzF,EAAAC,QAAAqyC,GpDm0TMsJ,IACA,SAAS57C,EAAQC,QAASE,GqDxmUhC,QAAAyqB,GAAA7e,GACA6f,EAAA1oB,KAAAC,KAAA4I,GAMA5I,KAAA0H,KAAA,GAAAsuB,GAvBA,GAAAvN,GAAAzrB,EAAA,KACAqpB,EAAArpB,EAAA,KACAg5B,EAAAh5B,EAAA,KACA07C,EAAA17C,EAAA,MAEAiH,EAAAjH,EAAA,KACA+I,EAAA9B,EAAA1E,UAAAwG,iBAEA4V,EAAA9N,KAAA8N,GAkBA8L,GAAAloB,WAEAkB,YAAAgnB,EAEA7pB,KAAA,OAEAiqB,aAAA,EAEA8wB,uBAAA,EAEAhqC,MAAA,SAAA3J,EAAAyJ,GACA,GAAA/K,GAAA1D,KAAA0D,MACAgE,EAAA1H,KAAA0H,KACA+hB,EAAA/lB,EAAA+lB,YACAF,EAAA7lB,EAAA6lB,UACAqF,EAAAlrB,EAAAkrB,KACAD,EAAAjrB,EAAAirB,OACAiqB,EAAArvB,KAAAqF,EAAA,WACAiqB,EAAApvB,KAAAkF,EAAA,WACAmqB,EAAAvvB,KAAAqF,EAAA,MACAmqB,EAAAtvB,KAAAkF,EAAA,KAKA,IAHAjrB,EAAA4iB,KAAAthB,EAAAhF,KAAAyO,GACAzO,KAAA2H,aAAA3C,GAEAhF,KAAA8E,QAAA,CACA,GAAAokB,GAAAlpB,KAAAiH,iBAEA2xC,KACA54C,KAAAg5C,cAAAt1C,EAAAmC,YAAAb,EAAA4pB,EAAA1F,IAEA2vB,IACA74C,KAAAi5C,gBAAAv1C,EAAAmC,YAAAb,EAAA2pB,EAAAzF,IAIA0vB,EAEA5zC,EAAAiB,UAAAjG,KAAAg5C,cAEAF,IACA9zC,EAAAiB,UAAAF,EAAAhG,KAAA6uB,EAAA5pB,IAEA6zC,EACA7zC,EAAA8oB,YAAA9tB,KAAAi5C,gBAEAF,IACA/zC,EAAA8oB,YAAA/nB,EAAAhG,KAAA4uB,EAAA3pB,GAGA,IAAAk0C,GAAAx1C,EAAAw1C,SACAC,EAAAz1C,EAAAy1C,eAEAC,IAAAp0C,EAAAq0C,YAGAl0C,EAAAnF,KAAA8nB,gBACApgB,GAAAqgB,SAAA5iB,EAAA,GAAAA,EAAA,IAOAnF,KAAA6nB,aACAqxB,IAAAE,GAAA3vB,GAEA/hB,EAAA1H,KAAA0H,KAAAE,UAAA5C,GAGAk0C,IAAAE,IACA1xC,EAAA2xC,YAAAH,GACAxxC,EAAA4xC,kBAAAH,IAGAn5C,KAAA6H,UAAAH,EAAA1H,KAAA8H,OAAA,GAGA9H,KAAA6nB,aAAA,IAIA7iB,EAAA4C,YACA5H,KAAA0H,KAAAmvB,YAAA7xB,IAGAukB,GAAA7hB,EAAAknB,KAAA5pB,GAEAk0C,GAAAE,IACAp0C,EAAAq0C,YAAAH,GACAl0C,EAAAm0C,kBAGA1vB,GAAA/hB,EAAAinB,OAAA3pB,GAEAk0C,GAAAE,GAGAp0C,EAAAq0C,gBAIAr5C,KAAAgI,iBAAAhD,GAGA,MAAAtB,EAAAklB,MAEA5oB,KAAAktB,aAAAloB,EAAAhF,KAAAiH,oBAMAY,UAAA,SAAA7C,EAAAu0C,EAAAtpB,KAEAhpB,gBAAA,WACA,GAAAiiB,GAAAlpB,KAAA2pB,MACAjmB,EAAA1D,KAAA0D,MACA81C,GAAAtwB,CACA,IAAAswB,EAAA,CACA,GAAA9xC,GAAA1H,KAAA0H,IACA1H,MAAA6nB,cACAngB,EAAAE,YACA5H,KAAA6H,UAAAH,EAAA1H,KAAA8H,OAAA,IAEAohB,EAAAxhB,EAAAT,kBAIA,GAFAjH,KAAA2pB,MAAAT,EAEAxlB,EAAA+lB,YAAA,CAIA,GAAAgwB,GAAAz5C,KAAA05C,kBAAA15C,KAAA05C,gBAAAxwB,EAAAqC,QACA,IAAAvrB,KAAA8E,SAAA00C,EAAA,CACAC,EAAAzyC,KAAAkiB,EAEA,IAAA1L,GAAA9Z,EAAA8X,UAEAm+B,EAAAj2C,EAAAk2C,cAAA55C,KAAA65C,eAAA,CAGAn2C,GAAA6lB,YACA/L,EAAA3P,KAAAoC,IAAAuN,EAAAxd,KAAA24C,wBAAA,IAIAgB,EAAA,QACAF,EAAAp2C,OAAAma,EAAAm8B,EACAF,EAAAl2C,QAAAia,EAAAm8B,EACAF,EAAA76C,GAAA4e,EAAAm8B,EAAA,EACAF,EAAA56C,GAAA2e,EAAAm8B,EAAA,GAKA,MAAAF,GAGA,MAAAvwB,IAGAhqB,QAAA,SAAAN,EAAAC,GACA,GAAAi7C,GAAA95C,KAAAo0B,sBAAAx1B,EAAAC,GACAqqB,EAAAlpB,KAAAiH,kBACAvD,EAAA1D,KAAA0D,KAIA,IAHA9E,EAAAk7C,EAAA,GACAj7C,EAAAi7C,EAAA,GAEA5wB,EAAAhqB,QAAAN,EAAAC,GAAA,CACA,GAAAkhB,GAAA/f,KAAA0H,KAAA8W,IACA,IAAA9a,EAAA+lB,YAAA,CACA,GAAAjO,GAAA9X,EAAA8X,UACAm+B,EAAAj2C,EAAAk2C,cAAA55C,KAAA65C,eAAA,CAEA,IAAAF,EAAA,QAEAj2C,EAAA6lB,YACA/N,EAAA3N,KAAAoC,IAAAuL,EAAAxb,KAAA24C,yBAEAD,EAAAz9B,cACA8E,EAAAvE,EAAAm+B,EAAA/6C,EAAAC,IAEA,SAIA,GAAA6E,EAAA6lB,UACA,MAAAmvB,GAAAx5C,QAAA6gB,EAAAnhB,EAAAC,GAGA,UAMAuV,MAAA,SAAAwT,GACA,MAAAA,IACAA,GAAA,GAGAA,IACA5nB,KAAA6nB,YAAAD,EACA5nB,KAAA2pB,MAAA,MAGA3pB,KAAA8E,SAAA,EAEA9E,KAAAgB,MAAAhB,KAAAgB,KAAAwJ,UAGAxK,KAAA+5C,cACA/5C,KAAA+5C,aAAA3lC,SAQA4lC,aAAA,SAAApjC,GACA,MAAA5W,MAAA2W,QAAA,QAAAC,IAIAqjC,OAAA,SAAA92B,EAAAR,GAEA,UAAAQ,GACAnjB,KAAAk6C,SAAAv3B,GACA3iB,KAAA6nB,aAAA,EACA7nB,KAAA2pB,MAAA,MAGAlB,EAAAlpB,UAAA06C,OAAAl6C,KAAAC,KAAAmjB,EAAAR,IAQAu3B,SAAA,SAAA/2B,EAAAR,GACA,GAAA7a,GAAA9H,KAAA8H,KAEA,IAAAA,EAAA,CACA,GAAAue,EAAAhiB,SAAA8e,GACA,OAAA5iB,KAAA4iB,GACAA,EAAA3S,eAAAjQ,KACAuH,EAAAvH,GAAA4iB,EAAA5iB,QAKAuH,GAAAqb,GAAAR,CAEA3iB,MAAAoU,OAAA,GAEA,MAAApU,OAGA65C,aAAA,WACA,GAAAzrC,GAAApO,KAAAkH,SAKA,OAAAkH,IAAAuN,EAAAvN,EAAA,aAAAuN,EAAAvN,EAAA,YACAP,KAAAkM,KAAA4B,EAAAvN,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,KACA,IAcAqZ,EAAAxe,OAAA,SAAA6yB,GACA,GAAAqe,GAAA,SAAAvxC,GACA6e,EAAA1nB,KAAAC,KAAA4I,GAEAkzB,EAAAp4B,OAEA1D,KAAA0D,MAAA02C,WAAAte,EAAAp4B,OAAA,EAIA,IAAA22C,GAAAve,EAAAh0B,KACA,IAAAuyC,EAAA,CACAr6C,KAAA8H,MAAA9H,KAAA8H,SACA,IAAAwyC,GAAAt6C,KAAA8H,KACA,QAAAvH,KAAA85C,IAEAC,EAAA9pC,eAAAjQ,IACA85C,EAAA7pC,eAAAjQ,KAEA+5C,EAAA/5C,GAAA85C,EAAA95C,IAKAu7B,EAAAxD,MAAAwD,EAAAxD,KAAAv4B,KAAAC,KAAA4I,GAGAyd,GAAAgC,SAAA8xB,EAAA1yB,EAGA,QAAAlnB,KAAAu7B,GAEA,UAAAv7B,GAAA,UAAAA,IACA45C,EAAA56C,UAAAgB,GAAAu7B,EAAAv7B,GAIA,OAAA45C,IAGA9zB,EAAAgC,SAAAZ,EAAAgB,GAEA5rB,EAAAC,QAAA2qB,GrDsoUM8yB,IACA,SAAS19C,EAAQC,SsD5+UvB,GAAA09C,GAAA,mBAAAC,cACAxmC,MACAwmC,aASApnB,GAOAxP,OAAA,SAAAjlB,EAAAC,GACA,GAAA8wB,GAAA,GAAA6qB,GAAA,EASA,OARA,OAAA57C,IACAA,EAAA,GAEA,MAAAC,IACAA,EAAA,GAEA8wB,EAAA,GAAA/wB,EACA+wB,EAAA,GAAA9wB,EACA8wB,GASA3oB,KAAA,SAAA2oB,EAAAxE,GAGA,MAFAwE,GAAA,GAAAxE,EAAA,GACAwE,EAAA,GAAAxE,EAAA,GACAwE,GAQApE,MAAA,SAAAJ,GACA,GAAAwE,GAAA,GAAA6qB,GAAA,EAGA,OAFA7qB,GAAA,GAAAxE,EAAA,GACAwE,EAAA,GAAAxE,EAAA,GACAwE,GAUA+qB,IAAA,SAAA/qB,EAAAzd,EAAAC,GAGA,MAFAwd,GAAA,GAAAzd,EACAyd,EAAA,GAAAxd,EACAwd,GASA/E,IAAA,SAAA+E,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,EAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,GAUAgrB,YAAA,SAAAhrB,EAAAvE,EAAAC,EAAAnZ,GAGA,MAFAyd,GAAA,GAAAvE,EAAA,GAAAC,EAAA,GAAAnZ,EACAyd,EAAA,GAAAvE,EAAA,GAAAC,EAAA,GAAAnZ,EACAyd,GASAnE,IAAA,SAAAmE,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,EAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,GAQAhkB,IAAA,SAAAwf,GACA,MAAAtd,MAAAkM,KAAA/Z,KAAA46C,UAAAzvB,KAQAyvB,UAAA,SAAAzvB,GACA,MAAAA,GAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IASA2I,IAAA,SAAAnE,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,EAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,GASAkrB,IAAA,SAAAlrB,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,EAAA,GAAAvE,EAAA,GAAAC,EAAA,GACAsE,GASAmrB,IAAA,SAAA1vB,EAAAC,GACA,MAAAD,GAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,IASAlmB,MAAA,SAAAwqB,EAAAxE,EAAAhR,GAGA,MAFAwV,GAAA,GAAAxE,EAAA,GAAAhR,EACAwV,EAAA,GAAAxE,EAAA,GAAAhR,EACAwV,GAQAI,UAAA,SAAAJ,EAAAxE,GACA,GAAAzP,GAAA2X,EAAA1nB,IAAAwf,EASA,OARA,KAAAzP,GACAiU,EAAA,KACAA,EAAA,OAGAA,EAAA,GAAAxE,EAAA,GAAAzP,EACAiU,EAAA,GAAAxE,EAAA,GAAAzP,GAEAiU,GASAjF,SAAA,SAAAU,EAAAC,GACA,MAAAxd,MAAAkM,MACAqR,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KACAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,MAUA0vB,eAAA,SAAA3vB,EAAAC,GACA,OAAAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KACAD,EAAA,GAAAC,EAAA,KAAAD,EAAA,GAAAC,EAAA,KAQA2vB,OAAA,SAAArrB,EAAAxE,GAGA,MAFAwE,GAAA,IAAAxE,EAAA,GACAwE,EAAA,IAAAxE,EAAA,GACAwE,GAUAsrB,KAAA,SAAAtrB,EAAAvE,EAAAC,EAAA3N,GAGA,MAFAiS,GAAA,GAAAvE,EAAA,GAAA1N,GAAA2N,EAAA,GAAAD,EAAA,IACAuE,EAAA,GAAAvE,EAAA,GAAA1N,GAAA2N,EAAA,GAAAD,EAAA,IACAuE,GASAxoB,eAAA,SAAAwoB,EAAAxE,EAAA/c,GACA,GAAAxP,GAAAusB,EAAA,GACAtsB,EAAAssB,EAAA,EAGA,OAFAwE,GAAA,GAAAvhB,EAAA,GAAAxP,EAAAwP,EAAA,GAAAvP,EAAAuP,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GAAAxP,EAAAwP,EAAA,GAAAvP,EAAAuP,EAAA,GACAuhB,GAQA7hB,IAAA,SAAA6hB,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAA9hB,KAAAC,IAAAsd,EAAA,GAAAC,EAAA,IACAsE,EAAA,GAAA9hB,KAAAC,IAAAsd,EAAA,GAAAC,EAAA,IACAsE,GAQA1f,IAAA,SAAA0f,EAAAvE,EAAAC,GAGA,MAFAsE,GAAA,GAAA9hB,KAAAoC,IAAAmb,EAAA,GAAAC,EAAA,IACAsE,EAAA,GAAA9hB,KAAAoC,IAAAmb,EAAA,GAAAC,EAAA,IACAsE,GAIA0D,GAAA7wB,OAAA6wB,EAAA1nB,IACA0nB,EAAA6nB,aAAA7nB,EAAAunB,UACAvnB,EAAAjT,KAAAiT,EAAA3I,SACA2I,EAAA8nB,WAAA9nB,EAAA0nB,eAEAl+C,EAAAC,QAAAu2B,GtDq/UM+nB,IACA,SAASv+C,EAAQC,QAASE,GuD1wVhC,GAAAqpB,GAAArpB,EAAA,KACAq+C,EAAAr+C,EAAA,KACA0rB,EAAA1rB,EAAA,KAEAs+C,IAKAA,GAAAC,UAAA,SAAA38C,GACA,MAAAy3B,OAAAz3B,GACA,KAEAA,KAAA,IAAA0qB,MAAA,KACA1qB,EAAA,GAAA62B,QAAA,iCAAiD,QACjD72B,EAAA4D,OAAA,MAAA5D,EAAA,SAQA08C,EAAAE,YAAA,SAAAvlB,EAAAwlB,GASA,MARAxlB,OAAA,IAAAkJ,cAAA1J,QAAA,iBAAAghB,EAAAiF,GACA,MAAAA,GAAA3yC,gBAGA0yC,GAAAxlB,IACAA,IAAAE,OAAA,GAAAptB,cAAAktB,EAAA3iB,MAAA,IAGA2iB,GAWAqlB,EAAAK,kBAAA,SAAAp1C,GACA,GAAAoF,GAAApF,EAAA/D,MACA,2BACA+D,SAEA,IAAAoF,GAEApF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEA,IAAAoF,GAEApF,EAAA,GAAAA,EAAA,GAAAA,EAAA,GAAAA,EAAA,IAEAA,GAGA+0C,EAAAM,WAAA,SAAA9pB,GACA,MAAA+pB,QAAA/pB,GACA2D,QAAA,cACAA,QAAA,aACAA,QAAA,aACAA,QAAA,eACAA,QAAA,cAGA,IAAAqmB,IAAA,6BAEAC,EAAA,SAAAC,EAAAC,GACA,UAAiBD,GAAA,MAAAC,EAAA,GAAAA,GAAA,IASjBX,GAAAY,UAAA,SAAAC,EAAAC,GACA/1B,EAAAqV,QAAA0gB,KACAA,MAEA,IAAAC,GAAAD,EAAA55C,MACA,KAAA65C,EACA,QAIA,QADAC,GAAAF,EAAA,GAAAE,UACAp/C,EAAA,EAAuBA,EAAAo/C,EAAA95C,OAAkBtF,IAAA,CACzC,GAAAq/C,GAAAT,EAAA5+C,EACAi/C,KAAA1mB,QAAAsmB,EAAAQ,GAAAR,EAAAQ,EAAA,IAEA,OAAAN,GAAA,EAA+BA,EAAAI,EAAuBJ,IACtD,OAAA1jC,GAAA,EAA2BA,EAAA+jC,EAAA95C,OAAkB+V,IAC7C4jC,IAAA1mB,QACAsmB,EAAAD,EAAAvjC,GAAA0jC,GACAG,EAAAH,GAAAK,EAAA/jC,IAKA,OAAA4jC,GASA,IAAAK,GAAA,SAAAvmB,GACA,MAAAA,GAAA,OAAAA,IASAqlB,GAAAmB,WAAA,SAAAN,EAAAx5B,GACA,SAAAw5B,GACA,UAAAA,GACA,YAAAA,GACA,cAAAA,GACA,SAAAA,IAEAA,EAAA,cAGA,IAAAO,GAAArB,EAAAxD,UAAAl1B,GACA9jB,EAAA69C,EAAAC,cACA79B,EAAA49B,EAAAE,WAAA,EACAlhC,EAAAghC,EAAAG,UACAC,EAAAJ,EAAAK,WACA3uC,EAAAsuC,EAAAM,aACA7iC,EAAAuiC,EAAAO,YAeA,OAbAd,KAAA1mB,QAAA,KAAA+mB,EAAA19B,IACAqgB,cACA1J,QAAA,OAAA52B,GACA42B,QAAA,KAAA52B,EAAA,KACA42B,QAAA,KAAA+mB,EAAA9gC,IACA+Z,QAAA,IAAA/Z,GACA+Z,QAAA,KAAA+mB,EAAAM,IACArnB,QAAA,IAAAqnB,GACArnB,QAAA,KAAA+mB,EAAApuC,IACAqnB,QAAA,IAAArnB,GACAqnB,QAAA,KAAA+mB,EAAAriC,IACAsb,QAAA,IAAAtb,IAUAmhC,EAAA4B,aAAA,SAAAjnB,GACA,MAAAA,KAAAE,OAAA,GAAAptB,cAAAktB,EAAAknB,OAAA,GAAAlnB,GAGAqlB,EAAA8B,aAAA10B,EAAA00B,aAEAvgD,EAAAC,QAAAw+C,GvDmxVM+B,IACA,SAASxgD,EAAQC,QAASE,GwD34UhC,QAAAsgD,GAAAvjB,EAAA1I,GACA,MAAA0I,MAAAvpB,eAAA6gB,GAjjBA,GAAAiqB,GAAAt+C,EAAA,KACAugD,EAAAvgD,EAAA,KACAkyC,EAAAlyC,EAAA,KACAqpB,EAAArpB,EAAA,KACAsD,EAAA+lB,EAAA/lB,KACA+D,EAAAgiB,EAAAhiB,SAEAg9B,IAOAA,GAAAmc,iBAAA,SAAA76B,GACA,MAAAA,aAAA1O,OACA0O,EACA,MAAAA,MAEAA,IAqBA0e,EAAAoc,gBAAA,SAAAvR,EAAAwR,GACA,GAAAxR,EAAA,CACA,GAAAyR,GAAAzR,EAAA0R,SAAA1R,EAAA0R,aACAC,EAAA3R,EAAA4R,OAAA5R,EAAA4R,UAGAx9C,GAAAo9C,EAAA,SAAAK,GACA,GAAAx3C,GAAA8f,EAAAiX,SAAAqgB,EAAAI,GAAAF,EAAAE,GACA,OAAAx3C,IACAo3C,EAAAI,GAAAx3C,OAMA86B,EAAA2c,eAAA,sDAQA3c,EAAA4c,iBAAA,SAAAC,GAEA,MAAAA,KAAA,MAAAA,EAAAv7B,MAAAu7B,IAAAv7B,QAQA0e,EAAA8c,iBAAA,SAAAD,GACA,MAAA75C,GAAA65C,MACAA,YAAAjqC,SAUAotB,EAAA+c,gBAAA,SAAAz7B,EAAA07B,GAEA,GAAAC,GAAAD,KAAAzgD,IACA,mBAAA0gD,EACA37B,GAGA,SAAA27B,GAAA18B,SAAAe,IAAA,MAAAA,GAAA,MAAAA,IACAA,GAAA46B,EAAA1F,UAAAl1B,IAMA,MAAAA,GAAA,KAAAA,EACA+zB,KAAA/zB,IAYA0e,EAAAkd,sBAAA,SAAA//B,EAAA0tB,GACA,GAAA3H,GAAA,GAAA2K,EAUA,OATA7oB,GAAAzjB,MAAA2hC,EAAAlD,EAAAmd,iBACAja,EAAAkI,YAAAP,EAAAO,YACAlI,EAAAhkC,KAAA2rC,EAAA3rC,MAAA,GACAgkC,EAAAzC,SAAAoK,EAAApK,SACAyC,EAAAka,QAAAvS,EAAAuS,QAEAla,EAAAkB,QAAA,WACA,MAAAjnB,IAEA+lB,GAIAlD,EAAAmd,iBAOA9R,cAAA,SAAA7B,EAAA8B,GACA,GAAAnuB,GAAAxe,KAAAylC,QAAAkH,GAEAF,EAAAzsC,KAAAysC,YACAiS,EAAA1+C,KAAAO,KAEAo+C,EAAA3+C,KAAA4+C,YAAA/T,EAAA8B,GACAkS,EAAArgC,EAAAsgC,YAAAjU,GACAtqC,EAAAie,EAAAugC,QAAAlU,GAAA,GACAmU,EAAAxgC,EAAAygC,eAAApU,EAEA,QACAvG,cAAAtkC,KAAA8hC,SACAod,iBAAAl/C,KAAAy+C,QACAU,WAAA,WAAAn/C,KAAA8hC,SAAA9hC,KAAAy+C,QAAA,KACAhS,cACAiS,aACAn+C,OACAsqC,UAAAgU,EACArgC,KAAAwgC,EACArS,WACAhqB,MAAAg8B,EACAtP,MAAA7wB,EAAAssB,cAAAD,EAAA,SAGAyR,OAAA,+BAYA8C,kBAAA,SAAAvU,EAAAlE,EAAAgG,EAAA0S,GACA1Y,KAAA,QACA,IAAAnoB,GAAAxe,KAAAylC,QAAAkH,GACA2S,EAAA9gC,EAAA+gC,aAAA1U,GAEAyB,EAAAtsC,KAAA0sC,cAAA7B,EAAA8B,EACA,OAAA0S,GAAA/S,EAAA3pB,gBAAA1O,SACAq4B,EAAA3pB,MAAA2pB,EAAA3pB,MAAA08B,GAGA,IAAAG,GAAAF,EAAAjrC,KAAA,QAAAsyB,EAAA,aAEA,yBAAA6Y,IACAlT,EAAA3F,SACA6Y,EAAAlT,IAEA,gBAAAkT,GACAlE,EAAAY,UAAAsD,EAAAlT,GADA,QAWAsS,YAAA,SAAAtzC,EAAAqhC,GACA,GAAAnuB,GAAAxe,KAAAylC,QAAAkH,GACAuR,EAAA1/B,EAAAygC,eAAA3zC,EACA,UAAA4yC,EACA,OAAA75C,EAAA65C,gBAAAjqC,OACAiqC,IAAAv7B,OAWA88B,cAAAp5B,EAAA0Y,MAYAsC,EAAAqe,gBAAA,SAAAC,EAAAC,GAOAA,UAAAtsC,OAEA,IAAA2nB,GAAA5U,EAAAjD,IAAAu8B,MAAA,SAAA5lB,EAAAkI,GACA,OAAoB4d,MAAA9lB,IAsEpB,OAlEAz5B,GAAAs/C,EAAA,SAAAE,EAAA7d,GACA,GAAA59B,EAAAy7C,GAAA,CAKA,OAAA5iD,GAAA,EAA2BA,EAAA+9B,EAAAz4B,OAAmBtF,IAC9C,IAAA+9B,EAAA/9B,GAAAwrC,QACA,MAAAoX,EAAA98C,IACAi4B,EAAA/9B,GAAA2iD,MAAA78C,KAAA88C,EAAA98C,GAAA,GAIA,MAFAi4B,GAAA/9B,GAAAwrC,OAAAoX,OACAF,EAAA3d,GAAA,KAKA,QAAA/kC,GAAA,EAA2BA,EAAA+9B,EAAAz4B,OAAmBtF,IAAA,CAC9C,GAAA2iD,GAAA5kB,EAAA/9B,GAAA2iD,KACA,MAAA5kB,EAAA/9B,GAAAwrC,QAEA,MAAAmX,EAAA78C,IAAA,MAAA88C,EAAA98C,IACA,MAAA88C,EAAAv/C,MACA8gC,EAAA0e,UAAAD,IACAze,EAAA0e,UAAAF,IACAA,EAAAt/C,OAAAu/C,EAAAv/C,KAAA,IAIA,MAFA06B,GAAA/9B,GAAAwrC,OAAAoX,OACAF,EAAA3d,GAAA,UAOA3hC,EAAAs/C,EAAA,SAAAE,EAAA7d,GACA,GAAA59B,EAAAy7C,GAAA,CAKA,IADA,GAAA5iD,GAAA,EACkBA,EAAA+9B,EAAAz4B,OAAmBtF,IAAA,CACrC,GAAA2iD,GAAA5kB,EAAA/9B,GAAA2iD,KACA,KAAA5kB,EAAA/9B,GAAAwrC,SAKArH,EAAA0e,UAAAF,IAMA,MAAAC,EAAA98C,GACA,CACAi4B,EAAA/9B,GAAAwrC,OAAAoX,CACA,QAIA5iD,GAAA+9B,EAAAz4B,QACAy4B,EAAApxB,MAA6B6+B,OAAAoX,OAI7B7kB,GAYAoG,EAAA2e,cAAA,SAAAC,GAaA,GAAAC,KAEA5/C,GAAA2/C,EAAA,SAAAnd,EAAAb,GACA,GAAAke,GAAArd,EAAA+c,KACAM,KAAAD,EAAAC,EAAAn9C,IAAA8/B,KAGAxiC,EAAA2/C,EAAA,SAAAnd,EAAAb,GACA,GAAAiK,GAAApJ,EAAA4F,MAEAriB,GAAAoX,QACAyO,GAAA,MAAAA,EAAAlpC,KAAAk9C,EAAAhU,EAAAlpC,KAAAk9C,EAAAhU,EAAAlpC,MAAA8/B,EACA,mBAAAoJ,KAAAlpC,KAGAkpC,GAAA,MAAAA,EAAAlpC,KAAAk9C,EAAAhU,EAAAlpC,IAAA8/B,IACAA,EAAAsd,UAAAtd,EAAAsd,cAIA9/C,EAAA2/C,EAAA,SAAAnd,EAAAb,GACA,GAAAke,GAAArd,EAAA+c,MACA3T,EAAApJ,EAAA4F,OACA0X,EAAAtd,EAAAsd,OAEA,IAAA/7C,EAAA6nC,GAAA,CAcA,GANAkU,EAAA7/C,KAAA,MAAA2rC,EAAA3rC,KACA2rC,EAAA3rC,KAAA,GACA4/C,EACAA,EAAA5/C,KACA,MAEA4/C,EACAC,EAAAp9C,GAAAm9C,EAAAn9C,OAEA,UAAAkpC,EAAAlpC,GACAo9C,EAAAp9C,GAAAkpC,EAAAlpC,GAAA,OAEA,CAMA,GAAAq9C,GAAA,CACA,GACAD,GAAAp9C,GAAA,KAAAo9C,EAAA7/C,KAAA,KAAA8/C,UAEAH,EAAAE,EAAAp9C,KAGAk9C,EAAAE,EAAAp9C,IAAA8/B,MASAzB,EAAA0e,UAAA,SAAAD,GACA,MAAAz7C,GAAAy7C,IACAA,EAAA98C,IACA,KAAA88C,EAAA98C,GAAA,IAAAuI,QAAA,aAWA81B,EAAAif,gBAAA,SAAAC,EAAAC,GASA,QAAAC,GAAAC,EAAAt9B,EAAAu9B,GACA,OAAAzjD,GAAA,EAAAyO,EAAA+0C,EAAAl+C,OAAqDtF,EAAAyO,EAASzO,IAK9D,OAJA0jD,GAAAF,EAAAxjD,GAAA0jD,SACAC,EAAAxf,EAAAmc,iBAAAkD,EAAAxjD,GAAA2tC,WACAiW,EAAAH,KAAAC,GAEAlpB,EAAA,EAAAqpB,EAAAF,EAAAr+C,OAA0Dk1B,EAAAqpB,EAAUrpB,IAAA,CACpE,GAAAmT,GAAAgW,EAAAnpB,EAEAopB,MAAAjW,GACAiW,EAAAjW,GAAA,MAGAznB,EAAAw9B,KAAAx9B,EAAAw9B,QAA6D/V,GAAA,GAM7D,QAAAmW,GAAA59B,EAAA69B,GACA,GAAAhmB,KACA,QAAA/9B,KAAAkmB,GACA,GAAAA,EAAA5S,eAAAtT,IAAA,MAAAkmB,EAAAlmB,GACA,GAAA+jD,EACAhmB,EAAApxB,MAAA3M,OAEA,CACA,GAAA2jD,GAAAG,EAAA59B,EAAAlmB,IAAA,EACA2jD,GAAAr+C,QAAAy4B,EAAApxB,MAA2D+2C,SAAA1jD,EAAA2tC,UAAAgW,IAI3D,MAAA5lB,GAxCA,GAAAimB,MACAC,IAKA,OAHAV,GAAAF,MAAAW,GACAT,EAAAD,MAAAW,EAAAD,IAEAF,EAAAE,GAAAF,EAAAG,KA4CA9f,EAAA+f,eAAA,SAAA5iC,EAAAojB,GACA,aAAAA,EAAA+I,gBACA/I,EAAA+I,gBAEA,MAAA/I,EAAAiJ,UACAxkB,EAAAqV,QAAAkG,EAAAiJ,WACAxkB,EAAAjD,IAAAwe,EAAAiJ,UAAA,SAAAloB,GACA,MAAAnE,GAAAosB,gBAAAjoB,KAEAnE,EAAAosB,gBAAAhJ,EAAAiJ,WAEA,MAAAjJ,EAAArhC,KACA8lB,EAAAqV,QAAAkG,EAAArhC,MACA8lB,EAAAjD,IAAAwe,EAAArhC,KAAA,SAAAoiB,GACA,MAAAnE,GAAA6iC,YAAA1+B,KAEAnE,EAAA6iC,YAAAzf,EAAArhC,MALA,QAyCA8gC,EAAAC,YAAA,SAAAL,EAAAD,EAAAkL,GACA,GAAA7lB,EAAAyK,SAAAkQ,GAAA,CACA,GAAAjH,KACAA,GAAAiH,EAAA,WACAA,EAAAjH,EAGA,GAAA2Q,GAAAwB,KAAAxB,iBACAA,GACA4S,EAAAtc,EAAA0J,EAAA,UACA4S,EAAAtc,EAAA0J,EAAA,OACA4S,EAAAtc,EAAA0J,EAAA,UAEA1J,EAAA0J,EAAA,WAGA,IAAAzP,KA0BA,OAxBA36B,GAAA0gC,EAAA,SAAAre,EAAAQ,GACA,GAAAR,GAAAqe,EAAA7d,EAGA,kBAAAA,GAAA,oBAAAA,EAEA,YADA8X,EAAA9X,GAAAR,EAIA,IAAA2+B,GAAAn+B,EAAAszB,MAAA,8BACA3U,EAAAwf,EAAA,GACAC,EAAAD,EAAA,EAEA,IAAAxf,GAAAyf,EAAA,CAIA,GAAAC,IAA8B1f,WAC9B0f,GAAAD,EAAApiB,eAAAxc,CACA,IAAA0nB,GAAApJ,EAAAwgB,gBAAAD,EACAvmB,GAAA6G,EAAA,UAAAuI,EACApP,EAAA6G,EAAA,SAAAuI,EAAA,MAGApP,GAOAp+B,EAAAC,QAAAukC,GxDo8VMqgB,IACA,SAAS7kD,EAAQC,QAASE,GAEhC,YyD9+WA,SAAAsL,GAAA1J,EAAAC,EAAAwE,EAAAE,GAEAF,EAAA,IACAzE,GAAAyE,EACAA,MAEAE,EAAA,IACA1E,GAAA0E,EACAA,MAMAvD,KAAApB,IAIAoB,KAAAnB,IAIAmB,KAAAqD,QAIArD,KAAAuD,SAnCA,GAAAggB,GAAAvmB,EAAA,KACAo2B,EAAAp2B,EAAA,KAEA46B,EAAArU,EAAApc,eACAsc,EAAA5V,KAAAC,IACA4V,EAAA7V,KAAAoC,GAiCA3H,GAAA/I,WAEAkB,YAAA6H,EAKAq5C,MAAA,SAAAC,GACA,GAAAhjD,GAAA6kB,EAAAm+B,EAAAhjD,EAAAoB,KAAApB,GACAC,EAAA4kB,EAAAm+B,EAAA/iD,EAAAmB,KAAAnB,EAEAmB,MAAAqD,MAAAqgB,EACAk+B,EAAAhjD,EAAAgjD,EAAAv+C,MACArD,KAAApB,EAAAoB,KAAAqD,OACAzE,EACAoB,KAAAuD,OAAAmgB,EACAk+B,EAAA/iD,EAAA+iD,EAAAr+C,OACAvD,KAAAnB,EAAAmB,KAAAuD,QACA1E,EACAmB,KAAApB,IACAoB,KAAAnB,KAOAsI,eAAA,WACA,GAAA06C,MACAC,KACAC,KACAC,IACA,iBAAA5zC,GAIA,GAAAA,EAAA,CAGAyzC,EAAA,GAAAE,EAAA,GAAA/hD,KAAApB,EACAijD,EAAA,GAAAG,EAAA,GAAAhiD,KAAAnB,EACAijD,EAAA,GAAAE,EAAA,GAAAhiD,KAAApB,EAAAoB,KAAAqD,MACAy+C,EAAA,GAAAC,EAAA,GAAA/hD,KAAAnB,EAAAmB,KAAAuD,OAEAq0B,EAAAiqB,IAAAzzC,GACAwpB,EAAAkqB,IAAA1zC,GACAwpB,EAAAmqB,IAAA3zC,GACAwpB,EAAAoqB,IAAA5zC,GAEApO,KAAApB,EAAA6kB,EAAAo+B,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAhiD,KAAAnB,EAAA4kB,EAAAo+B,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACA,IAAAC,GAAAv+B,EAAAm+B,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,IACAE,EAAAx+B,EAAAm+B,EAAA,GAAAC,EAAA,GAAAC,EAAA,GAAAC,EAAA,GACAhiD,MAAAqD,MAAA4+C,EAAAjiD,KAAApB,EACAoB,KAAAuD,OAAA2+C,EAAAliD,KAAAnB,OASAw0C,mBAAA,SAAAlhC,GACA,GAAAD,GAAAlS,KACAk0B,EAAA/hB,EAAA9O,MAAA6O,EAAA7O,MACA8wB,EAAAhiB,EAAA5O,OAAA2O,EAAA3O,OAEA6K,EAAAglB,EAAAvP,QAOA,OAJAuP,GAAA7E,UAAAngB,MAAA8D,EAAAtT,GAAAsT,EAAArT,IACAu0B,EAAAjuB,MAAAiJ,KAAA8lB,EAAAC,IACAf,EAAA7E,UAAAngB,KAAA+D,EAAAvT,EAAAuT,EAAAtT,IAEAuP,GAOA/G,UAAA,SAAA8K,GACA,IAAAA,EACA,QAGAA,aAAA7J,KAEA6J,EAAA7J,EAAAub,OAAA1R,GAGA,IAAAD,GAAAlS,KACAmiD,EAAAjwC,EAAAtT,EACAwjD,EAAAlwC,EAAAtT,EAAAsT,EAAA7O,MACAg/C,EAAAnwC,EAAArT,EACAyjD,EAAApwC,EAAArT,EAAAqT,EAAA3O,OAEAg/C,EAAApwC,EAAAvT,EACA4jD,EAAArwC,EAAAvT,EAAAuT,EAAA9O,MACAo/C,EAAAtwC,EAAAtT,EACA6jD,EAAAvwC,EAAAtT,EAAAsT,EAAA5O,MAEA,SAAA6+C,EAAAG,GAAAC,EAAAL,GAAAG,EAAAG,GAAAC,EAAAL,IAGAnjD,QAAA,SAAAN,EAAAC,GACA,GAAAqqB,GAAAlpB,IACA,OAAApB,IAAAsqB,EAAAtqB,GACAA,GAAAsqB,EAAAtqB,EAAAsqB,EAAA7lB,OACAxE,GAAAqqB,EAAArqB,GACAA,GAAAqqB,EAAArqB,EAAAqqB,EAAA3lB,QAMAgoB,MAAA,WACA,UAAAjjB,GAAAtI,KAAApB,EAAAoB,KAAAnB,EAAAmB,KAAAqD,MAAArD,KAAAuD,SAMAyD,KAAA,SAAA46C,GACA5hD,KAAApB,EAAAgjD,EAAAhjD,EACAoB,KAAAnB,EAAA+iD,EAAA/iD,EACAmB,KAAAqD,MAAAu+C,EAAAv+C,MACArD,KAAAuD,OAAAq+C,EAAAr+C,QAGAo/C,MAAA,WACA,OACA/jD,EAAAoB,KAAApB,EACAC,EAAAmB,KAAAnB,EACAwE,MAAArD,KAAAqD,MACAE,OAAAvD,KAAAuD,UAaA+E,EAAAub,OAAA,SAAAqF,GACA,UAAA5gB,GAAA4gB,EAAAtqB,EAAAsqB,EAAArqB,EAAAqqB,EAAA7lB,MAAA6lB,EAAA3lB,SAGA1G,EAAAC,QAAAwL,GzDmgXMs6C,IACA,SAAS/lD,EAAQC,QAASE,G0D1rXhC,QAAAkyC,GAAAxG,EAAAma,EAAA5hB,GAKAjhC,KAAA6iD,cAMA7iD,KAAAihC,UAMAjhC,KAAA0oC,SA3BA,GAAAriB,GAAArpB,EAAA,KACA8lD,EAAA9lD,EAAA,IAuCAkyC,GAAA3vC,WAEAkB,YAAAyuC,EAMA5W,KAAA,KAKAyqB,YAAA,SAAAra,GACAriB,EAAAxX,MAAA7O,KAAA0oC,UAAA,IAQAr0B,IAAA,SAAA3M,EAAAs7C,GACA,IAAAt7C,EACA,MAAA1H,MAAA0oC,MAGA,iBAAAhhC,KACAA,IAAA4hB,MAAA,KAKA,QAFAyQ,GAAA/5B,KAAA0oC,OACAma,EAAA7iD,KAAA6iD,YACA3lD,EAAA,EAA2BA,EAAAwK,EAAAlF,UAE3BkF,EAAAxK,KAIA68B,KAAA,gBAAAA,KAAAryB,EAAAxK,IAAA,KACA,MAAA68B,IAP4C78B,KAc5C,MAHA,OAAA68B,GAAA8oB,IAAAG,IACAjpB,EAAA8oB,EAAAxuC,IAAA3M,IAEAqyB,GAQA8X,WAAA,SAAA1uB,EAAA6/B,GACA,GAAAta,GAAA1oC,KAAA0oC,OAEAniC,EAAA,MAAAmiC,MAAAvlB,GACA0/B,EAAA7iD,KAAA6iD,WAIA,OAHA,OAAAt8C,GAAAs8C,IAAAG,IACAz8C,EAAAs8C,EAAAhR,WAAA1uB,IAEA5c,GAQA2iC,SAAA,SAAAxhC,EAAAm7C,GACA,GAAA9oB,GAAA/5B,KAAAqU,IAAA3M,GAAA,GACAu7C,EAAAjjD,KAAA6iD,YACAte,EAAA,GAAA2K,GACAnV,EAAA8oB,GAAAI,KAAA/Z,SAAAxhC,GACA1H,KAAAihC,QAEA,OAAAsD,IAMA2e,QAAA,WACA,aAAAljD,KAAA0oC,QAGAsC,YAAA,aAGAzf,MAAA,WACA,GAAAmN,GAAA14B,KAAAS,WACA,WAAAi4B,GAAArS,EAAAkF,MAAAvrB,KAAA0oC,UAGAya,YAAA,SAAAC,GACAN,EAAAK,YAAAnjD,KAAAojD,KAKAN,EAAAO,kBAAAnU,EAEA,IAAAtsC,GAAAyjB,EAAAzjB,KACAA,GAAAssC,EAAAlyC,EAAA,MACA4F,EAAAssC,EAAAlyC,EAAA,MACA4F,EAAAssC,EAAAlyC,EAAA,MACA4F,EAAAssC,EAAAlyC,EAAA,MAEAH,EAAAC,QAAAoyC,G1DgtXMoU,IACA,SAASzmD,EAAQC,S2D/0XvB,QAAAymD,GAAAC,GACA,GAAAC,MACAx+B,KAeAC,EAAAs+B,EAAA/M,MAAA,qBAGAiN,EAAAF,EAAA/M,MAAA,mBAEA+M,EAAA/M,MAAA,6BACAkN,EAAAH,EAAA/M,MAAA,kBAEAtK,EAAA,kBAAAyX,KAAAJ,EAqDA,OA7BAt+B,KACAD,EAAAC,SAAA,EACAD,EAAAoT,QAAAnT,EAAA,IAKAw+B,IACAz+B,EAAAy+B,IAAA,EACAz+B,EAAAoT,QAAAqrB,EAAA,IAGAC,IACA1+B,EAAA0+B,MAAA,EACA1+B,EAAAoT,QAAAsrB,EAAA,IAKAxX,IACAlnB,EAAAknB,QAAA,IAUAlnB,UACAw+B,KACAzqB,MAAA,EAGA9lB,kBAAA/P,SAAAC,cAAA,UAAA6B,WAKA4gB,qBAAA,gBAAA0hB,UAAAtiB,EAAAy+B,KAAAz+B,EAAA0+B,KAEAE,uBAAA,iBAAAtc,UAGAtiB,EAAA0+B,MAAA1+B,EAAAy+B,IAAAz+B,EAAAoT,SAAA,KAnHA,GAAAhmB,KAGAA,GAFA,mBAAAyxC,YAGA7+B,WACAw+B,MACAzqB,MAAA,EAEA9lB,iBAAA,GAIAqwC,EAAAO,UAAAC,WAGAlnD,EAAAC,QAAAuV,G3Dy9XM2xC,IACA,SAASnnD,EAAQC,QAASE,G4D9zXhC,QAAAinD,GAAA3f,GACA,GAAA4f,KAKA,OAJA79B,GAAA/lB,KAAAqkC,EAAAwf,qBAAA7f,GAAA,SAAAO,GACAuf,EAAAn+B,MAAAi+B,EAAArf,EAAAtlC,UAAA4tC,oBAGA9mB,EAAAjD,IAAA8gC,EAAA,SAAAtmD,GACA,MAAAklD,GAAAle,eAAAhnC,GAAAonC,OAnLA,GAAAkK,GAAAlyC,EAAA,KACAqpB,EAAArpB,EAAA,KACAonD,EAAAnwC,MAAA1U,UAAAsK,KACAw6C,EAAArnD,EAAA,KACA8lD,EAAA9lD,EAAA,KACAi2C,EAAAj2C,EAAA,KASA2nC,EAAAuK,EAAAjmC,QAEArL,KAAA,YAMAoF,GAAA,GAKAzC,KAAA,GAMAuhC,SAAA,GAMA2c,QAAA,GAMA6F,eAAA,EAMAC,cAAA,KAMAtjB,QAAA,KAQAujB,mBAMAC,IAAA,KAQAC,WAAA,KAEAC,aAAA,SAAAjc,EAAAma,EAAA5hB,EAAA2jB,GACA1V,EAAAnvC,KAAAC,KAAA0oC,EAAAma,EAAA5hB,EAAA2jB,GAEA5kD,KAAAykD,IAAAJ,EAAAQ,OAAA,mBAIAvsB,KAAA,SAAAoQ,EAAAma,EAAA5hB,EAAA2jB,GACA5kD,KAAA8kD,qBAAApc,EAAAzH,IAGA6jB,qBAAA,SAAApc,EAAAzH,GACA,GAAAyjB,GAAA1kD,KAAA0kD,WACAK,EAAAL,EACAzR,EAAA+R,gBAAAtc,MAEAuc,EAAAhkB,EAAAikB,UACA7+B,GAAAxX,MAAA65B,EAAAuc,EAAA5wC,IAAArU,KAAA8hC,WACAzb,EAAAxX,MAAA65B,EAAA1oC,KAAAmlD,oBAEAT,GACAzR,EAAAmS,iBAAA1c,EAAAqc,EAAAL,IAIA3B,YAAA,SAAAra,EAAAkc,GACAv+B,EAAAxX,MAAA7O,KAAA0oC,UAAA,EAEA,IAAAgc,GAAA1kD,KAAA0kD,UACAA,IACAzR,EAAAmS,iBAAAplD,KAAA0oC,SAAAgc,IAKAW,cAAA,SAAAC,EAAAC,KAEAJ,iBAAA,WACA,IAAAnlD,KAAAwQ,eAAA,oBAGA,IAFA,GAAAg1C,MACAC,EAAAzlD,KAAAS,YACAglD,GAAA,CACA,GAAAvZ,GAAAuZ,EAAAlmD,UAAAglD,aACArY,IAAAsZ,EAAA37C,KAAAqiC,GACAuZ,IAAAlpB,WAIA,OADAgoB,MACArnD,EAAAsoD,EAAAhjD,OAAA,EAAgDtF,GAAA,EAAQA,IACxDqnD,EAAAl+B,EAAAxX,MAAA01C,EAAAiB,EAAAtoD,IAAA,EAEA8C,MAAA0lD,gBAAAnB,EAEA,MAAAvkD,MAAA0lD,iBAGAC,uBAAA,SAAA7jB,GACA,MAAA9hC,MAAAihC,QAAAwgB;AACA3f,WACAG,MAAAjiC,KAAAqU,IAAAytB,EAAA,YACA9+B,GAAAhD,KAAAqU,IAAAytB,EAAA,aAuBAghB,GAAA8C,sBACAjhB,GAAyBkhB,oBAAA,IAEzBxB,EAAAyB,uBAAAnhB,GAGA0f,EAAA0B,wBAAAphB,EAAAsf,GAaA59B,EAAAzjB,MAAA+hC,EAAA3nC,EAAA,MAEAH,EAAAC,QAAA6nC,G5Dw/XMqhB,IACA,SAASnpD,EAAQC,QAASE,G6DtnYhC,QAAAipD,GAAA12C,EAAAwxB,GACA,GAAA7D,GAAA7W,EAAA/S,MAAA4S,UAAA,EACA,OAAAlmB,MAAAu8B,WAAAh9B,UAAAwhC,GAAA9a,MAAA1W,EAAA2tB,GAGA,QAAAgpB,GAAA32C,EAAAwxB,EAAA7D,GACA,MAAAl9B,MAAAu8B,WAAAh9B,UAAAwhC,GAAA9a,MAAA1W,EAAA2tB,GAvEA,GAAA7W,GAAArpB,EAAA,KAEAm/B,KAEAgqB,EAAA,IACAC,EAAA,iCAIAxhB,EAAAzI,EAAAyI,eAAA,SAAAN,GACA,GAAA9X,IAAmBwY,KAAA,GAAAxZ,IAAA,GAMnB,OALA8Y,KACAA,IAAAhb,MAAA68B,GACA35B,EAAAwY,KAAAV,EAAA,OACA9X,EAAAhB,IAAA8Y,EAAA,QAEA9X,EAKA2P,GAAAknB,kBAAA,SAAAgD,EAAAC,GAEAD,EAAA1B,aAAA0B,EACAA,EAAAp9C,OAAA,SAAAs9C,GAEA/kB,SACAnb,EAAA/lB,KAAAgmD,EAAA,SAAApnB,GACAqnB,EAAArnB,IACAuC,QAAAC,KACA,WAAAxC,EAAA,2BACAqnB,EAAA3oD,KAAA,OAAA2oD,EAAA3oD,KAAA,UAMA,IAAA2+B,GAAAv8B,KACAwmD,EAAA,WACAD,EAAA5B,aAIA4B,EAAA5B,aAAA1+B,MAAAjmB,KAAAkmB,WAHAqW,EAAAtW,MAAAjmB,KAAAkmB,WAeA,OARAG,GAAApd,OAAAu9C,EAAAjnD,UAAAgnD,GAEAC,EAAAv9C,OAAAjJ,KAAAiJ,OACAu9C,EAAAP,YACAO,EAAAN,aACA7/B,EAAAgC,SAAAm+B,EAAAxmD,MACAwmD,EAAAjqB,aAEAiqB,IAyBArqB,EAAAypB,sBAAA,SAAAa,EAAA7xC,GAiGA,QAAA8xC,GAAApiB,GACA,GAAAqiB,GAAAhnD,EAAA2kC,EAAAU,KAKA,OAJA2hB,MAAAP,KACAO,EAAAhnD,EAAA2kC,EAAAU,SACA2hB,EAAAP,IAAA,GAEAO,EAtGA/xC,OAUA,IAAAjV,KA+FA,IA7FA8mD,EAAAG,cAAA,SAAA/hB,EAAAP,GACA,GAAAA,EAGA,GAFAA,EAAAM,EAAAN,GAEAA,EAAA9Y,KAQA,GAAA8Y,EAAA9Y,MAAA46B,EAAA,CACA,GAAAO,GAAAD,EAAApiB,EACAqiB,GAAAriB,EAAA9Y,KAAAqZ,OATArD,UACA7hC,EAAA2kC,EAAAU,OACAvD,QAAAC,KAAA4C,EAAAU,KAAA,YAGArlC,EAAA2kC,EAAAU,MAAAH,CAOA,OAAAA,IAGA4hB,EAAA1hB,SAAA,SAAA8hB,EAAApI,EAAAqI,GACA,GAAAjiB,GAAAllC,EAAAknD,EAMA,IAJAhiB,KAAAuhB,KACAvhB,EAAA4Z,EAAA5Z,EAAA4Z,GAAA,MAGAqI,IAAAjiB,EACA,SAAA/L,OACA,aAAA+tB,EAAA,KAAApI,GAAA,kCAIA,OAAA5Z,IAGA4hB,EAAAtC,qBAAA,SAAA7f,GACAA,EAAAM,EAAAN,EAEA,IAAArJ,MACAlB,EAAAp6B,EAAA2kC,EAAAU,KAWA,OATAjL,MAAAqsB,GACA//B,EAAA/lB,KAAAy5B,EAAA,SAAAgP,EAAAnrC,GACAA,IAAAwoD,GAAAnrB,EAAApxB,KAAAk/B,KAIA9N,EAAApxB,KAAAkwB,GAGAkB,GAGAwrB,EAAAM,SAAA,SAAAziB,GAGA,MADAA,GAAAM,EAAAN,KACA3kC,EAAA2kC,EAAAU,OAMAyhB,EAAAO,qBAAA,WACA,GAAAC,KAIA,OAHA5gC,GAAA/lB,KAAAX,EAAA,SAAAo6B,EAAAn8B,GACAqpD,EAAAp9C,KAAAjM,KAEAqpD,GAQAR,EAAAS,YAAA,SAAA5iB,GACAA,EAAAM,EAAAN,EACA,IAAAvK,GAAAp6B,EAAA2kC,EAAAU,KACA,OAAAjL,MAAAqsB,IAGAK,EAAA7hB,iBAWAhwB,EAAAixC,mBAAA,CACA,GAAAsB,GAAAV,EAAAx9C,MACAk+C,KACAV,EAAAx9C,OAAA,SAAAs9C,GACA,GAAAC,GAAAW,EAAApnD,KAAAC,KAAAumD,EACA,OAAAE,GAAAG,cAAAJ,EAAAD,EAAA3oD,QAKA,MAAA6oD,IAMAtqB,EAAAgnB,YAAA,SAAAppB,EAAAqpB,KAkBAvmD,EAAAC,QAAAq/B,G7DgsYMirB,IACA,SAASvqD,EAAQC,QAASE,GAEhC,Y8Dh5YA,SAAAqqD,GAAAC,EAAA5nB,EAAAnoB,EAAAgwC,EAAAC,GACA,GAAA5oD,GAAA,EACAC,EAAA,CACA,OAAA0oD,IACAA,EAAA/iC,KAEA,MAAAgjC,IACAA,EAAAhjC,IAEA,IAAAijC,GAAA,CACA/nB,GAAAgoB,UAAA,SAAAh0C,EAAApI,GACA,GAIAq8C,GACAC,EALAjkD,EAAA+P,EAAA/P,SACAulB,EAAAxV,EAAAzM,kBACA4gD,EAAAnoB,EAAAooB,QAAAx8C,EAAA,GACAy8C,EAAAF,KAAA5gD,iBAGA,mBAAAqgD,EAAA,CACA,GAAAU,GAAA9+B,EAAA7lB,OAAA0kD,KAAAnpD,EAAAsqB,EAAAtqB,EAAA,EACA+oD,GAAA/oD,EAAAopD,EAEAL,EAAAJ,GAAA7zC,EAAAu0C,SACArpD,EAAA,EACA+oD,EAAAK,EACAnpD,GAAA4oD,EAAAlwC,EACAkwC,EAAAv+B,EAAA3lB,QAGAkkD,EAAA55C,KAAAoC,IAAAw3C,EAAAv+B,EAAA3lB,YAGA,CACA,GAAA2kD,GAAAh/B,EAAA3lB,QAAAwkD,KAAAlpD,EAAAqqB,EAAArqB,EAAA,EACA+oD,GAAA/oD,EAAAqpD,EAEAN,EAAAJ,GAAA9zC,EAAAu0C,SACArpD,GAAA6oD,EAAAlwC,EACA1Y,EAAA,EACA+oD,EAAAM,EACAT,EAAAv+B,EAAA7lB,OAGAokD,EAAA55C,KAAAoC,IAAAw3C,EAAAv+B,EAAA7lB,OAIAqQ,EAAAu0C,UAIAtkD,EAAA,GAAA/E,EACA+E,EAAA,GAAA9E,EAEA,eAAAyoD,EACA1oD,EAAA+oD,EAAApwC,EACA1Y,EAAA+oD,EAAArwC,KApEA,GAAA8O,GAAArpB,EAAA,KACAsL,EAAAtL,EAAA,KACAq+C,EAAAr+C,EAAA,KACAs+C,EAAAt+C,EAAA,KACA8vB,EAAAuuB,EAAAvuB,aACAxsB,EAAA+lB,EAAA/lB,KAEA2yC,KAEAkV,EAAAlV,EAAAkV,iBACA,+CAsEAlV,GAAAmV,IAAAf,EASApU,EAAAoV,KAAAhiC,EAAA+W,MAAAiqB,EAAA,YASApU,EAAAqV,KAAAjiC,EAAA+W,MAAAiqB,EAAA,cAiBApU,EAAAsV,iBAAA,SAAAC,EAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAplD,MACAulD,EAAAH,EAAAllD,OAEA3E,EAAAkuB,EAAA07B,EAAA5pD,EAAA+pD,GACA9pD,EAAAiuB,EAAA07B,EAAA3pD,EAAA+pD,GACAvsC,EAAAyQ,EAAA07B,EAAAnsC,GAAAssC,GACArsC,EAAAwQ,EAAA07B,EAAAlsC,GAAAssC,EASA,QAPAvyB,MAAAz3B,IAAAy3B,MAAAjlB,WAAAo3C,EAAA5pD,SAAA,IACAy3B,MAAAha,IAAAga,MAAAjlB,WAAAo3C,EAAAnsC,UAAAssC,IACAtyB,MAAAx3B,IAAAw3B,MAAAjlB,WAAAo3C,EAAA3pD,SAAA,IACAw3B,MAAA/Z,IAAA+Z,MAAAjlB,WAAAo3C,EAAAlsC,UAAAssC,GAEAF,EAAApN,EAAAK,kBAAA+M,GAAA,IAGArlD,MAAAwK,KAAAoC,IAAAoM,EAAAzd,EAAA8pD,EAAA,GAAAA,EAAA,MACAnlD,OAAAsK,KAAAoC,IAAAqM,EAAAzd,EAAA6pD,EAAA,GAAAA,EAAA,QAoBAzV,EAAA4V,cAAA,SACAL,EAAAC,EAAAC,GAEAA,EAAApN,EAAAK,kBAAA+M,GAAA,EAEA,IAAAC,GAAAF,EAAAplD,MACAulD,EAAAH,EAAAllD,OAEAK,EAAAkpB,EAAA07B,EAAA5kD,KAAA+kD,GACA9kD,EAAAipB,EAAA07B,EAAA3kD,IAAA+kD,GACA3kC,EAAA6I,EAAA07B,EAAAvkC,MAAA0kC,GACAzkC,EAAA4I,EAAA07B,EAAAtkC,OAAA0kC,GACAvlD,EAAAypB,EAAA07B,EAAAnlD,MAAAslD,GACAplD,EAAAupB,EAAA07B,EAAAjlD,OAAAqlD,GAEAE,EAAAJ,EAAA,GAAAA,EAAA,GACAK,EAAAL,EAAA,GAAAA,EAAA,GACAxV,EAAAsV,EAAAtV,MA0CA,QAvCA7c,MAAAhzB,KACAA,EAAAslD,EAAA1kC,EAAA8kC,EAAAnlD,GAEAyyB,MAAA9yB,KACAA,EAAAqlD,EAAA1kC,EAAA4kC,EAAAjlD,GAOAwyB,MAAAhzB,IAAAgzB,MAAA9yB,KACA2vC,EAAAyV,EAAAC,EACAvlD,EAAA,GAAAslD,EAGAplD,EAAA,GAAAqlD,GAIA,MAAA1V,IAEA7c,MAAAhzB,KACAA,EAAA6vC,EAAA3vC,GAEA8yB,MAAA9yB,KACAA,EAAAF,EAAA6vC,IAKA7c,MAAAzyB,KACAA,EAAA+kD,EAAA1kC,EAAA5gB,EAAA0lD,GAEA1yB,MAAAxyB,KACAA,EAAA+kD,EAAA1kC,EAAA3gB,EAAAulD,GAIAN,EAAA5kD,MAAA4kD,EAAAvkC,OACA,aACArgB,EAAA+kD,EAAA,EAAAtlD,EAAA,EAAAqlD,EAAA,EACA,MACA,aACA9kD,EAAA+kD,EAAAtlD,EAAA0lD,EAGA,OAAAP,EAAA3kD,KAAA2kD,EAAAtkC,QACA,aACA,aACArgB,EAAA+kD,EAAA,EAAArlD,EAAA,EAAAmlD,EAAA,EACA,MACA,cACA7kD,EAAA+kD,EAAArlD,EAAAulD,EAIAllD,KAAA,EACAC,KAAA,EACAwyB,MAAAhzB,KAEAA,EAAAslD,EAAA/kD,GAAAqgB,GAAA,IAEAoS,MAAA9yB,KAEAA,EAAAqlD,EAAA/kD,GAAAqgB,GAAA,GAGA,IAAAgF,GAAA,GAAA5gB,GAAA1E,EAAA8kD,EAAA,GAAA7kD,EAAA6kD,EAAA,GAAArlD,EAAAE,EAEA,OADA2lB,GAAAw/B,SACAx/B,GAwCA+pB,EAAA+V,gBAAA,SAAAjqD,EAAAypD,EAAAC,EAAAC,EAAAxc,GACA,GAAA4Q,IAAA5Q,MAAA+c,IAAA/c,EAAA+c,GAAA,GACA99B,GAAA+gB,MAAA+c,IAAA/c,EAAA+c,GAAA,GACAC,EAAAhd,KAAAgd,cAAA,KAEA,IAAApM,GAAA3xB,EAAA,CAIA,GAAAjC,EACA,YAAAggC,EACAhgC,EAAA,UAAAnqB,EAAAnB,KACA,GAAA0K,GAAA,KAAAkgD,EAAAnlD,OAAA,GAAAmlD,EAAAjlD,QAAA,GACAxE,EAAAkI,sBAIA,IADAiiB,EAAAnqB,EAAAkI,kBACAlI,EAAA40B,qBAAA,CACA,GAAAzsB,GAAAnI,EAAA80B,mBAGA3K,KAAAqC,QACArC,EAAA/hB,eAAAD,GAIAshD,EAAAvV,EAAA4V,cACAxiC,EAAAyV,UACiBz4B,MAAA6lB,EAAA7lB,MAAAE,OAAA2lB,EAAA3lB,QACjBilD,GAEAC,EACAC,EAMA,IAAAS,GAAApqD,EAAA4E,SACA2c,EAAAw8B,EAAA0L,EAAA5pD,EAAAsqB,EAAAtqB,EAAA,EACA2hB,EAAA4K,EAAAq9B,EAAA3pD,EAAAqqB,EAAArqB,EAAA,CAEAE,GAAAozB,KAAA,mBAAA+2B,GAAA5oC,EAAAC,IAAA4oC,EAAA,GAAA7oC,EAAA6oC,EAAA,GAAA5oC,MA2BA0yB,EAAAmS,iBAAA,SAAAgE,EAAAC,EAAAnd,GAUA,QAAAr9B,GAAAy6C,GACA,GAAAC,MACAC,EAAA,EACAC,KACAC,EAAA,EACAC,EAAAzd,EAAA0d,WAAA,GAiBA,IAfAtpD,EAAAgpD,EAAA,SAAA/oD,GACAkpD,EAAAlpD,GAAA6oD,EAAA7oD,KAEAD,EAAAgpD,EAAA,SAAA/oD,GAGAspD,EAAAR,EAAA9oD,KAAAgpD,EAAAhpD,GAAAkpD,EAAAlpD,GAAA8oD,EAAA9oD,IACAupD,EAAAP,EAAAhpD,IAAAipD,IACAM,EAAAL,EAAAlpD,IAAAmpD,MAOAA,IAAAC,GAAAH,EAMA,IAAAA,GAAAG,EACA,MAAAJ,EAKA,QAAArsD,GAAA,EAA+BA,EAAAosD,EAAA9mD,OAAkBtF,IAAA,CACjD,GAAAqD,GAAA+oD,EAAApsD,EACA,KAAA2sD,EAAAN,EAAAhpD,IAAAspD,EAAAT,EAAA7oD,GAAA,CACAgpD,EAAAhpD,GAAA6oD,EAAA7oD,EACA,QAGA,MAAAgpD,GAlBA,MAAAE,GAsBA,QAAAI,GAAA9vB,EAAAx5B,GACA,MAAAw5B,GAAAvpB,eAAAjQ,GAGA,QAAAupD,GAAA/vB,EAAAx5B,GACA,aAAAw5B,EAAAx5B,IAAA,SAAAw5B,EAAAx5B,GAGA,QAAAyG,GAAAsiD,EAAA5rD,EAAAo0B,GACAxxB,EAAAgpD,EAAA,SAAA/oD,GACA7C,EAAA6C,GAAAuxB,EAAAvxB,MAhEA8lB,EAAAhiB,SAAA6nC,UACA,IAAA6d,IAAA,wBACAC,GAAA,yBACAC,EAAAp7C,EAAAk7C,GACAG,EAAAr7C,EAAAm7C,EAEAhjD,GAAA+iD,EAAAX,EAAAa,GACAjjD,EAAAgjD,EAAAZ,EAAAc,IAmEAjX,EAAA+R,gBAAA,SAAAlzB,GACA,MAAAmhB,GAAAkX,oBAAyCr4B,IAQzCmhB,EAAAkX,iBAAA,SAAAzsD,EAAAo0B,GAIA,MAHAA,IAAAp0B,GAAA4C,EAAA6nD,EAAA,SAAA5nD,GACAuxB,EAAAthB,eAAAjQ,KAAA7C,EAAA6C,GAAAuxB,EAAAvxB,MAEA7C,GAGAb,EAAAC,QAAAm2C,G9Du6YMmX,IACA,SAASvtD,EAAQC,QAASE,G+D71ZhC,QAAAqtD,GAAAzhC,EAAAI,GACA,GAAA7F,GAAAyF,EAAA,IAAAI,CACA,IAAAshC,EAAAnnC,GACA,MAAAmnC,GAAAnnC,EAMA,QAHAkG,IAAAT,EAAA,IAAAU,MAAA,MACAjmB,EAAA,EAEAnG,EAAA,EAAAsQ,EAAA6b,EAAA7mB,OAA6CtF,EAAAsQ,EAAOtQ,IAEpDmG,EAAAwK,KAAAoC,IAAAyY,EAAAU,YAAAC,EAAAnsB,GAAA8rB,GAAA3lB,QAUA,OAPAknD,GAAAC,IACAD,EAAA,EACAD,MAEAC,IACAD,EAAAnnC,GAAA9f,EAEAA,EAGA,QAAAonD,GAAA7hC,EAAAI,EAAAF,EAAAD,GACA,GAAA6hC,KAAA9hC,GAAA,QAAAU,MAAA,MAAA9mB,OAEAa,EAAAgnD,EAAAzhC,EAAAI,GAEAG,EAAAkhC,EAAA,IAAArhC,GACAzlB,EAAAmnD,EAAAvhC,EAEAD,EAAA,GAAA5gB,GAAA,IAAAjF,EAAAE,EAIA,QAFA2lB,EAAAC,aAEAN,GACA,aACA,iBACAK,EAAArqB,GAAAsqB,CACA,MACA,cACAD,EAAArqB,GAAAsqB,EAAA,EAOA,OAAAL,GACA,UACA,YACAI,EAAAtqB,GAAAsqB,EAAA7lB,KACA,MACA,cACA6lB,EAAAtqB,GAAAsqB,EAAA7lB,MAAA,EAMA,MAAA6lB,GAGA,QAAAyE,GAAAP,EAAAlE,EAAAiE,EAAAzC,GAEA,GAAA9rB,GAAAsqB,EAAAtqB,EACAC,EAAAqqB,EAAArqB,EAEA0E,EAAA2lB,EAAA3lB,OACAF,EAAA6lB,EAAA7lB,MAEAsnD,EAAAx9B,EAAA5pB,OAEAqnD,EAAArnD,EAAA,EAAAonD,EAAA,EAEA7hC,EAAA,MAEA,QAAAsE,GACA,WACAxuB,GAAA8rB,EACA7rB,GAAA+rD,EACA9hC,EAAA,OACA,MACA,aACAlqB,GAAA8rB,EAAArnB,EACAxE,GAAA+rD,EACA9hC,EAAA,MACA,MACA,WACAlqB,GAAAyE,EAAA,EACAxE,GAAA6rB,EAAAigC,EACA7hC,EAAA,QACA,MACA,cACAlqB,GAAAyE,EAAA,EACAxE,GAAA0E,EAAAmnB,EACA5B,EAAA,QACA,MACA,cACAlqB,GAAAyE,EAAA,EACAxE,GAAA+rD,EACA9hC,EAAA,QACA,MACA,kBACAlqB,GAAA8rB,EACA7rB,GAAA+rD,EACA9hC,EAAA,MACA,MACA,mBACAlqB,GAAAyE,EAAAqnB,EACA7rB,GAAA+rD,EACA9hC,EAAA,OACA,MACA,iBACAlqB,GAAAyE,EAAA,EACAxE,GAAA6rB,EACA5B,EAAA,QACA,MACA,oBACAlqB,GAAAyE,EAAA,EACAxE,GAAA0E,EAAAonD,EAAAjgC,EACA5B,EAAA,QACA,MACA,qBACAlqB,GAAA8rB,EACA7rB,GAAA6rB,EACA5B,EAAA,MACA,MACA,sBACAlqB,GAAAyE,EAAAqnB,EACA7rB,GAAA6rB,EACA5B,EAAA,OACA,MACA,wBACAlqB,GAAA8rB,EACA7rB,GAAA0E,EAAAonD,EAAAjgC,CACA,MACA,yBACA9rB,GAAAyE,EAAAqnB,EACA7rB,GAAA0E,EAAAonD,EAAAjgC,EACA5B,EAAA,QAIA,OACAlqB,IACAC,IACAiqB,YACAD,aAAA,OAmBA,QAAAu0B,GAAAx0B,EAAA+/B,EAAA3/B,EAAA6hC,EAAAj2C,GACA,IAAA+zC,EACA,QAGA/zC,SAEAi2C,EAAAvtB,EAAAutB,EAAA,MAcA,QAbAC,GAAAxtB,EAAA1oB,EAAAk2C,cAAA,GACAC,EAAAztB,EAAA1oB,EAAAm2C,QAAA,GAGAC,EAAAX,EAAA,IAAArhC,GAGAiiC,EAAAZ,EAAA,IAAArhC,GACAkiC,EAAA5tB,EAAA1oB,EAAAs2C,YAAA,IAIAC,EAAAxC,EAAA96C,KAAAoC,IAAA,EAAA04C,EAAA,GACAzrD,EAAA,EAAuBA,EAAA6tD,GAAAI,GAAAF,EAA6C/tD,IACpEiuD,GAAAF,CAGA,IAAAG,GAAAf,EAAAQ,EACAO,GAAAD,IACAN,EAAA,GACAO,EAAA,GAGAD,EAAAxC,EAAAyC,CAIA,QAFA/hC,IAAAT,EAAA,IAAAU,MAAA,MAEApsB,EAAA,EAAAyO,EAAA0d,EAAA7mB,OAA+CtF,EAAAyO,EAASzO,IAAA,CACxD,GAAAmuD,GAAAhiC,EAAAnsB,GACAse,EAAA6uC,EAAAgB,EAAAriC,EAEA,MAAAxN,GAAAmtC,GAAA,CAIA,OAAAjxB,GAAA,GAA4BA,IAAA,CAC5B,GAAAlc,GAAA2vC,GAAAzzB,GAAAozB,EAAA,CACAO,GAAAR,CACA,OAGA,GAAAS,GAAA,IAAA5zB,EACA6zB,EAAAF,EAAAF,EAAAF,EAAAD,GACAxvC,EAAA,EACA3N,KAAA6e,MAAA2+B,EAAA7oD,OAAA2oD,EAAA3vC,GACA,CAEA6vC,KAAAlO,OAAA,EAAAmO,GACA9vC,EAAA6uC,EAAAgB,EAAAriC,GAGA,KAAAqiC,IACAA,EAAAH,GAGA7hC,EAAAnsB,GAAAmuD,GAGA,MAAAhiC,GAAAjhB,KAAA,MAGA,QAAAmjD,GAAA3iC,EAAAuiC,EAAAF,EAAAD,GAGA,OAFA3nD,GAAA,EACAnG,EAAA,EACAyO,EAAAid,EAAApmB,OAAmCtF,EAAAyO,GAAAtI,EAAA8nD,EAAiCjuD,IAAA,CACpE,GAAAsuD,GAAA5iC,EAAA6iC,WAAAvuD,EACAmG,IAAA,GAAAmoD,MAAA,IAAAP,EAAAD,EAEA,MAAA9tD,GA5PA,GAAAotD,MACAC,EAAA,EACAC,EAAA,IAEAprD,EAAApC,EAAA,KACAsL,EAAAtL,EAAA,KACAsgC,EAAAl+B,EAAAk+B,SAyPA5U,GAEAplB,SAAA+mD,EAEApjD,gBAAAwjD,EAEA98B,2BAEAyvB,eAEAh0B,YAAA,SAAAR,EAAAI,GACA,GAAAhkB,GAAA5F,EAAA6F,YAEA,OADAD,GAAA+jB,KAAAC,GAAA,kBACAhkB,EAAAokB,YAAAR,IAIA/rB,GAAAC,QAAA4rB,G/D82ZMgjC,IACA,SAAS7uD,EAAQC,QAASE,GAEhC,YgEzmaA,SAAA2uD,GAAAplD,GACA,MAAAA,IAAAyW,GAAAzW,EAAAyW,EAEA,QAAAmW,GAAA5sB,GACA,MAAAA,GAAAyW,GAAAzW,GAAAyW,EAYA,QAAAa,GAAAoO,EAAAC,EAAAC,EAAAC,EAAA1O,GACA,GAAAkuC,GAAA,EAAAluC,CACA,OAAAkuC,QAAA3/B,EAAA,EAAAvO,EAAAwO,GACAxO,OAAA0O,EAAA,EAAAw/B,EAAAz/B,GAaA,QAAAiD,GAAAnD,EAAAC,EAAAC,EAAAC,EAAA1O,GACA,GAAAkuC,GAAA,EAAAluC,CACA,aACAwO,EAAAD,GAAA2/B,EAAA,GAAAz/B,EAAAD,GAAAxO,GAAAkuC,GACAx/B,EAAAD,GAAAzO,KAeA,QAAAL,GAAA4O,EAAAC,EAAAC,EAAAC,EAAA7lB,EAAAyM,GAEA,GAAAd,GAAAka,EAAA,GAAAF,EAAAC,GAAAF,EACA9Z,EAAA,GAAAga,EAAA,EAAAD,EAAAD,GACAiK,EAAA,GAAAhK,EAAAD,GACAvQ,EAAAuQ,EAAA1lB,EAEA8Y,EAAAlN,IAAA,EAAAD,EAAAgkB,EACA21B,EAAA15C,EAAA+jB,EAAA,EAAAhkB,EAAAwJ,EACAuD,EAAAiX,IAAA,EAAA/jB,EAAAuJ,EAEA6I,EAAA,CAEA,IAAAonC,EAAAtsC,IAAAssC,EAAAE,GACA,GAAAF,EAAAx5C,GACAa,EAAA,SAEA,CACA,GAAA84C,IAAA51B,EAAA/jB,CACA25C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,OAIA,CACA,GAAAC,GAAAF,IAAA,EAAAxsC,EAAAJ,CAEA,IAAA0sC,EAAAI,GAAA,CACA,GAAAC,GAAAH,EAAAxsC,EACAysC,GAAA35C,EAAAD,EAAA85C,EACA3/B,GAAA2/B,EAAA,CACAF,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,GAEAz/B,GAAA,GAAAA,GAAA,IACArZ,EAAAuR,KAAA8H,OAGA,IAAA0/B,EAAA,GACA,GAAAE,GAAAl3B,EAAAg3B,GACAG,EAAA7sC,EAAAlN,EAAA,IAAAD,IAAA25C,EAAAI,GACAE,EAAA9sC,EAAAlN,EAAA,IAAAD,IAAA25C,EAAAI,EAEAC,GADAA,EAAA,GACAE,GAAAF,EAAAG,GAGAD,EAAAF,EAAAG,GAGAF,EADAA,EAAA,GACAC,GAAAD,EAAAE,GAGAD,EAAAD,EAAAE,EAEA,IAAAP,KAAA35C,GAAA+5C,EAAAC,KAAA,EAAAj6C,EACA45C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,OAGA,CACA,GAAAQ,IAAA,EAAAjtC,EAAAlN,EAAA,EAAAD,EAAA25C,IAAA,EAAA92B,EAAA1V,QACAG,EAAA3R,KAAAkpB,KAAAu1B,GAAA,EACAC,EAAAx3B,EAAA1V,GACAzD,EAAA/N,KAAAwL,IAAAmG,GAEAssC,IAAA35C,EAAA,EAAAo6C,EAAA3wC,IAAA,EAAA1J,GACAma,IAAAla,EAAAo6C,GAAA3wC,EAAA4wC,EAAA3+C,KAAA2L,IAAAgG,MAAA,EAAAtN,GACAoa,IAAAna,EAAAo6C,GAAA3wC,EAAA4wC,EAAA3+C,KAAA2L,IAAAgG,MAAA,EAAAtN,EACA45C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,GAEAz/B,GAAA,GAAAA,GAAA,IACArZ,EAAAuR,KAAA8H,GAEAC,GAAA,GAAAA,GAAA,IACAtZ,EAAAuR,KAAA+H,IAIA,MAAA/H,GAaA,QAAAzG,GAAAmO,EAAAC,EAAAC,EAAAC,EAAAlP,GACA,GAAA/K,GAAA,EAAAga,EAAA,GAAAD,EAAA,EAAAD,EACA/Z,EAAA,EAAAga,EAAA,EAAAE,EAAA,EAAAH,EAAA,EAAAE,EACA+J,EAAA,EAAAhK,EAAA,EAAAD,EAEA1H,EAAA,CACA,IAAAonC,EAAAz5C,IACA,GAAAihB,EAAAhhB,GAAA,CACA,GAAA25C,IAAA51B,EAAA/jB,CACA25C,IAAA,GAAAA,GAAA,IACA5uC,EAAAqH,KAAAunC,QAIA,CACA,GAAAC,GAAA55C,IAAA,EAAAD,EAAAgkB,CACA,IAAAy1B,EAAAI,GACA7uC,EAAA,IAAA/K,GAAA,EAAAD,OAEA,IAAA65C,EAAA,GACA,GAAAE,GAAAl3B,EAAAg3B,GACAD,IAAA35C,EAAA85C,IAAA,EAAA/5C,GACAma,IAAAla,EAAA85C,IAAA,EAAA/5C,EACA45C,IAAA,GAAAA,GAAA,IACA5uC,EAAAqH,KAAAunC,GAEAz/B,GAAA,GAAAA,GAAA,IACAnP,EAAAqH,KAAA8H,IAIA,MAAA9H,GAaA,QAAAmL,GAAAzD,EAAAC,EAAAC,EAAAC,EAAA1O,EAAAiS,GACA,GAAA88B,IAAAvgC,EAAAD,GAAAvO,EAAAuO,EACAygC,GAAAvgC,EAAAD,GAAAxO,EAAAwO,EACAygC,GAAAvgC,EAAAD,GAAAzO,EAAAyO,EAEAygC,GAAAF,EAAAD,GAAA/uC,EAAA+uC,EACAI,GAAAF,EAAAD,GAAAhvC,EAAAgvC,EAEAI,GAAAD,EAAAD,GAAAlvC,EAAAkvC,CAEAj9B,GAAA,GAAA1D,EACA0D,EAAA,GAAA88B,EACA98B,EAAA,GAAAi9B,EACAj9B,EAAA,GAAAm9B,EAEAn9B,EAAA,GAAAm9B,EACAn9B,EAAA,GAAAk9B,EACAl9B,EAAA,GAAAg9B,EACAh9B,EAAA,GAAAvD,EAmBA,QAAA3P,GACAR,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA5d,EAAAC,EAAA8wB,GAGA,GAAAjS,GAGA+E,EACAD,EACAkJ,EACAqhC,EALA1U,EAAA,KACA38B,EAAA8I,GAMAwoC,GAAA,GAAApuD,EACAouD,EAAA,GAAAnuD,CAIA,QAAAouD,GAAA,EAAwBA,EAAA,EAAQA,GAAA,IAChCC,EAAA,GAAArvC,EAAA5B,EAAAE,EAAAE,EAAAE,EAAA0wC,GACAC,EAAA,GAAArvC,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAywC,GACAvhC,EAAAyhC,EAAAH,EAAAE,GACAxhC,EAAAhQ,IACAgC,EAAAuvC,EACAvxC,EAAAgQ,EAGAhQ,GAAA8I,GAGA,QAAAtnB,GAAA,EAAuBA,EAAA,MACvBm7C,EAAA+U,GAD+BlwD,IAI/BulB,EAAA/E,EAAA26B,EACA71B,EAAA9E,EAAA26B,EAEA6U,EAAA,GAAArvC,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAkG,GACAyqC,EAAA,GAAArvC,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAiG,GAEAiJ,EAAAyhC,EAAAD,EAAAF,GAEAvqC,GAAA,GAAAiJ,EAAAhQ,GACAgC,EAAA+E,EACA/G,EAAAgQ,IAIA2hC,EAAA,GAAAxvC,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAiG,GACA6qC,EAAA,GAAAxvC,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAgG,GACAuqC,EAAAI,EAAAE,EAAAL,GAEAxqC,GAAA,GAAAuqC,EAAArxC,GACAgC,EAAA8E,EACA9G,EAAAqxC,GAGA1U,GAAA,GAUA,OALA1oB,KACAA,EAAA,GAAA9R,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAmB,GACAiS,EAAA,GAAA9R,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAkB,IAGAqX,EAAArZ,GAWA,QAAAyC,GAAA8N,EAAAC,EAAAC,EAAAzO,GACA,GAAAkuC,GAAA,EAAAluC,CACA,OAAAkuC,MAAA3/B,EAAA,EAAAvO,EAAAwO,GAAAxO,IAAAyO,EAWA,QAAAoD,GAAAtD,EAAAC,EAAAC,EAAAzO,GACA,aAAAA,IAAAwO,EAAAD,GAAAvO,GAAAyO,EAAAD,IAYA,QAAAlO,GAAAiO,EAAAC,EAAAC,EAAA5lB,EAAAyM,GACA,GAAAd,GAAA+Z,EAAA,EAAAC,EAAAC,EACAha,EAAA,GAAA+Z,EAAAD,GACAiK,EAAAjK,EAAA1lB,EAEAge,EAAA,CACA,IAAAonC,EAAAz5C,IACA,GAAAihB,EAAAhhB,GAAA,CACA,GAAA25C,IAAA51B,EAAA/jB,CACA25C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,QAIA,CACA,GAAAC,GAAA55C,IAAA,EAAAD,EAAAgkB,CACA,IAAAy1B,EAAAI,GAAA,CACA,GAAAD,IAAA35C,GAAA,EAAAD,EACA45C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,OAGA,IAAAC,EAAA,GACA,GAAAE,GAAAl3B,EAAAg3B,GACAD,IAAA35C,EAAA85C,IAAA,EAAA/5C,GACAma,IAAAla,EAAA85C,IAAA,EAAA/5C,EACA45C,IAAA,GAAAA,GAAA,IACA94C,EAAAuR,KAAAunC,GAEAz/B,GAAA,GAAAA,GAAA,IACArZ,EAAAuR,KAAA8H,IAIA,MAAA9H,GAWA,QAAAtG,GAAAgO,EAAAC,EAAAC,GACA,GAAAmhC,GAAArhC,EAAAE,EAAA,EAAAD,CACA,YAAAohC,EAEA,IAGArhC,EAAAC,GAAAohC,EAaA,QAAA79B,GAAAxD,EAAAC,EAAAC,EAAAzO,EAAAiS,GACA,GAAA88B,IAAAvgC,EAAAD,GAAAvO,EAAAuO,EACAygC,GAAAvgC,EAAAD,GAAAxO,EAAAwO,EACA0gC,GAAAF,EAAAD,GAAA/uC,EAAA+uC,CAGA98B,GAAA,GAAA1D,EACA0D,EAAA,GAAA88B,EACA98B,EAAA,GAAAi9B,EAGAj9B,EAAA,GAAAi9B,EACAj9B,EAAA,GAAA+8B,EACA/8B,EAAA,GAAAxD,EAiBA,QAAAlM,GACAhE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,EACA1d,EAAAC,EAAA8wB,GAGA,GAAAjS,GACA26B,EAAA,KACA38B,EAAA8I,GAEAwoC,GAAA,GAAApuD,EACAouD,EAAA,GAAAnuD,CAIA,QAAAouD,GAAA,EAAwBA,EAAA,EAAQA,GAAA,KAChCC,EAAA,GAAA/uC,EAAAlC,EAAAE,EAAAE,EAAA4wC,GACAC,EAAA,GAAA/uC,EAAAjC,EAAAE,EAAAE,EAAA2wC,EACA,IAAAvhC,GAAAyhC,EAAAH,EAAAE,EACAxhC,GAAAhQ,IACAgC,EAAAuvC,EACAvxC,EAAAgQ,GAGAhQ,EAAA8I,GAGA,QAAAtnB,GAAA,EAAuBA,EAAA,MACvBm7C,EAAA+U,GAD+BlwD,IAAA,CAI/B,GAAAulB,GAAA/E,EAAA26B,EACA71B,EAAA9E,EAAA26B,CAEA6U,GAAA,GAAA/uC,EAAAlC,EAAAE,EAAAE,EAAAoG,GACAyqC,EAAA,GAAA/uC,EAAAjC,EAAAE,EAAAE,EAAAmG,EAEA,IAAAiJ,GAAAyhC,EAAAD,EAAAF,EAEA,IAAAvqC,GAAA,GAAAiJ,EAAAhQ,EACAgC,EAAA+E,EACA/G,EAAAgQ,MAEA,CAEA2hC,EAAA,GAAAlvC,EAAAlC,EAAAE,EAAAE,EAAAmG,GACA6qC,EAAA,GAAAlvC,EAAAjC,EAAAE,EAAAE,EAAAkG,EACA,IAAAuqC,GAAAI,EAAAE,EAAAL,EACAxqC,IAAA,GAAAuqC,EAAArxC,GACAgC,EAAA8E,EACA9G,EAAAqxC,GAGA1U,GAAA,IAUA,MALA1oB,KACAA,EAAA,GAAAxR,EAAAlC,EAAAE,EAAAE,EAAAqB,GACAiS,EAAA,GAAAxR,EAAAjC,EAAAE,EAAAE,EAAAoB,IAGAqX,EAAArZ,GAvfA,GAAA6H,GAAAvmB,EAAA,KACAuwD,EAAAhqC,EAAAM,OACAspC,EAAA5pC,EAAA43B,WACAiR,EAAAv+C,KAAA8L,IACAob,EAAAlnB,KAAAkM,KAEAiD,EAAA,KACAowC,EAAA,KAEAZ,EAAAz3B,EAAA,GACAs3B,EAAA,IAGAW,EAAAO,IACAL,EAAAK,IACAF,EAAAE,GA2eA1wD,GAAAC,SAEA+gB,UAEAuR,oBAEA/R,cAEAS,eAEA4R,iBAEAjT,oBAEA0B,cAEAoR,wBAEAvR,kBAEAC,oBAEAwR,qBAEAxP,0BhE0oaMutC,IACA,SAAS3wD,EAAQC,SiEpqbvB,GAAA09C,GAAA,mBAAAC,cACAxmC,MACAwmC,aAKArnB,GAKAvP,OAAA,WACA,GAAA8L,GAAA,GAAA6qB,GAAA,EAGA,OAFApnB,GAAAG,SAAA5D,GAEAA,GAMA4D,SAAA,SAAA5D,GAOA,MANAA,GAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,EAAA,KACAA,GAOA3oB,KAAA,SAAA2oB,EAAAvhB,GAOA,MANAuhB,GAAA,GAAAvhB,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GACAuhB,EAAA,GAAAvhB,EAAA,GACAuhB,GAQAmE,IAAA,SAAAnE,EAAA89B,EAAAC,GAIA,GAAAC,GAAAF,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAE,EAAAH,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAG,EAAAJ,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAI,EAAAL,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GACAK,EAAAN,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,GACAO,EAAAP,EAAA,GAAAC,EAAA,GAAAD,EAAA,GAAAC,EAAA,GAAAD,EAAA,EAOA,OANA99B,GAAA,GAAAg+B,EACAh+B,EAAA,GAAAi+B,EACAj+B,EAAA,GAAAk+B,EACAl+B,EAAA,GAAAm+B,EACAn+B,EAAA,GAAAo+B,EACAp+B,EAAA,GAAAq+B,EACAr+B,GAQApB,UAAA,SAAAoB,EAAAzd,EAAAiZ,GAOA,MANAwE,GAAA,GAAAzd,EAAA,GACAyd,EAAA,GAAAzd,EAAA,GACAyd,EAAA,GAAAzd,EAAA,GACAyd,EAAA,GAAAzd,EAAA,GACAyd,EAAA,GAAAzd,EAAA,GAAAiZ,EAAA,GACAwE,EAAA,GAAAzd,EAAA,GAAAiZ,EAAA,GACAwE,GAQAnB,OAAA,SAAAmB,EAAAzd,EAAA+7C,GACA,GAAAC,GAAAh8C,EAAA,GACAi8C,EAAAj8C,EAAA,GACAk8C,EAAAl8C,EAAA,GACAm8C,EAAAn8C,EAAA,GACAo8C,EAAAp8C,EAAA,GACAq8C,EAAAr8C,EAAA,GACAs8C,EAAA3gD,KAAA2L,IAAAy0C,GACAQ,EAAA5gD,KAAAwL,IAAA40C,EAQA,OANAt+B,GAAA,GAAAu+B,EAAAO,EAAAJ,EAAAG,EACA7+B,EAAA,IAAAu+B,EAAAM,EAAAH,EAAAI,EACA9+B,EAAA,GAAAw+B,EAAAM,EAAAH,EAAAE,EACA7+B,EAAA,IAAAw+B,EAAAK,EAAAC,EAAAH,EACA3+B,EAAA,GAAA8+B,EAAAL,EAAAI,EAAAD,EACA5+B,EAAA,GAAA8+B,EAAAF,EAAAC,EAAAJ,EACAz+B,GAQAxqB,MAAA,SAAAwqB,EAAAzd,EAAAiZ,GACA,GAAAujC,GAAAvjC,EAAA,GACAwjC,EAAAxjC,EAAA,EAOA,OANAwE,GAAA,GAAAzd,EAAA,GAAAw8C,EACA/+B,EAAA,GAAAzd,EAAA,GAAAy8C,EACAh/B,EAAA,GAAAzd,EAAA,GAAAw8C,EACA/+B,EAAA,GAAAzd,EAAA,GAAAy8C,EACAh/B,EAAA,GAAAzd,EAAA,GAAAw8C,EACA/+B,EAAA,GAAAzd,EAAA,GAAAy8C,EACAh/B,GAOAoE,OAAA,SAAApE,EAAAzd,GAEA,GAAAg8C,GAAAh8C,EAAA,GACAi8C,EAAAj8C,EAAA,GACAk8C,EAAAl8C,EAAA,GACAm8C,EAAAn8C,EAAA,GACAo8C,EAAAp8C,EAAA,GACAq8C,EAAAr8C,EAAA,GAEA08C,EAAAV,EAAAI,EAAAD,EAAAF,CACA,OAAAS,IAGAA,EAAA,EAAAA,EAEAj/B,EAAA,GAAA2+B,EAAAM,EACAj/B,EAAA,IAAA0+B,EAAAO,EACAj/B,EAAA,IAAAw+B,EAAAS,EACAj/B,EAAA,GAAAu+B,EAAAU,EACAj/B,EAAA,IAAAw+B,EAAAI,EAAAD,EAAAF,GAAAQ,EACAj/B,EAAA,IAAA0+B,EAAAD,EAAAF,EAAAK,GAAAK,EACAj/B,GAVA,MAcA9yB,GAAAC,QAAAs2B,GjE6qbMy7B,IACA,SAAShyD,EAAQC,SkEl0bvB,GAAAgyD,GAAA76C,MAAA1U,UAAA+T,MAOAhU,EAAA,WACAU,KAAA+uD,cAGAzvD,GAAAC,WAEAkB,YAAAnB,EASA+oC,IAAA,SAAA1qC,EAAAsC,EAAAsP,GACA,GAAAy/C,GAAAhvD,KAAA+uD,UAEA,KAAA9uD,IAAAtC,EACA,MAAAqC,KAGAgvD,GAAArxD,KACAqxD,EAAArxD,MAGA,QAAAT,GAAA,EAA2BA,EAAA8xD,EAAArxD,GAAA6E,OAAsBtF,IACjD,GAAA8xD,EAAArxD,GAAAT,GAAA4/C,IAAA78C,EACA,MAAAD,KAUA,OANAgvD,GAAArxD,GAAAkM,MACAizC,EAAA78C,EACAooC,KAAA,EACArjC,IAAAuK,GAAAvP,OAGAA,MASAQ,GAAA,SAAA7C,EAAAsC,EAAAsP,GACA,GAAAy/C,GAAAhvD,KAAA+uD,UAEA,KAAA9uD,IAAAtC,EACA,MAAAqC,KAGAgvD,GAAArxD,KACAqxD,EAAArxD,MAGA,QAAAT,GAAA,EAA2BA,EAAA8xD,EAAArxD,GAAA6E,OAAsBtF,IACjD,GAAA8xD,EAAArxD,GAAAT,GAAA4/C,IAAA78C,EACA,MAAAD,KAUA,OANAgvD,GAAArxD,GAAAkM,MACAizC,EAAA78C,EACAooC,KAAA,EACArjC,IAAAuK,GAAAvP,OAGAA,MAQAivD,SAAA,SAAAtxD,GACA,GAAAqxD,GAAAhvD,KAAA+uD,UACA,OAAAC,GAAArxD,IAAAqxD,EAAArxD,GAAA6E,QAQA4zB,IAAA,SAAAz4B,EAAAsC,GACA,GAAA+uD,GAAAhvD,KAAA+uD,UAEA,KAAApxD,EAEA,MADAqC,MAAA+uD,cACA/uD,IAGA,IAAAC,EAAA,CACA,GAAA+uD,EAAArxD,GAAA,CAEA,OADAuxD,MACAhyD,EAAA,EAAAsQ,EAAAwhD,EAAArxD,GAAA6E,OAAyDtF,EAAAsQ,EAAOtQ,IAChE8xD,EAAArxD,GAAAT,GAAA,GAAA+C,GACAivD,EAAArlD,KAAAmlD,EAAArxD,GAAAT,GAGA8xD,GAAArxD,GAAAuxD,EAGAF,EAAArxD,IAAA,IAAAqxD,EAAArxD,GAAA6E,cACAwsD,GAAArxD,cAIAqxD,GAAArxD,EAGA,OAAAqC,OAQAyB,QAAA,SAAA7D,GACA,GAAAoC,KAAA+uD,WAAAnxD,GAAA,CACA,GAAAs/B,GAAAhX,UACAipC,EAAAjyB,EAAA16B,MAEA2sD,GAAA,IACAjyB,EAAA4xB,EAAA/uD,KAAAm9B,EAAA,GAKA,QAFA8xB,GAAAhvD,KAAA+uD,WAAAnxD,GACA+N,EAAAqjD,EAAAxsD,OACAtF,EAAA,EAA+BA,EAAAyO,GAAS,CAExC,OAAAwjD,GACA,OACAH,EAAA9xD,GAAA,EAAA6C,KAAAivD,EAAA9xD,GAAA,IACA,MACA,QACA8xD,EAAA9xD,GAAA,EAAA6C,KAAAivD,EAAA9xD,GAAA,IAAAggC,EAAA,GACA,MACA,QACA8xB,EAAA9xD,GAAA,EAAA6C,KAAAivD,EAAA9xD,GAAA,IAAAggC,EAAA,GAAAA,EAAA,GACA,MACA,SAEA8xB,EAAA9xD,GAAA,EAAA+oB,MAAA+oC,EAAA9xD,GAAA,IAAAggC,GAIA8xB,EAAA9xD,GAAA,KACA8xD,EAAAxjD,OAAAtO,EAAA,GACAyO,KAGAzO,KAKA,MAAA8C,OAOAovD,mBAAA,SAAAxxD,GACA,GAAAoC,KAAA+uD,WAAAnxD,GAAA,CACA,GAAAs/B,GAAAhX,UACAipC,EAAAjyB,EAAA16B,MAEA2sD,GAAA,IACAjyB,EAAA4xB,EAAA/uD,KAAAm9B,EAAA,EAAAA,EAAA16B,OAAA,GAMA,QAJAwC,GAAAk4B,IAAA16B,OAAA,GAEAwsD,EAAAhvD,KAAA+uD,WAAAnxD,GACA+N,EAAAqjD,EAAAxsD,OACAtF,EAAA,EAA+BA,EAAAyO,GAAS,CAExC,OAAAwjD,GACA,OACAH,EAAA9xD,GAAA,EAAA6C,KAAAiF,EACA,MACA,QACAgqD,EAAA9xD,GAAA,EAAA6C,KAAAiF,EAAAk4B,EAAA,GACA,MACA,QACA8xB,EAAA9xD,GAAA,EAAA6C,KAAAiF,EAAAk4B,EAAA,GAAAA,EAAA,GACA,MACA,SAEA8xB,EAAA9xD,GAAA,EAAA+oB,MAAAjhB,EAAAk4B,GAIA8xB,EAAA9xD,GAAA,KACA8xD,EAAAxjD,OAAAtO,EAAA,GACAyO,KAGAzO,KAKA,MAAA8C,QA4EAnD,EAAAC,QAAAwC,GlEk1bM+vD,IACA,SAASxyD,EAAQC,SmE7icvB,QAAAwyD,GAAApyD,GAEA,MADAA,GAAA2Q,KAAAskC,MAAAj1C,GACAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAAqyD,GAAAryD,GAEA,MADAA,GAAA2Q,KAAAskC,MAAAj1C,GACAA,EAAA,IAAAA,EAAA,QAAAA,EAGA,QAAAsyD,GAAAx6B,GACA,MAAAA,GAAA,IAAAA,EAAA,IAAAA,EAGA,QAAAy6B,GAAAx5B,GACA,MACAq5B,GADAr5B,EAAAzzB,QAAA,MAAAyzB,EAAAE,OAAAF,EAAAzzB,OAAA,GACA4O,WAAA6kB,GAAA,QAEAzvB,SAAAyvB,EAAA,KAGA,QAAAy5B,GAAAz5B,GACA,MACAu5B,GADAv5B,EAAAzzB,QAAA,MAAAyzB,EAAAE,OAAAF,EAAAzzB,OAAA,GACA4O,WAAA6kB,GAAA,IAEA7kB,WAAA6kB,IAGA,QAAA05B,GAAAlC,EAAAC,EAAA5Q,GAQA,MAPAA,GAAA,EACAA,GAAA,EAEAA,EAAA,IACAA,GAAA,GAGA,EAAAA,EAAA,EACA2Q,GAAAC,EAAAD,GAAA3Q,EAAA,EAEA,EAAAA,EAAA,EACA4Q,EAEA,EAAA5Q,EAAA,EACA2Q,GAAAC,EAAAD,IAAA,IAAA3Q,GAAA,EAEA2Q,EAGA,QAAAxS,GAAA/oC,EAAAC,EAAAiI,GACA,MAAAlI,IAAAC,EAAAD,GAAAkI,EAQA,QAAA8wB,GAAA0kB,GACA,GAAAA,EAAA,CAIAA,GAAA,EAEA,IAAA35B,GAAA25B,EAAAn6B,QAAA,SAAA0J,aAGA,IAAAlJ,IAAA45B,GACA,MAAAA,GAAA55B,GAAA3iB,OAIA,UAAA2iB,EAAAE,OAAA,IA4BA,GAAA25B,GAAA75B,EAAA1qB,QAAA,KAAAwkD,EAAA95B,EAAA1qB,QAAA,IACA,IAAAukD,QAAAC,EAAA,IAAA95B,EAAAzzB,OAAA,CACA,GAAAwtD,GAAA/5B,EAAAknB,OAAA,EAAA2S,GACAxjB,EAAArW,EAAAknB,OAAA2S,EAAA,EAAAC,GAAAD,EAAA,IAAAxmC,MAAA,KACA2mC,EAAA,CACA,QAAAD,GACA,WACA,OAAA1jB,EAAA9pC,OACA,MAEAytD,GAAAP,EAAApjB,EAAAl2B,MAEA,WACA,OAAAk2B,EAAA9pC,OACA,MAEA,QACAitD,EAAAnjB,EAAA,IACAmjB,EAAAnjB,EAAA,IACAmjB,EAAAnjB,EAAA,IACA2jB,EAEA,YACA,OAAA3jB,EAAA9pC,OACA,MAGA,OADA8pC,GAAA,GAAAojB,EAAApjB,EAAA,IACA4jB,EAAA5jB,EACA,WACA,OAAAA,EAAA9pC,OACA,MAEA,OAAA0tD,GAAA5jB,EACA,SACA,aA9DA,CACA,OAAArW,EAAAzzB,OAAA,CACA,GAAA2tD,GAAA3pD,SAAAyvB,EAAAknB,OAAA,MACA,MAAAgT,GAAA,GAAAA,GAAA,MACA,MAEA,SACA,KAAAA,IAAA,QAAAA,IAAA,EACA,IAAAA,GAAA,IAAAA,IAAA,EACA,GAAAA,GAAA,GAAAA,IAAA,EACA,GAGA,OAAAl6B,EAAAzzB,OAAA,CACA,GAAA2tD,GAAA3pD,SAAAyvB,EAAAknB,OAAA,MACA,MAAAgT,GAAA,GAAAA,GAAA,UACA,MAEA,SACA,SAAAA,IAAA,IACA,MAAAA,IAAA,EACA,IAAAA,EACA,MAmDA,QAAAD,GAAAE,GACA,GAAAtT,IAAA1rC,WAAAg/C,EAAA,qBAGAj2C,EAAAu1C,EAAAU,EAAA,IACA5iD,EAAAkiD,EAAAU,EAAA,IACA1C,EAAAlgD,GAAA,GAAAA,GAAA2M,EAAA,GAAA3M,EAAA2M,EAAA3M,EAAA2M,EACAszC,EAAA,EAAAjgD,EAAAkgD,EAEA2C,GACAf,EAAA,IAAAK,EAAAlC,EAAAC,EAAA5Q,EAAA,MACAwS,EAAA,IAAAK,EAAAlC,EAAAC,EAAA5Q,IACAwS,EAAA,IAAAK,EAAAlC,EAAAC,EAAA5Q,EAAA,MAOA,OAJA,KAAAsT,EAAA5tD,SACA6tD,EAAA,GAAAD,EAAA,IAGAC,EAOA,QAAAC,GAAAD,GACA,GAAAA,EAAA,CAKA,GASAE,GACAC,EAVA5wC,EAAAywC,EAAA,OACAI,EAAAJ,EAAA,OACAxE,EAAAwE,EAAA,OAEAK,EAAA7iD,KAAAC,IAAA8R,EAAA6wC,EAAA5E,GACA8E,EAAA9iD,KAAAoC,IAAA2P,EAAA6wC,EAAA5E,GACA71C,EAAA26C,EAAAD,EAEA1xC,GAAA2xC,EAAAD,GAAA,CAIA,QAAA16C,EACAu6C,EAAA,EACAC,EAAA,MAEA,CAEAA,EADAxxC,EAAA,GACAhJ,GAAA26C,EAAAD,GAGA16C,GAAA,EAAA26C,EAAAD,EAGA,IAAAE,KAAAD,EAAA/wC,GAAA,EAAA5J,EAAA,GAAAA,EACA66C,IAAAF,EAAAF,GAAA,EAAAz6C,EAAA,GAAAA,EACA86C,IAAAH,EAAA9E,GAAA,EAAA71C,EAAA,GAAAA,CAEA4J,KAAA+wC,EACAJ,EAAAO,EAAAD,EAEAJ,IAAAE,EACAJ,EAAA,IAAAK,EAAAE,EAEAjF,IAAA8E,IACAJ,EAAA,IAAAM,EAAAD,GAGAL,EAAA,IACAA,GAAA,GAGAA,EAAA,IACAA,GAAA,GAIA,GAAAH,IAAA,IAAAG,EAAAC,EAAAxxC,EAMA,OAJA,OAAAqxC,EAAA,IACAD,EAAAvmD,KAAAwmD,EAAA,IAGAD,GASA,QAAAhgB,GAAAf,EAAA0hB,GACA,GAAA9lB,GAAAC,EAAAmE,EACA,IAAApE,EAAA,CACA,OAAA/tC,GAAA,EAA2BA,EAAA,EAAOA,IAClC6zD,EAAA,EACA9lB,EAAA/tC,GAAA+tC,EAAA/tC,IAAA,EAAA6zD,GAAA,EAGA9lB,EAAA/tC,IAAA,IAAA+tC,EAAA/tC,IAAA6zD,EAAA9lB,EAAA/tC,GAAA,CAGA,OAAAiuC,GAAAF,EAAA,IAAAA,EAAAzoC,OAAA,eASA,QAAAwuD,GAAA3hB,EAAA0hB,GACA,GAAA9lB,GAAAC,EAAAmE,EACA,IAAApE,EACA,gBAAAA,EAAA,SAAAA,EAAA,SAAAA,EAAA,IAAApM,SAAA,IAAAvrB,MAAA,GAWA,QAAA29C,GAAAC,EAAAC,EAAAxhC,GACA,GAAAwhC,KAAA3uD,QACA0uD,GAAA,GAAAA,GAAA,EADA,CAKAvhC,MAAA,QACA,IAAAhN,GAAAuuC,GAAAC,EAAA3uD,OAAA,GACA4uD,EAAAvjD,KAAA6e,MAAA/J,GACA0uC,EAAAxjD,KAAAyjD,KAAA3uC,GACA4uC,EAAAJ,EAAAC,GACAI,EAAAL,EAAAE,GACAI,EAAA9uC,EAAAyuC,CAKA,OAJAzhC,GAAA,GAAA2/B,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACA9hC,EAAA,GAAA2/B,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACA9hC,EAAA,GAAA2/B,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACA9hC,EAAA,GAAA2/B,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACA9hC,GAUA,QAAA+hC,GAAAR,EAAAC,EAAAQ,GACA,GAAAR,KAAA3uD,QACA0uD,GAAA,GAAAA,GAAA,EADA,CAMA,GAAAvuC,GAAAuuC,GAAAC,EAAA3uD,OAAA,GACA4uD,EAAAvjD,KAAA6e,MAAA/J,GACA0uC,EAAAxjD,KAAAyjD,KAAA3uC,GACA4uC,EAAArmB,EAAAimB,EAAAC,IACAI,EAAAtmB,EAAAimB,EAAAE,IACAI,EAAA9uC,EAAAyuC,EAEA/hB,EAAAlE,GAEAmkB,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACAnC,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACAnC,EAAArU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,IACAjC,EAAAvU,EAAAsW,EAAA,GAAAC,EAAA,GAAAC,KAEA,OAGA,OAAAE,IAEAtiB,QACA+hB,YACAC,aACA1uC,SAEA0sB,GAWA,QAAAuiB,GAAAviB,EAAAyN,EAAA3iC,EAAA3M,GAGA,GAFA6hC,EAAAnE,EAAAmE,GAQA,MALAA,GAAAihB,EAAAjhB,GACA,MAAAyN,IAAAzN,EAAA,GAAAkgB,EAAAzS,IACA,MAAA3iC,IAAAk1B,EAAA,GAAAqgB,EAAAv1C,IACA,MAAA3M,IAAA6hC,EAAA,GAAAqgB,EAAAliD,IAEA29B,EAAA+kB,EAAA7gB,GAAA,QAUA,QAAAwiB,GAAAxiB,EAAA4gB,GAGA,GAFA5gB,EAAAnE,EAAAmE,GAEAA,GAAA,MAAA4gB,EAEA,MADA5gB,GAAA,GAAAmgB,EAAAS,GACA9kB,EAAAkE,EAAA,QASA,QAAAlE,GAAA2mB,EAAAl0D,GACA,GAAAgyD,GAAAkC,EAAA,OAAAA,EAAA,OAAAA,EAAA,EAIA,OAHA,SAAAl0D,GAAA,SAAAA,GAAA,SAAAA,IACAgyD,GAAA,IAAAkC,EAAA,IAEAl0D,EAAA,IAAAgyD,EAAA,IAzcA,GAAAC,IACAkC,aAAA,SAAAC,WAAA,eACAC,cAAA,eAAAC,MAAA,aACAC,YAAA,eAAAC,OAAA,eACAC,OAAA,eAAAC,QAAA,eACAC,OAAA,SAAAC,gBAAA,eACAC,MAAA,WAAAC,YAAA,cACAC,OAAA,aAAAC,WAAA,eACAC,WAAA,cAAAC,YAAA,aACAC,WAAA,cAAAC,OAAA,cACAC,gBAAA,eAAAC,UAAA,eACAC,SAAA,aAAAC,MAAA,aACAC,UAAA,WAAAC,UAAA,aACAC,eAAA,cAAAC,UAAA,eACAC,WAAA,WAAAC,UAAA,eACAC,WAAA,eAAAC,aAAA,aACAC,gBAAA,aAAAC,YAAA,aACAC,YAAA,cAAAC,SAAA,WACAC,YAAA,eAAAC,cAAA,eACAC,eAAA,aAAAC,eAAA,YACAC,eAAA,YAAAC,eAAA,aACAC,YAAA,aAAAC,UAAA,cACAC,aAAA,aAAAC,SAAA,eACAC,SAAA,eAAAC,YAAA,cACAC,WAAA,aAAAC,aAAA,eACAC,aAAA,aAAAC,SAAA,aACAC,WAAA,eAAAC,YAAA,eACAC,MAAA,aAAAC,WAAA,cACAC,MAAA,eAAAC,OAAA,WACAC,aAAA,cAAAC,MAAA,eACAC,UAAA,eAAAC,SAAA,eACAC,WAAA,aAAAC,QAAA,YACAC,OAAA,eAAAC,OAAA,eACAC,UAAA,eAAAC,eAAA,eACAC,WAAA,aAAAC,cAAA,eACAC,WAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,sBAAA,eACAC,WAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,WAAA,eACAC,aAAA,eAAAC,eAAA,cACAC,cAAA,eAAAC,gBAAA,eACAC,gBAAA,eAAAC,gBAAA,eACAC,aAAA,eAAAC,MAAA,WACAC,WAAA,aAAAC,OAAA,eACAC,SAAA,aAAAC,QAAA,WACAC,kBAAA,eAAAC,YAAA,WACAC,cAAA,cAAAC,cAAA,eACAC,gBAAA,cAAAC,iBAAA,eACAC,mBAAA,aAAAC,iBAAA,cACAC,iBAAA,cAAAC,cAAA,aACAC,WAAA,eAAAC,WAAA,eACAC,UAAA,eAAAC,aAAA,eACAC,MAAA,WAAAC,SAAA,eACAC,OAAA,aAAAC,WAAA,cACAC,QAAA,aAAAC,WAAA,YACAC,QAAA,eAAAC,eAAA,eACAC,WAAA,eAAAC,eAAA,eACAC,eAAA,eAAAC,YAAA,eACAC,WAAA,eAAAC,MAAA,cACAC,MAAA,eAAAC,MAAA,eACAC,YAAA,eAAAC,QAAA,aACAC,KAAA,WAAAC,WAAA,eACAC,WAAA,cAAAC,aAAA,aACAC,QAAA,eAAAC,YAAA,cACAC,UAAA,aAAAC,UAAA,eACAC,QAAA,aAAAC,QAAA,eACAC,SAAA,eAAAC,WAAA,cACAC,WAAA,eAAAC,WAAA,eACAC,MAAA,eAAAC,aAAA,aACAC,WAAA,cAAAC,KAAA,eACAC,MAAA,aAAAC,SAAA,eACAC,QAAA,aAAAC,WAAA,cACAC,QAAA,eAAAC,OAAA,eACAC,OAAA,eAAAC,YAAA,eACAC,QAAA,aAAAC,aAAA,cAkYAr+D,GAAAC,SACAouC,QACAkF,OACA4gB,QACAC,iBACAS,aACAE,YACAC,cACA1mB,cnEyocMgwB,IACA,SAASt+D,EAAQC,QAASE,IoEnmdhC,SAAAorB,GAwmBA,QAAAgzC,GAAAC,GAIA,MAHAh1C,GAAAqV,QAAA2/B,KACAA,OAEAA,EAmIA,QAAAC,GAAAC,EAAAC,GACA,GAAAC,GAAAF,EAAAF,WACA/4D,EAAA,GAAA2sC,GACA5oB,EAAAjD,IAAAq4C,EAAAF,EAAAG,iBAAAH,GACAA,EAAAI,UAGAC,GAAAt5D,EAAAi5D,EAKA,QAHA57D,GAAA2C,EAAAu5D,YACAC,EAAAP,EAAAM,SAEA3+D,EAAA,EAAuBA,EAAAu+D,EAAAj5D,OAA0BtF,IAAA,CACjD,GAAA6+D,GAAAN,EAAAv+D,GACA8+D,EAAAF,EAAAC,EACA11C,GAAA9a,QAAAiwD,EAAAO,IAAA,EACAp8D,EAAAo8D,GAAA,GAAAC,GAAAv7D,YACAq7D,EAAAC,GAAAv5D,QAKA7C,EAAAo8D,GAAAD,EAAAC,GAGA,MAAAz5D,GAlwBA,GAAA25D,GAAA,YACAC,EAAA,mBAAA30B,QAAAnf,EAAAmf,OACA40B,QAAAD,GAAAC,eAAAF,EACAhoD,MAAAioD,EAAAC,aACAC,QAAAF,GAAAE,aAAAH,EACAhoD,MAAAioD,EAAAE,WAEAC,GACAC,QAAAH,EACAI,MAAAH,EAEAI,QAAAvoD,MACAk7B,OAAAl7B,MACA6B,KAAA7B,OAGAi7B,EAAAlyC,EAAA,KACAy/D,EAAAz/D,EAAA,KAEAqpB,EAAArpB,EAAA,KACAqkC,EAAArkC,EAAA,KACAqH,EAAAgiB,EAAAhiB,SAEAq4D,GACA,8DAGAd,EAAA,SAAA1pD,EAAAC,GACAkU,EAAA/lB,KAAAo8D,EAAAn1C,OAAApV,EAAAwqD,sBAAA,SAAAC,GACAzqD,EAAA3B,eAAAosD,KACA1qD,EAAA0qD,GAAAzqD,EAAAyqD,MAIA1qD,EAAAyqD,iBAAAxqD,EAAAwqD,kBAWA1tB,EAAA,SAAAosB,EAAAM,GAEAN,MAAA,QAIA,QAFAwB,MACAC,KACA5/D,EAAA,EAAuBA,EAAAm+D,EAAA74D,OAAuBtF,IAAA,CAC9C,GAAA6/D,GACAC,IACA,iBAAA3B,GAAAn+D,IACA6/D,EAAA1B,EAAAn+D,GACA8/D,GACAz8D,KAAAw8D,EACAE,WAAA,EAGAr/D,KAAA,YAIAo/D,EAAA3B,EAAAn+D,GACA6/D,EAAAC,EAAAz8D,KACAy8D,EAAAp/D,KAAAo/D,EAAAp/D,MAAA,UAEAk/D,EAAAjzD,KAAAkzD,GACAF,EAAAE,GAAAC,EAMAh9D,KAAAq7D,WAAAyB,EAMA98D,KAAAk9D,gBAAAL,EAKA78D,KAAA27D,YAKA37D,KAAA2sC,SAQA3sC,KAAAm9D,WAOAn9D,KAAA67D,YAKA77D,KAAAo9D,aAIAp9D,KAAAq9D,WAMAr9D,KAAAs9D,iBAKAt9D,KAAA2lC,UAAA,KAOA3lC,KAAAu9D,WAOAv9D,KAAAw9D,WAOAx9D,KAAAy9D,gBAOAz9D,KAAA09D,gBAOA19D,KAAA29D,eAMA39D,KAAA49D,SAMA59D,KAAA69D,SAGAC,EAAA7uB,EAAA1vC,SAEAu+D,GAAAlgE,KAAA,OAKAkgE,EAAAC,eAAA,EASAD,EAAAE,aAAA,SAAAjC,GAIA,MAHA1lC,OAAA0lC,KACAA,EAAA/7D,KAAAq7D,WAAAU,OAEAA,GAQA+B,EAAApC,iBAAA,SAAAK,GACA,MAAA11C,GAAAkF,MAAAvrB,KAAAk9D,gBAAAl9D,KAAAg+D,aAAAjC,MASA+B,EAAAG,SAAA,SAAAz/C,EAAA0/C,EAAAC,GAGA,GAFA3/C,QAEAgjB,UACAnb,EAAAqV,QAAAld,GACA,SAAAsa,OAAA,gBAIA94B,MAAA49D,SAAAp/C,CAGA,IAAA7e,GAAAK,KAAA67D,YACAsB,EAAAn9D,KAAAm9D,WAEA9B,EAAAr7D,KAAAq7D,WACA+C,EAAA5/C,EAAAhc,OACA67D,EAAAr+D,KAAAk9D,gBAEAoB,KACAC,IAEAL,QAGA,QAAAhhE,GAAA,EAAuBA,EAAAm+D,EAAA74D,OAAuBtF,IAAA,CAC9C,GAAAmhD,GAAAggB,EAAAhD,EAAAn+D,IACAshE,EAAAnC,EAAAhe,EAAAzgD,KACA+B,GAAA07D,EAAAn+D,IAAA,GAAAshE,GAAAJ,GAGA,GAAA7xD,GAAAvM,IACAm+D,KACA5xD,EAAAwxD,eAAA,GAGAI,KAAA,SAAAjgB,EAAAugB,EAAA5zB,EAAAwU,GACA,GAAA18B,GAAA0e,EAAA4c,iBAAAC,EAKA,OAHA7c,GAAA8c,iBAAAD,KACA3xC,EAAAwxD,eAAA,GAEA18B,EAAA+c,gBACAz7B,YAAA1O,OACA0O,EAAA08B,GAEA18B,EACA07C,EAAAI,IAIA,QAAAnzD,GAAA,EAAyBA,EAAAkT,EAAAhc,OAAmB8I,IAAA,CAU5C,OATA4yC,GAAA1/B,EAAAlT,GASAiN,EAAA,EAA2BA,EAAA8iD,EAAA74D,OAAuB+V,IAAA,CAClD,GAAAwjD,GAAAV,EAAA9iD,GACAmmD,EAAA/+D,EAAAo8D,EAEA2C,GAAApzD,GAAA6yD,EAAAjgB,EAAA6d,EAAAzwD,EAAAiN,GAGA4kD,EAAAtzD,KAAAyB,GAIA,OAAApO,GAAA,EAAuBA,EAAAshB,EAAAhc,OAAiBtF,IAAA,CACxCghE,EAAAhhE,IACAshB,EAAAthB,IAAA,MAAAshB,EAAAthB,GAAAqD,OACA29D,EAAAhhE,GAAAshB,EAAAthB,GAAAqD,KAGA,IAAAA,GAAA29D,EAAAhhE,IAAA,GAEA8F,EAAAwb,EAAAthB,IAAAshB,EAAAthB,GAAA8F,IAEAA,GAAAzC,IAEAg+D,EAAAh+D,GAAAg+D,EAAAh+D,IAAA,EACAyC,EAAAzC,EACAg+D,EAAAh+D,GAAA,IACAyC,GAAA,SAAAu7D,EAAAh+D,IAEAg+D,EAAAh+D,MAEAyC,IAAAs7D,EAAAphE,GAAA8F,GAGAhD,KAAAo9D,UAAAc,EACAl+D,KAAAq9D,QAAAiB,GAMAR,EAAAlsC,MAAA,WACA,MAAA5xB,MAAAm9D,QAAA36D,QAUAs7D,EAAAzpD,IAAA,SAAA0nD,EAAAzwD,EAAAk6B,GACA,GAAA7lC,GAAAK,KAAA67D,SACAhxB,EAAA7qC,KAAAm9D,QAAA7xD,EAGA,UAAAu/B,EACA,MAAA6L,IAGA,IAAA/zB,GAAAhjB,EAAAo8D,IAAAp8D,EAAAo8D,GAAAlxB,EAEA,IAAArF,EAAA,CACA,GAAAw3B,GAAAh9D,KAAAk9D,gBAAAnB,EACA,IAAAiB,KAAAC,UAEA,IADA,GAAAt3B,GAAA3lC,KAAA2lC,UACAA,GAAA,CAEA,GAAAg5B,GAAAh5B,EAAAtxB,IAAA0nD,EAAAzwD,IAEAqX,GAAA,GAAAg8C,EAAA,GACAh8C,GAAA,GAAAg8C,EAAA,KAEAh8C,GAAAg8C,GAEAh5B,eAIA,MAAAhjB,IAUAm7C,EAAAc,UAAA,SAAAvD,EAAA/vD,EAAAk6B,GACA,GAAAjI,KAEAlX,GAAAqV,QAAA2/B,KACA71B,EAAAl6B,EACAA,EAAA+vD,EACAA,EAAAr7D,KAAAq7D,WAGA,QAAAn+D,GAAA,EAAAyO,EAAA0vD,EAAA74D,OAAgDtF,EAAAyO,EAASzO,IACzDqgC,EAAA1zB,KAAA7J,KAAAqU,IAAAgnD,EAAAn+D,GAAAoO,EAAAk6B,GAGA,OAAAjI,IASAugC,EAAAhU,SAAA,SAAAx+C,GAGA,OAFA+vD,GAAAr7D,KAAAq7D,WACAwB,EAAA78D,KAAAk9D,gBACAhgE,EAAA,EAAAyO,EAAA0vD,EAAA74D,OAAgDtF,EAAAyO,EAASzO,IACzD,GAEA,YAAA2/D,EAAAxB,EAAAn+D,IAAAU,MACAy4B,MAAAr2B,KAAAqU,IAAAgnD,EAAAn+D,GAAAoO,IAEA,QAGA,WAQAwyD,EAAAe,cAAA,SAAA9C,EAAAv2B,GACAu2B,EAAA/7D,KAAAg+D,aAAAjC,EACA,IAAA+C,GAAA9+D,KAAA67D,SAAAE,GACA1d,EAAAr+C,KAAA07D,iBAAAK,EACAv2B,GAAA6Y,KAAA4e,WAAAz3B,CACA,IACA7iB,GADAo8C,GAAA/+D,KAAA69D,UAAA79D,KAAA69D,aAA2D9B,IAAAv2B,EAE3D,IAAAu5B,EACA,MAAAA,EAGA,IAAAD,EAAA,CAIA,OAHAhxD,GAAA0W,IACAvU,IAAAuU,KAEAtnB,EAAA,EAAAyO,EAAA3L,KAAA4xB,QAA+C10B,EAAAyO,EAASzO,IACxDylB,EAAA3iB,KAAAqU,IAAA0nD,EAAA7+D,EAAAsoC,GAKA7iB,EAAA7U,MAAA6U,GACAA,EAAA1S,MAAA0S,EAEA,OAAA3iB,MAAA69D,QAAA9B,IAAAv2B,IAAA13B,EAAAmC,GAGA,OAAAuU,aASAs5C,EAAAkB,OAAA,SAAAjD,EAAAv2B,GACA,GAAAs5B,GAAA9+D,KAAA67D,SAAAE,GACApwC,EAAA,CACA,IAAAmzC,EACA,OAAA5hE,GAAA,EAAAyO,EAAA3L,KAAA4xB,QAA+C10B,EAAAyO,EAASzO,IAAA,CACxD,GAAAylB,GAAA3iB,KAAAqU,IAAA0nD,EAAA7+D,EAAAsoC,EACAnP,OAAA1T,KACAgJ,GAAAhJ,GAIA,MAAAgJ,IAUAmyC,EAAAvyD,QAAA,SAAAwwD,EAAAp5C,GACA,GAAAhjB,GAAAK,KAAA67D,SACAiD,EAAAn/D,EAAAo8D,GACAoB,EAAAn9D,KAAAm9D,OAEA,IAAA2B,EACA,OAAA5hE,GAAA,EAAAyO,EAAAwxD,EAAA36D,OAAiDtF,EAAAyO,EAASzO,IAAA,CAC1D,GAAA+hE,GAAA9B,EAAAjgE,EACA,IAAA4hE,EAAAG,KAAAt8C,EACA,MAAAzlB,GAIA,UASA4gE,EAAAzc,YAAA,SAAA9gD,GAIA,OAHA48D,GAAAn9D,KAAAm9D,QACAe,EAAAl+D,KAAAo9D,UAEAlgE,EAAA,EAAAyO,EAAAwxD,EAAA36D,OAA6CtF,EAAAyO,EAASzO,IAAA,CACtD,GAAA+hE,GAAA9B,EAAAjgE,EACA,IAAAghE,EAAAe,KAAA1+D,EACA,MAAArD,GAIA,UASA4gE,EAAAlzB,gBAAA,SAAAq0B,GAEA,GAAA9B,GAAAn9D,KAAAm9D,QAGAte,EAAAse,EAAA8B,EACA,UAAApgB,OAAAogB,EACA,MAAAA,EAKA,KAFA,GAAAr7D,GAAA,EACAqgB,EAAAk5C,EAAA36D,OAAA,EACAoB,GAAAqgB,GAAA,CACA,GAAAi7C,IAAAt7D,EAAAqgB,GAAA,GACA,IAAAk5C,EAAA+B,GAAAD,EACAr7D,EAAAs7D,EAAA,MAEA,MAAA/B,EAAA+B,GAAAD,GAIA,MAAAC,EAHAj7C,GAAAi7C,EAAA,GAMA,UAWApB,EAAAqB,eAAA,SAAApD,EAAAp5C,EAAA6iB,EAAA45B,GACA,GAAAz/D,GAAAK,KAAA67D,SACAiD,EAAAn/D,EAAAo8D,EAEA,OAAAqD,IACAA,EAAA56C,IAGA,IAAA66C,KACA,IAAAP,EAEA,OADAQ,GAAAC,OAAAC,UACAtiE,EAAA,EAAAyO,EAAA3L,KAAA4xB,QAA+C10B,EAAAyO,EAASzO,IAAA,CACxD,GAAAmhB,GAAAsE,EAAA3iB,KAAAqU,IAAA0nD,EAAA7+D,EAAAsoC,GACAplB,EAAAvS,KAAA8N,IAAA0C,EAEAA,IAAA+gD,IACAh/C,EAAAk/C,GAIAl/C,IAAAk/C,GAAAjhD,EAAA,KAGAihD,EAAAl/C,EACAi/C,EAAAniE,GAIA,MAAAmiE,IAQAvB,EAAAhf,YAAA,SAAAxzC,GACA,GAAAm0D,GAAAz/D,KAAAm9D,QAAA7xD,EACA,cAAAm0D,QAQA3B,EAAA7e,eAAA,SAAA3zC,GACA,MAAAtL,MAAA49D,SAAA59D,KAAA8+C,YAAAxzC,KAQAwyD,EAAA/e,QAAA,SAAAzzC,GACA,MAAAtL,MAAAo9D,UAAAp9D,KAAAm9D,QAAA7xD,KAAA,IAQAwyD,EAAAvkC,MAAA,SAAAjuB,GACA,MAAAtL,MAAAq9D,QAAAr9D,KAAAm9D,QAAA7xD,KAAAtL,KAAA8+C,YAAAxzC,GAAA,IAuBAwyD,EAAAx9D,KAAA,SAAAo/D,EAAApwD,EAAAk2B,EAAAj2B,GACA,kBAAAmwD,KACAnwD,EAAAi2B,EACAA,EAAAl2B,EACAA,EAAAowD,EACAA,MAGAA,EAAAr5C,EAAAjD,IAAAg4C,EAAAsE,GAAA1/D,KAAAg+D,aAAAh+D,KAEA,IAAA2iB,MACAg9C,EAAAD,EAAAl9D,OACA26D,EAAAn9D,KAAAm9D,OAEA5tD,MAAAvP,IAEA,QAAA9C,GAAA,EAAuBA,EAAAigE,EAAA36D,OAAoBtF,IAE3C,OAAAyiE,GACA,OACArwD,EAAAvP,KAAAwP,EAAArS,EACA,MACA,QACAoS,EAAAvP,KAAAwP,EAAAvP,KAAAqU,IAAAqrD,EAAA,GAAAxiE,EAAAsoC,GAAAtoC,EACA,MACA,QACAoS,EAAAvP,KAAAwP,EAAAvP,KAAAqU,IAAAqrD,EAAA,GAAAxiE,EAAAsoC,GAAAxlC,KAAAqU,IAAAqrD,EAAA,GAAAxiE,EAAAsoC,GAAAtoC,EACA,MACA,SACA,OAAAqb,GAAA,EAAmCA,EAAAonD,EAAapnD,IAChDoK,EAAApK,GAAAvY,KAAAqU,IAAAqrD,EAAAnnD,GAAArb,EAAAsoC,EAGA7iB,GAAApK,GAAArb,EACAoS,EAAA2W,MAAA1W,EAAAoT,KAYAm7C,EAAA8B,WAAA,SAAAvE,EAAA/rD,EAAAk2B,EAAAj2B,GACA,kBAAA8rD,KACA9rD,EAAAi2B,EACAA,EAAAl2B,EACAA,EAAA+rD,EACAA,MAGAA,EAAAh1C,EAAAjD,IACAg4C,EAAAC,GAAAr7D,KAAAg+D,aAAAh+D,KAGA,IAAA6/D,MACAl9C,KACAg9C,EAAAtE,EAAA74D,OACA26D,EAAAn9D,KAAAm9D,OAEA5tD,MAAAvP,IAEA,QAAA9C,GAAA,EAAuBA,EAAAigE,EAAA36D,OAAoBtF,IAAA,CAC3C,GAAA4iE,EAEA,QAAAH,EACAG,EAAAxwD,EAAAvP,KACAwP,EAAAvP,KAAAqU,IAAAgnD,EAAA,GAAAn+D,EAAAsoC,GAAAtoC,OAGA,CACA,OAAAqb,GAAA,EAA+BA,EAAAonD,EAAapnD,IAC5CoK,EAAApK,GAAAvY,KAAAqU,IAAAgnD,EAAA9iD,GAAArb,EAAAsoC,EAEA7iB,GAAApK,GAAArb,EACA4iE,EAAAxwD,EAAA2W,MAAA1W,EAAAoT,GAEAm9C,GACAD,EAAAh2D,KAAAszD,EAAAjgE,IASA,MALA8C,MAAAm9D,QAAA0C,EAGA7/D,KAAA69D,WAEA79D,MAWA89D,EAAAiC,SAAA,SAAA1E,EAAA/rD,EAAAk2B,EAAAj2B,GACA,kBAAA8rD,KACA9rD,EAAAi2B,EACAA,EAAAl2B,EACAA,EAAA+rD,EACAA,KAGA,IAAApgC,KAIA,OAHAj7B,MAAAM,KAAA+6D,EAAA,WACApgC,EAAApxB,KAAAyF,KAAA2W,MAAAjmB,KAAAkmB,aACSsf,EAAAj2B,GACT0rB,GAuCA6iC,EAAA16C,IAAA,SAAAi4C,EAAA/rD,EAAAk2B,EAAAj2B,GACA8rD,EAAAh1C,EAAAjD,IACAg4C,EAAAC,GAAAr7D,KAAAg+D,aAAAh+D,KAGA,IAAAsC,GAAAg5D,EAAAt7D,KAAAq7D,GAGA8B,EAAA76D,EAAA66D,QAAAn9D,KAAAm9D,QAEAx9D,EAAA2C,EAAAu5D,SAEAmE,IAqBA,OApBAhgE,MAAAM,KAAA+6D,EAAA,WACA,GAAA/vD,GAAA4a,oBAAA1jB,OAAA,GACAy9D,EAAA3wD,KAAA2W,MAAAjmB,KAAAkmB,UACA,UAAA+5C,EAAA,CAEA,gBAAAA,KACAD,EAAA,GAAAC,EACAA,EAAAD,EAEA,QAAA9iE,GAAA,EAA+BA,EAAA+iE,EAAAz9D,OAAqBtF,IAAA,CACpD,GAAA6+D,GAAAV,EAAAn+D,GACA8+D,EAAAr8D,EAAAo8D,GACA0D,EAAAtC,EAAA7xD,EACA0wD,KACAA,EAAAyD,GAAAQ,EAAA/iE,OAISsoC,EAAAj2B,GAETjN,GAUAw7D,EAAAoC,WAAA,SAAAC,EAAAC,EAAAC,EAAAC,GAeA,OAdAh+D,GAAAg5D,EAAAt7D,MAAAmgE,IACAxgE,EAAAK,KAAA67D,SACA0E,EAAAj+D,EAAAu5D,SAEA2E,EAAAxgE,KAAAm9D,QACAA,EAAA76D,EAAA66D,WAEAsD,KACAC,KACAC,EAAA9yD,KAAA6e,MAAA,EAAA0zC,GAEApE,EAAAuE,EAAAJ,GACAx0D,EAAA3L,KAAA4xB,QAEA10B,EAAA,EAAuBA,EAAAyC,EAAAwgE,GAAA39D,OAA+BtF,IACtDqjE,EAAAJ,GAAAjjE,GAAAyC,EAAAwgE,GAAAjjE,EAEA,QAAAA,GAAA,EAAuBA,EAAAyO,EAASzO,GAAAyjE,EAAA,CAEhCA,EAAAh1D,EAAAzO,IACAyjE,EAAAh1D,EAAAzO,EACAujE,EAAAj+D,OAAAm+D,EAEA,QAAApoD,GAAA,EAA2BA,EAAAooD,EAAepoD,IAAA,CAC1C,GAAAjN,GAAAk1D,EAAAtjE,EAAAqb,EACAkoD,GAAAloD,GAAAyjD,EAAA1wD,GACAo1D,EAAAnoD,GAAAjN,EAEA,GAAAqX,GAAA09C,EAAAI,GACAn1D,EAAAo1D,EAAAJ,EAAAG,EAAA99C,IAAA,EAEAq5C,GAAA1wD,GAAAqX,EACAw6C,EAAAtzD,KAAAyB,GAGA,MAAAhJ,IASAw7D,EAAAve,aAAA,SAAAj0C,GACA,GAAAqwD,GAAA37D,KAAA27D,SAEA,OADArwD,GAAAtL,KAAAm9D,QAAA7xD,GACA,GAAA4jC,GAAAlvC,KAAA49D,SAAAtyD,GAAAqwD,OAAA16B,UAQA68B,EAAAz/C,KAAA,SAAAuiD,GACA,GAEAr6D,GAFA+3D,EAAAt+D,KAAAq9D,QACAwD,EAAAD,KAAAvD,QAIAyD,EAAA,OAEA,WAAArE,GACAmE,IAAAzD,WACAn9D,KAAAm9D,QACA,SAAA7xD,GACA,cAAA/E,EAAAs6D,EAAAv1D,IAAA/E,EAAAu6D,EAAAx1D,GAEA,SAAAA,GACA,cAAA/E,EAAA+3D,EAAAhzD,IAAA/E,EAAAu6D,EAAAx1D,KAQAwyD,EAAAtzB,UAAA,SAAArnB,GACA,GAAA0iB,GAAA7lC,KAAAu9D,OACA,OAAA13B,MAAA1iB,IAcA26C,EAAAiD,UAAA,SAAA59C,EAAA5c,GACA,GAAAlC,EAAA8e,GACA,OAAA5iB,KAAA4iB,GACAA,EAAA3S,eAAAjQ,IACAP,KAAA+gE,UAAAxgE,EAAA4iB,EAAA5iB,QAKAP,MAAAu9D,QAAAv9D,KAAAu9D,YACAv9D,KAAAu9D,QAAAp6C,GAAA5c,GAQAu3D,EAAAkD,UAAA,SAAA79C,EAAA5c,GACA,GAAAlC,EAAA8e,GACA,OAAA5iB,KAAA4iB,GACAA,EAAA3S,eAAAjQ,IACAP,KAAAghE,UAAAzgE,EAAA4iB,EAAA5iB,QAKAP,MAAAw9D,QAAAr6C,GAAA5c,GAQAu3D,EAAAmD,UAAA,SAAA99C,GACA,MAAAnjB,MAAAw9D,QAAAr6C,IAOA26C,EAAAoD,cAAA,SAAA51D,GACA,MAAAtL,MAAA09D,aAAApyD,IASAwyD,EAAAqD,cAAA,SAAA71D,EAAA2nC,EAAApkC,GACA7O,KAAA09D,aAAApyD,GAAAuD,EACAwX,EAAApd,OAAAjJ,KAAA09D,aAAApyD,OAAwD2nC,GACxDA,GAMA6qB,EAAAsD,iBAAA,WACAphE,KAAA09D,aAAAl7D,OAAA,GASAs7D,EAAAhzB,cAAA,SAAAx/B,EAAA6X,EAAA6/B,GACA,GAAAqe,GAAArhE,KAAAy9D,aAAAnyD,GACA/E,EAAA86D,KAAAl+C,EACA,cAAA5c,GAAAy8C,EAIAz8C,EAFAvG,KAAAwqC,UAAArnB,IAkBA26C,EAAAwD,cAAA,SAAAh2D,EAAA6X,EAAAR,GACA,GAAA0+C,GAAArhE,KAAAy9D,aAAAnyD,MAGA,IAFAtL,KAAAy9D,aAAAnyD,GAAA+1D,EAEAh9D,EAAA8e,GACA,OAAA5iB,KAAA4iB,GACAA,EAAA3S,eAAAjQ,KACA8gE,EAAA9gE,GAAA4iB,EAAA5iB,QAKA8gE,GAAAl+C,GAAAR,GAMAm7C,EAAAxyB,eAAA,WACAtrC,KAAAu9D,WACAv9D,KAAAy9D,gBAGA,IAAA8D,GAAA,SAAA7tD,GACAA,EAAA+4B,YAAAzsC,KAAAysC,YACA/4B,EAAAm3B,UAAA7qC,KAAA6qC,UACAn3B,EAAAi5B,SAAA3sC,KAAA2sC,SAOAmxB,GAAA0D,iBAAA,SAAAl2D,EAAAvM,GACA,GAAA48D,GAAA37D,KAAA27D,SAEA58D,KAGAA,EAAA8rC,UAAAv/B,EACAvM,EAAA4tC,SAAA3sC,KAAA2sC,SACA5tC,EAAA0tC,YAAAkvB,KAAAlvB,YACA,UAAA1tC,EAAAnB,MACAmB,EAAA6T,SAAA2uD,EAAAxiE,IAIAiB,KAAA29D,YAAAryD,GAAAvM,GAOA++D,EAAA2D,iBAAA,SAAAn2D,GACA,MAAAtL,MAAA29D,YAAAryD,IAOAwyD,EAAA4D,kBAAA,SAAApyD,EAAAC,GACA8W,EAAA/lB,KAAAN,KAAA29D,YAAA,SAAA5+D,EAAAuM,GACAvM,GACAuQ,KAAAvP,KAAAwP,EAAAxQ,EAAAuM,MASAwyD,EAAA6D,aAAA,WACA,GAAAC,GAAAv7C,EAAAjD,IAAApjB,KAAAq7D,WAAAr7D,KAAA07D,iBAAA17D,MACAsC,EAAA,GAAA2sC,GAAA2yB,EAAA5hE,KAAA27D,UAeA,OAZAr5D,GAAAu5D,SAAA77D,KAAA67D,SAEAD,EAAAt5D,EAAAtC,MAIAsC,EAAA66D,QAAAn9D,KAAAm9D,QAAA7pD,QAEAtT,KAAA69D,UACAv7D,EAAAu7D,QAAAx3C,EAAApd,UAA2CjJ,KAAA69D,UAG3Cv7D,GAQAw7D,EAAA+D,WAAA,SAAA9gC,EAAA+gC,GACA,GAAAC,GAAA/hE,KAAA+gC,EACA,mBAAAghC,KAGA/hE,KAAA28D,iBAAA38D,KAAA28D,qBACA38D,KAAA28D,iBAAA9yD,KAAAk3B,GACA/gC,KAAA+gC,GAAA,WACA,GAAArT,GAAAq0C,EAAA97C,MAAAjmB,KAAAkmB,UACA,OAAA47C,GAAA77C,MAAAjmB,MAAA0tB,GAAAnG,OAAAlB,EAAA/S,MAAA4S,gBAMA43C,EAAAkE,sBAAA,mCAEAlE,EAAAmE,mBAAA,cAEAplE,EAAAC,QAAAmyC,IpEumd6BlvC,KAAKjD,QAASE,EAAoB,OAIzDklE,IACA,SAASrlE,EAAQC,QAASE,GqEttfhC,QAAAmlE,KAMAniE,KAAA69D,SAAAr5C,YAOAxkB,KAAAoiE,UAAA,EAEApiE,KAAAs4B,MAAAt4B,KAAAs4B,KAAArS,MAAAjmB,KAAAkmB,WAjBA,GAAA48B,GAAA9lD,EAAA,KAoBAqlE,EAAAF,EAAA5iE,SAOA8iE,GAAAn3B,MAAA,SAAA3kC,GAKA,MAAAA,IAGA87D,EAAAnjE,QAAA,SAAAqH,GACA,GAAA+7D,GAAAtiE,KAAA69D,OACA,OAAAt3D,IAAA+7D,EAAA,IAAA/7D,GAAA+7D,EAAA,IAQAD,EAAAtyC,UAAA,SAAAxpB,GACA,GAAA+7D,GAAAtiE,KAAA69D,OACA,OAAAyE,GAAA,KAAAA,EAAA,GACA,IAEA/7D,EAAA+7D,EAAA,KAAAA,EAAA,GAAAA,EAAA,KAQAD,EAAAl9D,MAAA,SAAAoB,GACA,GAAA+7D,GAAAtiE,KAAA69D,OACA,OAAAt3D,IAAA+7D,EAAA,GAAAA,EAAA,IAAAA,EAAA,IAOAD,EAAAE,YAAA,SAAA3gB,GACA,GAAA0gB,GAAAtiE,KAAA69D,OACAjc,GAAA,GAAA0gB,EAAA,KAAAA,EAAA,GAAA1gB,EAAA,IACAA,EAAA,GAAA0gB,EAAA,KAAAA,EAAA,GAAA1gB,EAAA,KASAygB,EAAAG,UAAA,WACA,MAAAxiE,MAAA69D,QAAAvqD,SAQA+uD,EAAAI,UAAA,SAAAlsD,EAAAuN,GACA,GAAA4+C,GAAA1iE,KAAA69D,OACAxnC,OAAA9f,KACAmsD,EAAA,GAAAnsD,GAEA8f,MAAAvS,KACA4+C,EAAA,GAAA5+C,IAOAu+C,EAAAM,eAAA,WAGA,OAFAC,MACAC,EAAA7iE,KAAA8iE,WACA5lE,EAAA,EAAuBA,EAAA2lE,EAAArgE,OAAkBtF,IACzC0lE,EAAA/4D,KAAA7J,KAAA+iE,SAAAF,EAAA3lE,IAEA,OAAA0lE,IAGA9f,EAAAO,kBAAA8e,GACArf,EAAA8C,sBAAAuc,GACAtc,oBAAA,IAGAhpD,EAAAC,QAAAqlE,GrEqufMa,IACA,SAASnmE,EAAQC,QAASE,GsEv1fhC,QAAAimE,KAMAjjE,KAAA0/B,MAAA,GAAAptB,GAMAtS,KAAAykD,IAAAJ,EAAAQ,OAAA,aAoFA,QAAAqe,GAAAnkE,EAAAokE,GACA,GAAApkE,IACAA,EAAA0C,QAAA0hE,GACA,UAAApkE,EAAAnB,MACA,OAAAV,GAAA,EAA+BA,EAAA6B,EAAAqkE,aAAqBlmE,IACpDgmE,EAAAnkE,EAAA+oD,QAAA5qD,GAAAimE,GAWA,QAAAxhC,GAAAnjB,EAAAojB,EAAAuhC,GACA,GAAAt4B,GAAAxJ,EAAA+f,eAAA5iC,EAAAojB,EAEA,OAAAiJ,EACAxkB,EAAA/lB,KAAA+gC,EAAAmc,iBAAA3S,GAAA,SAAAw4B,GACAH,EAAA1kD,EAAAijD,iBAAA4B,GAAAF,KAIA3kD,EAAAkjD,kBAAA,SAAA3iE,GACAmkE,EAAAnkE,EAAAokE,KAhIA,GAAA7wD,GAAAtV,EAAA,KACAqnD,EAAArnD,EAAA,KACA8lD,EAAA9lD,EAAA,KACAqkC,EAAArkC,EAAA,KACAqpB,EAAArpB,EAAA,IAiBAimE,GAAA1jE,WAEA3B,KAAA,QAOA06B,KAAA,SAAA2I,EAAAyC,KASAyC,OAAA,SAAAnE,EAAAf,EAAAyC,EAAA9B,KASA6J,UAAA,SAAAzJ,EAAAf,EAAAyC,EAAA9B,GACAD,EAAAK,EAAAyD,UAAA7D,EAAA,aAUA8J,SAAA,SAAA1J,EAAAf,EAAAyC,EAAA9B,GACAD,EAAAK,EAAAyD,UAAA7D,EAAA,WAQAlf,OAAA,SAAAue,EAAAyC,GACA1jC,KAAA0/B,MAAA4jC,aAQA9jE,QAAA,aAYA,IAAA+jE,GAAAN,EAAA1jE,SACAgkE,GAAAl4B,WACAk4B,EAAA/3B,aACA+3B,EAAAh4B,aACA,SAAAvJ,EAAAf,EAAAyC,EAAA9B,GACA5hC,KAAAmmC,OAAAnE,EAAAf,EAAAyC,EAAA9B,IAwCAkhB,EAAAO,kBAAA4f,GAAA,YAGAngB,EAAA8C,sBAAAqd,GAA4Cpd,oBAAA,IAE5ChpD,EAAAC,QAAAmmE,GtEs2fMO,IACA,SAAS3mE,EAAQC,SuEn/fvB,GAAAmG,GAAA,CAEA,oBAAAskC,UACAtkC,EAAA4K,KAAAoC,IAAAs3B,OAAAnjC,kBAAA,KAOA,IAAAL,IAOA0/D,UAAA,EAGAr/D,iBAAAnB,EAEApG,GAAAC,QAAAiH,GvE6/fM2/D,IACA,SAAS7mE,EAAQC,QAASE,GwEjggBhC,GAAAqpB,GAAArpB,EAAA,KACA2mE,EAAA3mE,EAAA,KACAsL,EAAAtL,EAAA,KAQAsV,EAAA,SAAA1J,GAEAA,QAEA+6D,EAAA5jE,KAAAC,KAAA4I,EAEA,QAAAua,KAAAva,GACAA,EAAA4H,eAAA2S,KACAnjB,KAAAmjB,GAAAva,EAAAua,GAIAnjB,MAAAyT,aAEAzT,KAAAmU,UAAA,KAEAnU,KAAA8E,SAAA,EAGAwN,GAAA/S,WAEAkB,YAAA6R,EAEAiB,SAAA,EAKA3V,KAAA,QAQAoB,QAAA,EAKAwU,SAAA,WACA,MAAAxT,MAAAyT,UAAAH,SAQAw0C,QAAA,SAAAx8C,GACA,MAAAtL,MAAAyT,UAAAnI,IAQAs4D,YAAA,SAAArjE,GAEA,OADAiT,GAAAxT,KAAAyT,UACAvW,EAAA,EAA2BA,EAAAsW,EAAAhR,OAAqBtF,IAChD,GAAAsW,EAAAtW,GAAAqD,SACA,MAAAiT,GAAAtW,IAQAkmE,WAAA,WACA,MAAApjE,MAAAyT,UAAAjR,QAOAooB,IAAA,SAAAlX,GAQA,MAPAA,QAAA1T,MAAA0T,EAAAvU,SAAAa,OAEAA,KAAAyT,UAAA5J,KAAA6J,GAEA1T,KAAA6jE,OAAAnwD,IAGA1T,MAQA8jE,UAAA,SAAApwD,EAAAxE,GACA,GAAAwE,OAAA1T,MAAA0T,EAAAvU,SAAAa,MACAkP,KAAA/P,SAAAa,KAAA,CAEA,GAAAwT,GAAAxT,KAAAyT,UACAnI,EAAAkI,EAAAjI,QAAA2D,EAEA5D,IAAA,IACAkI,EAAAhI,OAAAF,EAAA,EAAAoI,GACA1T,KAAA6jE,OAAAnwD,IAIA,MAAA1T,OAGA6jE,OAAA,SAAAnwD,GACAA,EAAAvU,QACAuU,EAAAvU,OAAAujB,OAAAhP,GAGAA,EAAAvU,OAAAa,IAEA,IAAAL,GAAAK,KAAAmU,UACAgd,EAAAnxB,KAAAgB,IACArB,QAAA+T,EAAAS,YAEAxU,EAAAkU,SAAAH,GAEAA,YAAApB,IACAoB,EAAAE,qBAAAjU,IAIAwxB,KAAA3mB,WAOAkY,OAAA,SAAAhP,GACA,GAAAyd,GAAAnxB,KAAAgB,KACArB,EAAAK,KAAAmU,UACAX,EAAAxT,KAAAyT,UAEAnI,EAAA+a,EAAA9a,QAAAiI,EAAAE,EACA,OAAApI,GAAA,EACAtL,MAEAwT,EAAAhI,OAAAF,EAAA,GAEAoI,EAAAvU,OAAA,KAEAQ,IAEAA,EAAAuU,WAAAR,EAAA1Q,IAEA0Q,YAAApB,IACAoB,EAAAM,uBAAArU,IAIAwxB,KAAA3mB,UAEAxK,OAMAsjE,UAAA,WACA,GAEA5vD,GACAxW,EAHAsW,EAAAxT,KAAAyT,UACA9T,EAAAK,KAAAmU,SAGA,KAAAjX,EAAA,EAAuBA,EAAAsW,EAAAhR,OAAqBtF,IAC5CwW,EAAAF,EAAAtW,GACAyC,IACAA,EAAAuU,WAAAR,EAAA1Q,IACA0Q,YAAApB,IACAoB,EAAAM,uBAAArU,IAGA+T,EAAAvU,OAAA,IAIA,OAFAqU,GAAAhR,OAAA,EAEAxC,MAQA0nD,UAAA,SAAAp4C,EAAAC,GAEA,OADAiE,GAAAxT,KAAAyT,UACAvW,EAAA,EAA2BA,EAAAsW,EAAAhR,OAAqBtF,IAAA,CAChD,GAAAwW,GAAAF,EAAAtW,EACAoS,GAAAvP,KAAAwP,EAAAmE,EAAAxW,GAEA,MAAA8C,OAQA4S,SAAA,SAAAtD,EAAAC,GACA,OAAArS,GAAA,EAA2BA,EAAA8C,KAAAyT,UAAAjR,OAA2BtF,IAAA,CACtD,GAAAwW,GAAA1T,KAAAyT,UAAAvW,EACAoS,GAAAvP,KAAAwP,EAAAmE,GAEA,UAAAA,EAAA9V,MACA8V,EAAAd,SAAAtD,EAAAC,GAGA,MAAAvP,OAGA4T,qBAAA,SAAAjU,GACA,OAAAzC,GAAA,EAA2BA,EAAA8C,KAAAyT,UAAAjR,OAA2BtF,IAAA,CACtD,GAAAwW,GAAA1T,KAAAyT,UAAAvW,EACAyC,GAAAkU,SAAAH,GACAA,YAAApB,IACAoB,EAAAE,qBAAAjU,KAKAqU,uBAAA,SAAArU,GACA,OAAAzC,GAAA,EAA2BA,EAAA8C,KAAAyT,UAAAjR,OAA2BtF,IAAA,CACtD,GAAAwW,GAAA1T,KAAAyT,UAAAvW,EACAyC,GAAAuU,WAAAR,EAAA1Q,IACA0Q,YAAApB,IACAoB,EAAAM,uBAAArU,KAKAyU,MAAA,WAGA,MAFApU,MAAA8E,SAAA,EACA9E,KAAAgB,MAAAhB,KAAAgB,KAAAwJ,UACAxK,MAMAiH,gBAAA,SAAA88D,GAOA,OALA76C,GAAA,KACAniB,EAAA,GAAAuB,GAAA,SACAkL,EAAAuwD,GAAA/jE,KAAAyT,UACAuwD,KAEA9mE,EAAA,EAA2BA,EAAAsW,EAAAhR,OAAqBtF,IAAA,CAChD,GAAAwW,GAAAF,EAAAtW,EACA,KAAAwW,EAAAjR,SAAAiR,EAAAzH,UAAA,CAIA,GAAAg4D,GAAAvwD,EAAAzM,kBACAC,EAAAwM,EAAAmgB,kBAAAmwC,EAQA98D,IACAH,EAAAC,KAAAi9D,GACAl9D,EAAAI,eAAAD,GACAgiB,KAAAniB,EAAAwkB,QACArC,EAAAy4B,MAAA56C,KAGAmiB,KAAA+6C,EAAA14C,QACArC,EAAAy4B,MAAAsiB,KAGA,MAAA/6C,IAAAniB,IAIAsf,EAAAgC,SAAA/V,EAAAqxD,GAEA9mE,EAAAC,QAAAwV,GxE4hgBM4xD,IACA,SAASrnE,EAAQC,QAASE,GAEhC,YyE90gBA,IAAAgf,GAAAhf,EAAA,KACAumB,EAAAvmB,EAAA,KACAwmB,EAAAxmB,EAAA,MACAsL,EAAAtL,EAAA,KACAiG,EAAAjG,EAAA,KAAAoH,iBAEAya,GACAC,EAAA,EACAE,EAAA,EACAC,EAAA,EACAE,EAAA,EACAE,EAAA,EACAQ,EAAA,EAEAD,EAAA,GAGA9R,KACAmC,KACAk0D,KACAC,KACA3gD,EAAA5V,KAAAC,IACA4V,EAAA7V,KAAAoC,IACA2T,EAAA/V,KAAAwL,IACAsK,EAAA9V,KAAA2L,IACAub,EAAAlnB,KAAAkM,KACAsqD,EAAAx2D,KAAA8N,IAEA2oD,EAAA,mBAAA7pB,cAMAzkB,EAAA;AAMAh2B,KAAAwe,QAEAxe,KAAAkiB,KAAA,EAEAliB,KAAAi8B,KAAA,KAEAj8B,KAAAukE,IAAA,EACAvkE,KAAAwkE,IAAA,EAEAxkE,KAAAykE,IAAA,EACAzkE,KAAA0kE,IAAA,EAGA1kE,KAAA2kE,IAAA,EACA3kE,KAAA4kE,IAAA,EAOA5uC,GAAAz2B,WAEAkB,YAAAu1B,EAEA6uC,UAAA,KAEAC,YAAA,EAEAC,SAAA,EAEAC,SAAA,EAKAj9C,SAAA,SAAAmM,EAAAC,GACAn0B,KAAA2kE,IAAAN,EAAA,EAAAphE,EAAAixB,IAAA,EACAl0B,KAAA4kE,IAAAP,EAAA,EAAAphE,EAAAkxB,IAAA,GAGAlvB,WAAA,WACA,MAAAjF,MAAAi8B,MAOAr0B,UAAA,SAAA5C,GAiBA,MAfAhF,MAAAi8B,KAAAj3B,EAEAA,KAAA4C,YAEA5C,IAAAhF,KAAAiD,IAAA+B,EAAA/B,KAGAjD,KAAAkiB,KAAA,EAEAliB,KAAA6kE,YACA7kE,KAAA6kE,UAAA,KAEA7kE,KAAA8kE,YAAA,GAGA9kE,MAQAkqB,OAAA,SAAAtrB,EAAAC,GAcA,MAbAmB,MAAAs1B,QAAAzW,EAAAC,EAAAlgB,EAAAC,GACAmB,KAAAi8B,MAAAj8B,KAAAi8B,KAAA/R,OAAAtrB,EAAAC,GAMAmB,KAAAykE,IAAA7lE,EACAoB,KAAA0kE,IAAA7lE,EAEAmB,KAAAukE,IAAA3lE,EACAoB,KAAAwkE,IAAA3lE,EAEAmB,MAQAmqB,OAAA,SAAAvrB,EAAAC,GACA,GAAAomE,GAAAZ,EAAAzlE,EAAAoB,KAAAukE,KAAAvkE,KAAA2kE,KACAN,EAAAxlE,EAAAmB,KAAAwkE,KAAAxkE,KAAA4kE,KAEA5kE,KAAAkiB,KAAA,CAaA,OAXAliB,MAAAs1B,QAAAzW,EAAAG,EAAApgB,EAAAC,GAEAmB,KAAAi8B,MAAAgpC,IACAjlE,KAAAklE,aAAAllE,KAAAmlE,cAAAvmE,EAAAC,GACAmB,KAAAi8B,KAAA9R,OAAAvrB,EAAAC,IAEAomE,IACAjlE,KAAAukE,IAAA3lE,EACAoB,KAAAwkE,IAAA3lE,GAGAmB,MAYA4vB,cAAA,SAAAzT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAQA,MAPAxc,MAAAs1B,QAAAzW,EAAAI,EAAA9C,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAxc,KAAAi8B,OACAj8B,KAAAklE,aAAAllE,KAAAolE,gBAAAjpD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACAxc,KAAAi8B,KAAArM,cAAAzT,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAEAxc,KAAAukE,IAAAhoD,EACAvc,KAAAwkE,IAAAhoD,EACAxc,MAUAoqB,iBAAA,SAAAjO,EAAAC,EAAAC,EAAAC,GAQA,MAPAtc,MAAAs1B,QAAAzW,EAAAM,EAAAhD,EAAAC,EAAAC,EAAAC,GACAtc,KAAAi8B,OACAj8B,KAAAklE,aAAAllE,KAAAqlE,mBAAAlpD,EAAAC,EAAAC,EAAAC,GACAtc,KAAAi8B,KAAA7R,iBAAAjO,EAAAC,EAAAC,EAAAC,IAEAtc,KAAAukE,IAAAloD,EACArc,KAAAwkE,IAAAloD,EACAtc,MAYA2f,IAAA,SAAAzE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAQA,MAPAvb,MAAAs1B,QACAzW,EAAAQ,EAAAnE,EAAAC,EAAAC,IAAAC,EAAAC,EAAAD,EAAA,EAAAE,EAAA,KAEAvb,KAAAi8B,MAAAj8B,KAAAi8B,KAAAtc,IAAAzE,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GAEAvb,KAAAukE,IAAA3gD,EAAAtI,GAAAF,EAAAF,EACAlb,KAAAukE,IAAA5gD,EAAArI,GAAAF,EAAAF,EACAlb,MAIAslE,MAAA,SAAAnpD,EAAAC,EAAAC,EAAAC,EAAAipD,GAIA,MAHAvlE,MAAAi8B,MACAj8B,KAAAi8B,KAAAqpC,MAAAnpD,EAAAC,EAAAC,EAAAC,EAAAipD,GAEAvlE,MAIAkpB,KAAA,SAAAtqB,EAAAC,EAAA2e,EAAAs/B,GAGA,MAFA98C,MAAAi8B,MAAAj8B,KAAAi8B,KAAA/S,KAAAtqB,EAAAC,EAAA2e,EAAAs/B,GACA98C,KAAAs1B,QAAAzW,EAAAe,EAAAhhB,EAAAC,EAAA2e,EAAAs/B,GACA98C,MAMAywB,UAAA,WACAzwB,KAAAs1B,QAAAzW,EAAAgB,EAEA,IAAA7a,GAAAhF,KAAAi8B,KACAhgB,EAAAjc,KAAAykE,IACAvoD,EAAAlc,KAAA0kE,GAQA,OAPA1/D,KACAhF,KAAAklE,cAAAllE,KAAAmlE,cAAAlpD,EAAAC,GACAlX,EAAAyrB,aAGAzwB,KAAAukE,IAAAtoD,EACAjc,KAAAwkE,IAAAtoD,EACAlc,MASA4uB,KAAA,SAAA5pB,GACAA,KAAA4pB,OACA5uB,KAAAw2B,YAOA7H,OAAA,SAAA3pB,GACAA,KAAA2pB,SACA3uB,KAAAw2B,YAQA6iB,YAAA,SAAAH,GACA,GAAAA,YAAAjlC,OAAA,CACAjU,KAAA6kE,UAAA3rB,EAEAl5C,KAAA+kE,SAAA,CAGA,QADAS,GAAA,EACAtoE,EAAA,EAA+BA,EAAAg8C,EAAA12C,OAAqBtF,IACpDsoE,GAAAtsB,EAAAh8C,EAEA8C,MAAAglE,SAAAQ,EAEA,MAAAxlE,OAQAs5C,kBAAA,SAAAmsB,GAEA,MADAzlE,MAAA8kE,YAAAW,EACAzlE,MAOA2L,IAAA,WACA,MAAA3L,MAAAkiB,MAMAyU,QAAA,SAAAnY,GAEA,GAAA7S,GAAA6S,EAAAhc,MAEAxC,MAAAwe,MAAAxe,KAAAwe,KAAAhc,QAAAmJ,IAAA24D,IACAtkE,KAAAwe,KAAA,GAAAi8B,cAAA9uC,GAGA,QAAAzO,GAAA,EAA2BA,EAAAyO,EAASzO,IACpC8C,KAAAwe,KAAAthB,GAAAshB,EAAAthB,EAGA8C,MAAAkiB,KAAAvW,GAOA4rB,WAAA,SAAA7vB,GACAA,YAAAuM,SACAvM,MAKA,QAHAiE,GAAAjE,EAAAlF,OACAkjE,EAAA,EACAD,EAAAzlE,KAAAkiB,KACAhlB,EAAA,EAA2BA,EAAAyO,EAASzO,IACpCwoE,GAAAh+D,EAAAxK,GAAAyO,KAEA24D,IAAAtkE,KAAAwe,eAAAi8B,gBACAz6C,KAAAwe,KAAA,GAAAi8B,cAAAgrB,EAAAC,GAEA,QAAAxoE,GAAA,EAA2BA,EAAAyO,EAASzO,IAEpC,OADAyoE,GAAAj+D,EAAAxK,GAAAshB,KACAjG,EAAA,EAA+BA,EAAAotD,EAAAnjE,OAA2B+V,IAC1DvY,KAAAwe,KAAAinD,KAAAE,EAAAptD,EAGAvY,MAAAkiB,KAAAujD,GAOAnwC,QAAA,SAAA1W,GACA,GAAAJ,GAAAxe,KAAAwe,IACAxe,MAAAkiB,KAAAgE,UAAA1jB,OAAAgc,EAAAhc,SAGAxC,KAAA4lE,cACApnD,EAAAxe,KAAAwe,KAEA,QAAAthB,GAAA,EAA2BA,EAAAgpB,UAAA1jB,OAAsBtF,IACjDshB,EAAAxe,KAAAkiB,QAAAgE,UAAAhpB,EAGA8C,MAAA6lE,SAAAjnD,GAGAgnD,YAAA,WAEA,KAAA5lE,KAAAwe,eAAAvK,QAAA,CAEA,OADA6xD,MACA5oE,EAAA,EAA+BA,EAAA8C,KAAAkiB,KAAehlB,IAC9C4oE,EAAA5oE,GAAA8C,KAAAwe,KAAAthB,EAEA8C,MAAAwe,KAAAsnD,IASAZ,WAAA,WACA,MAAAllE,MAAA6kE,WAGAM,cAAA,SAAAhpD,EAAAC,GACA,GAYA2pD,GAEAz6D,EAdA06D,EAAAhmE,KAAAglE,SACAS,EAAAzlE,KAAA8kE,YACA5rB,EAAAl5C,KAAA6kE,UACA7/D,EAAAhF,KAAAi8B,KAEAhgB,EAAAjc,KAAAukE,IACAroD,EAAAlc,KAAAwkE,IACAlkD,EAAAnE,EAAAF,EACAsE,EAAAnE,EAAAF,EACAkE,EAAA2U,EAAAzU,IAAAC,KACA3hB,EAAAqd,EACApd,EAAAqd,EAEA+pD,EAAA/sB,EAAA12C,MAaA,KAXA8d,GAAAF,EACAG,GAAAH,EAEAqlD,EAAA,IAEAA,EAAAO,EAAAP,GAEAA,GAAAO,EACApnE,GAAA6mE,EAAAnlD,EACAzhB,GAAA4mE,EAAAllD,EAEAD,EAAA,GAAA1hB,GAAAud,GAAAmE,EAAA,GAAA1hB,GAAAud,GACA,GAAAmE,IAAAC,EAAA,GAAA1hB,GAAAud,GAAAmE,EAAA,GAAA1hB,GAAAud,IACA9Q,EAAAtL,KAAA+kE,SACAgB,EAAA7sB,EAAA5tC,GACA1M,GAAA0hB,EAAAylD,EACAlnE,GAAA0hB,EAAAwlD,EACA/lE,KAAA+kE,UAAAz5D,EAAA,GAAA26D,EAEA3lD,EAAA,GAAA1hB,EAAAqd,GAAAqE,EAAA,GAAA1hB,EAAAqd,GAAAsE,EAAA,GAAA1hB,EAAAqd,GAAAqE,EAAA,GAAA1hB,EAAAqd,GAGAlX,EAAAsG,EAAA,qBACAgV,GAAA,EAAAmD,EAAA7kB,EAAAud,GAAAuH,EAAA9kB,EAAAud,GACAoE,GAAA,EAAAkD,EAAA5kB,EAAAud,GAAAsH,EAAA7kB,EAAAud,GAIAkE,GAAA1hB,EAAAud,EACAoE,EAAA1hB,EAAAud,EACApc,KAAA8kE,aAAA/vC,EAAAzU,IAAAC,MAIA6kD,gBAAA,SAAAjpD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,GACA,GAOAkB,GACA4C,EACAC,EAMA3hB,EACAC,EAhBAmnE,EAAAhmE,KAAAglE,SACAS,EAAAzlE,KAAA8kE,YACA5rB,EAAAl5C,KAAA6kE,UACA7/D,EAAAhF,KAAAi8B,KAEAhgB,EAAAjc,KAAAukE,IACAroD,EAAAlc,KAAAwkE,IAIA3mD,EAAA7B,EAAA6B,QACAqoD,EAAA,EACA56D,EAAAtL,KAAA+kE,SACAkB,EAAA/sB,EAAA12C,OAKA2jE,EAAA,CAQA,KANAV,EAAA,IAEAA,EAAAO,EAAAP,GAEAA,GAAAO,EAEAtoD,EAAA,EAAuBA,EAAA,EAAOA,GAAA,GAC9B4C,EAAAzC,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAmB,EAAA,IACAG,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAmB,GACA6C,EAAA1C,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAkB,EAAA,IACAG,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAkB,GACAwoD,GAAAnxC,EAAAzU,IAAAC,IAIA,MAAkBjV,EAAA26D,IAClBE,GAAAjtB,EAAA5tC,KACA66D,EAAAV,IAF+Bn6D,KAQ/B,IAFAoS,GAAAyoD,EAAAV,GAAAS,EAEAxoD,GAAA,GAEA9e,EAAAif,EAAA5B,EAAAE,EAAAE,EAAAE,EAAAmB,GACA7e,EAAAgf,EAAA3B,EAAAE,EAAAE,EAAAE,EAAAkB,GAIApS,EAAA,EAAAtG,EAAAklB,OAAAtrB,EAAAC,GACAmG,EAAAmlB,OAAAvrB,EAAAC,GAEA6e,GAAAw7B,EAAA5tC,GAAA46D,EAEA56D,KAAA,GAAA26D,CAIA36D,GAAA,OAAAtG,EAAAmlB,OAAA5N,EAAAC,GACA8D,EAAA/D,EAAA3d,EACA2hB,EAAA/D,EAAA3d,EACAmB,KAAA8kE,aAAA/vC,EAAAzU,IAAAC,MAGA8kD,mBAAA,SAAAlpD,EAAAC,EAAAC,EAAAC,GAEA,GAAAC,GAAAF,EACAG,EAAAF,CACAD,MAAA,EAAAF,GAAA,EACAG,KAAA,EAAAF,GAAA,EACAD,GAAAnc,KAAAukE,IAAA,EAAApoD,GAAA,EACAC,GAAApc,KAAAwkE,IAAA,EAAApoD,GAAA,EAEApc,KAAAolE,gBAAAjpD,EAAAC,EAAAC,EAAAC,EAAAC,EAAAC,IAOAga,SAAA,WACA,GAAAhY,GAAAxe,KAAAwe,IACAA,aAAAvK,SACAuK,EAAAhc,OAAAxC,KAAAkiB,KACAoiD,IACAtkE,KAAAwe,KAAA,GAAAi8B,cAAAj8B,MAQAvX,gBAAA,WACA6G,EAAA,GAAAA,EAAA,GAAAq2D,EAAA,GAAAA,EAAA,GAAA5E,OAAAC,UACAvvD,EAAA,GAAAA,EAAA,GAAAm0D,EAAA,GAAAA,EAAA,IAAA7E,OAAAC,SAQA,QANAhhD,GAAAxe,KAAAwe,KACAE,EAAA,EACAC,EAAA,EACA1C,EAAA,EACAC,EAAA,EAEAhf,EAAA,EAA2BA,EAAAshB,EAAAhc,QAAiB,CAC5C,GAAAoc,GAAAJ,EAAAthB,IAcA,QAZA,GAAAA,IAKAwhB,EAAAF,EAAAthB,GACAyhB,EAAAH,EAAAthB,EAAA,GAEA+e,EAAAyC,EACAxC,EAAAyC,GAGAC,GACA,IAAAC,GAAAC,EAGA7C,EAAAuC,EAAAthB,KACAgf,EAAAsC,EAAAthB,KACAwhB,EAAAzC,EACA0C,EAAAzC,EACAioD,EAAA,GAAAloD,EACAkoD,EAAA,GAAAjoD,EACAkoD,EAAA,GAAAnoD,EACAmoD,EAAA,GAAAloD,CACA,MACA,KAAA2C,GAAAG,EACAwE,EAAAW,SAAAzF,EAAAC,EAAAH,EAAAthB,GAAAshB,EAAAthB,EAAA,GAAAinE,EAAAC,GACA1lD,EAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAI,EACAuE,EAAAc,UACA5F,EAAAC,EAAAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACAinE,EAAAC,GAEA1lD,EAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAM,EACAqE,EAAAiB,cACA/F,EAAAC,EAAAH,EAAAthB,KAAAshB,EAAAthB,KAAAshB,EAAAthB,GAAAshB,EAAAthB,EAAA,GACAinE,EAAAC,GAEA1lD,EAAAF,EAAAthB,KACAyhB,EAAAH,EAAAthB,IACA,MACA,KAAA2hB,GAAAQ,EAEA,GAAAnE,GAAAsD,EAAAthB,KACAie,EAAAqD,EAAAthB,KACAoiB,EAAAd,EAAAthB,KACAqiB,EAAAf,EAAAthB,KACAme,EAAAmD,EAAAthB,KACAoe,EAAAkD,EAAAthB,KAAAme,EAGAE,GADAiD,EAAAthB,KACA,EAAAshB,EAAAthB,KAEA,IAAAA,IAGA+e,EAAA2H,EAAAvI,GAAAiE,EAAApE,EACAgB,EAAAyH,EAAAtI,GAAAkE,EAAApE,GAGAqI,EAAAoB,QACA1J,EAAAC,EAAAmE,EAAAC,EAAAlE,EAAAC,EACAC,EAAA4oD,EAAAC,GAGA1lD,EAAAkF,EAAAtI,GAAAgE,EAAApE,EACAyD,EAAAgF,EAAArI,GAAAiE,EAAApE,CACA,MACA,KAAA0D,GAAAe,EACA3D,EAAAyC,EAAAF,EAAAthB,KACAgf,EAAAyC,EAAAH,EAAAthB,IACA,IAAAmG,GAAAmb,EAAAthB,KACAqG,EAAAib,EAAAthB,IAEAsmB,GAAAW,SAAAlI,EAAAC,EAAAD,EAAA5Y,EAAA6Y,EAAA3Y,EAAA4gE,EAAAC,EACA,MACA,KAAAvlD,GAAAgB,EACAnB,EAAAzC,EACA0C,EAAAzC,EAKAqH,EAAAzV,QAAAq2D,GACA5gD,EAAAtT,QAAAm0D,GAQA,MAJA,KAAAlnE,IACA4Q,EAAA,GAAAA,EAAA,GAAAmC,EAAA,GAAAA,EAAA,MAGA,GAAA3H,GACAwF,EAAA,GAAAA,EAAA,GAAAmC,EAAA,GAAAnC,EAAA,GAAAmC,EAAA,GAAAnC,EAAA,KASA+oB,YAAA,SAAA7xB,GAQA,OANAiX,GAAAC,EACAwC,EAAAC,EACA/f,EAAAC,EAHA6c,EAAA1b,KAAAwe,KAIA4nD,EAAApmE,KAAA2kE,IACA0B,EAAArmE,KAAA4kE,IACAj5D,EAAA3L,KAAAkiB,KACAhlB,EAAA,EAA2BA,EAAAyO,GAAS,CACpC,GAAAiT,GAAAlD,EAAAxe,IAaA,QAXA,GAAAA,IAKAwhB,EAAAhD,EAAAxe,GACAyhB,EAAAjD,EAAAxe,EAAA,GAEA+e,EAAAyC,EACAxC,EAAAyC,GAEAC,GACA,IAAAC,GAAAC,EACA7C,EAAAyC,EAAAhD,EAAAxe,KACAgf,EAAAyC,EAAAjD,EAAAxe,KACA8H,EAAAklB,OAAAxL,EAAAC,EACA,MACA,KAAAE,GAAAG,EACApgB,EAAA8c,EAAAxe,KACA2B,EAAA6c,EAAAxe,MAEAmnE,EAAAzlE,EAAA8f,GAAA0nD,GAAA/B,EAAAxlE,EAAA8f,GAAA0nD,GAAAnpE,IAAAyO,EAAA,KACA3G,EAAAmlB,OAAAvrB,EAAAC,GACA6f,EAAA9f,EACA+f,EAAA9f,EAEA,MACA,KAAAggB,GAAAI,EACAja,EAAA4qB,cACAlU,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,MAEAwhB,EAAAhD,EAAAxe,EAAA,GACAyhB,EAAAjD,EAAAxe,EAAA,EACA,MACA,KAAA2hB,GAAAM,EACAna,EAAAolB,iBAAA1O,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,MACAwhB,EAAAhD,EAAAxe,EAAA,GACAyhB,EAAAjD,EAAAxe,EAAA,EACA,MACA,KAAA2hB,GAAAQ,EACA,GAAAnE,GAAAQ,EAAAxe,KACAie,EAAAO,EAAAxe,KACAoiB,EAAA5D,EAAAxe,KACAqiB,EAAA7D,EAAAxe,KACAsiB,EAAA9D,EAAAxe,KACAuiB,EAAA/D,EAAAxe,KACAy3B,EAAAjZ,EAAAxe,KACAu3B,EAAA/Y,EAAAxe,KACAke,EAAAkE,EAAAC,EAAAD,EAAAC,EACA+mD,EAAAhnD,EAAAC,EAAA,EAAAD,EAAAC,EACAgnD,EAAAjnD,EAAAC,IAAAD,EAAA,EACAknD,EAAA34D,KAAA8N,IAAA2D,EAAAC,GAAA,KACAjE,EAAAkE,EAAAC,CACA+mD,IACAxhE,EAAAupB,UAAArT,EAAAC,GACAnW,EAAAwpB,OAAAmG,GACA3vB,EAAAG,MAAAmhE,EAAAC,GACAvhE,EAAA2a,IAAA,IAAAvE,EAAAoE,EAAAlE,EAAA,EAAAmZ,GACAzvB,EAAAG,MAAA,EAAAmhE,EAAA,EAAAC,GACAvhE,EAAAwpB,QAAAmG,GACA3vB,EAAAupB,WAAArT,GAAAC,IAGAnW,EAAA2a,IAAAzE,EAAAC,EAAAC,EAAAoE,EAAAlE,EAAA,EAAAmZ,GAGA,GAAAv3B,IAGA+e,EAAA2H,EAAApE,GAAAF,EAAApE,EACAgB,EAAAyH,EAAAnE,GAAAD,EAAApE,GAEAuD,EAAAkF,EAAAtI,GAAAgE,EAAApE,EACAyD,EAAAgF,EAAArI,GAAAiE,EAAApE,CACA,MACA,KAAA0D,GAAAe,EACA3D,EAAAyC,EAAAhD,EAAAxe,GACAgf,EAAAyC,EAAAjD,EAAAxe,EAAA,GACA8H,EAAAkkB,KAAAxN,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KAAAwe,EAAAxe,KACA,MACA,KAAA2hB,GAAAgB,EACA7a,EAAAyrB,YACA/R,EAAAzC,EACA0C,EAAAzC,MAMA8Z,EAAAnX,MAEAhiB,EAAAC,QAAAk5B,GzEg2gBMywC,IACA,SAAS5pE,EAAQC,QAASE,GAEhC,Y0EtliBA,SAAA8sC,GAAA/qC,GAEA,MAAAA,GAAA+qC,sBAAA/qC,EAAA+qC,yBAAwElmC,KAAA,EAAAC,IAAA,GAIxE,QAAAud,GAAAriB,EAAAgT,EAAA4d,EAAA+2C,GAsCA,MArCA/2C,SAaA+2C,IAAAr0D,EAAAa,gBACAyzD,EAAA5nE,EAAAgT,EAAA4d,GASAtd,EAAA4S,QAAAC,SAAA,MAAAnT,EAAA60D,QAAA70D,EAAA60D,SAAA70D,EAAAjU,SACA6xB,EAAA5xB,IAAAgU,EAAA60D,OACAj3C,EAAA1xB,IAAA8T,EAAA80D,QAGA,MAAA90D,EAAAjU,SACA6xB,EAAA5xB,IAAAgU,EAAAjU,QACA6xB,EAAA1xB,IAAA8T,EAAA/T,SAIA2oE,EAAA5nE,EAAAgT,EAAA4d,GAGAA,EAGA,QAAAg3C,GAAA5nE,EAAAgT,EAAA4d,GAEA,GAAAy4B,GAAAte,EAAA/qC,EACA4wB,GAAA5xB,IAAAgU,EAAA+0D,QAAA1e,EAAAxkD,KACA+rB,EAAA1xB,IAAA8T,EAAAg1D,QAAA3e,EAAAvkD,IAOA,QAAAijB,GAAA/nB,EAAAgT,EAAA20D,GAIA,GAFA30D,KAAAw1B,OAAA5pC,MAEA,MAAAoU,EAAAhU,IACA,MAAAgU,EAGA,IAAAoG,GAAApG,EAAAnU,KACAopE,EAAA7uD,KAAA5M,QAAA,WAEA,IAAAy7D,EAIA,CACA,GAAA9lD,GAAA,YAAA/I,EACApG,EAAAk1D,cAAA,GACAl1D,EAAAm1D,eAAA,EACAhmD,IAAAE,EAAAriB,EAAAmiB,EAAAnP,EAAA20D,OAPAtlD,GAAAriB,EAAAgT,IAAA20D,GACA30D,EAAAxT,QAAAwT,EAAA,WAAAA,EAAAzT,WAAA,MAAAyT,EAAAo1D,QAAA,IASA,OAAAp1D,GAGA,QAAA4U,GAAA5nB,EAAAwB,EAAAN,GACAmnE,EACAroE,EAAA4nB,iBAAApmB,EAAAN,GAGAlB,EAAAsoE,YAAA,KAAA9mE,EAAAN,GAIA,QAAA4mB,GAAA9nB,EAAAwB,EAAAN,GACAmnE,EACAroE,EAAA8nB,oBAAAtmB,EAAAN,GAGAlB,EAAAuoE,YAAA,KAAA/mE,EAAAN,GAtGA,GAAAX,GAAAtC,EAAA,KACAqV,EAAArV,EAAA,KAEAoqE,EAAA,mBAAA7/B,kBAAA5gB,iBA6GAnQ,EAAA4wD,EACA,SAAAr1D,GACAA,EAAAw1D,iBACAx1D,EAAAy1D,kBACAz1D,EAAAlU,cAAA,GAEA,SAAAkU,GACAA,EAAA01D,aAAA,EACA11D,EAAAlU,cAAA,EAGAhB,GAAAC,SACAskB,gBACA0F,iBACAH,mBACAE,sBAEArQ,OAEA/B,WAAAnV,I1E2miBMooE,IACA,SAAS7qE,EAAQC,QAASE,GAEhC,Y2EttiBA,SAAAujC,KAEAvgC,KAAA2nE,sBAlCA,GAAAthD,GAAArpB,EAAA,KA8BA4qE,IAOArnC,GAAAhhC,WAEAkB,YAAA8/B,EAEA1c,OAAA,SAAAod,EAAAyC,GACA,GAAAmkC,KACAxhD,GAAA/lB,KAAAsnE,EAAA,SAAAE,EAAAlqE,GACA,GAAA0E,GAAAwlE,EAAAjkD,OAAAod,EAAAyC,EACAmkC,KAAAtgD,OAAAjlB,SAGAtC,KAAA2nE,mBAAAE,GAGAh1D,OAAA,SAAAouB,EAAAyC,GACArd,EAAA/lB,KAAAN,KAAA2nE,mBAAA,SAAApmC,GAEAA,EAAA1uB,QAAA0uB,EAAA1uB,OAAAouB,EAAAyC,MAIAtC,qBAAA,WACA,MAAAphC,MAAA2nE,mBAAAr0D,UAIAitB,EAAA6N,SAAA,SAAAxwC,EAAAmqE,GACAH,EAAAhqE,GAAAmqE,GAGAxnC,EAAAlsB,IAAA,SAAAzW,GACA,MAAAgqE,GAAAhqE,IAGAf,EAAAC,QAAAyjC,G3E+viBMynC,IACA,SAASnrE,EAAQC,QAASE,G4Ex0iBhC,GAAAirE,GAAAjrE,EAAA,KACAkrE,EAAAlrE,EAAA,IACAA,GAAA,KACAA,EAAA,IACA,IAAAmlE,GAAAnlE,EAAA,KAEAq+C,EAAAr+C,EAAA,KACAqpB,EAAArpB,EAAA,KACA0rB,EAAA1rB,EAAA,KACAmrE,IAKAA,GAAAC,eAAA,SAAAC,EAAA9jC,GACA,GAAAp/B,GAAAkjE,EAAAljE,MACAmjE,EAAAnjE,EAAAq9D,YACA+F,EAAAD,EAAA,GAAAA,EAAA,EACA,gBAAAnjE,EAAAvH,KAEA,MAAAgkB,UAAA2mD,GAIAD,GAHA,IAMA,IAAAx6D,GAAAy2B,EAAAikC,OAAAjkC,EAAAikC,SAAAjkC,EAAAlwB,IAAA,OACApE,EAAAs0B,EAAAkkC,OAAAlkC,EAAAkkC,SAAAlkC,EAAAlwB,IAAA,OACAq0D,EAAAnkC,EAAAokC,iBACApkC,EAAAokC,oBAAApkC,EAAAlwB,IAAA,SACAu0D,EAAArkC,EAAAlwB,IAAA,cACAgS,GAAAqV,QAAAktC,KACAA,MAAA,EAAAA,GAAA,IAEAA,EAAA,GAAAvtB,EAAAvuB,aAAA87C,EAAA,MACAA,EAAA,GAAAvtB,EAAAvuB,aAAA87C,EAAA,KACA,IAAAC,IAAA,EACAC,GAAA,CA2BA,OAzBA,OAAAh7D,IACAA,EAAAw6D,EAAA,GAAAM,EAAA,GAAAL,EACAM,GAAA,GAEA,MAAA54D,IACAA,EAAAq4D,EAAA,GAAAM,EAAA,GAAAL,EACAO,GAAA,GAEA,YAAAh7D,IACAA,EAAAw6D,EAAA,IAEA,YAAAr4D,IACAA,EAAAq4D,EAAA,IAGAI,IAEA56D,EAAA,GAAAmC,EAAA,IAAA44D,IACA/6D,EAAA,GAGAA,EAAA,GAAAmC,EAAA,IAAA64D,IACA74D,EAAA,KAGAnC,EAAAmC,IAGAk4D,EAAAY,gBAAA,SAAAV,EAAA9jC,GACA,GAAAp/B,GAAAkjE,EAAAljE,MACAm9D,EAAA6F,EAAAC,eAAAC,EAAA9jC,GACAskC,EAAA,OAAAtkC,EAAAikC,OAAAjkC,EAAAikC,SAAAjkC,EAAAlwB,IAAA,QACAy0D,EAAA,OAAAvkC,EAAAkkC,OAAAlkC,EAAAkkC,SAAAlkC,EAAAlwB,IAAA,QACA20D,EAAAzkC,EAAAlwB,IAAA,cAEA,SAAAlP,EAAAvH,OACAuH,EAAA8jE,KAAA1kC,EAAAlwB,IAAA,YAGAlP,EAAAs9D,UAAAH,EAAA,GAAAA,EAAA,IACAn9D,EAAA+jE,WAAAF,EAAAH,EAAAC,EAQA,IAAAK,GAAA5kC,EAAAlwB,IAAA,cACA,IAAAuN,SAAAunD,KAAAN,IAAAC,GAAA,aAAA3jE,EAAAvH,KAAA,CACA,GAAAy6C,GAAAlzC,EAAAikE,cACAC,EAAAx7D,KAAAoC,IAAApC,KAAA8N,IAAA08B,GAAA8wB,GAAA9wB,CAMAiqB,GAAAn9D,EAAAq9D,WACA,IAAA/uC,IAAA6uC,EAAA,GAAAA,EAAA,KACAn9D,GAAAs9D,UACA4G,GAAA/G,EAAA,GAAA7uC,KACA41C,GAAA/G,EAAA,GAAA7uC,MAEAtuB,EAAA+jE,WAAAF,GAQA,GAAA3wB,GAAA9T,EAAAlwB,IAAA,WACA,OAAAgkC,GACAlzC,EAAAmkE,aAAAnkE,EAAAmkE,YAAAjxB,IASA8vB,EAAAoB,mBAAA,SAAAhlC,EAAAilC,GAEA,GADAA,KAAAjlC,EAAAlwB,IAAA,QAEA,OAAAm1D,GAEA,eACA,UAAAvB,GACA1jC,EAAAklC,iBAAAjlD,YAEA,aACA,UAAA0jD,EAEA,SACA,OAAA/F,EAAAp9B,SAAAykC,IAAAtB,GAAArkD,OAAA0gB,KAQA4jC,EAAAuB,gBAAA,SAAArB,GACA,GAAAlxB,GAAAkxB,EAAAljE,MAAAq9D,YACA10D,EAAAqpC,EAAA,GACAlnC,EAAAknC,EAAA,EACA,SAAArpC,EAAA,GAAAmC,EAAA,GAAAnC,EAAA,GAAAmC,EAAA,IAUAk4D,EAAAwB,qBAAA,SAAAC,EAAAhH,EAAA75C,EAAA8gD,GAIA,GAAAC,GACAC,EAAA,EACAC,EAAA,EAEA39D,EAAA,CACAu2D,GAAApgE,OAAA,KAEA6J,EAAAwB,KAAA6e,MAAAk2C,EAAApgE,OAAA,IAGA,QAAAtF,GAAA,EAAuBA,EAAA0sE,EAAApnE,OAAuBtF,GAAAmP,EAAA,CAC9C,GAAA49D,GAAAL,EAAA1sE,GACAgsB,EAAAR,EAAAzhB,gBACA27D,EAAA1lE,GAAA6rB,EAAA,eAEAG,GAAA2gD,EAAA,UAAAI,EAEA/gD,EAAA2gD,EAAA,uBACAC,EAIAA,EAAAziE,UAAA6hB,IACA8gD,IACAD,EAAAl8D,KAAAoC,IAAA85D,EAAAC,KAGAF,EAAAnoB,MAAAz4B,GAEA8gD,EAAA,GAVAF,EAAA5gD,EAAAqC,QAaA,WAAAw+C,GAAA19D,EAAA,EACAA,GAEA09D,EAAA,GAAA19D,EAAA,GAQA87D,EAAA+B,mBAAA,SAAA7B,EAAA8B,GACA,GAAAhlE,GAAAkjE,EAAAljE,MACAy9D,EAAAz9D,EAAAw9D,iBACAE,EAAA19D,EAAA29D,UACA,uBAAAqH,IACAA,EAAA,SAAAhuB,GACA,gBAAA51C,GACA,MAAA41C,GAAA1mB,QAAA,UAA+C,MAAAlvB,IAAA,MAElC4jE,GAEb9jD,EAAAjD,IAAAw/C,EAAAuH,IAEA,kBAAAA,GACA9jD,EAAAjD,IAAAy/C,EAAA,SAAAuH,EAAA9+D,GACA,MAAA6+D,GACA,aAAA9B,EAAAzqE,KAAAuH,EAAA49D,SAAAqH,KACA9+D,IAEatL,MAGb4iE,GAIA/lE,EAAAC,QAAAqrE,G5Ei1iBMkC,IACA,SAASxtE,EAAQC,QAASE,GAEhC,Y6EzjjBA,IAAAqpB,GAAArpB,EAAA,KACAs+C,EAAAt+C,EAAA,KACAqkC,EAAArkC,EAAA,KACA2nC,EAAA3nC,EAAA,KACAstE,EAAAttE,EAAA,KACAqV,EAAArV,EAAA,KACAi2C,EAAAj2C,EAAA,KAEA4+C,EAAAN,EAAAM,WACAL,EAAAD,EAAAC,UAEA7T,EAAA/C,EAAA17B,QAEArL,KAAA,kBAKA6uC,YAAA,EAGAnC,iBAAA,KAMAia,cAAA,KAOAgmB,mBAAA,KAKAC,sBAAA,yBAQA9lB,WAAA,KAEApsB,KAAA,SAAAoQ,EAAAma,EAAA5hB,EAAA2jB,GAMA5kD,KAAAysC,YAAAzsC,KAAAskD,eAEAtkD,KAAA8kD,qBAAApc,EAAAzH,GAMAjhC,KAAAyqE,qBAAAzqE,KAAA0qE,eAAAhiC,EAAAzH,GAOAjhC,KAAA2qE,MAAA3qE,KAAAyqE,qBAAA9I,gBAQA7c,qBAAA,SAAApc,EAAAzH,GACA,GAAAyjB,GAAA1kD,KAAA0kD,WACAK,EAAAL,EACAzR,EAAA+R,gBAAAtc,KAEAriB,GAAAxX,MACA65B,EACAzH,EAAAikB,WAAA7wC,IAAArU,KAAAy+C,UAEAp4B,EAAAxX,MAAA65B,EAAA1oC,KAAAmlD,oBAIA9jB,EAAAoc,gBAAA/U,EAAAkiC,MAAAvpC,EAAA2c,eAEAh+C,KAAA6qE,kBAAAniC,EAAAlqB,MAEAkmC,GACAzR,EAAAmS,iBAAA1c,EAAAqc,EAAAL,IAIA3B,YAAA,SAAA+nB,EAAA7pC,GACA6pC,EAAAzkD,EAAAxX,MAAA7O,KAAA0oC,OAAAoiC,GAAA,GACA9qE,KAAA6qE,kBAAAC,EAAAtsD,KAEA,IAAAkmC,GAAA1kD,KAAA0kD,UACAA,IACAzR,EAAAmS,iBAAAplD,KAAA0oC,OAAAoiC,EAAApmB,EAGA,IAAAlmC,GAAAxe,KAAA0qE,eAAAI,EAAA7pC,EAEAziB,KACAxe,KAAA2qE,MAAAnsD,EACAxe,KAAAyqE,qBAAAjsD,EAAAmjD,iBAIAkJ,kBAAA,SAAArsD,GAIA,GAAAA,EACA,OAAAthB,GAAA,EAA+BA,EAAAshB,EAAAhc,OAAiBtF,IAChDshB,EAAAthB,IAAAshB,EAAAthB,GAAA0tE,OACAvpC,EAAAoc,gBAAAj/B,EAAAthB,GAAA0tE,MAAAvpC,EAAA2c,gBAUA0sB,eAAA,aAMAjlC,QAAA,SAAAkH,GACA,aAAAA,EAAA3sC,KAAA2qE,MAAA3qE,KAAA2qE,MAAAI,cAAAp+B,IAMAhW,QAAA,SAAAnY,GACAxe,KAAA2qE,MAAAnsD,GAOAwsD,WAAA,WACA,MAAAhrE,MAAAyqE,sBAeAQ,kBAAA,SAAAC,GACA,OAAAA,IASAC,kBAAA,SAAAC,GACA,MAAAA,IASAC,YAAA,WACA,GAAA9pC,GAAAvhC,KAAAsqC,gBACA,OAAA/I,MAAA8pC,aAAA9pC,EAAA8pC,eAWA5rB,cAAA,SAAA5U,EAAAygC,EAAA3+B,GACA,QAAA4+B,GAAA5oD,GACA,GAAAsY,KAoBA,OAlBA5U,GAAA/lB,KAAAqiB,EAAA,SAAApc,EAAA+E,GACA,GAEAkgE,GAFAntB,EAAA7/B,EAAAk9C,iBAAApwD,GACAgzC,EAAAD,KAAAzgD,IAIA4tE,GADA,YAAAltB,EACA/3C,EAAA,GAEA,SAAA+3C,EACAgtB,EAAA,GAAAhwB,EAAAmB,WAAA,sBAAAl2C,GAGAg1C,EAAAh1C,GAGAilE,GAAAvwC,EAAApxB,KAAA2hE,KAGAvwC,EAAA7yB,KAAA,MAGA,GAAAoW,GAAAxe,KAAA2qE,MAEAhoD,EAAA3iB,KAAA4+C,YAAA/T,GACA4gC,EAAAplD,EAAAqV,QAAA/Y,GACA4oD,EAAA5oD,GAAA44B,EAAA54B,GACApiB,EAAAie,EAAAugC,QAAAlU,GAEAwE,EAAA7wB,EAAAssB,cAAAD,EAAA,QACAxkB,GAAAhiB,SAAAgrC,MAAA1pC,aACA0pC,KAAA1pC,WAAA,QAAkD0pC,OAElDA,KAAA,aAEA,IAAAq8B,GAAA,+GAC2Dr8B,EAAA,YAE3DqP,EAAA1+C,KAAAO,IAMA,OAJA,QAAAm+C,IAEAA,EAAA,IAEA4sB,EAMAI,EAAA9vB,EAAA57C,KAAAO,MAAA,MAAAkrE,GALA/sB,GAAA9C,EAAA8C,GAAA,UAAAgtB,GACAnrE,EACAq7C,EAAAr7C,GAAA,MAAAkrE,EACAA,IAQA75B,kBAAA,WACA,GAAAv/B,EAAA2mB,KACA,QAGA,IAAA2Y,GAAA3xC,KAAA6xC,WAAA,YAMA,OALAF,IACA3xC,KAAAylC,UAAA7T,QAAA5xB,KAAA6xC,WAAA,wBACAF,GAAA,GAGAA,GAGA3G,YAAA,WACAhrC,KAAA2qE,MAAA3qE,KAAAyqE,qBAAA9I,gBAGAgK,oBAAA,SAAAprE,EAAAwL,GACA,GAAAk1B,GAAAjhC,KAAAihC,QAEAoO,EAAAi7B,EAAAqB,oBAAA5rE,KAAAC,KAAAO,EAAAwL,EAIA,OAHAsjC,KACAA,EAAApO,EAAA0qC,oBAAAprE,EAAAwL,IAEAsjC,GAWAu8B,wBAAA,KAQAC,mBAAA,MAGAxlD,GAAAzjB,MAAA8kC,EAAArG,EAAAmd,iBACAn4B,EAAAzjB,MAAA8kC,EAAA4iC,GAEAztE,EAAAC,QAAA4qC,G7EkkjBMokC,IACA,SAASjvE,EAAQC,QAASE,G8E53jBhC,GAAAqpB,GAAArpB,EAAA,IAEAH,GAAAC,QAAA,SAAAsmD,GAEA,OAAAlmD,GAAA,EAAuBA,EAAAkmD,EAAA5gD,OAAuBtF,IAC9CkmD,EAAAlmD,GAAA,KACAkmD,EAAAlmD,GAAA,GAAAkmD,EAAAlmD,GAAA,GAGA,iBAAA6uE,GAEA,OADAroE,MACAxG,EAAA,EAA2BA,EAAAkmD,EAAA5gD,OAAuBtF,IAAA,CAClD,GAAA0/D,GAAAxZ,EAAAlmD,GAAA,EACA,MAAA6uE,GAAA1lD,EAAA9a,QAAAwgE,EAAAnP,IAAA,IAGA,GAAAr2D,GAAAvG,KAAA6xC,WAAA+qB,EACA,OAAAr2D,IACA7C,EAAA0/C,EAAAlmD,GAAA,IAAAqJ,IAGA,MAAA7C,M9Ew4jBMsoE,IACA,SAASnvE,EAAQC,QAASE,G+E15jBhC,GAAAq+C,GAAAr+C,EAAA,KACAs+C,EAAAt+C,EAAA,KACAmlE,EAAAnlE,EAAA,KAEAivE,EAAAp+D,KAAA6e,MACAw/C,EAAAr+D,KAAAyjD,KAEAta,EAAAqE,EAAArE,iBACAm1B,EAAA9wB,EAAAlJ,MAKA+1B,EAAA/F,EAAAl5D,QAEArL,KAAA,WAEAwkE,UAAA,EAEAK,UAAA,SAAAlsD,EAAAuN,GACA,GAAA4+C,GAAA1iE,KAAA69D,OAEAxnC,OAAA9f,KACAmsD,EAAA,GAAAtxD,WAAAmF,IAEA8f,MAAAvS,KACA4+C,EAAA,GAAAtxD,WAAA0S,KAIAy+C,YAAA,SAAA3gB,GACA,GAAA0gB,GAAAtiE,KAAA69D,OACAjc,GAAA,GAAA0gB,EAAA,KAAAA,EAAA,GAAA1gB,EAAA,IACAA,EAAA,GAAA0gB,EAAA,KAAAA,EAAA,GAAA1gB,EAAA,IAGAsmB,EAAA3oE,UAAAkjE,UAAA1iE,KAAAC,KAAAsiE,EAAA,GAAAA,EAAA,KAKA8G,YAAA,WAIA,MAHAppE,MAAAoiE,WACApiE,KAAAosE,YAEApsE,KAAAoiE,WAMAkH,YAAA,SAAAjxB,GACAr4C,KAAAoiE,UAAA/pB,EAGAr4C,KAAAqsE,YAAArsE,KAAA69D,QAAAvqD,SAMAwvD,SAAA,WACA9iE,KAAAoiE,WACApiE,KAAAosE,WAEA,IAAA/zB,GAAAr4C,KAAAoiE,UACAE,EAAAtiE,KAAA69D,QACAgF,KAGAyJ,EAAA,GAEA,IAAAj0B,EAAA,CACA,GAAA6wB,GAAAlpE,KAAAqsE,YACA11B,EAAAK,EAAAqB,GAAA,CAEAiqB,GAAA,GAAA4G,EAAA,IACArG,EAAAh5D,KAAAy4D,EAAA,GAIA,KAFA,GAAA8H,GAAAlB,EAAA,GAEAkB,GAAAlB,EAAA,IAIA,GAHArG,EAAAh5D,KAAAugE,GAEAA,EAAA+B,EAAA/B,EAAA/xB,EAAA1B,GACAksB,EAAArgE,OAAA8pE,EACA,QAKAhK,GAAA,IAAAO,EAAArgE,OAAAqgE,IAAArgE,OAAA,GAAA0mE,EAAA,KACArG,EAAAh5D,KAAAy4D,EAAA,IAIA,MAAAO,IAMAF,eAAA,WAGA,OAFAC,MACAC,EAAA7iE,KAAA8iE,WACA5lE,EAAA,EAA2BA,EAAA2lE,EAAArgE,OAAkBtF,IAC7C0lE,EAAA/4D,KAAA7J,KAAA+iE,SAAAF,EAAA3lE,IAEA,OAAA0lE,IAOAG,SAAA,SAAAvkD,GACA,MAAA88B,GAAAC,UAAA/8B,IAQA4tD,UAAA,SAAApD,GACAA,KAAA,CACA,IAAA1G,GAAAtiE,KAAA69D,QACA0K,EAAAjG,EAAA,GAAAA,EAAA,EACA,IAAA1gD,SAAA2mD,GAAA,CAKAA,EAAA,IACAA,KACAjG,EAAAiK,UAKA,IAAAlgE,GAAA8/D,EACA9wB,EAAAtD,KAAAwwB,EAAAS,GAAA,GACAn7D,KAAAoC,IACA+mC,EAAAsrB,EAAA,IACAtrB,EAAAsrB,EAAA,KAGA,GAGA3rB,EAAAK,EAAA3qC,GAAA,EAEA68D,GACAiD,EAAAD,EAAA5J,EAAA,GAAAj2D,KAAAsqC,GACAw1B,EAAAF,EAAA3J,EAAA,GAAAj2D,KAAAsqC,GAGA32C,MAAAoiE,UAAA/1D,EACArM,KAAAqsE,YAAAnD,IASAA,WAAA,SAAAF,EAAAH,EAAAC,GACA,GAAAxG,GAAAtiE,KAAA69D,OAEA,IAAAyE,EAAA,KAAAA,EAAA,GACA,OAAAA,EAAA,IAEA,GAAAkK,GAAAlK,EAAA,EAMAwG,GAKAxG,EAAA,IAAAkK,EAAA,GAJAlK,EAAA,IAAAkK,EAAA,EACAlK,EAAA,IAAAkK,EAAA,OAOAlK,GAAA,IAGA,IAAAiG,GAAAjG,EAAA,GAAAA,EAAA,EAEA1gD,UAAA2mD,KACAjG,EAAA,KACAA,EAAA,MAGAtiE,KAAAosE,UAAApD,EAGA,IAAA3wB,GAAAr4C,KAAAoiE,SAEAyG,KACAvG,EAAA,GAAA6J,EAAAF,EAAA3J,EAAA,GAAAjqB,OAEAywB,IACAxG,EAAA,GAAA6J,EAAAD,EAAA5J,EAAA,GAAAjqB,SAQA6vB,GAAArkD,OAAA,WACA,UAAAqkD,IAGArrE,EAAAC,QAAAorE,G/Ey6jBMuE,IACA,SAAS5vE,EAAQC,QAASE,GgF1okBhC,GAAAqpB,GAAArpB,EAAA,KACAm/B,EAAAn/B,EAAA,KAEA4nC,EAAAzI,EAAAyI,eAEAqkC,EAAA,EAEA5kB,KAEAqoB,EAAA,GAOAroB,GAAAQ,OAAA,SAAAjnD,GAGA,OAAAA,GAAA,GAAAqrE,IAAAp7D,KAAA8+D,UAAAvkE,KAAAskE,IAMAroB,EAAAyB,uBAAA,SAAAW,GAEA,GAAAmmB,KAkBA,OAhBAnmB,GAAAomB,yBAAA,SAAAvoC,EAAAwoC,GACAxoC,EAAAM,EAAAN,GACAsoC,EAAAtoC,EAAAU,MAAA8nC,GAGArmB,EAAAsmB,iBAAA,SAAAzoC,EAAAoE,GACA,GAAA9qC,GAAA8qC,EAAA9qC,IACA,KAAAA,EAAA,CACA,GAAAipD,GAAAjiB,EAAAN,GAAAU,IACAyhB,GAAAS,YAAA5iB,IAAAsoC,EAAA/lB,KACAjpD,EAAAgvE,EAAA/lB,GAAAne,IAGA,MAAA9qC,IAGA6oD,GAYApC,EAAA0B,wBAAA,SAAAU,EAAAumB,GAsEA,QAAAC,GAAAC,GACA,GAAAC,MACAC,IAwBA,OAtBA/mD,GAAA/lB,KAAA4sE,EAAA,SAAA3sE,GAEA,GAAA8sE,GAAAC,EAAAH,EAAA5sE,GACAgtE,EAAAF,EAAAE,aAAAP,EAAAzsE,GAEAitE,EAAAC,EAAAF,EAAAL,EACAG,GAAAK,WAAAF,EAAAhrE,OACA,IAAA6qE,EAAAK,YACAN,EAAAvjE,KAAAtJ,GAGA8lB,EAAA/lB,KAAAktE,EAAA,SAAAG,GACAtnD,EAAA9a,QAAA8hE,EAAAO,YAAAD,GAAA,GACAN,EAAAO,YAAA/jE,KAAA8jE,EAEA,IAAAE,GAAAP,EAAAH,EAAAQ,EACAtnD,GAAA9a,QAAAsiE,EAAAC,UAAAH,GAAA,GACAE,EAAAC,UAAAjkE,KAAAtJ,QAKoB4sE,QAAAC,eAGpB,QAAAE,GAAAH,EAAA5sE,GAIA,MAHA4sE,GAAA5sE,KACA4sE,EAAA5sE,IAA+BqtE,eAAAE,eAE/BX,EAAA5sE,GAGA,QAAAktE,GAAAF,EAAAL,GACA,GAAAM,KAIA,OAHAnnD,GAAA/lB,KAAAitE,EAAA,SAAAQ,GACA1nD,EAAA9a,QAAA2hE,EAAAa,IAAA,GAAAP,EAAA3jE,KAAAkkE,KAEAP,EArGA/mB,EAAAunB,kBAAA,SAAAC,EAAAf,EAAAv7C,EAAApiB,GAgCA,QAAA2+D,GAAAC,GACAhB,EAAAgB,GAAAT,aACA,IAAAP,EAAAgB,GAAAT,YACAloC,EAAA37B,KAAAskE,GAUA,QAAAC,GAAAD,GACAE,EAAAF,IAAA,EACAD,EAAAC,GA9CA,GAAAF,EAAAzrE,OAAA,CAIA,GAAAy4B,GAAAgyC,EAAAC,GACAC,EAAAlyC,EAAAkyC,MACA3nC,EAAAvK,EAAAmyC,YAEAiB,IAKA,KAJAhoD,EAAA/lB,KAAA2tE,EAAA,SAAA1tE,GACA8tE,EAAA9tE,IAAA,IAGAilC,EAAAhjC,QAAA,CACA,GAAA8rE,GAAA9oC,EAAApvB,MACAm4D,EAAApB,EAAAmB,GACAE,IAAAH,EAAAC,EACAE,KACA78C,EAAA5xB,KAAAwP,EAAA++D,EAAAC,EAAAhB,aAAAj6D,eACA+6D,GAAAC,IAEAjoD,EAAA/lB,KACAiuE,EAAAT,UACAU,EAAAJ,EAAAF,GAIA7nD,EAAA/lB,KAAA+tE,EAAA,WACA,SAAAv1C,OAAA,qCA4EAj8B,EAAAC,QAAAunD,GhFmpkBMoqB,IACA,SAAS5xE,EAAQC,QAASE,GAEhC,YAGAk9B,QAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,IiFv0kBR3lB,EAAA,KADA,IAAIkwC,GAAUlwC,EAAQ,IAGtBA,GAAQ,KAGRA,EAAQ,KAERA,EAAQ,KAGRA,EAAQ,KAERA,EAAQ,KAERA,EAAQ,KjF+0kBRF,mBiF70kBe09B,QAAQ39B,OAAO,iBAC5B6xE,UAAU,aAAa,WACvB,OACCC,KAAM,SAAS5iE,EAAM3K,EAAQwtE,EAAMC,GAClC,QAASC,KACR,GAAIxvC,GAASvzB,EAAMhI,QAAUgI,EAAMhI,OAAOu7B,MACvCvzB,EAAMhI,OAAOu7B,MAAQ,UACpByE,EAAQmJ,EAAQ5U,KAAKl3B,EAAQ,GAAGk+B,EACjCvzB,GAAMhI,QAAUgI,EAAMhI,OAAOgrE,cAAe,GAC9ChrC,EAAM+H,cAGJ//B,EAAMhI,QAAUgI,EAAMhI,OAAOgrE,aAC/BhrC,EAAM0E,UAAU18B,EAAM28B,QACtB3E,EAAMriC,SACNqiC,EAAMiI,eAGJjgC,EAAMhI,QAAUgI,EAAMhI,OAAOpG,OAC5B68B,QAAQkB,QAAQ3vB,EAAMhI,OAAOpG,QAC/B68B,QAAQgC,QAAQzwB,EAAMhI,OAAOpG,MAAM,SAASglB,EAAMQ,GACjD,IAAI,GAAIpR,KAAK4Q,GACZohB,EAAMvjC,GAAGuR,EAAE4Q,EAAM5Q,MAYtBhG,EAAMijE,OACL,WAAc,MAAOjjE,GAAMhI,QAC3B,SAAU4e,GAAYA,GAAQmsD,MAC9B,GAID/iE,EAAMijE,OACL,WAAc,MAAOjjE,GAAM28B,QAC3B,SAAU/lB,GAAYA,GAAQmsD,MAC9B,IAGF/iE,OACC28B,OAAO,YACP3kC,OAAO,aAERkrE,SAAS,UjFq1kBNC,IACA,SAASryE,EAAQC,SkFl5kBvB,QAAAqyE,GAAA5qD,GAGA,IAFA,GAAAnJ,GAAA,EAEAmJ,GAAA6qD,GACAh0D,GAAA,EAAAmJ,EACAA,IAAA,CAGA,OAAAA,GAAAnJ,EAGA,QAAAi0D,GAAAnzC,EAAAozC,EAAAC,EAAAC,GACA,GAAAC,GAAAH,EAAA,CAEA,IAAAG,IAAAF,EACA,QAGA,IAAAC,EAAAtzC,EAAAuzC,KAAAvzC,EAAAozC,IAAA,GACA,KAAAG,EAAAF,GAAAC,EAAAtzC,EAAAuzC,GAAAvzC,EAAAuzC,EAAA,OACAA,GAGAC,GAAAxzC,EAAAozC,EAAAG,OAGA,MAAAA,EAAAF,GAAAC,EAAAtzC,EAAAuzC,GAAAvzC,EAAAuzC,EAAA,QACAA,GAIA,OAAAA,GAAAH,EAGA,QAAAI,GAAAxzC,EAAAozC,EAAAC,GAGA,IAFAA,IAEAD,EAAAC,GAAA,CACA,GAAA7xD,GAAAwe,EAAAozC,EACApzC,GAAAozC,KAAApzC,EAAAqzC,GACArzC,EAAAqzC,KAAA7xD,GAIA,QAAAiyD,GAAAzzC,EAAAozC,EAAAC,EAAAh5D,EAAAi5D,GAKA,IAJAj5D,IAAA+4D,GACA/4D,IAGcA,EAAAg5D,EAAYh5D,IAAA,CAO1B,IANA,GAIA2oD,GAJA0Q,EAAA1zC,EAAA3lB,GAEA3S,EAAA0rE,EACArrD,EAAA1N,EAGA3S,EAAAqgB,GACAi7C,EAAAt7D,EAAAqgB,IAAA,EAEAurD,EAAAI,EAAA1zC,EAAAgjC,IAAA,EACAj7C,EAAAi7C,EAGAt7D,EAAAs7D,EAAA,CAIA,IAAA36C,GAAAhO,EAAA3S,CAEA,QAAA2gB,GACA,OACA2X,EAAAt4B,EAAA,GAAAs4B,EAAAt4B,EAAA,EAEA,QACAs4B,EAAAt4B,EAAA,GAAAs4B,EAAAt4B,EAAA,EAEA,QACAs4B,EAAAt4B,EAAA,GAAAs4B,EAAAt4B,EACA,MACA,SACA,KAAA2gB,EAAA,GACA2X,EAAAt4B,EAAA2gB,GAAA2X,EAAAt4B,EAAA2gB,EAAA,GACAA,IAIA2X,EAAAt4B,GAAAgsE,GAIA,QAAAC,GAAAltD,EAAAuZ,EAAA3lB,EAAA/T,EAAAstE,EAAAN,GACA,GAAAO,GAAA,EACAC,EAAA,EACAvK,EAAA,CAEA,IAAA+J,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,IAAA,GAGA,IAFAE,EAAAxtE,EAAAstE,EAEArK,EAAAuK,GAAAR,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,EAAArK,IAAA,GACAsK,EAAAtK,EACAA,MAAA,KAEAA,GAAA,IACAA,EAAAuK,EAIAvK,GAAAuK,IACAvK,EAAAuK,GAGAD,GAAAD,EACArK,GAAAqK,MAEA,CAEA,IADAE,EAAAF,EAAA,EACArK,EAAAuK,GAAAR,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,EAAArK,KAAA,GACAsK,EAAAtK,EACAA,MAAA,KAEAA,GAAA,IACAA,EAAAuK,EAGAvK,GAAAuK,IACAvK,EAAAuK,EAGA,IAAAp0D,GAAAm0D,CACAA,GAAAD,EAAArK,EACAA,EAAAqK,EAAAl0D,EAIA,IADAm0D,IACAA,EAAAtK,GAAA,CACA,GAAAr3D,GAAA2hE,GAAAtK,EAAAsK,IAAA,EAEAP,GAAA7sD,EAAAuZ,EAAA3lB,EAAAnI,IAAA,EACA2hE,EAAA3hE,EAAA,EAGAq3D,EAAAr3D,EAGA,MAAAq3D,GAGA,QAAAwK,GAAAttD,EAAAuZ,EAAA3lB,EAAA/T,EAAAstE,EAAAN,GACA,GAAAO,GAAA,EACAC,EAAA,EACAvK,EAAA,CAEA,IAAA+J,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,IAAA,GAGA,IAFAE,EAAAF,EAAA,EAEArK,EAAAuK,GAAAR,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,EAAArK,IAAA,GACAsK,EAAAtK,EACAA,MAAA,KAEAA,GAAA,IACAA,EAAAuK,EAIAvK,GAAAuK,IACAvK,EAAAuK,EAGA,IAAAp0D,GAAAm0D,CACAA,GAAAD,EAAArK,EACAA,EAAAqK,EAAAl0D,MAEA,CAGA,IAFAo0D,EAAAxtE,EAAAstE,EAEArK,EAAAuK,GAAAR,EAAA7sD,EAAAuZ,EAAA3lB,EAAAu5D,EAAArK,KAAA,GACAsK,EAAAtK,EACAA,MAAA,KAEAA,GAAA,IACAA,EAAAuK,EAIAvK,GAAAuK,IACAvK,EAAAuK,GAGAD,GAAAD,EACArK,GAAAqK,EAKA,IAFAC,IAEAA,EAAAtK,GAAA,CACA,GAAAr3D,GAAA2hE,GAAAtK,EAAAsK,IAAA,EAEAP,GAAA7sD,EAAAuZ,EAAA3lB,EAAAnI,IAAA,EACAq3D,EAAAr3D,EAGA2hE,EAAA3hE,EAAA,EAIA,MAAAq3D,GAGA,QAAAyK,GAAAh0C,EAAAszC,GAsBA,QAAAW,GAAAC,EAAAC,GACAC,EAAAC,GAAAH,EACAI,EAAAD,GAAAF,EACAE,GAAA,EAGA,QAAAE,KACA,KAAAF,EAAA,IACA,GAAAhsD,GAAAgsD,EAAA,CAEA,IAAAhsD,GAAA,GAAAisD,EAAAjsD,EAAA,IAAAisD,EAAAjsD,GAAAisD,EAAAjsD,EAAA,IAAAA,GAAA,GAAAisD,EAAAjsD,EAAA,IAAAisD,EAAAjsD,GAAAisD,EAAAjsD,EAAA,GACAisD,EAAAjsD,EAAA,GAAAisD,EAAAjsD,EAAA,IACAA,QAGA,IAAAisD,EAAAjsD,GAAAisD,EAAAjsD,EAAA,GACA,KAEAmsD,GAAAnsD,IAIA,QAAAosD,KACA,KAAAJ,EAAA,IACA,GAAAhsD,GAAAgsD,EAAA,CAEAhsD,GAAA,GAAAisD,EAAAjsD,EAAA,GAAAisD,EAAAjsD,EAAA,IACAA,IAGAmsD,EAAAnsD,IAIA,QAAAmsD,GAAAxzE,GACA,GAAA0zE,GAAAN,EAAApzE,GACA2zE,EAAAL,EAAAtzE,GACA4zE,EAAAR,EAAApzE,EAAA,GACA6zE,EAAAP,EAAAtzE,EAAA,EAEAszE,GAAAtzE,GAAA2zE,EAAAE,EAEA7zE,IAAAqzE,EAAA,IACAD,EAAApzE,EAAA,GAAAozE,EAAApzE,EAAA,GACAszE,EAAAtzE,EAAA,GAAAszE,EAAAtzE,EAAA,IAGAqzE,GAEA,IAAAh4D,GAAA03D,EAAA/zC,EAAA40C,GAAA50C,EAAA00C,EAAAC,EAAA,EAAArB,EACAoB,IAAAr4D,EACAs4D,GAAAt4D,EAEA,IAAAs4D,IAIAE,EAAAlB,EAAA3zC,EAAA00C,EAAAC,EAAA,GAAA30C,EAAA40C,EAAAC,IAAA,EAAAvB,GAEA,IAAAuB,IAIAF,GAAAE,EACAC,EAAAJ,EAAAC,EAAAC,EAAAC,GAGAE,EAAAL,EAAAC,EAAAC,EAAAC,KAIA,QAAAC,GAAAJ,EAAAC,EAAAC,EAAAC,GACA,GAAA7zE,GAAA,CAEA,KAAAA,EAAA,EAAuBA,EAAA2zE,EAAa3zE,IACpC0e,EAAA1e,GAAAg/B,EAAA00C,EAAA1zE,EAGA,IAAAg0E,GAAA,EACAC,EAAAL,EACAM,EAAAR,CAIA,IAFA10C,EAAAk1C,KAAAl1C,EAAAi1C,KAEA,MAAAJ,EAAA,CAOA,OAAAF,EAAA,CACA,IAAA3zE,EAAA,EAA2BA,EAAA6zE,EAAa7zE,IACxCg/B,EAAAk1C,EAAAl0E,GAAAg/B,EAAAi1C,EAAAj0E,EAGA,aADAg/B,EAAAk1C,EAAAL,GAAAn1D,EAAAs1D,IAOA,IAHA,GACAG,GAAAC,EAAAC,EADAC,EAAAC,IAGA,CACAJ,EAAA,EACAC,EAAA,EACAC,GAAA,CAEA,GACA,IAAA/B,EAAAtzC,EAAAi1C,GAAAv1D,EAAAs1D,IAAA,GAKA,GAJAh1C,EAAAk1C,KAAAl1C,EAAAi1C,KACAG,IACAD,EAAA,EAEA,MAAAN,EAAA,CACAQ,GAAA,CACA,YAOA,IAHAr1C,EAAAk1C,KAAAx1D,EAAAs1D,KACAG,IACAC,EAAA,EACA,MAAAT,EAAA,CACAU,GAAA,CACA,cAGiBF,EAAAC,GAAAE,EAEjB,IAAAD,EACA,KAGA,IAGA,GAFAF,EAAApB,EAAA/zC,EAAAi1C,GAAAv1D,EAAAs1D,EAAAL,EAAA,EAAArB,GAEA,IAAA6B,EAAA,CACA,IAAAn0E,EAAA,EAAmCA,EAAAm0E,EAAYn0E,IAC/Cg/B,EAAAk1C,EAAAl0E,GAAA0e,EAAAs1D,EAAAh0E,EAMA,IAHAk0E,GAAAC,EACAH,GAAAG,EACAR,GAAAQ,EACAR,GAAA,GACAU,GAAA,CACA,QAMA,GAFAr1C,EAAAk1C,KAAAl1C,EAAAi1C,KAEA,MAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,GAFAD,EAAAzB,EAAAj0D,EAAAs1D,GAAAh1C,EAAAi1C,EAAAJ,EAAA,EAAAvB,GAEA,IAAA8B,EAAA,CACA,IAAAp0E,EAAA,EAAmCA,EAAAo0E,EAAYp0E,IAC/Cg/B,EAAAk1C,EAAAl0E,GAAAg/B,EAAAi1C,EAAAj0E,EAOA,IAJAk0E,GAAAE,EACAH,GAAAG,EACAP,GAAAO,EAEA,IAAAP,EAAA,CACAQ,GAAA,CACA,QAKA,GAFAr1C,EAAAk1C,KAAAx1D,EAAAs1D,KAEA,MAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACiBH,GAAAK,GAAAJ,GAAAI,EAEjB,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EAOA,GAJAC,EAAAD,EAEAC,EAAA,IAAAA,EAAA,GAEA,IAAAZ,EAAA,CACA,IAAA3zE,EAAA,EAA2BA,EAAA6zE,EAAa7zE,IACxCg/B,EAAAk1C,EAAAl0E,GAAAg/B,EAAAi1C,EAAAj0E,EAEAg/B,GAAAk1C,EAAAL,GAAAn1D,EAAAs1D,OAEA,QAAAL,EACA,SAAA/3C,MAIA,KAAA57B,EAAA,EAA2BA,EAAA2zE,EAAa3zE,IACxCg/B,EAAAk1C,EAAAl0E,GAAA0e,EAAAs1D,EAAAh0E,QA7HA,KAAAA,EAAA,EAA2BA,EAAA2zE,EAAa3zE,IACxCg/B,EAAAk1C,EAAAl0E,GAAA0e,EAAAs1D,EAAAh0E,GAiIA,QAAA+zE,GAAAL,EAAAC,EAAAC,EAAAC,GACA,GAAA7zE,GAAA,CAEA,KAAAA,EAAA,EAAuBA,EAAA6zE,EAAa7zE,IACpC0e,EAAA1e,GAAAg/B,EAAA40C,EAAA5zE,EAGA,IAAAg0E,GAAAN,EAAAC,EAAA,EACAM,EAAAJ,EAAA,EACAK,EAAAN,EAAAC,EAAA,EACAY,EAAA,EACAC,EAAA,CAIA,IAFA11C,EAAAk1C,KAAAl1C,EAAAg1C,KAEA,MAAAL,EAAA,CAUA,OAAAE,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAh0E,EAAA2zE,EAAA,EAAqC3zE,GAAA,EAAQA,IAC7Cg/B,EAAA01C,EAAA10E,GAAAg/B,EAAAy1C,EAAAz0E,EAIA,aADAg/B,EAAAk1C,GAAAx1D,EAAAu1D,IAMA,IAFA,GAAAK,GAAAC,IAEA,CACA,GAAAJ,GAAA,EACAC,EAAA,EACAC,GAAA,CAEA,GACA,IAAA/B,EAAA5zD,EAAAu1D,GAAAj1C,EAAAg1C,IAAA,GAIA,GAHAh1C,EAAAk1C,KAAAl1C,EAAAg1C,KACAG,IACAC,EAAA,EACA,MAAAT,EAAA,CACAU,GAAA,CACA,YAOA,IAHAr1C,EAAAk1C,KAAAx1D,EAAAu1D,KACAG,IACAD,EAAA,EACA,MAAAN,EAAA,CACAQ,GAAA,CACA,cAGiBF,EAAAC,GAAAE,EAEjB,IAAAD,EACA,KAGA,IAGA,GAFAF,EAAAR,EAAAZ,EAAAr0D,EAAAu1D,GAAAj1C,EAAA00C,EAAAC,IAAA,EAAArB,GAEA,IAAA6B,EAAA,CAOA,IANAD,GAAAC,EACAH,GAAAG,EACAR,GAAAQ,EACAO,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAh0E,EAAAm0E,EAAA,EAA4Cn0E,GAAA,EAAQA,IACpDg/B,EAAA01C,EAAA10E,GAAAg/B,EAAAy1C,EAAAz0E,EAGA,QAAA2zE,EAAA,CACAU,GAAA,CACA,QAMA,GAFAr1C,EAAAk1C,KAAAx1D,EAAAu1D,KAEA,MAAAJ,EAAA,CACAQ,GAAA,CACA,OAKA,GAFAD,EAAAP,EAAAlB,EAAA3zC,EAAAg1C,GAAAt1D,EAAA,EAAAm1D,IAAA,EAAAvB,GAEA,IAAA8B,EAAA,CAOA,IANAF,GAAAE,EACAH,GAAAG,EACAP,GAAAO,EACAM,EAAAR,EAAA,EACAO,EAAAR,EAAA,EAEAj0E,EAAA,EAAmCA,EAAAo0E,EAAYp0E,IAC/Cg/B,EAAA01C,EAAA10E,GAAA0e,EAAA+1D,EAAAz0E,EAGA,IAAA6zE,GAAA,GACAQ,GAAA,CACA,QAMA,GAFAr1C,EAAAk1C,KAAAl1C,EAAAg1C,KAEA,MAAAL,EAAA,CACAU,GAAA,CACA,OAGAC,UACiBH,GAAAK,GAAAJ,GAAAI,EAEjB,IAAAH,EACA,KAGAC,GAAA,IACAA,EAAA,GAGAA,GAAA,EASA,GANAC,EAAAD,EAEAC,EAAA,IACAA,EAAA,GAGA,IAAAV,EAAA,CAMA,IALAK,GAAAP,EACAK,GAAAL,EACAe,EAAAR,EAAA,EACAO,EAAAT,EAAA,EAEAh0E,EAAA2zE,EAAA,EAAqC3zE,GAAA,EAAQA,IAC7Cg/B,EAAA01C,EAAA10E,GAAAg/B,EAAAy1C,EAAAz0E,EAGAg/B,GAAAk1C,GAAAx1D,EAAAu1D,OAEA,QAAAJ,EACA,SAAAj4C,MAKA,KADA64C,EAAAP,GAAAL,EAAA,GACA7zE,EAAA,EAA2BA,EAAA6zE,EAAa7zE,IACxCg/B,EAAAy1C,EAAAz0E,GAAA0e,EAAA1e,QAjJA,KAFAy0E,EAAAP,GAAAL,EAAA,GAEA7zE,EAAA,EAA2BA,EAAA6zE,EAAa7zE,IACxCg/B,EAAAy1C,EAAAz0E,GAAA0e,EAAA1e,GA/PA,GAIAozE,GACAE,EALAiB,EAAAC,EACAlvE,EAAA,EACAqvE,EAAAC,EACAC,EAAA,EAGAxB,EAAA,CAEA/tE,GAAA05B,EAAA15B,OAEAA,EAAA,EAAAsvE,IACAD,EAAArvE,IAAA,EAGA,IAAAoZ,KAEAm2D,GAAAvvE,EAAA,MAAAA,EAAA,QAAAA,EAAA,aAEA8tE,KACAE,KAiYAxwE,KAAAywE,YACAzwE,KAAA2wE,iBACA3wE,KAAAmwE,UAGA,QAAAr5B,GAAA5a,EAAAszC,EAAAF,EAAAC,GACAD,IACAA,EAAA,GAEAC,IACAA,EAAArzC,EAAA15B,OAGA,IAAAwvE,GAAAzC,EAAAD,CAEA,MAAA0C,EAAA,IAIA,GAAAxB,GAAA,CAEA,IAAAwB,EAAA5C,EAGA,MAFAoB,GAAAnB,EAAAnzC,EAAAozC,EAAAC,EAAAC,OACAG,GAAAzzC,EAAAozC,EAAAC,EAAAD,EAAAkB,EAAAhB,EAIA,IAAAyC,GAAA,GAAA/B,GAAAh0C,EAAAszC,GAEA0C,EAAA/C,EAAA6C,EAEA,IAEA,GADAxB,EAAAnB,EAAAnzC,EAAAozC,EAAAC,EAAAC,GACAgB,EAAA0B,EAAA,CACA,GAAAC,GAAAH,CACAG,GAAAD,IACAC,EAAAD,GAGAvC,EAAAzzC,EAAAozC,IAAA6C,EAAA7C,EAAAkB,EAAAhB,GACAgB,EAAA2B,EAGAF,EAAA9B,QAAAb,EAAAkB,GACAyB,EAAAxB,YAEAuB,GAAAxB,EACAlB,GAAAkB,QACS,IAAAwB,EAETC,GAAAtB,kBA7pBA,GAAAvB,GAAA,GAEAsC,EAAA,EAEAI,EAAA,GA4pBAj1E,GAAAC,QAAAg6C,GlFi6kBMs7B,IACA,SAASv1E,EAAQC,QAASE,GmF/imBhC,QAAAyrB,GAAA7f,GAEAA,QAEA+6D,EAAA5jE,KAAAC,KAAA4I,EAGA,QAAArI,KAAAqI,GAEAA,EAAA4H,eAAAjQ,IACA,UAAAA,IAEAP,KAAAO,GAAAqI,EAAArI,GAOAP,MAAA0D,MAAA,GAAAM,GAAA4E,EAAAlF,OAEA1D,KAAA2pB,MAAA,KAEA3pB,KAAAmM,eApCA,GAAAka,GAAArpB,EAAA,KAEAgH,EAAAhH,EAAA,KAEA2mE,EAAA3mE,EAAA,KACAiwB,EAAAjwB,EAAA,KAqCAyrB,GAAAlpB,WAEAkB,YAAAgoB,EAEA7qB,KAAA,cAQAkH,SAAA,EASAmH,WAAA,EAOAtB,EAAA,EAOAyH,GAAA,EAQA1E,OAAA,EAQAglB,WAAA,EAQAE,UAAA,EAQA5zB,QAAA,EAOAsP,SAAA,EAOAvN,OAAA,UAOAjC,WAAA,EAOAkR,eAEAtB,YAAA,SAAA1J,KAEA4J,WAAA,SAAA5J,KAOA2J,MAAA,SAAA3J,EAAAyJ,KAOAxH,gBAAA,aASA/H,QAAA,SAAAN,EAAAC,GACA,MAAAmB,MAAAqyE,YAAAzzE,EAAAC,IAOA+T,SAAA,SAAAtD,EAAAC,GACAD,EAAAvP,KAAAwP,EAAAvP,OAUAqyE,YAAA,SAAAzzE,EAAAC,GACA,GAAAyzE,GAAAtyE,KAAAo0B,sBAAAx1B,EAAAC,GACAqqB,EAAAlpB,KAAAiH,iBACA,OAAAiiB,GAAAhqB,QAAAozE,EAAA,GAAAA,EAAA,KAOAl+D,MAAA,WACApU,KAAA8E,SAAA,EAEA9E,KAAA2pB,MAAA,KAEA3pB,KAAAgB,MAAAhB,KAAAgB,KAAAwJ,WAsBA+nE,aAAA,SAAA37D,GACA,MAAA5W,MAAA2W,QAAA,QAAAC,IAGAqjC,OAAA,SAAA92B,EAAAR,GACA,UAAAQ,EACAwgD,EAAApkE,UAAA06C,OAAAl6C,KAAAC,KAAAmjB,EAAAR,GAGA3iB,KAAA0D,MAAAg3C,IAAA/3B,IAQAxX,SAAA,SAAAgY,EAAAR,GAGA,MAFA3iB,MAAA0D,MAAAg3C,IAAAv3B,EAAAR,GACA3iB,KAAAoU,OAAA,GACApU,MAOAwyE,SAAA,SAAAz4C,GAGA,MAFA/5B,MAAA0D,MAAA,GAAAM,GAAA+1B,GACA/5B,KAAAoU,OAAA,GACApU,OAIAqmB,EAAAgC,SAAAI,EAAAk7C,GAEAt9C,EAAAzjB,MAAA6lB,EAAAwE,GAGApwB,EAAAC,QAAA2rB,GnF2kmBMgqD,IACA,SAAS51E,EAAQC,SoFl1mBvB,GAAAmrB,GAAA,SAAAtiB,GAEA3F,KAAA2F,iBAGAsiB,GAAA1oB,WAEAkB,YAAAwnB,EAEAyqD,aAAA,SAAAjN,EAAAp2B,GACArvC,KAAA2F,WAAAkE,MAEA47D,SAEAp2B,YAKAxyC,EAAAC,QAAAmrB,GpF81mBM0qD,IACA,SAAS91E,EAAQC,QAASE,GqF72mBhC,QAAA41E,GAAAC,GAMA,MALAA,eAAA5+D,OACA4+D,EAAAv/D,UACAu/D,MACAA,EAAA,MACAA,EAAA,MACAA,EAUA,QAAAC,GAAAt0D,EAAAlT,EAAAynE,GACAprC,EAAAr1B,MAAAvS,KAAAC,MAEAA,KAAAgzE,WAAAx0D,EAAAlT,EAAAynE,GAKA,QAAAE,GAAA3yD,EAAAC,GACAvgB,KAAAb,OAAA2zB,MAAAxS,EAAAC,GA9BA,GAAA8F,GAAArpB,EAAA,KACAk2E,EAAAl2E,EAAA,KACA2qC,EAAA3qC,EAAA,KACAq+C,EAAAr+C,EAAA,KAwBAm2E,EAAAL,EAAAvzE,SAMA4zE,GAAAC,cAAA,SAAAC,EAAA70D,EAAAlT,GAEAtL,KAAAsjE,WAEA,IAAAthC,GAAAxjB,EAAAm9C,UACAtsB,EAAA7wB,EAAAssB,cAAAx/B,EAAA,SAQAgoE,EAAAJ,EAAAK,aACAF,QAAA,IAAAhkC,EAGAikC,GAAAnhD,MACA/f,GAAA,IACA9D,SAAA,EACAnJ,OAAA,OAGAmuE,EAAAxgD,MAAAmgD,CAEA,IAAA7U,GAAAwU,EAAAp0D,EAAAssB,cAAAx/B,EAAA,cAEAq8B,GAAAgN,UAAA2+B,GACAnuE,MAAAi5D,GACSp8B,EAAA12B,GACTtL,KAAAwzE,YAAAH,EAEArzE,KAAA4qB,IAAA0oD,IAOAH,EAAAM,oBAAA,SAAAC,GACA1zE,KAAA8nD,QAAA,GAAAt2B,cAAAkiD,IAMAP,EAAAQ,cAAA,WACA,MAAA3zE,MAAA8nD,QAAA,IAOAqrB,EAAAS,SAAA,WACA,MAAA5zE,MAAA8nD,QAAA,GAAA3iD,OAMAguE,EAAA1nC,UAAA,WACAzrC,KAAA8nD,QAAA,GAAArmD,QAAA,aAMA0xE,EAAAznC,SAAA,WACA1rC,KAAA8nD,QAAA,GAAArmD,QAAA,WAOA0xE,EAAAU,KAAA,SAAAnmE,EAAA/C,GACA,GAAA2oE,GAAAtzE,KAAA8nD,QAAA,EACAwrB,GAAA5lE,SACA4lE,EAAA3oE,KAGAwoE,EAAAW,aAAA,SAAAphD,GACA,GAAA4gD,GAAAtzE,KAAA8nD,QAAA,EACAwrB,GAAA5gD,YACA4gD,EAAAvyE,OAAA2xB,EAAA,kBAQAygD,EAAAH,WAAA,SAAAx0D,EAAAlT,EAAAynE,GACA/yE,KAAAhB,QAAA,CAEA,IAAAq0E,GAAA70D,EAAAssB,cAAAx/B,EAAA,oBACA02B,EAAAxjB,EAAAm9C,UACAkX,EAAAD,EAAAp0D,EAAAssB,cAAAx/B,EAAA,cACA,IAAA+nE,IAAArzE,KAAAwzE,YACAxzE,KAAAozE,cAAAC,EAAA70D,EAAAlT,OAEA,CACA,GAAAgoE,GAAAtzE,KAAA8nD,QAAA,EACAngB,GAAA+M,YAAA4+B,GACAnuE,MAAA0tE,GACa7wC,EAAA12B,GAEbtL,KAAA+zE,cAAAv1D,EAAAlT,EAAAunE,EAAAE,GACA/yE,KAAAg0E,aAAAhyC,EAIA,IAAAiyC,IAAA,sBACAC,GAAA,wBACAC,GAAA,kBACAC,GAAA,mBAEAjB,GAAAY,cAAA,SAAAv1D,EAAAlT,EAAAunE,EAAAE,GACA,GAAAO,GAAAtzE,KAAA8nD,QAAA,GACA9lB,EAAAxjB,EAAAm9C,UACAtsB,EAAA7wB,EAAAssB,cAAAx/B,EAAA,QAGA,WAAAgoE,EAAA11E,MACA01E,EAAAd,UACA54B,eAAA,IAIAm5B,KAAA,IAEA,IAAAsB,GAAAtB,KAAAsB,UACAC,EAAAvB,KAAAuB,eACAC,EAAAxB,KAAAwB,aACAC,EAAAzB,KAAAyB,aACApgC,EAAA2+B,KAAA3+B,WACAqgC,EAAA1B,KAAA0B,gBACAC,EAAA3B,KAAA2B,cAEA,KAAA3B,GAAAv0D,EAAAu/C,cAAA,CACA,GAAAze,GAAA9gC,EAAA+gC,aAAAj0C,EAIA+oE,GAAA/0B,EAAApW,SAAA+qC,GAAAU,cAAA,UACAL,EAAAh1B,EAAApW,SAAAgrC,GAAAS,eAEAJ,EAAAj1B,EAAAzN,WAAA,gBACA2iC,EAAAl1B,EAAAzN,WAAA,gBAEAuC,EAAAkL,EAAApW,SAAAirC,GACAM,EAAAn1B,EAAApW,SAAAkrC,GACAM,EAAAp1B,EAAAzN,WAAA,sBAGAyiC,GAAAjuD,EAAApd,UAA6CqrE,EAG7C,IAAAM,GAAAtB,EAAA5vE,KAEA4vE,GAAAnhD,KAAA,YAAAoiD,GAAA,GAAA1mE,KAAAyL,GAAA,QAEAk7D,GACAlB,EAAAnhD,KAAA,YACAkpB,EAAAvuB,aAAA0nD,EAAA,GAAA3B,EAAA,IACAx3B,EAAAvuB,aAAA0nD,EAAA,GAAA3B,EAAA,MAKAS,EAAAuB,SAAAxlC,GAEAikC,EAAAnoE,SAAAkpE,EAEA,IAAAhmE,GAAAmQ,EAAAssB,cAAAx/B,EAAA,UACA,OAAA+C,IACAumE,EAAAvmE,UAOA,KAHA,GACAymE,GACAnoC,EAFA0uB,EAAA78C,EAAA68C,WAAA/nD,QAGA+nD,EAAA74D,SACAsyE,EAAAzZ,EAAAjlD,MACAu2B,EAAAnuB,EAAAk9C,iBAAAoZ,GAAAl3E,KACA,YAAA+uC,GAAA,SAAAA,KAGA,MAAAmoC,GAAA1gC,EAAAvC,WAAA,SACAlK,EAAAuM,QAAA0gC,EAAAxgC,EAAA/E,GACAulC,EAAAhsD,KAAAvC,EAAAiX,SACA0E,EAAAod,kBAAA9zC,EAAA,UACAkT,EAAAnK,IAAAygE,EAAAxpE,KAIAspE,EAAAhsD,KAAA,GAGA,MAAAksD,GAAAL,EAAA5iC,WAAA,SACAlK,EAAAuM,QAAAogC,EAAAG,EAAAplC,GACAilC,EAAA1rD,KAAAvC,EAAAiX,SACA0E,EAAAod,kBAAA9zC,EAAA,YACAkT,EAAAnK,IAAAygE,EAAAxpE,KAIAgpE,EAAA1rD,KAAA,EAGA,IAAAw1C,GAAAwU,EAAAp0D,EAAAssB,cAAAx/B,EAAA,cAWA,IATAgoE,EAAAl9C,IAAA,aACAA,IAAA,YACAA,IAAA,YACAA,IAAA,UAEAk9C,EAAAvoE,WAAAupE,EAEA3sC,EAAAqM,cAAAs/B,GAEAoB,GAAA1yC,EAAA4P,oBAAA,CACA,GAAAmjC,GAAA,WACA,GAAAC,GAAA5W,EAAA,GAAAA,EAAA,EACAp+D,MAAA0xB,WACAvsB,OACA0I,KAAAoC,IAAA,IAAAmuD,EAAA,GAAAA,EAAA,MACAvwD,KAAAoC,IAAA,IAAAmuD,EAAA,GAAAA,EAAA,KAAA4W,KAEiB,mBAEjBC,EAAA,WACAj1E,KAAA0xB,WACAvsB,MAAAi5D,GACiB,kBAEjBkV,GAAA9yE,GAAA,YAAAu0E,GACAv0E,GAAA,WAAAy0E,GACAz0E,GAAA,WAAAu0E,GACAv0E,GAAA,SAAAy0E,KAIA9B,EAAA+B,QAAA,SAAA5lE,GACA,GAAAgkE,GAAAtzE,KAAA8nD,QAAA,EAEA9nD,MAAAhB,QAAA,EAEAs0E,EAAA5vE,MAAAklB,KAAA,GACA+e,EAAA+M,YAAA4+B,GACAnuE,OAAA,MACSnF,KAAAg0E,aAAAh0E,KAAA6qC,UAAAv7B,IAGT+W,EAAAgC,SAAAyqD,EAAAnrC,EAAAr1B,OAEAzV,EAAAC,QAAAg2E,GrF83mBMqC,IACA,SAASt4E,EAAQC,QAASE,GAEhC,YsFpnnBA,SAAAo4E,GAAAC,EAAA3sC,GAEA,MAAAA,GAAA9qC,OAAA8qC,EAAAlqB,KAAA,oBApDA,GAAAmmB,GAAA3nC,EAAA,KACAqpB,EAAArpB,EAAA,KACAs4E,EAAAt4E,EAAA,KAEAu4E,EAAA5wC,EAAA17B,QAEArL,KAAA,kBAKAyqE,KAAA,KAKA/vC,KAAA,WACAi9C,EAAArvB,WAAAlmD,KAAA,OAAAkmB,WACAlmB,KAAAw1E,cAMAzyB,YAAA,WACAwyB,EAAArvB,WAAAlmD,KAAA,cAAAkmB,WACAlmB,KAAAw1E,cAMAxqC,YAAA,WACAuqC,EAAArvB,WAAAlmD,KAAA,cAAAkmB,WACAlmB,KAAAw1E,cAMAC,cAAA,WACA,MAAAz1E,MAAAihC,QAAAwgB,iBACA3f,SAAA,OACAG,MAAAjiC,KAAAqU,IAAA,aACArR,GAAAhD,KAAAqU,IAAA,YACa,KAUbgS,GAAAxX,MAAA0mE,EAAAh2E,UAAAvC,EAAA,MACAqpB,EAAAxX,MAAA0mE,EAAAh2E,UAAAvC,EAAA,KAEA,IAAA04E,IAKAjQ,OAAA,EAGA6P,GAAA,IAAAC,EAAAH,EAAAM,GACAJ,EAAA,IAAAC,EAAAH,EAAAM,GAEA74E,EAAAC,QAAAy4E,GtF+qnBMI,IACA,SAAS94E,EAAQC,QAASE,GuFzunBhC,QAAA44E,GAAAva,EAAA78C,EAAAq3D,EAAAC,GACA,IAAAt3D,EACA,MAAA68C,EAGA,IAAA0a,GAAAC,EAAAx3D,EAAA,IACAmhD,EAAAt5C,EAAAqV,QAAAq6C,MAAAvzE,QAAA,CAEAqzE,SACAC,KAAA,OACA,QAAA54E,GAAA,EAAuBA,EAAAyiE,EAAaziE,IACpC,IAAAm+D,EAAAn+D,GAAA,CACA,GAAAqD,GAAAs1E,EAAA34E,IAAA44E,GAAA54E,EAAA24E,EAAArzE,OACA64D,GAAAn+D,GAAA+4E,EAAAz3D,EAAAthB,IACuBU,KAAA,UAAA2C,QACvBA,EAIA,MAAA86D,GAwBA,QAAA2a,GAAAjtC,GACA,MAAA1iB,GAAAqV,QAAAqN,KAAA1iB,EAAAhiB,SAAA0kC,KAAApmB,MAAAomB,EAtDA,GAAA1iB,GAAArpB,EAAA,KAkCAi5E,EAAAL,EAAAK,aAAA,SAAAz3D,EAAA6gC,GACA,OAAAniD,GAAA,EAAAyO,EAAA6S,EAAAhc,OAA0CtF,EAAAyO,EAASzO,IAAA,CACnD,GAAAylB,GAAAqzD,EAAAx3D,EAAAthB,GAEA,KAAAmpB,EAAAqV,QAAA/Y,GACA,QAGA,IAAAA,KAAA08B,EACA,UAAA18B,GAAAf,SAAAe,GACA,QAEA,IAAA0D,EAAAyK,SAAAnO,IAAA,MAAAA,EACA,SAGA,SAOA9lB,GAAAC,QAAA84E,GvFgwnBMM,IACA,SAASr5E,EAAQC,SwF9znBvBD,EAAAC,SACAkpC,kBAAA,WACAhmC,KAAAm2E,UAAA,EACAn2E,KAAAo2E,kBAGAzK,oBAAA,SAAAprE,EAAAwL,GACAA,KAAA/L,IACA,IAAAq2E,GAAAtqE,EAAAoqE,WAAA,EACAG,EAAAvqE,EAAAqqE,gBAAArqE,EAAAqqE,iBACA,IAAAE,EAAA/1E,GACA,MAAA+1E,GAAA/1E,EAEA,IAAAg2E,GAAAv2E,KAAAqU,IAAA,eACA,IAAAkiE,EAAA/zE,OAAA,CAIA,GAAA6sC,GAAAknC,EAAAF,EAMA,OALA91E,KACA+1E,EAAA/1E,GAAA8uC,GAEAtjC,EAAAoqE,WAAAE,EAAA,GAAAE,EAAA/zE,OAEA6sC,MxFw0nBMmnC,IACA,SAAS35E,EAAQC,QAASE,GAEhC,YyFh2nBA,IAAA2qC,GAAA3qC,EAAA,KACAsL,EAAAtL,EAAA,KAMAy5E,EAAA9uC,EAAAmL,aACAl1C,KAAA,WACAkK,OACAoT,GAAA,EACAC,GAAA,EACA9X,MAAA,EACAE,OAAA,GAEAsE,UAAA,SAAAH,EAAAI,GACA,GAAAoT,GAAApT,EAAAoT,GACAC,EAAArT,EAAAqT,GACA9X,EAAAyE,EAAAzE,MAAA,EACAE,EAAAuE,EAAAvE,OAAA,CACAmE,GAAAwiB,OAAAhP,EAAAC,EAAA5X,GACAmE,EAAAyiB,OAAAjP,EAAA7X,EAAA8X,EAAA5X,GACAmE,EAAAyiB,OAAAjP,EAAA7X,EAAA8X,EAAA5X,GACAmE,EAAA+oB,eAOAimD,EAAA/uC,EAAAmL,aACAl1C,KAAA,UACAkK,OACAoT,GAAA,EACAC,GAAA,EACA9X,MAAA,EACAE,OAAA,GAEAsE,UAAA,SAAAH,EAAAI,GACA,GAAAoT,GAAApT,EAAAoT,GACAC,EAAArT,EAAAqT,GACA9X,EAAAyE,EAAAzE,MAAA,EACAE,EAAAuE,EAAAvE,OAAA,CACAmE,GAAAwiB,OAAAhP,EAAAC,EAAA5X,GACAmE,EAAAyiB,OAAAjP,EAAA7X,EAAA8X,GACAzT,EAAAyiB,OAAAjP,EAAAC,EAAA5X,GACAmE,EAAAyiB,OAAAjP,EAAA7X,EAAA8X,GACAzT,EAAA+oB,eAQAkmD,EAAAhvC,EAAAmL,aACAl1C,KAAA,MACAkK,OAEAlJ,EAAA,EACAC,EAAA,EACAwE,MAAA,EACAE,OAAA,GAGAsE,UAAA,SAAAH,EAAAI,GACA,GAAAlJ,GAAAkJ,EAAAlJ,EACAC,EAAAiJ,EAAAjJ,EACA2e,EAAA1V,EAAAzE,MAAA,IAEAy5C,EAAAjvC,KAAAoC,IAAAuN,EAAA1V,EAAAvE,QACA6X,EAAAoC,EAAA,EAGA+C,EAAAnF,KAAA0hC,EAAA1hC,GACAD,EAAAtc,EAAAi+C,EAAA1hC,EAAAmF,EACA1E,EAAAhO,KAAAwM,KAAAkG,EAAAnF,GAEAkF,EAAAzS,KAAAwL,IAAAwC,GAAAT,EAEAw7D,EAAA/oE,KAAA2L,IAAAqC,GACAg7D,EAAAhpE,KAAAwL,IAAAwC,EAEAnU,GAAAiY,IACA/gB,EAAAuc,EAAAC,EACAvN,KAAAyL,GAAAuC,EACA,EAAAhO,KAAAyL,GAAAuC,EAGA,IAAAi7D,GAAA,GAAA17D,EACA27D,EAAA,GAAA37D,CACA1T,GAAAkoB,cACAhxB,EAAA0hB,EAAAs2D,EAAAE,EAAA37D,EAAAoF,EAAAs2D,EAAAC,EACAl4E,EAAAC,EAAAk4E,EACAn4E,EAAAC,GAEA6I,EAAAkoB,cACAhxB,EAAAC,EAAAk4E,EACAn4E,EAAA0hB,EAAAs2D,EAAAE,EAAA37D,EAAAoF,EAAAs2D,EAAAC,EACAl4E,EAAA0hB,EAAAnF,EAAAoF,GAEA7Y,EAAA+oB,eAQAumD,EAAArvC,EAAAmL,aAEAl1C,KAAA,QAEAkK,OACAlJ,EAAA,EACAC,EAAA,EACAwE,MAAA,EACAE,OAAA,GAGAsE,UAAA,SAAA7C,EAAA8C,GACA,GAAAvE,GAAAuE,EAAAvE,OACAF,EAAAyE,EAAAzE,MACAzE,EAAAkJ,EAAAlJ,EACAC,EAAAiJ,EAAAjJ,EACAyhB,EAAAjd,EAAA,GACA2B,GAAAklB,OAAAtrB,EAAAC,GACAmG,EAAAmlB,OAAAvrB,EAAA0hB,EAAAzhB,EAAA0E,GACAyB,EAAAmlB,OAAAvrB,EAAAC,EAAA0E,EAAA,KACAyB,EAAAmlB,OAAAvrB,EAAA0hB,EAAAzhB,EAAA0E,GACAyB,EAAAmlB,OAAAvrB,EAAAC,GACAmG,EAAAyrB,eAQAwmD,GACAn3D,KAAA6nB,EAAA+K,KAEAxpB,KAAAye,EAAA8K,KAEAykC,UAAAvvC,EAAA8K,KAEA0kC,OAAAxvC,EAAA8K,KAEA2kC,OAAAzvC,EAAAyK,OAEAilC,QAAAX,EAEAY,IAAAX,EAEAY,MAAAP,EAEAQ,SAAAf,GAGAgB,GAEA33D,KAAA,SAAAlhB,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GAEAA,EAAAqU,GAAAvd,EACAkJ,EAAAsU,GAAAvd,EAAAi+C,EAAA,EACAh1C,EAAAuU,GAAAzd,EAAA4e,EACA1V,EAAAwU,GAAAzd,EAAAi+C,EAAA,GAGA5zB,KAAA,SAAAtqB,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAlJ,IACAkJ,EAAAjJ,IACAiJ,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,GAGAo6B,UAAA,SAAAt4E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAlJ,IACAkJ,EAAAjJ,IACAiJ,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,EACAh1C,EAAAsT,EAAAvN,KAAAC,IAAA0P,EAAAs/B,GAAA,GAGAq6B,OAAA,SAAAv4E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACA,GAAAs2D,GAAAvwD,KAAAC,IAAA0P,EAAAs/B,EACAh1C,GAAAlJ,IACAkJ,EAAAjJ,IACAiJ,EAAAzE,MAAA+6D,EACAt2D,EAAAvE,OAAA66D,GAGAgZ,OAAA,SAAAx4E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GAEAA,EAAAoT,GAAAtc,EAAA4e,EAAA,EACA1V,EAAAqT,GAAAtc,EAAAi+C,EAAA,EACAh1C,EAAAsT,EAAAvN,KAAAC,IAAA0P,EAAAs/B,GAAA,GAGAu6B,QAAA,SAAAz4E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAoT,GAAAtc,EAAA4e,EAAA,EACA1V,EAAAqT,GAAAtc,EAAAi+C,EAAA,EACAh1C,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,GAGAw6B,IAAA,SAAA14E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAlJ,IAAA4e,EAAA,EACA1V,EAAAjJ,IAAAi+C,EAAA,EACAh1C,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,GAGAy6B,MAAA,SAAA34E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAlJ,IAAA4e,EAAA,EACA1V,EAAAjJ,IAAAi+C,EAAA,EACAh1C,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,GAGA06B,SAAA,SAAA54E,EAAAC,EAAA2e,EAAAs/B,EAAAh1C,GACAA,EAAAoT,GAAAtc,EAAA4e,EAAA,EACA1V,EAAAqT,GAAAtc,EAAAi+C,EAAA,EACAh1C,EAAAzE,MAAAma,EACA1V,EAAAvE,OAAAu5C,IAIA46B,IACA,QAAAn3E,KAAA02E,GACAA,EAAAzmE,eAAAjQ,KACAm3E,EAAAn3E,GAAA,GAAA02E,GAAA12E,GAIA,IAAAuyE,GAAAnrC,EAAAmL,aAEAl1C,KAAA,SAEAkK,OACAurE,WAAA,GACAz0E,EAAA,EACAC,EAAA,EACAwE,MAAA,EACAE,OAAA,GAGAmL,YAAA,WACA,GAAAhL,GAAA1D,KAAA0D,MACAoE,EAAA9H,KAAA8H,KAEA,SAAAA,EAAAurE,YAAA,WAAA3vE,EAAA0pB,eACA1pB,EAAA0pB,cAAA,aACA1pB,EAAAolB,UAAA,SACAplB,EAAAulB,kBAAA,WAIAphB,UAAA,SAAA7C,EAAA8C,EAAAmoB,GACA,GAAAojD,GAAAvrE,EAAAurE,WACAsE,EAAAD,EAAArE,EACA,UAAAvrE,EAAAurE,aACAsE,IAEAtE,EAAA,OACAsE,EAAAD,EAAArE,IAEAoE,EAAApE,GACAvrE,EAAAlJ,EAAAkJ,EAAAjJ,EAAAiJ,EAAAzE,MAAAyE,EAAAvE,OAAAo0E,EAAA7vE,OAEA6vE,EAAA9vE,UAAA7C,EAAA2yE,EAAA7vE,MAAAmoB,OAMA2nD,EAAA,SAAAvoC,GACA,aAAArvC,KAAApC,KAAA,CACA,GAAAi6E,GAAA73E,KAAA0D,MACAo0E,EAAA93E,KAAA8H,KACAgwE,IAAA,SAAAA,EAAAzE,WACAwE,EAAAlpD,OAAA0gB,EAEArvC,KAAA+3E,gBACAF,EAAAlpD,OAAA0gB,EACAwoC,EAAAjpD,KAAA,SAIAipD,EAAAjpD,OAAAipD,EAAAjpD,KAAAygB,GACAwoC,EAAAlpD,SAAAkpD,EAAAlpD,OAAA0gB,IAEArvC,KAAAoU,OAAA,KAIA8+D,GAUAK,aAAA,SAAAF,EAAAz0E,EAAAC,EAAA2e,EAAAs/B,EAAAzN,GACA,GAAA6T,GAAA,IAAAmwB,EAAA9nE,QAAA,QACA23C,KACAmwB,IAAAl2B,OAAA,KAAAhe,cAAAk0C,EAAAl2B,OAAA,GAEA,IAAAm2B,EAkCA,OA/BAA,GADA,IAAAD,EAAA9nE,QAAA,YACA,GAAAo8B,GAAAsC,OACAvmC,OACAoC,MAAAutE,EAAA//D,MAAA,GACA1U,IACAC,IACAwE,MAAAma,EACAja,OAAAu5C,KAIA,IAAAu2B,EAAA9nE,QAAA,WACAo8B,EAAAqL,SAAAqgC,EAAA//D,MAAA,MAAqE,GAAAhL,GAAA1J,EAAAC,EAAA2e,EAAAs/B,IAGrE,GAAAg2B,IACAhrE,OACAurE,aACAz0E,IACAC,IACAwE,MAAAma,EACAja,OAAAu5C,KAKAw2B,EAAAyE,eAAA70B,EAEAowB,EAAAuB,SAAA+C,EAEAtE,EAAAuB,SAAAxlC,GAEAikC,GAIAz2E,GAAAC,QAAAo2E,GzF02nBM8E,IACA,SAASn7E,EAAQC,S0F5soBvB,GAAA04C,EAGAA,GAAA,WAAiB,MAAAx1C,QAEjB,KAEAw1C,KAAAhY,SAAA,qBAAAy6C,MAAA,QACC,MAAAlmE,GAED,gBAAAw1B,UACAiO,EAAAjO,QAOA1qC,EAAAC,QAAA04C,G1FmtoBM0iC,IACA,SAASr7E,EAAQC,QAASE,GAEhC,Y2FluoBA,IAAAg7B,GAAAh7B,EAAA,KACAsC,EAAAtC,EAAA,KACAw2B,EAAAx2B,EAAA,MACAg0B,EAAAh0B,EAAA,MACAqpB,EAAArpB,EAAA,KASA2mE,EAAA,SAAA/6D,GAEA4qB,EAAAzzB,KAAAC,KAAA4I,GACAtJ,EAAAS,KAAAC,KAAA4I,GACAooB,EAAAjxB,KAAAC,KAAA4I,GAMA5I,KAAAgD,GAAA4F,EAAA5F,IAAAg1B,IAGA2rC,GAAApkE,WAOA3B,KAAA,UAOA2C,KAAA,GAQAS,KAAA,KASAyB,QAAA,EASAxD,SAAA,KAOA6zB,MAAA,SAAAxS,EAAAC,GACA,OAAAvgB,KAAA0yB,WACA,iBACAnS,EAAA,CACA,MACA,gBACAD,EAAA,EAIA,GAAAlS,GAAApO,KAAAkH,SACAkH,KACAA,EAAApO,KAAAkH,WAAA,cAEAkH,EAAA,IAAAkS,EACAlS,EAAA,IAAAmS,EAEAvgB,KAAAi0B,qBACAj0B,KAAAoU,OAAA,IAMAjB,aAAA,aAIAC,YAAA,aAIAP,OAAA,WACA7S,KAAAqT,mBAOAT,SAAA,SAAAtD,EAAAC,KAKA0qC,OAAA,SAAA92B,EAAAR,GACA,gBAAAQ,GAAA,UAAAA,GAAA,WAAAA,GAEA,GAAAR,EAAA,CACA,GAAAjlB,GAAAsC,KAAAmjB,EACAzlB,KACAA,EAAAsC,KAAAmjB,OAEAzlB,EAAA,GAAAilB,EAAA,GACAjlB,EAAA,GAAAilB,EAAA,QAIA3iB,MAAAmjB,GAAAR,GAOAw1D,KAAA,WACAn4E,KAAAyC,QAAA,EACAzC,KAAAgB,MAAAhB,KAAAgB,KAAAwJ,WAMA4tE,KAAA,WACAp4E,KAAAyC,QAAA,EACAzC,KAAAgB,MAAAhB,KAAAgB,KAAAwJ,WAOA2nB,KAAA,SAAAhP,EAAAR,GACA,mBAAAQ,GACAnjB,KAAAi6C,OAAA92B,EAAAR,OAEA,IAAA0D,EAAAhiB,SAAA8e,GACA,OAAA5iB,KAAA4iB,GACAA,EAAA3S,eAAAjQ,IACAP,KAAAi6C,OAAA15C,EAAA4iB,EAAA5iB,GAOA,OAFAP,MAAAoU,OAAA,GAEApU,MAMAq4E,YAAA,SAAAp5E,GACA,GAAAkyB,GAAAnxB,KAAAgB,IACAmwB,IACAlyB,EAAAq6B,YAAAnI,GAIAnxB,KAAAf,UAAAe,KAAAf,cACAe,KAAAs4E,iBAGAt4E,KAAAf,WACAA,EAAA+B,KAAAmwB,EACAlyB,EAAA86C,aAAA/5C,KAEAA,KAAAoU,OAAA,IAKAkkE,eAAA,WACA,GAAAr5E,GAAAe,KAAAf,QACAA,KACAA,EAAA+B,MACA/B,EAAAo6B,iBAAAp6B,EAAA+B,MAGA/B,EAAA+B,KAAA,KACA/B,EAAA86C,aAAA,KACA/5C,KAAAf,SAAA,KAEAe,KAAAoU,OAAA,KASAklB,YAAA,SAAAnI,GACAnxB,KAAAgB,KAAAmwB,CAEA,IAAAF,GAAAjxB,KAAAixB,SACA,IAAAA,EACA,OAAA/zB,GAAA,EAA+BA,EAAA+zB,EAAAzuB,OAAsBtF,IACrDi0B,EAAA3b,UAAAF,YAAA2b,EAAA/zB,GAIA8C,MAAAf,UACAe,KAAAf,SAAAq6B,YAAAnI,IASAkI,iBAAA,SAAAlI,GACAnxB,KAAAgB,KAAA,IAEA,IAAAiwB,GAAAjxB,KAAAixB,SACA,IAAAA,EACA,OAAA/zB,GAAA,EAA+BA,EAAA+zB,EAAAzuB,OAAsBtF,IACrDi0B,EAAA3b,UAAAI,eAAAqb,EAAA/zB,GAIA8C,MAAAf,UACAe,KAAAf,SAAAo6B,iBAAAlI,KAKA9K,EAAAzjB,MAAA+gE,EAAA3yC,GACA3K,EAAAzjB,MAAA+gE,EAAAnwC,GACAnN,EAAAzjB,MAAA+gE,EAAArkE,GAEAzC,EAAAC,QAAA6mE,G3F8uoBM4U,IACA,SAAS17E,EAAQC,QAASE,G4Fx+oBhC,QAAAw7E,GAAA96E,EAAAylB,GACA,MAAAzlB,GAAAylB,GAGA,QAAAs1D,GAAA/6E,EAAAylB,EAAAR,GACAjlB,EAAAylB,GAAAR,EASA,QAAA+1D,GAAAzsD,EAAAC,EAAApU,GACA,OAAAoU,EAAAD,GAAAnU,EAAAmU,EASA,QAAA0sD,GAAA1sD,EAAAC,EAAApU,GACA,MAAAA,GAAA,GAAAoU,EAAAD,EAUA,QAAA2sD,GAAA3sD,EAAAC,EAAApU,EAAA6X,EAAAkpD,GACA,GAAAltE,GAAAsgB,EAAAzpB,MACA,OAAAq2E,EACA,OAAA37E,GAAA,EAA2BA,EAAAyO,EAASzO,IACpCyyB,EAAAzyB,GAAAw7E,EAAAzsD,EAAA/uB,GAAAgvB,EAAAhvB,GAAA4a,OAKA,QADAghE,GAAA7sD,EAAA,GAAAzpB,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IACpC,OAAAw6B,GAAA,EAA+BA,EAAAohD,EAAUphD,IACzC/H,EAAAzyB,GAAAw6B,GAAAghD,EACAzsD,EAAA/uB,GAAAw6B,GAAAxL,EAAAhvB,GAAAw6B,GAAA5f,GASA,QAAAihE,GAAAC,EAAAC,EAAAJ,GACA,GAAAK,GAAAF,EAAAx2E,OACA22E,EAAAF,EAAAz2E,MACA,IAAA02E,IAAAC,EAAA,CAEA,GAAAC,GAAAF,EAAAC,CACA,IAAAC,EAEAJ,EAAAx2E,OAAA22E,MAIA,QAAAj8E,GAAAg8E,EAAqCh8E,EAAAi8E,EAAaj8E,IAClD87E,EAAAnvE,KACA,IAAAgvE,EAAAI,EAAA/7E,GAAAm8E,EAAAt5E,KAAAk5E,EAAA/7E,KAOA,OADA47E,GAAAE,EAAA,IAAAA,EAAA,GAAAx2E,OACAtF,EAAA,EAAuBA,EAAA87E,EAAAx2E,OAAiBtF,IACxC,OAAA27E,EACAxiD,MAAA2iD,EAAA97E,MACA87E,EAAA97E,GAAA+7E,EAAA/7E,QAIA,QAAAw6B,GAAA,EAA+BA,EAAAohD,EAAUphD,IACzCrB,MAAA2iD,EAAA97E,GAAAw6B,MACAshD,EAAA97E,GAAAw6B,GAAAuhD,EAAA/7E,GAAAw6B,IAaA,QAAA4hD,GAAAN,EAAAC,EAAAJ,GACA,GAAAG,IAAAC,EACA,QAEA,IAAAttE,GAAAqtE,EAAAx2E,MACA,IAAAmJ,IAAAstE,EAAAz2E,OACA,QAEA,QAAAq2E,GACA,OAAA37E,GAAA,EAA2BA,EAAAyO,EAASzO,IACpC,GAAA87E,EAAA97E,KAAA+7E,EAAA/7E,GACA,aAMA,QADA47E,GAAAE,EAAA,GAAAx2E,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IACpC,OAAAw6B,GAAA,EAA+BA,EAAAohD,EAAUphD,IACzC,GAAAshD,EAAA97E,GAAAw6B,KAAAuhD,EAAA/7E,GAAAw6B,GACA,QAKA,UAeA,QAAA6hD,GACAttD,EAAAC,EAAAC,EAAAC,EAAA1O,EAAA2O,EAAAC,EAAAqD,EAAAkpD,GAEA,GAAAltE,GAAAsgB,EAAAzpB,MACA,OAAAq2E,EACA,OAAA37E,GAAA,EAA2BA,EAAAyO,EAASzO,IACpCyyB,EAAAzyB,GAAAs8E,EACAvtD,EAAA/uB,GAAAgvB,EAAAhvB,GAAAivB,EAAAjvB,GAAAkvB,EAAAlvB,GAAAwgB,EAAA2O,EAAAC,OAMA,QADAwsD,GAAA7sD,EAAA,GAAAzpB,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IACpC,OAAAw6B,GAAA,EAA+BA,EAAAohD,EAAUphD,IACzC/H,EAAAzyB,GAAAw6B,GAAA8hD,EACAvtD,EAAA/uB,GAAAw6B,GAAAxL,EAAAhvB,GAAAw6B,GAAAvL,EAAAjvB,GAAAw6B,GAAAtL,EAAAlvB,GAAAw6B,GACAha,EAAA2O,EAAAC,GAkBA,QAAAktD,GAAAvtD,EAAAC,EAAAC,EAAAC,EAAA1O,EAAA2O,EAAAC,GACA,GAAAC,GAAA,IAAAJ,EAAAF,GACAb,EAAA,IAAAgB,EAAAF,EACA,WAAAA,EAAAC,GAAAI,EAAAnB,GAAAkB,OACAJ,EAAAC,GAAA,EAAAI,EAAAnB,GAAAiB,EACAE,EAAA7O,EAAAwO,EAGA,QAAAutD,GAAA92D,GACA,GAAAsP,EAAAtP,GAAA,CACA,GAAAhX,GAAAgX,EAAAngB;AACA,GAAAyvB,EAAAtP,EAAA,KAEA,OADA6J,MACAtvB,EAAA,EAA+BA,EAAAyO,EAASzO,IACxCsvB,EAAA3iB,KAAAwvE,EAAAt5E,KAAA4iB,EAAAzlB,IAEA,OAAAsvB,GAGA,MAAA6sD,GAAAt5E,KAAA4iB,GAGA,MAAAA,GAGA,QAAA+2D,GAAArpB,GAKA,MAJAA,GAAA,GAAAxiD,KAAA6e,MAAA2jC,EAAA,IACAA,EAAA,GAAAxiD,KAAA6e,MAAA2jC,EAAA,IACAA,EAAA,GAAAxiD,KAAA6e,MAAA2jC,EAAA,IAEA,QAAAA,EAAAjoD,KAAA,SAGA,QAAAuxE,GAAApkE,EAAAiC,EAAAoiE,EAAAC,EAAAjd,GACA,GAAA/lD,GAAAtB,EAAAukE,QACAhjE,EAAAvB,EAAAwkE,QACAC,EAAA,WAAAxiE,EAEAiK,EAAAo4D,EAAAr3E,MACA,IAAAif,EAAA,CAIA,GAWAw4D,GAXAC,EAAAL,EAAA,GAAAl3D,MACAw3D,EAAAloD,EAAAioD,GACAE,GAAA,EACAC,GAAA,EAGAxB,EACAsB,GACAloD,EAAAioD,EAAA,IAEA,GAGAL,GAAA/iC,KAAA,SAAA5kC,EAAAC,GACA,MAAAD,GAAA4D,KAAA3D,EAAA2D,OAGAmkE,EAAAJ,EAAAp4D,EAAA,GAAA3L,IAOA,QALAwkE,MAEAC,KACAC,EAAAX,EAAA,GAAAl3D,MACA83D,GAAA,EACAv9E,EAAA,EAAuBA,EAAAukB,EAAcvkB,IAAA,CACrCo9E,EAAAzwE,KAAAgwE,EAAA38E,GAAA4Y,KAAAmkE,EAEA,IAAAt3D,GAAAk3D,EAAA38E,GAAAylB,KAUA,IAPAw3D,GAAAb,EAAA32D,EAAA63D,EAAA3B,KACAsB,GAAAx3D,IAAA63D,IACAC,GAAA,GAEAD,EAAA73D,EAGA,gBAAAA,GAAA,CACA,GAAA+3D,GAAArrC,EAAAnE,MAAAvoB,EACA+3D,IACA/3D,EAAA+3D,EACAN,GAAA,GAGAC,GAAA,EAGAE,EAAA1wE,KAAA8Y,GAEA,IAAA83D,EAAA,CAMA,OAFAE,GAAAJ,EAAA94D,EAAA,GAEAvkB,EAAA,EAAuBA,EAAAukB,EAAA,EAAkBvkB,IACzCi9E,EACApB,EAAAwB,EAAAr9E,GAAAy9E,EAAA9B,IAGAxiD,MAAAkkD,EAAAr9E,KAAAm5B,MAAAskD,IAAAN,GAAAD,IACAG,EAAAr9E,GAAAy9E,EAIAR,IAAApB,EAAAliE,EAAAtB,EAAA0B,QAAA2lD,GAAA+d,EAAA9B,EAIA,IAEAtiE,GACAiH,EACAyO,EACAC,EACAC,EACAC,EAPAwuD,EAAA,EACAC,EAAA,CAQA,IAAAT,EACA,GAAA/pB,IAAA,QAGA,IAAAv7C,GAAA,SAAApX,EAAAoa,GAIA,GAAAvK,EAEA,IAAAuK,EAAA,EACAvK,EAAA,MAEA,IAAAuK,EAAA+iE,EAAA,CAIA,IADAtkE,EAAA1I,KAAAC,IAAA8sE,EAAA,EAAAn5D,EAAA,GACAlU,EAAAgJ,EAAmChJ,GAAA,KACnC+sE,EAAA/sE,IAAAuK,GAD+CvK,KAM/CA,EAAAM,KAAAC,IAAAP,EAAAkU,EAAA,OAEA,CACA,IAAAlU,EAAAqtE,EAAuCrtE,EAAAkU,KACvC64D,EAAA/sE,GAAAuK,GADyDvK,KAKzDA,EAAAM,KAAAC,IAAAP,EAAA,EAAAkU,EAAA,GAEAm5D,EAAArtE,EACAstE,EAAA/iE,CAEA,IAAAs+B,GAAAkkC,EAAA/sE,EAAA,GAAA+sE,EAAA/sE,EACA,QAAA6oC,EAMA,GAFA54B,GAAA1F,EAAAwiE,EAAA/sE,IAAA6oC,EAEA4jC,EAKA,GAJA9tD,EAAAquD,EAAAhtE,GACA0e,EAAAsuD,EAAA,IAAAhtE,MAAA,GACA4e,EAAAouD,EAAAhtE,EAAAkU,EAAA,EAAAA,EAAA,EAAAlU,EAAA,GACA6e,EAAAmuD,EAAAhtE,EAAAkU,EAAA,EAAAA,EAAA,EAAAlU,EAAA,GACA4sE,EACAZ,EACAttD,EAAAC,EAAAC,EAAAC,EAAA5O,YACA3G,EAAAnZ,EAAAk/D,GACAic,OAGA,CACA,GAAAl2D,EACA,IAAAy3D,EACAz3D,EAAA42D,EACAttD,EAAAC,EAAAC,EAAAC,EAAA5O,YACA6yC,EAAA,GAEA1tC,EAAA+2D,EAAArpB,OAEA,IAAAgqB,EAEA,MAAA1B,GAAAzsD,EAAAC,EAAA3O,EAGAmF,GAAA62D,EACAvtD,EAAAC,EAAAC,EAAAC,EAAA5O,aAGA1G,EACApZ,EACAk/D,EACAj6C,OAKA,IAAAw3D,EACAvB,EACA2B,EAAAhtE,GAAAgtE,EAAAhtE,EAAA,GAAAiQ,EACA3G,EAAAnZ,EAAAk/D,GACAic,OAGA,CACA,GAAAl2D,EACA,IAAAy3D,EACAxB,EACA2B,EAAAhtE,GAAAgtE,EAAAhtE,EAAA,GAAAiQ,EACA6yC,EAAA,GAEA1tC,EAAA+2D,EAAArpB,OAEA,IAAAgqB,EAEA,MAAA1B,GAAA4B,EAAAhtE,GAAAgtE,EAAAhtE,EAAA,GAAAiQ,EAGAmF,GAAA+1D,EAAA6B,EAAAhtE,GAAAgtE,EAAAhtE,EAAA,GAAAiQ,GAEA1G,EACApZ,EACAk/D,EACAj6C,KAMA5a,EAAA,GAAAiP,IACAtZ,OAAA6X,EAAA0B,QACAE,KAAA8iE,EACArjE,KAAArB,EAAAulE,MACAzjE,MAAA9B,EAAA6B,OACAtC,UACA2C,UAAAmiE,GAOA,OAJApiE,IAAA,WAAAA,IACAzP,EAAAyP,UAGAzP,IA5aA,GAAAiP,GAAAha,EAAA,MACAqyC,EAAAryC,EAAA,KACAoC,EAAApC,EAAA,KACAi1B,EAAA7yB,EAAA6yB,YAEAonD,EAAAplE,MAAA1U,UAAA+T,MAkbAoB,EAAA,SAAAhX,EAAAkZ,EAAAC,EAAAC,GACA9W,KAAA+6E,WACA/6E,KAAAiX,QAAAvZ,EAEAsC,KAAA86E,MAAAlkE,IAAA,EAEA5W,KAAA85E,QAAAjjE,GAAA2hE,EACAx4E,KAAA+5E,QAAAjjE,GAAA2hE,EAEAz4E,KAAAg7E,WAAA,EAEAh7E,KAAAoX,OAAA,EAEApX,KAAAi7E,aAEAj7E,KAAAk7E,gBAEAl7E,KAAAm7E,aAGAzmE,GAAAnV,WAOA6yB,KAAA,SAAAtc,EAAAoc,GACA,GAAAkpD,GAAAp7E,KAAA+6E,OACA,QAAAne,KAAA1qC,GACA,GAAAA,EAAA1hB,eAAAosD,GAAA,CAIA,IAAAwe,EAAAxe,GAAA,CACAwe,EAAAxe,KAEA,IAAAj6C,GAAA3iB,KAAA85E,QAAA95E,KAAAiX,QAAA2lD,EACA,UAAAj6C,EAEA,QAMA,KAAA7M,GACAslE,EAAAxe,GAAA/yD,MACAiM,KAAA,EACA6M,MAAA82D,EAAA92D,KAIAy4D,EAAAxe,GAAA/yD,MACAiM,OACA6M,MAAAuP,EAAA0qC,KAGA,MAAA58D,OAOAsxB,OAAA,SAAAK,GAEA,MADA3xB,MAAAk7E,aAAArxE,KAAA8nB,GACA3xB,MAGAq7E,cAAA,WAEAr7E,KAAA+6E,WAEA/6E,KAAAm7E,UAAA34E,OAAA,CAIA,QAFA84E,GAAAt7E,KAAAi7E,UACAtvE,EAAA2vE,EAAA94E,OACAtF,EAAA,EAA2BA,EAAAyO,EAASzO,IACpCo+E,EAAAp+E,GAAA6C,KAAAC,OASAuW,MAAA,SAAAiB,GAEA,GAUA+jE,GAVAhvE,EAAAvM,KACAw7E,EAAA,EAEA5B,EAAA,WACA4B,IACAA,GACAjvE,EAAA8uE,gBAKA,QAAAze,KAAA58D,MAAA+6E,QACA,GAAA/6E,KAAA+6E,QAAAvqE,eAAAosD,GAAA,CAGA,GAAA70D,GAAA4xE,EACA35E,KAAAwX,EAAAoiE,EACA55E,KAAA+6E,QAAAne,KAEA70D,KACA/H,KAAAm7E,UAAAtxE,KAAA9B,GACAyzE,IAGAx7E,KAAAwV,WACAxV,KAAAwV,UAAAH,QAAAtN,GAGAwzE,EAAAxzE,GAKA,GAAAwzE,EAAA,CACA,GAAAE,GAAAF,EAAAzmE,OACAymE,GAAAzmE,QAAA,SAAApX,EAAAoa,GACA2jE,EAAA/9E,EAAAoa,EAEA,QAAA5a,GAAA,EAAmCA,EAAAqP,EAAA2uE,aAAA14E,OAA8BtF,IACjEqP,EAAA2uE,aAAAh+E,GAAAQ,EAAAoa,IAQA,MAHA0jE,IACAx7E,KAAAq7E,gBAEAr7E,MAMAwW,KAAA,SAAAib,GAGA,OAFAiqD,GAAA17E,KAAAm7E,UACA3lE,EAAAxV,KAAAwV,UACAtY,EAAA,EAA2BA,EAAAw+E,EAAAl5E,OAAqBtF,IAAA,CAChD,GAAA6K,GAAA2zE,EAAAx+E,EACAu0B,IAEA1pB,EAAA+M,QAAA9U,KAAAiX,QAAA,GAEAzB,KAAAG,WAAA5N,GAEA2zE,EAAAl5E,OAAA,GAOA6U,MAAA,SAAAvB,GAEA,MADA9V,MAAAoX,OAAAtB,EACA9V,MAOAuxB,KAAA,SAAAjiB,GAIA,MAHAA,IACAtP,KAAAi7E,UAAApxE,KAAAyF,GAEAtP,MAMA0V,SAAA,WACA,MAAA1V,MAAAm7E,YAIAt+E,EAAAC,QAAA4X,G5F2/oBMinE,IACA,SAAS9+E,EAAQC,S6F/mqBvBD,EAAAC,QAAA,mBAAAyqC,UACAA,OAAA/+B,uBACA++B,OAAAq0C,yBACAr0C,OAAAs0C,0BACAt0C,OAAAu0C,8BACA,SAAA7+C,GACAtX,WAAAsX,EAAA,M7F0nqBM8+C,IACA,SAASl/E,EAAQC,S8FjoqBvB,GAAAke,GAAA,EAAAnN,KAAAyL,EACAzc,GAAAC,SACAie,gBAAA,SAAAc,GAKA,MAJAA,IAAAb,EACAa,EAAA,IACAA,GAAAb,GAEAa,K9F4oqBMmgE,IACA,SAASn/E,EAAQC,S+F/oqBvB,GAAAm/E,GAAA,IAEAp/E,GAAAC,QAAA,WACA,MAAAm/E,O/F+pqBMC,IACA,SAASr/E,EAAQC,QAASE,GgGzqqBhC,GAAA+G,GAAA/G,EAAA,IAMAH,GAAAC,QAAA,WACA,OAAAiH,EAAA0/D,UAGA,MAAA1/D,EAAA0/D,UACA,OAAAlrD,KAAA2N,WACA,SAAA4S,OAAA5S,UAAA3N,QAGA,IAAAxU,EAAA0/D,UAAA,EACA,OAAAlrD,KAAA2N,WACAub,QAAAp5B,IAAA6d,UAAA3N,MhG8rqBM4jE,IACA,SAASt/E,EAAQC,QAASE,GiG9rqBhC,QAAAo/E,GAAAxzE,GACA6f,EAAA1oB,KAAAC,KAAA4I,GAbA,GAAA6f,GAAAzrB,EAAA,KACAsL,EAAAtL,EAAA,KACAqpB,EAAArpB,EAAA,KAEA4lB,EAAA5lB,EAAA,MACAq/E,EAAA,GAAAz5D,GAAA,GAWAw5D,GAAA78E,WAEAkB,YAAA27E,EAEAx+E,KAAA,QAEA+Q,MAAA,SAAA3J,EAAAyJ,GACA,GAEA3I,GAFApC,EAAA1D,KAAA0D,MACA44E,EAAA54E,EAAAoC,KAcA,IAVApC,EAAA4iB,KAAAthB,EAAAhF,KAAAyO,GAGA3I,EADA,gBAAAw2E,GACAt8E,KAAAu8E,OAIAD,GAGAx2E,GAAAw2E,EAAA,CAEA,GAAAE,GAAAH,EAAAhoE,IAAAioE,EACA,KAAAE,EAgBA,MAdA12E,GAAA,GAAAmkC,OACAnkC,EAAA22E,OAAA,WACA32E,EAAA22E,OAAA,IACA,QAAAv/E,GAAA,EAAuCA,EAAAs/E,EAAAE,QAAAl6E,OAAiCtF,IACxEs/E,EAAAE,QAAAx/E,GAAAkX,SAGAooE,GACA12E,QACA42E,SAAA18E,OAEA8F,EAAAw2E,MACAD,EAAAn5D,IAAAo5D,EAAAE,QACAx8E,KAAAu8E,OAAAz2E,EAOA,IAHAA,EAAA02E,EAAA12E,MACA9F,KAAAu8E,OAAAz2E,GAEAA,EAAAzC,QAAAyC,EAAAvC,OAEA,WADAi5E,GAAAE,QAAA7yE,KAAA7J,MAMA,GAAA8F,EAAA,CASA,GAAAzC,GAAAK,EAAAL,OAAAyC,EAAAzC,MACAE,EAAAG,EAAAH,QAAAuC,EAAAvC,OACA3E,EAAA8E,EAAA9E,GAAA,EACAC,EAAA6E,EAAA7E,GAAA,CAEA,KAAAiH,EAAAzC,QAAAyC,EAAAvC,OACA,MAOA,IAHAvD,KAAA2H,aAAA3C,GAGAtB,EAAAi5E,QAAAj5E,EAAAk5E,QAAA,CACA,GAAA1oD,GAAAxwB,EAAAwwB,IAAA,EACAC,EAAAzwB,EAAAywB,IAAA,CACAnvB,GAAAQ,UACAM,EACAouB,EAAAC,EAAAzwB,EAAAi5E,OAAAj5E,EAAAk5E,QACAh+E,EAAAC,EAAAwE,EAAAE,OAGA,IAAAG,EAAAwwB,IAAAxwB,EAAAywB,GAAA,CACA,GAAAD,GAAAxwB,EAAAwwB,GACAC,EAAAzwB,EAAAywB,GACAwoD,EAAAt5E,EAAA6wB,EACA0oD,EAAAr5E,EAAA4wB,CACAnvB,GAAAQ,UACAM,EACAouB,EAAAC,EAAAwoD,EAAAC,EACAh+E,EAAAC,EAAAwE,EAAAE,OAIAyB,GAAAQ,UAAAM,EAAAlH,EAAAC,EAAAwE,EAAAE,EAIA,OAAAG,EAAAL,QACAK,EAAAL,SAEA,MAAAK,EAAAH,SACAG,EAAAH,UAGAvD,KAAAgI,iBAAAhD,GAGA,MAAAtB,EAAAklB,MACA5oB,KAAAktB,aAAAloB,EAAAhF,KAAAiH,qBAMAA,gBAAA,WACA,GAAAvD,GAAA1D,KAAA0D,KAMA,OALA1D,MAAA2pB,QACA3pB,KAAA2pB,MAAA,GAAArhB,GACA5E,EAAA9E,GAAA,EAAA8E,EAAA7E,GAAA,EAAA6E,EAAAL,OAAA,EAAAK,EAAAH,QAAA,IAGAvD,KAAA2pB,QAIAtD,EAAAgC,SAAA+zD,EAAA3zD,GAEA5rB,EAAAC,QAAAs/E,GjGwtqBMS,IACA,SAAShgF,EAAQC,SkGj3qBvB,GAAAmH,GAAA,SAAA6B,EAAAg3E,GACA98E,KAAA8F,QACA9F,KAAA88E,SAGA98E,KAAApC,KAAA,UAGAqG,GAAA1E,UAAAwG,iBAAA,SAAAf,GAEA,MAAAhF,MAAA+8E,iBACA/8E,KAAA+8E,eAAA/3E,EAAAg4E,cAAAh9E,KAAA8F,MAAA9F,KAAA88E,UAGAjgF,EAAAC,QAAAmH,GlG03qBMg5E,IACA,SAASpgF,EAAQC,SmG13qBvB,QAAAogF,GAAAl4E,EAAA+0B,EAAA7Q,GAEA,GAAAtqB,GAAAm7B,EAAAn7B,EACAyd,EAAA0d,EAAA1d,GACAxd,EAAAk7B,EAAAl7B,EACAyd,EAAAyd,EAAAzd,EAEAyd,GAAA3R,SACAxpB,IAAAsqB,EAAA7lB,MAAA6lB,EAAAtqB,EACAyd,IAAA6M,EAAA7lB,MAAA6lB,EAAAtqB,EACAC,IAAAqqB,EAAA3lB,OAAA2lB,EAAArqB,EACAyd,IAAA4M,EAAA3lB,OAAA2lB,EAAArqB,EAGA,IAAAs+E,GAAAn4E,EAAAk4E,qBAAAt+E,EAAAC,EAAAwd,EAAAC,EAEA,OAAA6gE,GAGA,QAAAC,GAAAp4E,EAAA+0B,EAAA7Q,GACA,GAAA7lB,GAAA6lB,EAAA7lB,MACAE,EAAA2lB,EAAA3lB,OACAuK,EAAAD,KAAAC,IAAAzK,EAAAE,GAEA3E,EAAAm7B,EAAAn7B,EACAC,EAAAk7B,EAAAl7B,EACAuc,EAAA2e,EAAA3e,CACA2e,GAAA3R,SACAxpB,IAAAyE,EAAA6lB,EAAAtqB,EACAC,IAAA0E,EAAA2lB,EAAArqB,EACAuc,GAAAtN,EAGA,IAAAqvE,GAAAn4E,EAAAo4E,qBAAAx+E,EAAAC,EAAA,EAAAD,EAAAC,EAAAuc,EAEA,OAAA+hE,GA/CA,GAAAE,KACA,gFACA,0DAMAr5E,EAAA,SAAA4E,GACA5I,KAAAo6C,WAAAxxC,GA0CA5E,GAAAzE,WAEAkB,YAAAuD,EAKA4qB,KAAA,UAKAD,OAAA,KAKAtgB,QAAA,EAKA6qC,SAAA,KAKAC,eAAA,EAKAlsC,WAAA,EAKAihB,cAAA,EAKAE,cAAA,EAKA5S,UAAA,EAMAo+B,eAAA,EAOAhxB,KAAA,KAKAgF,SAAA,OAKAC,WAAA,KAQAT,aAAA,SAKAvE,aAAA,KAKAC,UAAA,KAKAG,kBAAA,KAMAoE,aAAA,EAMAU,eAAA,EAMAI,kBAAA,EAMAE,kBAAA,EAOAZ,eAAA,EAMAa,aAAA,EAMAgvD,MAAA,KAKAh3D,KAAA,SAAAthB,EAAAjG,EAAA0P,GAKA,OAJA/K,GAAA1D,KACAu9E,EAAA9uE,KAAA/K,MACA85E,GAAAD,EAEArgF,EAAA,EAA2BA,EAAAmgF,EAAA76E,OAA+BtF,IAAA,CAC1D,GAAAm0B,GAAAgsD,EAAAngF,GACAugF,EAAApsD,EAAA,IAEAmsD,GAAA95E,EAAA+5E,KAAAF,EAAAE,MAEAz4E,EAAAy4E,GAAA/5E,EAAA+5E,IAAApsD,EAAA,IAiBA,IAbAmsD,GAAA95E,EAAAkrB,OAAA2uD,EAAA3uD,QACA5pB,EAAAiB,UAAAvC,EAAAkrB,OAEA4uD,GAAA95E,EAAAirB,SAAA4uD,EAAA5uD,UACA3pB,EAAA8oB,YAAApqB,EAAAirB,SAEA6uD,GAAA95E,EAAA2K,UAAAkvE,EAAAlvE,WACArJ,EAAAoB,YAAA,MAAA1C,EAAA2K,QAAA,EAAA3K,EAAA2K,UAGAmvE,GAAA95E,EAAA45E,QAAAC,EAAAD,SACAt4E,EAAAO,yBAAA7B,EAAA45E,OAAA,eAEAt9E,KAAAypB,YAAA,CACA,GAAAjO,GAAA9X,EAAA8X,SACAxW,GAAAwW,aACAxb,KAAA45C,eAAA76C,KAAA86C,aAAA96C,EAAA86C,eAAA,KAKAtwB,QAAA,WACA,GAAAqF,GAAA5uB,KAAA4uB,IACA,cAAAA,GAAA,SAAAA,GAGAnF,UAAA,WACA,GAAAkF,GAAA3uB,KAAA2uB,MACA,cAAAA,GAAA,SAAAA,GAAA3uB,KAAAwb,UAAA,GAQA4+B,WAAA,SAAAsjC,EAAAniD,GACA,GAAAmiD,EAAA,CACA,GAAAhgF,GAAAsC,IACA,QAAAO,KAAAm9E,IACAA,EAAAltE,eAAAjQ,KACAg7B,GAAA79B,EAAA8S,eAAAjQ,KAEA7C,EAAA6C,GAAAm9E,EAAAn9E,MAWAm6C,IAAA,SAAA3gB,EAAApX,GACA,gBAAAoX,GACA/5B,KAAA+5B,GAAApX,EAGA3iB,KAAAo6C,WAAArgB,GAAA,IAQAxO,MAAA,WACA,GAAAoyD,GAAA,GAAA39E,MAAAS,WAEA,OADAk9E,GAAAvjC,WAAAp6C,MAAA,GACA29E,GAGA93E,YAAA,SAAAb,EAAA+0B,EAAA7Q,GAIA,OAHAgW,GAAA,WAAAnF,EAAAn8B,KAAAw/E,EAAAF,EACAC,EAAAj+C,EAAAl6B,EAAA+0B,EAAA7Q,GACAvjB,EAAAo0B,EAAAp0B,WACAzI,EAAA,EAA2BA,EAAAyI,EAAAnD,OAAuBtF,IAClDigF,EAAAzK,aACA/sE,EAAAzI,GAAAuoE,OAAA9/D,EAAAzI,GAAAmyC,MAGA,OAAA8tC,IAKA,QADAS,GAAA55E,EAAAzE,UACArC,EAAA,EAAmBA,EAAAmgF,EAAA76E,OAA+BtF,IAAA,CAClD,GAAAm0B,GAAAgsD,EAAAngF,EACAm0B,GAAA,IAAAusD,KACAA,EAAAvsD,EAAA,IAAAA,EAAA,IAKArtB,EAAA6B,YAAA+3E,EAAA/3E,YAEAhJ,EAAAC,QAAAkH,GnGk5qBM65E,IACA,SAAShhF,EAAQC,QAASE,GoGtsrBhC,GAAA8gF,GAAA9gF,EAAA,MACA+gF,EAAA/gF,EAAA,KAEAH,GAAAC,SACA+K,UAAA,SAAA7C,EAAA8C,EAAA2oB,GACA,GAAAxP,GAAAnZ,EAAAmZ,OACA4J,EAAA/iB,EAAA+iB,MACA,IAAA5J,KAAAze,QAAA,GACA,GAAAqoB,GAAA,WAAAA,EAAA,CACA,GAAAmzD,GAAAD,EACA98D,EAAA4J,EAAA4F,EAAA3oB,EAAAuoB,iBAGArrB,GAAAklB,OAAAjJ,EAAA,MAAAA,EAAA,MAEA,QADAtV,GAAAsV,EAAAze,OACAtF,EAAA,EAAmCA,GAAAuzB,EAAA9kB,IAAA,GAAiCzO,IAAA,CACpE,GAAA2uB,GAAAmyD,EAAA,EAAA9gF,GACA+gF,EAAAD,EAAA,EAAA9gF,EAAA,GACAkd,EAAA6G,GAAA/jB,EAAA,GAAAyO,EACA3G,GAAA4qB,cACA/D,EAAA,GAAAA,EAAA,GAAAoyD,EAAA,GAAAA,EAAA,GAAA7jE,EAAA,GAAAA,EAAA,SAIA,CACA,WAAAyQ,IACA5J,EAAA68D,EAAA78D,EAAAwP,IAGAzrB,EAAAklB,OAAAjJ,EAAA,MAAAA,EAAA,MACA,QAAA/jB,GAAA,EAAAsQ,EAAAyT,EAAAze,OAAsDtF,EAAAsQ,EAAOtQ,IAC7D8H,EAAAmlB,OAAAlJ,EAAA/jB,GAAA,GAAA+jB,EAAA/jB,GAAA,IAIAuzB,GAAAzrB,EAAAyrB,gBpGktrBMytD,IACA,SAASrhF,EAAQC,QAASE,GqGxvrBhCF,QAAAD,EAAAC,QAAAE,EAAA,KAKAF,QAAA+M,MAAAhN,EAAAK,EAAA,SrGiwrBMihF,IACA,SAASthF,EAAQC,QAASE,GsGvwrBhCF,QAAAD,EAAAC,QAAAE,EAAA,KAKAF,QAAA+M,MAAAhN,EAAAK,EAAA,StGgxrBMkhF,IACA,SAASvhF,EAAQC,QAASE,GuGtxrBhCF,QAAAD,EAAAC,QAAAE,EAAA,KAKAF,QAAA+M,MAAAhN,EAAAK,EAAA,SvG+xrBMmhF,IACA,SAASxhF,EAAQC,QAASE,GwGryrBhCF,QAAAD,EAAAC,QAAAE,EAAA,KAKAF,QAAA+M,MAAAhN,EAAAK,EAAA,sEAA2F,MxG8yrBrFohF,IACA,SAASzhF,EAAQC,QAASE,GAEhC,YyG5yrBA,SAAAqjC,GAAAk+C,GACAl4D,EAAA/lB,KAAAk+E,EAAA,SAAAj+E,GACAP,KAAAO,GAAA8lB,EAAAC,KAAAi4D,EAAAh+E,GAAAg+E,IACSv+E,MAVT,GAAAqmB,GAAArpB,EAAA,KAEAwhF,GACA,sEACA,qEASA3hF,GAAAC,QAAAujC,GzG4zrBMo+C,IACA,SAAS5hF,EAAQC,QAASE,G0G50rBhC,GAAAkwC,GAAAlwC,EAAA,KACAqpB,EAAArpB,EAAA,IACAH,GAAAC,QAAA,SAAAqiD,EAAAu/B,GACAr4D,EAAA/lB,KAAAo+E,EAAA,SAAAl8C,GACAA,EAAA3vB,OAAA,aAMAq6B,EAAAe,eAAAzL,EAAA,SAAAZ,EAAAX,GACA,GAAA09C,KAeA,OAdA19C,GAAAY,eACqBC,SAAA,SAAA2c,QAAAU,EAAApd,MAAAH,GACrB,SAAAI,GACAA,EAAAQ,EAAAtD,SACA8C,EAAAQ,EAAAtD,QAAA0C,EAAArhC,KAEA,IAAAie,GAAAwjB,EAAAyD,SAEAjnB,GAAAle,KAAA,SAAAgL,GACA,GAAA/K,GAAAie,EAAAugC,QAAAzzC,EACAqzE,GAAAp+E,GAAAyhC,EAAA48C,WAAAr+E,KAAA,OAKAA,KAAAqhC,EAAArhC,KACAo+E,kB1Gw1rBME,IACA,SAAShiF,EAAQC,QAASE,G2Gr3rBhCA,EAAA,KACAA,EAAA,M3G63rBM8hF,IACA,SAASjiF,EAAQC,QAASE,G4G93rBhC,GAAAiyC,GAAAjyC,EAAA,KACA0qC,EAAA1qC,EAAA,KACAqpB,EAAArpB,EAAA,KAEA+hF,EAAAr3C,EAAAz+B,QAEArL,KAAA,eAEA8sE,eAAA,SAAAhiC,EAAAzH,GACA,GAAA3+B,GAAA,GAAA2sC,IAAA,SAAAjvC,MACAg/E,EAAAt2C,EAAAlqB,QAMA,OALA6H,GAAAqV,QAAAsjD,KACAA,OAGA18E,EAAA27D,SAAA+gB,GACA18E,GAGAiiD,eACA72C,OAAA,EACA/C,EAAA,EAEA6V,QAAA,aACAy+D,iBAAA,EACA1Z,OAAA,MACAlqD,WAAA,IACAC,aACAoT,WAAA,EAEA5gB,IAAA,EAEAmC,IAAA,IAEA+4D,YAAA,GAEAkW,UAEA9G,MAAA,EACA+G,WACA9vC,QAAA,4CACAhsC,MAAA,KAIA+7E,WAEAhH,MAAA,EAEA51E,OAAA,GAEA28E,WACA9vC,MAAA,OACAhsC,MAAA,EACAzF,KAAA,UAIAyhF,UAEAjH,MAAA,EAEApP,YAAA,EAEAxmE,OAAA,EAEA28E,WACA9vC,MAAA,OACAhsC,MAAA,EACAzF,KAAA,UAGA0hF,WACAlH,MAAA,EACA1tD,SAAA,EAEAypB,WACA9E,MAAA,SAGAkwC,SACAnH,MAAA,EACA51E,OAAA,MACAa,MAAA,GAEAgxE,WACAv2B,QACAzO,MAAA,SAGAmwC,OACApH,MAAA,EAEAqH,cAAA,UAEAtrC,WACA9E,MAAA,OACAqwC,SAAA,KAGAvY,QACAiR,MAAA,EACAvnE,gBAAA,gBACA8uE,YAAA,EACAC,YAAA,OACAv8E,MAAA,IACAE,OAAA,GAEAk8E,cAAA,SAGAtrC,WACA9E,MAAA,OACAqwC,SAAA,OAMA7iF,GAAAC,QAAAiiF,G5Gu4rBMc,IACA,SAAShjF,EAAQC,QAASE,G6Gz/rBhC,QAAA8iF,GAAA99C,EAAA0B,GACA,GAAAljB,GAAAwhB,EAAA3tB,IAAA,UACAhR,EAAAqgC,EAAApgC,WACAC,EAAAmgC,EAAAlgC,YACA46D,EAAAvwD,KAAAC,IAAAzK,EAAAE,GACA2X,EAAA4R,EAAAtM,EAAA,GAAAkjB,EAAApgC,YACA6X,EAAA2R,EAAAtM,EAAA,GAAAkjB,EAAAlgC,aACA4X,EAAA0R,EAAAkV,EAAA3tB,IAAA,UAAA+pD,EAAA,EAEA,QACAljD,KACAC,KACAC,KAIA,QAAA2kE,GAAAnV,EAAAT,GAUA,MATAA,KACA,gBAAAA,GACAS,EAAAT,EAAA10C,QAAA,UAAuD,MAAAm1C,IAAA,IAEvD,kBAAAT,KACAS,EAAAT,EAAAS,KAIAA,EAhCA,GAAAoV,GAAAhjF,EAAA,KAEA2qC,EAAA3qC,EAAA,KACAq+C,EAAAr+C,EAAA,KACA8vB,EAAAuuB,EAAAvuB,aA+BA9R,EAAA,EAAAnN,KAAAyL,GAEA2mE,EAAAjjF,EAAA,KAAAiM,QAEArL,KAAA,QAEAuoC,OAAA,SAAAnE,EAAAf,EAAAyC,GAEA1jC,KAAA0/B,MAAA4jC,WAEA,IAAA4c,GAAAl+C,EAAA3tB,IAAA,4BACA8rE,EAAAL,EAAA99C,EAAA0B,EAEA1jC,MAAAogF,YACAp+C,EAAAf,EAAAyC,EAAAw8C,EAAAC,IAIA3gF,QAAA,aAEA4gF,YAAA,SAAAp+C,EAAAf,EAAAyC,EAAAw8C,EAAAC,GAeA,OAdAzgD,GAAA1/B,KAAA0/B,MAEA2gD,EAAAr+C,EAAAkH,SAAA,YACAo3C,EAAAD,EAAAn3C,SAAA,aAEAxa,EAAAsT,EAAA3tB,IAAA,aACAgH,GAAA2mB,EAAA3tB,IAAA,kBAAAxG,KAAAyL,GACAgC,GAAA0mB,EAAA3tB,IAAA,gBAAAxG,KAAAyL,GAEAinE,GAAAjlE,EAAAD,GAAAL,EAEAwlE,EAAAnlE,EACAolE,EAAAH,EAAAjsE,IAAA,SAEAnX,EAAA,EAA2BA,EAAAgjF,EAAA19E,OAAsBtF,IAAA,CAEjD,GAAA4a,GAAAjK,KAAAC,IAAAD,KAAAoC,IAAAiwE,EAAAhjF,GAAA,SACAoe,EAAAD,EAAAklE,EAAAzoE,EACA4oE,EAAA,GAAA/4C,GAAA0K,QACAvqC,OACAuT,WAAAmlE,EACAllE,WACAJ,GAAAilE,EAAAjlE,GACAC,GAAAglE,EAAAhlE,GACAuT,YACAiC,GAAAwvD,EAAA/kE,EAAAqlE,EACArlE,EAAA+kE,EAAA/kE,GAEApc,QAAA,GAGA0hF,GAAAv1E,UACAyjB,KAAAsxD,EAAAhjF,GAAA,KAGAwjF,EAAAv1E,SAAAm1E,EAAAK,cAGA,uCAGAjhD,EAAA9U,IAAA81D,GAEAF,EAAAllE,EAGA,GAAAslE,GAAA,SAAA9oE,GAEA,GAAAA,GAAA,EACA,MAAAooE,GAAA,KAEA,QAAAhjF,GAAA,EAA+BA,EAAAgjF,EAAA19E,OAAsBtF,IACrD,GAAAgjF,EAAAhjF,GAAA,IAAA4a,IACA,IAAA5a,EAAA,EAAAgjF,EAAAhjF,EAAA,OAAA4a,EAEA,MAAAooE,GAAAhjF,GAAA,EAIA,OAAAgjF,GAAAhjF,EAAA,MAGA,KAAAwxB,EAAA,CACA,GAAA9S,GAAAP,CACAA,GAAAC,EACAA,EAAAM,EAGA5b,KAAA6gF,aACA7+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,EACA9kE,EAAAC,EAAAoT,GAGA1uB,KAAA8gF,eACA9+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,EACA9kE,EAAAC,EAAAoT,GAGA1uB,KAAA+gF,aACA/+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,GAEAngF,KAAAghF,cACAh/C,EAAAf,EAAAyC,EAAAk9C,EAAAT,IAIAU,aAAA,SACA7+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,EACA9kE,EAAAC,EAAAoT,GAgCA,OA9BAgR,GAAA1/B,KAAA0/B,MACAxkB,EAAAilE,EAAAjlE,GACAC,EAAAglE,EAAAhlE,GACAC,EAAA+kE,EAAA/kE,EAEA6lE,EAAAj/C,EAAA3tB,IAAA,OACA6sE,EAAAl/C,EAAA3tB,IAAA,OAEA8sE,EAAAn/C,EAAAkH,SAAA,aACAk4C,EAAAp/C,EAAAkH,SAAA,YACAkL,EAAApS,EAAAkH,SAAA,aAEA8/B,EAAAhnC,EAAA3tB,IAAA,eACAgtE,EAAAD,EAAA/sE,IAAA,eAEAitE,EAAAx0D,EACAq0D,EAAA9sE,IAAA,UAAA+G,GAEAmmE,EAAAz0D,EACAs0D,EAAA/sE,IAAA,UAAA+G,GAGAS,EAAAR,EACAhP,GAAAiP,EAAAD,GAAA2tD,EACAwY,EAAAn1E,EAAAg1E,EAEAI,EAAAN,EAAAj4C,SAAA,aAAAy3C,eACAe,EAAAN,EAAAl4C,SAAA,aAAAy3C,eACApsC,EAAAH,EAAAlL,SAAA,aAEAhsC,EAAA,EAA2BA,GAAA8rE,EAAkB9rE,IAAA,CAC7C,GAAA2xB,GAAAhhB,KAAAwL,IAAAwC,GACAiT,EAAAjhB,KAAA2L,IAAAqC,EAEA,IAAAslE,EAAA9sE,IAAA,SACA,GAAA+qE,GAAA,GAAAz3C,GAAA+K,MACA5qC,OACAqU,GAAA0S,EAAAzT,EAAAF,EACAkB,GAAA0S,EAAA1T,EAAAD,EACAkB,GAAAwS,GAAAzT,EAAAkmE,GAAApmE,EACAoB,GAAAwS,GAAA1T,EAAAkmE,GAAAnmE,GAEAzX,MAAA+9E,EACAziF,QAAA,GAEA,UAAAyiF,EAAA9yD,QACAywD,EAAAj0E,UACAwjB,OAAAiyD,EAAA1jF,EAAA8rE,KAIAtpC,EAAA9U,IAAAw0D,GAIA,GAAAhrC,EAAA//B,IAAA,SACA,GAAAu2D,GAAAmV,EACA1kC,EAAAlJ,MAAAj1C,EAAA8rE,GAAAkY,EAAAD,MACA7sC,EAAA//B,IAAA,cAEAqW,EAAA0pB,EAAA//B,IAAA,YAEAuU,EAAA,GAAA+e,GAAAhf,MACAjlB,OACAklB,KAAAgiD,EACAhsE,EAAAiwB,GAAAzT,EAAAkmE,EAAA52D,GAAAxP,EACArc,EAAAiwB,GAAA1T,EAAAkmE,EAAA52D,GAAAvP,EACAyT,KAAA2lB,EAAAE,eACAzrB,SAAAurB,EAAAC,UACAvrB,kBAAA6F,MAAA,MAAAA,EAAA,qBACAhG,UAAA+F,MAAA,OAAAA,EAAA,qBAEA7vB,QAAA,GAEA,UAAA4pB,EAAAllB,MAAAkrB,MACAhG,EAAAzd,UACAyjB,KAAAgyD,EAAA1jF,EAAA8rE,KAIAtpC,EAAA9U,IAAAhC,GAIA,GAAAw4D,EAAA/sE,IAAA,SAAAnX,IAAA8rE,EAAA,CACA,OAAAtxC,GAAA,EAAmCA,GAAA2pD,EAAqB3pD,IAAA,CACxD,GAAA7I,GAAAhhB,KAAAwL,IAAAwC,GACAiT,EAAAjhB,KAAA2L,IAAAqC,GACA8lE,EAAA,GAAAh6C,GAAA+K,MACA5qC,OACAqU,GAAA0S,EAAAzT,EAAAF,EACAkB,GAAA0S,EAAA1T,EAAAD,EACAkB,GAAAwS,GAAAzT,EAAAmmE,GAAArmE,EACAoB,GAAAwS,GAAA1T,EAAAmmE,GAAApmE,GAEAnc,QAAA,EACA0E,MAAAg+E,GAGA,UAAAA,EAAA/yD,QACAgzD,EAAAx2E,UACAwjB,OAAAiyD,GAAA1jF,EAAAw6B,EAAA2pD,GAAArY,KAIAtpC,EAAA9U,IAAA+2D,GACA9lE,GAAA2lE,EAEA3lE,GAAA2lE,MAGA3lE,IAAAxP,IAKAy0E,eAAA,SACA9+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,EACA9kE,EAAAC,EAAAoT,GAEA,GAAAkzD,KAAA5/C,EAAA3tB,IAAA,QAAA2tB,EAAA3tB,IAAA,QACAwtE,GAAAxmE,EAAAC,GAEAkD,EAAAwjB,EAAAyD,UACAq8C,EAAA9hF,KAAA2qE,MAEAjrC,EAAA1/B,KAAA0/B,KAEAlhB,GAAAH,KAAAyjE,GACAl3D,IAAA,SAAAtf,GACA,GAAAi0E,GAAA,GAAAS,IACAl4E,OACA+T,MAAAR,IAIAssB,GAAA+M,YAAA6qC,GACAz3E,OACA+T,MAAAw/B,EAAAnF,UAAA13B,EAAAnK,IAAA,QAAA/I,GAAAs2E,EAAAC,GAAA,KAEqB7/C,GAErBtC,EAAA9U,IAAA20D,GACA/gE,EAAAgjD,iBAAAl2D,EAAAi0E,KAEA1sE,OAAA,SAAAkvE,EAAAC,GACA,GAAAzC,GAAAuC,EAAArgB,iBAAAugB,EAEAr6C,GAAA+M,YAAA6qC,GACAz3E,OACA+T,MAAAw/B,EAAAnF,UAAA13B,EAAAnK,IAAA,QAAA0tE,GAAAH,EAAAC,GAAA,KAEqB7/C,GAErBtC,EAAA9U,IAAA20D,GACA/gE,EAAAgjD,iBAAAugB,EAAAxC,KAEA78D,OAAA,SAAApX,GACA,GAAAi0E,GAAAuC,EAAArgB,iBAAAn2D,EACAo0B,GAAAhd,OAAA68D,KAEA0C,UAEAzjE,EAAAkjD,kBAAA,SAAA6d,EAAAj0E,GACA,GAAAg0C,GAAA9gC,EAAA+gC,aAAAj0C,GACA42E,EAAA5iC,EAAApW,SAAA,UAEAq2C,GAAArlC,UACAt7C,EAAAuhF,EAAAjlE,GACArc,EAAAshF,EAAAhlE,GACA9X,MAAAypB,EACAo1D,EAAA7tE,IAAA,SAAA8rE,EAAA/kE,GAEAA,EAAA0R,EAAAo1D,EAAA7tE,IAAA,UAAA8rE,EAAA/kE,KAGAmkE,EAAA/M,SAAAlzB,EAAApW,SAAA,oBAAAyrC,gBAEA,SAAA4K,EAAA77E,MAAAkrB,MACA2wD,EAAAp0E,SAAA,OAAAy1E,GACApiE,EAAAnK,IAAA,QAAA/I,GAAAs2E,EAAA,KAAAA,EAAA,GAAAA,EAAA,MAIAj6C,EAAAqM,cACAurC,EAAAjgC,EAAApW,SAAA,sBAAAyrC,kBAIA30E,KAAA2qE,MAAAnsD,GAGAuiE,aAAA,SACA/+C,EAAAf,EAAAyC,EAAAk9C,EAAAT,GAEA,GAAAgC,GAAAngD,EAAAkH,SAAA,QACA,IAAAi5C,EAAA9tE,IAAA,SACA,GAAAkgC,GAAA4tC,EAAAj5C,SAAA,aACAu2C,EAAA0C,EAAA9tE,IAAA,gBACAzV,EAAAuhF,EAAAjlE,GAAA4R,EAAA2yD,EAAA,GAAAU,EAAA/kE,GACAvc,EAAAshF,EAAAhlE,GAAA2R,EAAA2yD,EAAA,GAAAU,EAAA/kE,GACAwN,EAAA,GAAA+e,GAAAhf,MACAjlB,OACA9E,IACAC,IAEA+pB,KAAAoZ,EAAAyD,UAAAsZ,QAAA,GACAnwB,KAAA2lB,EAAAE,eACAzrB,SAAAurB,EAAAC,UACA1rB,UAAA,SACAG,kBAAA,WAGAjpB,MAAA0/B,MAAA9U,IAAAhC,KAIAo4D,cAAA,SACAh/C,EAAAf,EAAAyC,EAAAk9C,EAAAT,GAEA,GAAAiC,GAAApgD,EAAAkH,SAAA,UACA+3C,EAAAj/C,EAAA3tB,IAAA,OACA6sE,EAAAl/C,EAAA3tB,IAAA,MACA,IAAA+tE,EAAA/tE,IAAA,SACA,GAAAkgC,GAAA6tC,EAAAl5C,SAAA,aACAu2C,EAAA2C,EAAA/tE,IAAA,gBACAzV,EAAAuhF,EAAAjlE,GAAA4R,EAAA2yD,EAAA,GAAAU,EAAA/kE,GACAvc,EAAAshF,EAAAhlE,GAAA2R,EAAA2yD,EAAA,GAAAU,EAAA/kE,GACA/X,EAAAypB,EAAAs1D,EAAA/tE,IAAA,SAAA8rE,EAAA/kE,GACA7X,EAAAupB,EAAAs1D,EAAA/tE,IAAA,UAAA8rE,EAAA/kE,GACAuH,EAAAqf,EAAAyD,UAAApxB,IAAA,WACA6U,EAAA,GAAAye,GAAA8K,MACA3qC,OACAlJ,IAAAyE,EAAA,EACAxE,IAAA0E,EAAA,EACAF,QACAE,UAEAG,OACAklB,KAAAm3D,EAEAp9D,EAAAy/D,EAAA/tE,IAAA,cAEAua,KAAAwzD,EAAA/tE,IAAA,mBACAuZ,SAAA2mB,EAAAE,eACAzrB,SAAAurB,EAAAC,YAGA,UAAAtrB,EAAAxlB,MAAAkqB,UACA1E,EAAA/d,SAAA,WAAAy1E,EACAvlC,EAAAnF,UAAAvzB,GAAAs+D,EAAAC,IAAA,WAGAh4D,EAAA/d,SAAAi3E,EAAAzN,cAAA,WACA30E,KAAA0/B,MAAA9U,IAAA1B,MAKArsB,GAAAC,QAAAmjF,G7GwgsBMoC,IACA,SAASxlF,EAAQC,QAASE,G8G95sBhCH,EAAAC,QAAAE,EAAA,KAAAiM,QAEArL,KAAA,sBAEAkK,OACA+T,MAAA,EAEAxY,MAAA,GAEA+X,EAAA,GAEAxc,EAAA,EAEAC,EAAA,GAGAgJ,UAAA,SAAA7C,EAAA8C,GACA,GAAA8b,GAAA/V,KAAAwL,IACAsK,EAAA9V,KAAA2L,IAEA4B,EAAAtT,EAAAsT,EACA/X,EAAAyE,EAAAzE,MACAwY,EAAA/T,EAAA+T,MACAjd,EAAAkJ,EAAAlJ,EAAAglB,EAAA/H,GAAAxY,MAAA+X,EAAA,OACAvc,EAAAiJ,EAAAjJ,EAAA8kB,EAAA9H,GAAAxY,MAAA+X,EAAA,MAEAS,GAAA/T,EAAA+T,MAAAhO,KAAAyL,GAAA,EACAtU,EAAAklB,OAAAtrB,EAAAC,GACAmG,EAAAmlB,OACAriB,EAAAlJ,EAAAglB,EAAA/H,GAAAxY,EACAyE,EAAAjJ,EAAA8kB,EAAA9H,GAAAxY,GAEA2B,EAAAmlB,OACAriB,EAAAlJ,EAAAglB,EAAA9b,EAAA+T,OAAAT,EACAtT,EAAAjJ,EAAA8kB,EAAA7b,EAAA+T,OAAAT,GAEApW,EAAAmlB,OACAriB,EAAAlJ,EAAAglB,EAAA/H,GAAAxY,EACAyE,EAAAjJ,EAAA8kB,EAAA9H,GAAAxY,GAEA2B,EAAAmlB,OAAAvrB,EAAAC,O9G06sBMyjF,IACA,SAASzlF,EAAQC,QAASE,G+Gx8sBhC,QAAAulF,GAAAC,GACAxiF,KAAA0/B,MAAA,GAAAiI,GAAAr1B,MAEAtS,KAAAyiF,YAAAD,GAAA1P,EAKA,QAAA4P,GAAAlkE,EAAAlT,EAAAq3E,GACA,GAAAr3D,GAAA9M,EAAA0iD,cAAA51D,EAKA,OAAAggB,KAAA+K,MAAA/K,EAAA,MAAA+K,MAAA/K,EAAA,OAAAq3D,KAAAr3E,KACA,SAAAkT,EAAAssB,cAAAx/B,EAAA,UAvBA,GAAAq8B,GAAA3qC,EAAA,KACA81E,EAAA91E,EAAA,KAaA4lF,EAAAL,EAAAhjF,SAgBAqjF,GAAA5P,WAAA,SAAAx0D,EAAAmkE,GACA,GAAAjjD,GAAA1/B,KAAA0/B,MACAsC,EAAAxjB,EAAAm9C,UACAmmB,EAAA9hF,KAAA2qE,MAEAkY,EAAA7iF,KAAAyiF,YAEA1P,GACAsB,UAAAryC,EAAAkH,SAAA,oBAAAyrC,cAAA,UACAL,eAAAtyC,EAAAkH,SAAA,sBAAAyrC,eACAJ,aAAAvyC,EAAA3tB,IAAA,gBACAmgE,aAAAxyC,EAAA3tB,IAAA,gBACAqgE,eAAA1yC,EAAA3tB,IAAA,kBAEA+/B,WAAApS,EAAAkH,SAAA,gBACAurC,gBAAAzyC,EAAAkH,SAAA,kBAGA1qB,GAAAH,KAAAyjE,GACAl3D,IAAA,SAAAm3D,GACA,GAAAz2D,GAAA9M,EAAA0iD,cAAA6gB,EACA,IAAAW,EAAAlkE,EAAAujE,EAAAY,GAAA,CACA,GAAAG,GAAA,GAAAD,GAAArkE,EAAAujE,EAAAhP,EACA+P,GAAA3wD,KAAA,WAAA7G,GACA9M,EAAAgjD,iBAAAugB,EAAAe,GACApjD,EAAA9U,IAAAk4D,MAGAjwE,OAAA,SAAAkvE,EAAAC,GACA,GAAAc,GAAAhB,EAAArgB,iBAAAugB,GACA12D,EAAA9M,EAAA0iD,cAAA6gB,EACA,OAAAW,GAAAlkE,EAAAujE,EAAAY,IAIAG,GAKAA,EAAA9P,WAAAx0D,EAAAujE,EAAAhP,GACAprC,EAAA+M,YAAAouC,GACAn/E,SAAA2nB,GACqB0W,KAPrB8gD,EAAA,GAAAD,GAAArkE,EAAAujE,GACAe,EAAA3wD,KAAA,WAAA7G,IAUAoU,EAAA9U,IAAAk4D,OAEAtkE,GAAAgjD,iBAAAugB,EAAAe,QAjBApjD,GAAAhd,OAAAogE,KAmBApgE,OAAA,SAAAs/D,GACA,GAAAjjF,GAAA+iF,EAAArgB,iBAAAugB,EACAjjF,MAAAm2E,QAAA,WACAx1C,EAAAhd,OAAA3jB,OAGAkjF,UAEAjiF,KAAA2qE,MAAAnsD,GAGAokE,EAAAp3C,aAAA,WACA,GAAAhtB,GAAAxe,KAAA2qE,KACAnsD,IAEAA,EAAAkjD,kBAAA,SAAA3iE,EAAAuM,GACA,GAAAggB,GAAA9M,EAAA0iD,cAAA51D,EACAvM,GAAAozB,KAAA,WAAA7G,MAKAs3D,EAAAlgE,OAAA,SAAAqgE,GACA,GAAArjD,GAAA1/B,KAAA0/B,MACAlhB,EAAAxe,KAAA2qE,KACAnsD,KACAukE,EACAvkE,EAAAkjD,kBAAA,SAAA3iE,GACAA,EAAAm2E,QAAA,WACAx1C,EAAAhd,OAAA3jB,OAKA2gC,EAAA4jC,cAKAzmE,EAAAC,QAAAylF,G/G49sBMS,IACA,SAASnmF,EAAQC,QAASE,GAEhC,YgHjltBA,SAAAimF,GAAAzkE,GAEA,IADA,GAAAthB,GAAA,EACAA,EAAAshB,EAAAhc,QAAA,MAAAgc,EAAAthB,IACAA,GAEA,OAAAshB,GAAAthB,GAEA,QAAAgmF,GAAA1kE,GACA,GAAA2kE,GAAAF,EAAAzkE,EACA,cAAA2kE,IACA98D,EAAAqV,QAAAuiB,EAAAklC,IAMA,QAAAC,GAAA5kE,EAAAwjB,EAAAf,GAIA,GAFAziB,QAEAgjB,UACAnb,EAAAqV,QAAAld,GACA,SAAAsa,OAAA,gBAIA,IAAAuqD,GAAArhD,EAAA3tB,IAAA,oBACA26B,EAAAs0C,EAAAD,GACAE,EAAAp1C,EAAA95B,IAAAgvE,GAEAG,EAAAx0C,KAAAxwB,EAAAwjB,EAAAf,GACAo6B,EAAAmoB,KAAAnoB,UACAA,KAEAA,EAAAkoB,KAAAloB,aAAA,SACAA,EAAAua,EAAAva,EAAA78C,EAAA68C,EAAA9zC,QAAA,WAEA,IAAAk8D,GAAAD,IAAAC,iBAEAnhF,EAAA,GAAA2sC,GAAAosB,EAAAr5B,GAEAk8B,EAAAwlB,EAAAF,EAAAhlE,GAEAmlE,KACAxlB,EAAAslB,GAAA,GAAAP,EAAA1kE,GACA,SAAAwgC,EAAAyf,EAAA5zB,EAAAwU,GAOA,MALAhe,GAAA8c,iBAAAa,KACA18C,EAAAy7D,eAAA,GAIA1e,IAAAokC,EACA54C,EACAuT,EAAAH,EAAAe,GAAAqc,EAAAhc,KAEA,SAAAL,EAAAyf,EAAA5zB,EAAAwU,GACA,GAAA18B,GAAAs7B,EAAAe,GACAz4C,EAAA63C,EAAAz7B,KAAA08B,GAAAgc,EAAAhc,GAEAhe,GAAA8c,iBAAAa,KACA18C,EAAAy7D,eAAA,EAGA,IAAA6lB,GAAAJ,KAAAI,kBAcA,OAbAA,MAAAnlB,IAEA,gBAAAl4D,KAEAo9E,EAAAllB,GAAAklB,EAAAllB,IACAmlB,EAAAnlB,GAAAgL,gBACAljE,EAAA8f,EAAA9a,QAAAo4E,EAAAllB,GAAAl4D,GACAA,EAAA,IAAA8vB,MAAA9vB,KAEAA,OAIAA,EAMA,OAHAjE,GAAAy7D,eAAA,EACAz7D,EAAA27D,SAAAz/C,EAAA0/C,EAAAC,GAEA77D,EAGA,QAAAuhF,GAAAra,GACA,mBAAAA,GAAA,SAAAA,EAGA,QAAAsa,GAAAta,GACA,mBAAAA,EACA,UACA,SAAAA,EACA,OACA,QA0IA,QAAAka,GAAAzoD,EAAAzc,GACA,GAGAulE,GAHA7lB,KAEA8lB,EAAA/oD,KAAAogC,WAAApgC,EAAAwoD,cAMA,IAJAO,IACAD,EAAA9oD,EAAA2oD,mBAAAI,EAAAzjF,OAGAwjF,EAAA,CAEA,GAAAJ,GAAAI,EAAAta,eACA,IAAAka,EAAA,CACA,GAAAM,GAAAzlE,EAAAhc,MAKA,IAAA6jB,EAAAqV,QAAAld,EAAA,KAAAA,EAAA,GAAAhc,OAAA,GACA07D,IACA,QAAAhhE,GAAA,EAAmCA,EAAA+mF,EAAa/mF,IAChDghE,EAAAhhE,GAAAymF,EAAAnlE,EAAAthB,GAAA+9B,EAAAwoD,eAAA,QAIAvlB,GAAAylB,EAAArwE,MAAA,IAKA,MAAA4qD,GAhRA,GAAAjvB,GAAAjyC,EAAA,KACA44E,EAAA54E,EAAA,KACAqpB,EAAArpB,EAAA,KACAqkC,EAAArkC,EAAA,KACAmxC,EAAAnxC,EAAA,KACAihD,EAAA5c,EAAA4c,iBACAG,EAAA/c,EAAA+c,gBAwGAklC,GAEAY,YAAA,SAAA1lE,EAAAwjB,EAAAf,GAEA,GAAAkjD,GAAA99D,EAAAjD,KAAA,0BAAA7iB,GACA,MAAA0gC,GAAAwgB,iBACA3f,SAAAvhC,EACA0hC,MAAAD,EAAA3tB,IAAA9T,EAAA,SACAyC,GAAAg/B,EAAA3tB,IAAA9T,EAAA,QACiB,KAEjB6jF,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEA,IAAA3iD,QAAA,CACA,IAAA4iD,EACA,SAAAtrD,OAAA,UAAAzS,EAAAiX,SACA0E,EAAA3tB,IAAA,cACA2tB,EAAA3tB,IAAA,WACA,GACA,cAEA,KAAAgwE,EACA,SAAAvrD,OAAA,UAAAzS,EAAAiX,SACA0E,EAAA3tB,IAAA,cACA2tB,EAAA3tB,IAAA,WACA,GACA,eAIA,GAAAiwE,GAAAF,EAAA/vE,IAAA,QACAkwE,EAAAF,EAAAhwE,IAAA,QAEAgnD,IAEA96D,KAAA,IACA3C,KAAAkmF,EAAAQ,GACArnB,UAAA4mB,EAAAS,KAGA/jF,KAAA,IAEA3C,KAAAkmF,EAAAS,GACAtnB,UAAA4mB,EAAAU,KAIAC,EAAA,aAAAF,EACAG,EAAA,aAAAF,CAEA3O,GAAAva,EAAA78C,GAAA,aAEA,IAAAolE,KAOA,OANAY,KACAZ,EAAAhlF,EAAAwlF,GAEAK,IACAb,EAAA/kF,EAAAwlF,IAGAhpB,aACAooB,cAAAe,EAAA,EAAAC,EAAA,KACAb,uBAIAc,MAAA,SAAAlmE,EAAAwjB,EAAAf,GACA,GAAA0jD,GAAA1jD,EAAAwgB,iBACA3f,SAAA,QACAG,MAAAD,EAAA3tB,IAAA,cACArR,GAAAg/B,EAAA3tB,IAAA,aACa,GAEbuwE,EAAAD,EAAAE,cAAA,aACAC,EAAAH,EAAAE,cAAA,aAEA,IAAArjD,QAAA,CACA,IAAAojD,EACA,SAAA9rD,OAAA,6BAEA,KAAAgsD,EACA,SAAAhsD,OAAA,+BAIA,GAAAisD,GAAAD,EAAAzwE,IAAA,QACA2wE,EAAAJ,EAAAvwE,IAAA,QAEAgnD,IAEA96D,KAAA,SACA3C,KAAAkmF,EAAAiB,GACA9nB,UAAA4mB,EAAAkB,KAGAxkF,KAAA,QACA3C,KAAAkmF,EAAAkB,GACA/nB,UAAA4mB,EAAAmB,KAGAC,EAAA,aAAAD,EACAE,EAAA,aAAAH,CAEAnP,GAAAva,EAAA78C,GAAA,0BAEA,IAAAolE,KAOA,OANAsB,KACAtB,EAAAre,OAAAuf,GAEAG,IACArB,EAAA/nE,MAAA+oE,IAGAvpB,aACAooB,cAAAwB,EAAA,EAAAC,EAAA,KACAtB,uBAIAuB,IAAA,SAAA3mE,EAAAwjB,EAAAf,GAGA,OACAo6B,WAAAua,IACqBr1E,KAAA,QACAA,KAAA,QACrBie,GAAA,wBAsCA3hB,GAAAC,QAAAsmF,GhHmmtBMgC,IACA,SAASvoF,EAAQC,QAASE,GiHx3tBhC,GAAAqpB,GAAArpB,EAAA,KACAkwC,EAAAlwC,EAAA,KACAsyC,EAAApC,EAAAoC,QAEAtyC,GAAA,KACAA,EAAA,KAEAkwC,EAAAqB,eAAAloB,EAAA+W,MACApgC,EAAA,8BAEAkwC,EAAAmB,eAAAhoB,EAAA+W,MACApgC,EAAA,cAIAkwC,EAAAY,kBAAAwB,EAAAC,UAAAE,UAAAppB,EAAA+W,MACApgC,EAAA,cAIAA,EAAA,MjHi4tBMqoF,IACA,SAASxoF,EAAQC,QAASE,GAEhC,YkHv5tBA,IAAAomF,GAAApmF,EAAA,KACA0qC,EAAA1qC,EAAA,IAEAH,GAAAC,QAAA4qC,EAAAz+B,QAEArL,KAAA,cAEAuvC,cAAA,gBAEAu9B,eAAA,SAAAhiC,EAAAzH,GACA,GAAAO,QAAA,CACA,GAAAD,GAAAmH,EAAA4B,gBACA,cAAA/I,GAAA,gBAAAA,EACA,SAAAzI,OAAA,iEAGA,MAAAsqD,GAAA16C,EAAAlqB,KAAAxe,KAAAihC,IAGAsjB,eACA72C,OAAA,EACA/C,EAAA,EACA2/B,iBAAA,cACA20C,iBAAA,EAEAvK,gBAAA,EAQA4Q,cAAA,EAEA1a,OACA9sB,QACAn6C,SAAA,QAOAw7E,WACArhC,QACAz6C,MAAA,EACAzF,KAAA,UAKAyO,MAAA,EAGAwe,QAAA,EACA06D,eAAA,KAEAC,OAAA,cAEA3S,WAAA,EAEA0B,aAAA,KAGAkR,YAAA,EAEAC,eAAA,EAGAC,cAAA,EAGAC,SAAA,OAEA5zC,gBAAA,SAGAhiC,YAAA,EACA61E,oBAAArhE,QlHk6tBMshE,IACA,SAASjpF,EAAQC,QAASE,GAEhC,YmH1+tBA,SAAA+oF,GAAAC,EAAAC,GACA,GAAAD,EAAAxjF,SAAAyjF,EAAAzjF,OAAA,CAGA,OAAAtF,GAAA,EAAuBA,EAAA8oF,EAAAxjF,OAAoBtF,IAAA,CAC3C,GAAAgvB,GAAA85D,EAAA9oF,GACAivB,EAAA85D,EAAA/oF,EACA,IAAAgvB,EAAA,KAAAC,EAAA,IAAAD,EAAA,KAAAC,EAAA,GACA,OAGA,UAGA,QAAA+5D,GAAAr7D,GACA,yBAAAA,IAAA,KAGA,QAAAs7D,GAAA9d,GACA,GAAA/F,GAAA+F,EAAA+d,iBACA,IAAA/d,EAAAge,OAAA,CAEA,GAAAC,GAAAje,EAAAke,eAAA,IACAjoE,EAAAgkD,EAAA,GAAAA,EAAA,OACAA,GAAA,IAAAhkD,EAAAgoE,EACAhkB,EAAA,IAAAhkD,EAAAgoE,EAEA,MAAAhkB,GAGA,QAAAkkB,GAAAjgF,GACA,MAAAA,IAAA,OAQA,QAAAkgF,GAAAllD,EAAA/iB,GACA,GAAAkoE,GAAAnlD,EAAA8pC,cACAsb,EAAAplD,EAAAqlD,aAAAF,GACAG,EAAAH,EAAAI,OACA,EAAAH,EAAAxhF,MAAAq9D,YAAA,GAEAsS,EAAA6R,EAAA5qB,IAEAgrB,EAAA,MAAAjS,GAAA,WAAAA,EAAA,GAEA,OAAAt2D,GAAAuhD,UAAA+U,GAAA,SAAAvuE,EAAA+E,GAIA,IAHA,GAAA07E,GACArhD,EAAAnnB,EAAAmnB,UAEAA,GACA6gD,EAAA7gD,EAAAtxB,IAAAygE,EAAAxpE,MAAAk7E,EAAAjgF,IACA,CACAygF,EAAArhD,CACA,OAEA,GAAAshD,KAKA,OAJAA,GAAAF,GAAAvoE,EAAAnK,IAAAqyE,EAAA3qB,IAAAzwD,GACA27E,EAAA,EAAAF,GAAAC,EACAA,EAAA3yE,IAAAygE,EAAAxpE,GAAA,GAAAu7E,EAEAtlD,EAAA2lD,YAAAD,KACS,GAGT,QAAAE,GAAAC,EAAAC,EAAArlD,GACA,GAAAslD,GAAAnB,EAAAiB,EAAAG,QAAA,MACAC,EAAArB,EAAAiB,EAAAG,QAAA,MACAE,EAAAL,EAAA/b,cAAAoc,eAEA7oF,EAAAiP,KAAAC,IAAAw5E,EAAA,GAAAA,EAAA,IACAzoF,EAAAgP,KAAAC,IAAA05E,EAAA,GAAAA,EAAA,IACAnkF,EAAAwK,KAAAoC,IAAAq3E,EAAA,GAAAA,EAAA,IAAA1oF,EACA2E,EAAAsK,KAAAoC,IAAAu3E,EAAA,GAAAA,EAAA,IAAA3oF,EACA2c,EAAAwmB,EAAA3tB,IAAA,6BAEAm4D,EAAAxqC,EAAA3tB,IAAA,gBAAAmH,EAAA,EAAA3N,KAAAoC,IAAA5M,EAAAE,EACAkkF,IACA5oF,GAAA2tE,EACAjpE,GAAA,EAAAipE,IAGA5tE,GAAA4tE,EACAnpE,GAAA,EAAAmpE,EAGA,IAAAvtE,GAAA,GAAA0oC,GAAA8K,MACA3qC,OACAlJ,IACAC,IACAwE,QACAE,WAcA,OAVA8jF,KACApoF,EAAA6I,MAAA2/E,EAAA,oBACA9/C,EAAAgN,UAAA11C,GACA6I,OACAzE,QACAE,WAEay+B,IAGb/iC,EAGA,QAAAyoF,GAAAhD,EAAA2C,EAAArlD,GACA,GAAA2lD,GAAAjD,EAAAkD,eACAC,EAAAnD,EAAAoD,gBAEAC,EAAAF,EAAArlB,YACAqf,EAAA8F,EAAAnlB,YAEAwlB,EAAAn6E,KAAAyL,GAAA,IAEAra,EAAA,GAAA0oC,GAAA0K,QACAvqC,OACAoT,GAAAwpE,EAAAxpE,GACAC,GAAAupE,EAAAvpE,GACAwV,GAAAo3D,EAAA,GACA3sE,EAAA2sE,EAAA,GACA1sE,YAAAwmE,EAAA,GAAAmG,EACA1sE,UAAAumE,EAAA,GAAAmG,EACAt5D,UAAAi5D,EAAAM,UAaA,OATAZ,KACApoF,EAAA6I,MAAAwT,UAAAumE,EAAA,GAAAmG,EACArgD,EAAAgN,UAAA11C,GACA6I,OACAwT,UAAAumE,EAAA,GAAAmG,IAEahmD,IAGb/iC,EAGA,QAAAipF,GAAA3mD,EAAA8lD,EAAArlD,GACA,gBAAAT,EAAA3jC,KACA8pF,EAAAnmD,EAAA8lD,EAAArlD,GACAmlD,EAAA5lD,EAAA8lD,EAAArlD,GAGA,QAAAmmD,GAAAlnE,EAAAsgB,EAAA6mD,GAKA,OAJA1B,GAAAnlD,EAAA8pC,cACAgd,EAAA,MAAA3B,EAAA3qB,KAAA,WAAA2qB,EAAA3qB,IAAA,IAEAusB,KACAprF,EAAA,EAAuBA,EAAA+jB,EAAAze,OAAA,EAAuBtF,IAAA,CAC9C,GAAAqrF,GAAAtnE,EAAA/jB,EAAA,GACAsrF,EAAAvnE,EAAA/jB,EACAorF,GAAAz+E,KAAA2+E,EAEA,IAAAC,KACA,QAAAL,GACA,UACAK,EAAAJ,GAAAE,EAAAF,GACAI,EAAA,EAAAJ,GAAAG,EAAA,EAAAH,GAEAC,EAAAz+E,KAAA4+E,EACA,MACA,cAEA,GAAAC,IAAAF,EAAAH,GAAAE,EAAAF,IAAA,EACAM,IACAF,GAAAJ,GAAAM,EAAAN,GAAAK,EACAD,EAAA,EAAAJ,GAAAG,EAAA,EAAAH,GACAM,EAAA,EAAAN,GAAAE,EAAA,EAAAF,GACAC,EAAAz+E,KAAA4+E,GACAH,EAAAz+E,KAAA8+E,EACA,MACA,SACAF,EAAAJ,GAAAG,EAAAH,GACAI,EAAA,EAAAJ,GAAAE,EAAA,EAAAF,GAEAC,EAAAz+E,KAAA4+E,IAKA,MADAxnE,GAAA/jB,IAAAorF,EAAAz+E,KAAAoX,EAAA/jB,IACAorF,EAGA,QAAAM,GAAApqE,EAAA+iB,GACA,GAAAsnD,GAAArqE,EAAAgsB,UAAA,aACA,IAAAq+C,KAAArmF,QAAAgc,EAAAoT,QAAA,CAMA,OADAk3D,GACA5rF,EAAA2rF,EAAArmF,OAAA,EAA+CtF,GAAA,EAAQA,IAEvD,GAAA2rF,EAAA3rF,GAAAijE,UAAA,GACA2oB,EAAAD,EAAA3rF,EACA,OAGA,IAAA4rF,GAAA,gBAAAvnD,EAAA3jC,KAIA,YAHA4jC,SACAC,QAAAC,KAAA,2DAYA,IAAAy+B,GAAA2oB,EAAA3oB,UACA1B,EAAAjgD,EAAA68C,WAAA8E,GACAkI,EAAA9mC,EAAAgmD,QAAA9oB,GAGA94D,EAAA0gB,EAAAjD,IAAA0lE,EAAAC,MAAA,SAAAvyE,GACA,OACA87D,MAAAjK,EAAA2gB,cAAA3gB,EAAA4gB,YAAAzyE,EAAAmM,QACA0sB,MAAA74B,EAAA64B,SAGA65C,EAAAvjF,EAAAnD,OACA2mF,EAAAL,EAAAK,YAAA71E,OAEA41E,IAAAvjF,EAAA,GAAA2sE,MAAA3sE,EAAAujF,EAAA,GAAA5W,QACA3sE,EAAA4mE,UACA4c,EAAA5c,UAGA,IAAA6c,GAAA,GACAC,EAAA1jF,EAAA,GAAA2sE,MAAA8W,EACAE,EAAA3jF,EAAAujF,EAAA,GAAA5W,MAAA8W,EACAG,EAAAD,EAAAD,CAEA,IAAAE,EAAA,KACA,mBAGAljE,GAAA/lB,KAAAqF,EAAA,SAAA6Q,GACAA,EAAAivD,QAAAjvD,EAAA87D,MAAA+W,GAAAE,IAEA5jF,EAAAkE,MACA47D,OAAAyjB,EAAAvjF,EAAAujF,EAAA,GAAAzjB,OAAA,GACAp2B,MAAA85C,EAAA,oBAEAxjF,EAAA6jF,SACA/jB,OAAAyjB,EAAAvjF,EAAA,GAAA8/D,OAAA,GACAp2B,MAAA85C,EAAA,mBAQA,IAAAM,GAAA,GAAA9hD,GAAAzf,eAAA,QAAAviB,IAAA,GAIA,OAHA8jF,GAAAhrB,GAAA4qB,EACAI,EAAAhrB,EAAA,KAAA6qB,EAEAG,GArRA,GAAApjE,GAAArpB,EAAA,KACAulF,EAAAvlF,EAAA,KACA81E,EAAA91E,EAAA,KACA0sF,EAAA1sF,EAAA,KACA2qC,EAAA3qC,EAAA,KACAqkC,EAAArkC,EAAA,KACAozB,EAAApzB,EAAA,KACAioC,EAAAjoC,EAAA,IAiRAH,GAAAC,QAAAmoC,EAAAh8B,QAEArL,KAAA,OAEA06B,KAAA,WACA,GAAAqxD,GAAA,GAAAhiD,GAAAr1B,MAEAs3E,EAAA,GAAArH,EACAviF,MAAA0/B,MAAA9U,IAAAg/D,EAAAlqD,OAEA1/B,KAAA6pF,YAAAD,EACA5pF,KAAA8pF,WAAAH,GAGAxjD,OAAA,SAAAnE,EAAAf,EAAAyC,GACA,GAAAnC,GAAAS,EAAAsI,iBACA5K,EAAA1/B,KAAA0/B,MACAlhB,EAAAwjB,EAAAyD,UACA66C,EAAAt+C,EAAAkH,SAAA,oBACA6gD,EAAA/nD,EAAAkH,SAAA,oBAEAjoB,EAAAzC,EAAAuhD,SAAAvhD,EAAA0iD,eAAA,GAEA8oB,EAAA,UAAAzoD,EAAA3jC,KACAqsF,EAAAjqF,KAAAkqF,UAEAN,EAAA5pF,KAAA6pF,YACAM,EAAAnqF,KAAAoqF,UACAC,EAAArqF,KAAAsqF,SAEAX,EAAA3pF,KAAA8pF,WAEAzC,EAAArlD,EAAA3tB,IAAA,aAEAk2E,GAAAR,EAAA7mC,UACAsnC,EAAA/D,EAAAllD,EAAA/iB,GAEAinE,EAAAzjD,EAAA3tB,IAAA,cAEAo2E,EAAAhF,IAAAuE,IAAAhoD,EAAA3tB,IAAA,kBACArU,KAAA0qF,qBAAAlsE,EAAA+iB,GAGAugD,EAAA9hF,KAAA2qE,KACAmX,MAAApgB,kBAAA,SAAA3iE,EAAAuM,GACAvM,EAAA4rF,SACAjrD,EAAAhd,OAAA3jB,GACA+iF,EAAAtgB,iBAAAl2D,EAAA,SAKAm6E,GACAmE,EAAAlnE,SAGAgd,EAAA9U,IAAA++D,EAGA,IAAAt9E,IAAA29E,GAAAhoD,EAAA3tB,IAAA,OAGA81E,IAAAF,EAAArsF,OAAA2jC,EAAA3jC,MAAAyO,IAAArM,KAAA4qF,OAoBAL,IAAAF,EAEAA,EAAArqF,KAAA6qF,YACA5pE,EAAAupE,EACAjpD,EAAA8lD,GAGAgD,IAAAE,IAEAZ,EAAAjnE,OAAA2nE,GACAA,EAAArqF,KAAAsqF,SAAA,MAIAX,EAAAtR,YAAA6P,EAAA3mD,GAAA,EAAAS,IAIAyjD,GAAAmE,EAAA5W,WAAAx0D,EAAAisE,GAIAjsE,EAAAkjD,kBAAA,SAAA3iE,GACAA,EAAAyyB,eAAA,KAKAu0D,EAAA/lF,KAAA8qF,iBAAAN,IACAzE,EAAA/lF,KAAA+qF,QAAA9pE,KAEAomE,EACArnF,KAAAgrF,iBACAxsE,EAAAgsE,EAAAjpD,EAAAmC,EAAAr3B,IAKAA,IAEA4U,EAAAknE,EAAAlnE,EAAAsgB,EAAAl1B,GACAm+E,EAAArC,EAAAqC,EAAAjpD,EAAAl1B,IAGA89E,EAAAjwC,UACAj5B,WAEAopE,KAAAnwC,UACAj5B,SACAupE,wBAnEA/E,GAAAmE,EAAA5W,WAAAx0D,EAAAisE,GAEAp+E,IAEA4U,EAAAknE,EAAAlnE,EAAAsgB,EAAAl1B,GACAm+E,EAAArC,EAAAqC,EAAAjpD,EAAAl1B,IAGA89E,EAAAnqF,KAAAirF,aAAAhqE,EAAAsgB,EAAA8lD,GACAkD,IACAF,EAAArqF,KAAA6qF,YACA5pE,EAAAupE,EACAjpD,EAAA8lD,IAGAsC,EAAAtR,YAAA6P,EAAA3mD,GAAA,EAAAS,IA0DA,IAAAkpD,GAAAtC,EAAApqE,EAAA+iB,IAAA/iB,EAAAgsB,UAAA,QAEA2/C,GAAA3X,SAAAnsD,EAAAyV,SAEAwkD,EAAAK,gBAEA/xD,KAAA,OACAD,OAAAu8D,EACAC,SAAA,UAIA,IAAAtgE,GAAAmX,EAAA3tB,IAAA,SAQA,IAPAwW,EAAAq7D,EAAAlkD,EAAA3tB,IAAA,WACA81E,EAAAjwC,UACArvB,SACA06D,eAAAvjD,EAAA3tB,IAAA,kBACAsxE,aAAA3jD,EAAA3tB,IAAA,kBAGAg2E,EAAA,CACA,GAAA1kD,GAAAnnB,EAAAmnB,UACAylD,EAAA,CAWA,IATAf,EAAA7X,SAAAnsD,EAAAyV,SACAiuD,EAAAsB,gBAEAz8D,KAAAs8D,EACA78E,QAAA,GACA88E,SAAA,WAIAxlD,EAAA,CACA,GAAA2lD,GAAA3lD,EAAAg2B,SACAyvB,GAAAlF,EAAAoF,EAAAj3E,IAAA,WAGAg2E,EAAAnwC,UACArvB,SACAugE,kBACA7F,eAAAvjD,EAAA3tB,IAAA,kBACAsxE,aAAA3jD,EAAA3tB,IAAA,kBAIArU,KAAA2qE,MAAAnsD,EAEAxe,KAAAkqF,UAAA3oD,EACAvhC,KAAA8qF,iBAAAN,EACAxqF,KAAA+qF,QAAA9pE,EACAjhB,KAAA4qF,MAAAv+E,GAGA7M,QAAA,aAEAisC,UAAA,SAAAzJ,EAAAf,EAAAyC,EAAA9B,GACA,GAAApjB,GAAAwjB,EAAAyD,UACAoF,EAAAxJ,EAAA+f,eAAA5iC,EAAAojB,EAEA,MAAAiJ,YAAA52B,SAAA,MAAA42B,MAAA,GACA,GAAA26C,GAAAhnE,EAAAijD,iBAAA52B,EACA,KAAA26C,EAAA,CAEA,GAAAgD,GAAAhqE,EAAA0iD,cAAAr2B,EACA,KAAA29C,EAEA,MAEAhD,GAAA,GAAA1S,GAAAt0D,EAAAqsB,GACA26C,EAAA7hF,SAAA6kF,EACAhD,EAAA3R,KACA7xC,EAAA3tB,IAAA,UACA2tB,EAAA3tB,IAAA,MAEAmxE,EAAA/iF,OAAA4zB,MAAAmyD,EAAA,KAAAnyD,MAAAmyD,EAAA,IACAhD,EAAAmF,QAAA,EACAnsE,EAAAgjD,iBAAA32B,EAAA26C,GAGAA,EAAA/R,qBAAA,GAEAzzE,KAAA0/B,MAAA9U,IAAA46D,GAEAA,EAAA/5C,gBAIAxG,GAAA1lC,UAAAksC,UAAA1rC,KACAC,KAAAgiC,EAAAf,EAAAyC,EAAA9B,IAKA8J,SAAA,SAAA1J,EAAAf,EAAAyC,EAAA9B,GACA,GAAApjB,GAAAwjB,EAAAyD,UACAoF,EAAAxJ,EAAA+f,eAAA5iC,EAAAojB,EACA,UAAAiJ,MAAA,GACA,GAAA26C,GAAAhnE,EAAAijD,iBAAA52B,EACA26C,KACAA,EAAAmF,QACAnsE,EAAAgjD,iBAAA32B,EAAA,MACA7qC,KAAA0/B,MAAAhd,OAAA8iE,IAGAA,EAAA95C,gBAMAzG,GAAA1lC,UAAAmsC,SAAA3rC,KACAC,KAAAgiC,EAAAf,EAAAyC,EAAA9B,IAUAqpD,aAAA,SAAAhqE,GACA,GAAAkpE,GAAAnqF,KAAAoqF,SAkBA,OAhBAD,IACAnqF,KAAA8pF,WAAApnE,OAAAynE,GAGAA,EAAA,GAAA/5D,GAAAoiB,UACA1qC,OACAmZ,UAEAjiB,QAAA,EACAoT,GAAA,KAGApS,KAAA8pF,WAAAl/D,IAAAu/D,GAEAnqF,KAAAoqF,UAAAD,EAEAA,GASAU,YAAA,SAAA5pE,EAAAupE,GACA,GAAAH,GAAArqF,KAAAsqF,QAiBA,OAfAD,IACArqF,KAAA8pF,WAAApnE,OAAA2nE,GAGAA,EAAA,GAAAj6D,GAAAmiB,SACAzqC,OACAmZ,SACAupE,mBAEAxrF,QAAA,IAGAgB,KAAA8pF,WAAAl/D,IAAAy/D,GAEArqF,KAAAsqF,SAAAD,EACAA,GAKAK,qBAAA,SAAAlsE,EAAA+iB,GACA,GAAAgqD,GAAAhqD,EAAAiqD,eAAA,aAEA,IAAAD,KAAAE,eACA,MAAAplE,GAAAC,KAAAilE,EAAAE,eAAAF,IAQAP,iBAAA,SAAAxsE,EAAAgsE,EAAAjpD,EAAAmC,EAAAr3B,GACA,GAAA89E,GAAAnqF,KAAAoqF,UACAC,EAAArqF,KAAAsqF,SACAtoD,EAAAxjB,EAAAm9C,UAEAt9C,EAAAqrE,EACA1pF,KAAA2qE,MAAAnsD,EACAxe,KAAA8qF,iBAAAN,EACAxqF,KAAAkqF,UAAA3oD,GAGAmqD,EAAArtE,EAAAqtE,QACAC,EAAAttE,EAAAstE,iBACAnpE,EAAAnE,EAAAmE,KACAopE,EAAAvtE,EAAAutE,aACAv/E,KAEAq/E,EAAAvD,EAAA9pE,EAAAqtE,QAAAnqD,EAAAl1B,GACAs/E,EAAAxD,EAAA9pE,EAAAstE,iBAAApqD,EAAAl1B,GACAmW,EAAA2lE,EAAA9pE,EAAAmE,KAAA+e,EAAAl1B,GACAu/E,EAAAzD,EAAA9pE,EAAAutE,cAAArqD,EAAAl1B,IAKA89E,EAAAriF,MAAA+jF,SAAAxtE,EAAAqtE,QACAvB,EAAAriF,MAAAmZ,OAAAyqE,EAEA/jD,EAAA+M,YAAAy1C,GACAriF,OACAmZ,OAAAuB,IAEawf,GAEbqoD,IACAA,EAAAnwC,UACAj5B,OAAAyqE,EACAlB,gBAAAmB,IAEAhkD,EAAA+M,YAAA21C,GACAviF,OACAmZ,OAAAuB,EACAgoE,gBAAAoB,IAEiB5pD,GAMjB,QAHA8pD,MACAC,EAAA1tE,EAAAsoB,OAEAzpC,EAAA,EAA2BA,EAAA6uF,EAAAvpF,OAAuBtF,IAAA,CAClD,GAAA0hB,GAAAmtE,EAAA7uF,GAAA0hB,GACA,UAAAA,EAAA,CACA,GAAA7f,GAAAyf,EAAAijD,iBAAAsqB,EAAA7uF,GAAA8uF,KACAjtF,IACA+sF,EAAAjiF,MACA9K,KACAktF,MAAA/uF,KAMAitF,EAAAl5D,WAAAk5D,EAAAl5D,UAAAzuB,QACA2nF,EAAAl5D,UAAA,GAAAK,OAAA,WACA,OAAAp0B,GAAA,EAAmCA,EAAA4uF,EAAAtpF,OAA4BtF,IAAA,CAC/D,GAAA6B,GAAA+sF,EAAA5uF,GAAA6B,EACAA,GAAAozB,KAAA,WAAAg4D,EAAAriF,MAAA+jF,SAAAC,EAAA5uF,GAAA+uF,YAMAvpE,OAAA,SAAAue,GACA,GAAAvB,GAAA1/B,KAAA0/B,MACAoiD,EAAA9hF,KAAA2qE,KACA3qE,MAAA8pF,WAAAxmB,YACAtjE,KAAA6pF,YAAAnnE,QAAA,GAEAo/D,KAAApgB,kBAAA,SAAA3iE,EAAAuM,GACAvM,EAAA4rF,SACAjrD,EAAAhd,OAAA3jB,GACA+iF,EAAAtgB,iBAAAl2D,EAAA,SAIAtL,KAAAoqF,UACApqF,KAAAsqF,SACAtqF,KAAAkqF,UACAlqF,KAAA+qF,QACA/qF,KAAA8qF,iBACA9qF,KAAA2qE,MAAA,SnH+/tBMuhB,IACA,SAASrvF,EAAQC,SoHnrvBvB,QAAA0pF,GAAAjgF,GACA,MAAAA,IAAA,OAGA,QAAA4lF,GAAA5qD,EAAA/iB,EAAAlT,GAaA,IAZA,GAQA07E,GARAN,EAAAnlD,EAAA8pC,cACAsb,EAAAplD,EAAAqlD,aAAAF,GACAG,EAAAH,EAAAI,OACA,EAAAH,EAAAxhF,MAAAq9D,YAAA,GAEAsS,EAAA6R,EAAA5qB,IACAgrB,EAAA,MAAAjS,GAAA,WAAAA,EAAA,IAGAnvC,EAAAnnB,EAAAmnB,UACAp/B,EAAAiY,EAAAnK,IAAAygE,EAAAxpE,GAEAq6B,GACA6gD,EAAA7gD,EAAAtxB,IAAAygE,EAAAxpE,MAAAk7E,EAAAjgF,IACA,CACAygF,EAAArhD,CACA,OAEA,GAAAshD,KAKA,OAJAA,GAAAF,GAAAvoE,EAAAnK,IAAAqyE,EAAA3qB,IAAAzwD,GACA27E,EAAA,EAAAF,GAAAC,EACAA,EAAA3yE,IAAAygE,EAAAxpE,GAAA,GAAAu7E,EAEAtlD,EAAA2lD,YAAAD,GA0BA,QAAAmF,GAAAtK,EAAAhc,GACA,GAAAumB,KAcA,OAZAvmB,GAAAznD,KAAAyjE,GACAl3D,IAAA,SAAAtf,GACA+gF,EAAAxiF,MAAiC+U,IAAA,IAAAtT,UAEjCuH,OAAA,SAAAkvE,EAAAC,GACAqK,EAAAxiF,MAAiC+U,IAAA,IAAAtT,IAAA02E,EAAAgK,KAAAjK,MAEjCr/D,OAAA,SAAApX,GACA+gF,EAAAxiF,MAAiC+U,IAAA,IAAAtT,UAEjC22E,UAEAoK,EAGAxvF,EAAAC,QAAA,SACAglF,EAAAhc,EACAwmB,EAAAC,EACAC,EAAAC,GAsBA,OApBApuE,GAAA+tE,EAAAtK,EAAAhc,GAUA4mB,KACAC,KAEAC,KACAC,KAEAlmD,KACAmmD,KACAC,KACArtB,EAAA+sB,EAAApxB,WACAn+D,EAAA,EAAuBA,EAAAmhB,EAAA7b,OAAiBtF,IAAA,CACxC,GAAA8vF,GAAA3uE,EAAAnhB,GACA+vF,GAAA,CAIA,QAAAD,EAAApuE,KACA,QACA,GAAAsuE,GAAApL,EAAA5gB,cAAA8rB,EAAA1hF,KACAi9E,EAAAziB,EAAA5E,cAAA8rB,EAAAhB,OAEA31D,MAAA62D,EAAA,KAAA72D,MAAA62D,EAAA,OACAA,EAAA3E,EAAAj1E,SAEAo5E,EAAA7iF,KAAAqjF,GACAP,EAAA9iF,KAAA0+E,GAEAqE,EAAA/iF,KAAAyiF,EAAAU,EAAA1hF,MACAuhF,EAAAhjF,KAAA0iF,EAAAS,EAAAhB,OAEAe,EAAAljF,KAAAi8D,EAAAhnB,YAAAkuC,EAAAhB,MACA,MACA,SACA,GAAA1gF,GAAA0hF,EAAA1hF,GACAohF,GAAA7iF,KACA2iF,EAAAtF,aACAphB,EAAAzxD,IAAAqrD,EAAA,GAAAp0D,GAAA,GAAAw6D,EAAAzxD,IAAAqrD,EAAA,GAAAp0D,GAAA,MAIAqhF,EAAA9iF,KAAAi8D,EAAA5E,cAAA51D,GAAAgI,SAEAs5E,EAAA/iF,KACAsiF,EAAAK,EAAA1mB,EAAAx6D,IAEAuhF,EAAAhjF,KAAA0iF,EAAAjhF,IAEAyhF,EAAAljF,KAAAi8D,EAAAhnB,YAAAxzC,GACA,MACA,SACA,GAAAA,GAAA0hF,EAAA1hF,IACA2zD,EAAA6iB,EAAAhjC,YAAAxzC,EAGA2zD,KAAA3zD,GACAohF,EAAA7iF,KAAAi4E,EAAA5gB,cAAA51D,IACAqhF,EAAA9iF,KAAA4iF,EAAAvF,aACApF,EAAAztE,IAAAqrD,EAAA,GAAAp0D,GAAA,GAAAw2E,EAAAztE,IAAAqrD,EAAA,GAAAp0D,GAAA,MAGAshF,EAAA/iF,KAAAyiF,EAAAhhF,IACAuhF,EAAAhjF,KACAsiF,EACAM,EAAA3K,EAAAx2E,IAIAyhF,EAAAljF,KAAAo1D,IAGAguB,GAAA,EAKAA,IACAtmD,EAAA98B,KAAAmjF,GACAF,EAAAjjF,KAAAijF,EAAAtqF,SAMAsqF,EAAAh2C,KAAA,SAAA5kC,EAAAC,GACA,MAAA46E,GAAA76E,GAAA66E,EAAA56E,IAUA,QAPAg7E,MACAC,KAEAC,KACAC,KAEAC,KACArwF,EAAA,EAAuBA,EAAA4vF,EAAAtqF,OAA0BtF,IAAA,CACjD,GAAAoO,GAAAwhF,EAAA5vF,EACAiwF,GAAAjwF,GAAAwvF,EAAAphF,GACA8hF,EAAAlwF,GAAAyvF,EAAArhF,GAEA+hF,EAAAnwF,GAAA0vF,EAAAthF,GACAgiF,EAAApwF,GAAA2vF,EAAAvhF,GAEAiiF,EAAArwF,GAAAypC,EAAAr7B,GAGA,OACAogF,QAAAyB,EACA3qE,KAAA4qE,EAEAzB,iBAAA0B,EACAzB,cAAA0B,EAEA3mD,OAAA4mD,KpHksvBMC,IACA,SAAS3wF,EAAQC,QAASE,GqH/3vBhC,QAAAywF,GAAArzE,GACA,MAAAic,OAAAjc,EAAA,KAAAic,MAAAjc,EAAA,IAGA,QAAAszE,GACA1oF,EAAAic,EAAA1K,EAAAo3E,EAAAC,EACAtvE,EAAAuvE,EAAAC,EAAAjjE,EAAA06D,EAAAI,GAIA,OAFAoI,GAAA,EACAziF,EAAAiL,EACAgC,EAAA,EAAuBA,EAAAo1E,EAAYp1E,IAAA,CACnC,GAAA6B,GAAA6G,EAAA3V,EACA,IAAAA,GAAAsiF,GAAAtiF,EAAA,EACA,KAEA,IAAAmiF,EAAArzE,GAAA,CACA,GAAAurE,EAAA,CACAr6E,GAAAgT,CACA,UAEA,MAGA,GAAAhT,IAAAiL,EACAvR,EAAAsZ,EAAA,qBAAAlE,EAAA,GAAAA,EAAA,IACA4zE,EAAApiE,EAAAxR,OAGA,IAAAyQ,EAAA,GACA,GAAAojE,GAAA3iF,EAAAgT,EACA4vE,EAAAjtE,EAAAgtE,EACA,IAAAtI,EAEA,KAAAuI,GAAAT,EAAAxsE,EAAAgtE,KACAA,GAAA3vE,EACA4vE,EAAAjtE,EAAAgtE,EAIA,IAAAE,GAAA,GACAC,EAAAntE,EAAA8sE,GACAG,EAAAjtE,EAAAgtE,EAEA,KAAAC,GAAAT,EAAAS,GACAF,EAAAniE,EAAAzR,OAEA,CAEAqzE,EAAAS,KAAAvI,IACAuI,EAAA9zE,GAGAmJ,EAAAiI,IAAAL,EAAA+iE,EAAAE,EAEA,IAAAC,GACAC,CACA,UAAA/I,GAAA,MAAAA,EAAA,CACA,GAAAxpB,GAAA,MAAAwpB,EAAA,GACA8I,GAAAxgF,KAAA8N,IAAAvB,EAAA2hD,GAAAqyB,EAAAryB,IACAuyB,EAAAzgF,KAAA8N,IAAAvB,EAAA2hD,GAAAmyB,EAAAnyB,QAGAsyB,GAAA9qE,EAAAnD,KAAAhG,EAAAg0E,GACAE,EAAA/qE,EAAAnD,KAAAhG,EAAA8zE,EAIAC,GAAAG,KAAAD,GAEA1zC,EAAA9uB,EAAAzR,EAAA+Q,GAAAN,GAAA,EAAAsjE,IAGAtpE,EAAA+G,IAAAkiE,GACAhpE,EAAA8G,IAAAiiE,GACAhpE,EAAAgH,IAAAiiE,GACAhpE,EAAA+G,IAAAgiE,GAEA7oF,EAAA4qB,cACAhE,EAAA,GAAAA,EAAA,GACAC,EAAA,GAAAA,EAAA,GACAzR,EAAA,GAAAA,EAAA,IAGAugC,EAAA/uB,EAAAxR,EAAA+Q,EAAAN,EAAAsjE,OAGAnpF,GAAAmlB,OAAA/P,EAAA,GAAAA,EAAA,GAIA2zE,GAAAziF,EACAA,GAAAgT,EAGA,MAAA/F,GAGA,QAAAg2E,GAAAttE,EAAAoP,GACA,GAAAm+D,IAAAhqE,SACAiqE,KAAAjqE,YACA,IAAA6L,EACA,OAAAnzB,GAAA,EAA2BA,EAAA+jB,EAAAze,OAAmBtF,IAAA,CAC9C,GAAAsrF,GAAAvnE,EAAA/jB,EACAsrF,GAAA,GAAAgG,EAAA,KAAuCA,EAAA,GAAAhG,EAAA,IACvCA,EAAA,GAAAgG,EAAA,KAAuCA,EAAA,GAAAhG,EAAA,IACvCA,EAAA,GAAAiG,EAAA,KAAuCA,EAAA,GAAAjG,EAAA,IACvCA,EAAA,GAAAiG,EAAA,KAAuCA,EAAA,GAAAjG,EAAA,IAGvC,OACA16E,IAAAuiB,EAAAm+D,EAAAC,EACAx+E,IAAAogB,EAAAo+D,EAAAD,GA7HA,GAAA/mE,GAAAzqB,EAAA,KACAumB,EAAAvmB,EAAA,KAEA6nB,EAAAtB,EAAAzV,IACAgX,EAAAvB,EAAAtT,IAEA0qC,EAAAp3B,EAAAo3B,YACAqzC,EAAAzqE,EAAAvc,KAGAmkB,KACAS,KACAC,IAqHAhvB,GAAAC,SAEA01C,SAAA/qB,EAAAxe,QAEArL,KAAA,cAEAkK,OACAmZ,UAEA4J,OAAA,EAEAwF,kBAAA,EAEAk1D,eAAA,KAEAI,cAAA,GAGAjiF,OACAkrB,KAAA,KAEAD,OAAA,QAGA9mB,UAAA,SAAA7C,EAAA8C,GACA,GAAAmZ,GAAAnZ,EAAAmZ,OAEA/jB,EAAA,EACAyO,EAAAsV,EAAAze,OAEAy4B,EAAAszD,EAAAttE,EAAAnZ,EAAAuoB,iBAEA,IAAAvoB,EAAA69E,aAAA,CAEA,KAA0Bh6E,EAAA,GAC1B8hF,EAAAxsE,EAAAtV,EAAA,IADmCA,KAKnC,KAA0BzO,EAAAyO,GAC1B8hF,EAAAxsE,EAAA/jB,IADmCA,MAMnC,KAAAA,EAAAyO,GACAzO,GAAAwwF,EACA1oF,EAAAic,EAAA/jB,EAAAyO,IACA,EAAAsvB,EAAAntB,IAAAmtB,EAAAhrB,IAAAnI,EAAA+iB,OACA/iB,EAAAy9E,eAAAz9E,EAAA69E,cACA,KAKApzC,QAAA9qB,EAAAxe,QAEArL,KAAA,aAEAkK,OACAmZ,UAGAupE,mBAEA3/D,OAAA,EAEAugE,gBAAA,EAEA/6D,kBAAA,EAEAk1D,eAAA,KAEAI,cAAA,GAGA99E,UAAA,SAAA7C,EAAA8C,GACA,GAAAmZ,GAAAnZ,EAAAmZ,OACAupE,EAAA1iF,EAAA0iF,gBAEAttF,EAAA,EACAyO,EAAAsV,EAAAze,OACA+iF,EAAAz9E,EAAAy9E,eACA/hE,EAAA+qE,EAAAttE,EAAAnZ,EAAAuoB,kBACAq+D,EAAAH,EAAA/D,EAAA1iF,EAAAuoB,iBAEA,IAAAvoB,EAAA69E,aAAA,CAEA,KAA0Bh6E,EAAA,GAC1B8hF,EAAAxsE,EAAAtV,EAAA,IADmCA,KAKnC,KAA0BzO,EAAAyO,GAC1B8hF,EAAAxsE,EAAA/jB,IADmCA,MAMnC,KAAAA,EAAAyO,GAAA,CACA,GAAA4M,GAAAm1E,EACA1oF,EAAAic,EAAA/jB,EAAAyO,IACA,EAAA6X,EAAA1V,IAAA0V,EAAAvT,IAAAnI,EAAA+iB,OACA06D,EAAAz9E,EAAA69E,aAEA+H,GACA1oF,EAAAwlF,EAAAttF,EAAAqb,EAAA,EAAAA,EAAA5M,KACA+iF,EAAA5gF,IAAA4gF,EAAAz+E,IAAAnI,EAAAsjF,gBACA7F,EAAAz9E,EAAA69E,cAEAzoF,GAAAqb,EAAA,EAEAvT,EAAAyrB,kBrH25vBMk+D,IACA,SAAS9xF,EAAQC,QAASE,GsH9owBhC,GAAAqpB,GAAArpB,EAAA,KACAkwC,EAAAlwC,EAAA,IAEAA,GAAA,KACAA,EAAA,KAEAA,EAAA,aACAY,KAAA,kBACAD,MAAA,mBACAuhC,OAAA,mBAEAthC,KAAA,YACAD,MAAA,cACAuhC,OAAA,WAEAthC,KAAA,cACAD,MAAA,gBACAuhC,OAAA,cAGAgO,EAAAqB,eAAAloB,EAAA+W,MAAApgC,EAAA,aAEAkwC,EAAAmB,eAAAhoB,EAAA+W,MACApgC,EAAA,aAGAkwC,EAAAY,kBAAAznB,EAAA+W,MAAApgC,EAAA,ctHupwBM4xF,IACA,SAAS/xF,EAAQC,QAASE,GAEhC,YuHnrwBA,IAAAiyC,GAAAjyC,EAAA,KACAqpB,EAAArpB,EAAA,KACAqkC,EAAArkC,EAAA,KACA44E,EAAA54E,EAAA,KAEA6xF,EAAA7xF,EAAA,KAEA8xF,EAAA9xF,EAAA,KAAA6xC,mBAEAjxC,KAAA,aAGA06B,KAAA,SAAAoQ,GACAomD,EAAA5oC,WAAAlmD,KAAA,OAAAkmB,WAIAlmB,KAAAuqE,mBAAA,WACA,MAAAvqE,MAAAyqE,sBAGAzqE,KAAA+uF,kBAAArmD,EAAAlqB,MAEAxe,KAAAgvF,kBAAAtmD,IAIAqa,YAAA,SAAAsG,GACAylC,EAAA7oC,UAAAjmD,KAAA,cAAAqpD,GACArpD,KAAA+uF,kBAAA/uF,KAAA0oC,OAAAlqB,OAGAksD,eAAA,SAAAhiC,EAAAzH,GACA,GAAAo6B,GAAAua,GAAA,SAAAltC,EAAAlqB,MACAlc,EAAA,GAAA2sC,GAAAosB,EAAAr7D,KAEA,OADAsC,GAAA27D,SAAAv1B,EAAAlqB,MACAlc,GAIAoqC,cAAA,SAAA7B,GACA,GAAArsB,GAAAxe,KAAA2qE,MACAr+B,EAAAwiD,EAAA7oC,UAAAjmD,KAAA,gBAAA6qC,GACAlf,EAAAnN,EAAAwgD,OAAA,QAOA,OAHA1yB,GAAAx0B,QAAA6T,IAAAnN,EAAAnK,IAAA,QAAAw2B,GAAAlf,EAAA,KAAAirB,QAAA,KAEAtK,EAAAgQ,MAAAzyC,KAAA,WACAyiC,GAGA0iD,kBAAA,SAAAtmD,GAEArH,EAAAoc,gBAAA/U,EAAAumD,WAAA,QAEA,IAAAC,GAAAxmD,EAAAumD,UAAAnxC,OACAqxC,EAAAzmD,EAAAumD,UAAArxC,QAEAsxC,GAAA9W,KAAA8W,EAAA9W,MACA1vC,EAAAkiC,MAAA9sB,OAAAs6B,KACA+W,EAAA/W,KAAA+W,EAAA/W,MACA1vC,EAAAkiC,MAAAhtB,SAAAw6B,MAGA7zB,eACA72C,OAAA,EACA/C,EAAA,EACAs0E,iBAAA,EAEAvK,gBAAA,EAEAl0D,QAAA,aACA+kD,QAAA,SAEA72C,WAAA,EACArT,WAAA,GAEA+zE,SAAA,EAEAC,eAAA,GAGAC,mBAAA,EAMA1kB,OACA9sB,QAEAtvB,QAAA,EACA4pD,MAAA,EAEAz0E,SAAA,SAKAi6C,aAGAqxC,WACAnxC,QACAs6B,MAAA,EAEA51E,OAAA,GAEAuuE,QAAA,GACAlmD,QAAA,EACAs0D,WAEA97E,MAAA,EACAzF,KAAA,WAIAy2E,WACAv2B,QACA6hC,YAAA,GAEA/hC,aAGA5L,gBAAA,WAEAxzB,UAIA6H,GAAAzjB,MAAAksF,EAAAD,GAEAhyF,EAAAC,QAAAgyF,GvH4rwBMS,IACA,SAAS1yF,EAAQC,QAASE,GwH5zwBhC,QAAAwyF,GAAA/qC,EAAAziB,EAAAqlD,EAAA3jD,GACA,GAAAllB,GAAAwjB,EAAAyD,UACAoF,EAAA7qC,KAAA6qC,UACAtqC,EAAAie,EAAAugC,QAAAlU,GACAwkD,EAAArtD,EAAA3tB,IAAA,iBAEAqvB,GAAA4D,gBACA1pC,KAAA,kBACA8N,KAAA+4C,EACAlkD,OACAqgD,SAAA5e,EAAAh/B,KAGAwb,EAAAle,KAAA,SAAAgL,GACAmkF,EACAjxE,EAAAijD,iBAAAn2D,GACAkT,EAAA0iD,cAAA51D,GACA02B,EAAA48C,WAAApgE,EAAAugC,QAAAzzC,IACA+jF,EACAhI,KAaA,QAAAoI,GAAA1wF,EAAAk0C,EAAA2rC,EAAAyQ,EAAAhI,GACA,GAAAqI,IAAAz8C,EAAA53B,WAAA43B,EAAA33B,UAAA,EAEAgF,EAAAzS,KAAAwL,IAAAq2E,GACAnvE,EAAA1S,KAAA2L,IAAAk2E,GAEAjqB,EAAAmZ,EAAAyQ,EAAA,EACA1rF,GAAA2c,EAAAmlD,EAAAllD,EAAAklD,EAEA4hB,GAEAtoF,EAAA4X,UACAyb,KAAA,KACAzuB,aAEA4S,MAAA,aACAxX,EAAAozB,KAAA,WAAAxuB,GAQA,QAAAgsF,GAAAnxE,EAAAlT,GAgBA,QAAAypE,KACAoV,EAAA1nF,OAAA0nF,EAAAyF,YACAhnE,EAAAnmB,OAAAmmB,EAAAgnE,YAEA,QAAA3a,KACAkV,EAAA1nF,OAAA0nF,EAAA0F,aACAjnE,EAAAnmB,OAAAmmB,EAAAinE;CApBAloD,EAAAr1B,MAAAvS,KAAAC,KAEA,IAAA0gF,GAAA,GAAA/4C,GAAA0K,QACAjgC,GAAA,IAEA+3E,EAAA,GAAAxiD,GAAA6K,SACA5pB,EAAA,GAAA+e,GAAAhf,IACA3oB,MAAA4qB,IAAA81D,GACA1gF,KAAA4qB,IAAAu/D,GACAnqF,KAAA4qB,IAAAhC,GAEA5oB,KAAAgzE,WAAAx0D,EAAAlT,GAAA,GAWAtL,KAAAQ,GAAA,WAAAu0E,GACAv0E,GAAA,SAAAy0E,GACAz0E,GAAA,YAAAu0E,GACAv0E,GAAA,WAAAy0E,GAKA,QAAA6a,GAAAtxE,EAAAlT,EAAA63D,EAAA/uB,EAAAC,GACA,GAAAE,GAAAH,EAAAlL,SAAA,aACA6mD,EAAA,WAAA17C,GAAA,UAAAA,CACA,QACAzlB,KAAA2lB,EAAAE,iBACAs7C,EAAA,OAAAvxE,EAAAssB,cAAAx/B,EAAA,UACA+C,QAAAmQ,EAAAssB,cAAAx/B,EAAA,WACA0d,SAAAurB,EAAAC,UACA5rB,KAAAvC,EAAAiX,SACA9e,EAAAm9C,UAAAvc,kBAAA9zC,EAAA63D,GAAA3kD,EAAAugC,QAAAzzC,KAzGA,GAAAq8B,GAAA3qC,EAAA,KACAqpB,EAAArpB,EAAA,KA6FAgzF,EAAAL,EAAApwF,SAgBAywF,GAAAhd,WAAA,SAAAx0D,EAAAlT,EAAA2kF,GAgDA,QAAAlb,KAGA2L,EAAAlvD,eAAA,GACAkvD,EAAAhvD,WACA5pB,OACAsT,EAAA63B,EAAA73B,EAAA,KAEa,kBAEb,QAAA65D,KACAyL,EAAAlvD,eAAA,GACAkvD,EAAAhvD,WACA5pB,OACAsT,EAAA63B,EAAA73B,IAEa,kBA9Db,GAAAslE,GAAA1gF,KAAA8nD,QAAA,GAEA9lB,EAAAxjB,EAAAm9C,UACArc,EAAA9gC,EAAA+gC,aAAAj0C,GACA2nC,EAAAz0B,EAAA0iD,cAAA51D,GACA4kF,EAAA7pE,EAAApd,UAA0CgqC,EAC1Ci9C,GAAAtlB,MAAA,KACAqlB,GACAvP,EAAAxmC,SAAAg2C,GACAxP,EAAA54E,MAAAwT,SAAA23B,EAAA53B,WACAssB,EAAA+M,YAAAgsC,GACA54E,OACAwT,SAAA23B,EAAA33B,WAEa0mB,EAAA12B,IAGbq8B,EAAA+M,YAAAgsC,GACA54E,MAAAooF,GACaluD,EAAA12B,EAIb,IAAA6kF,GAAA7wC,EAAApW,SAAA,aACAgiD,EAAA1sE,EAAAssB,cAAAx/B,EAAA,QAEAo1E,GAAAlO,SACAnsD,EAAAyV,UAEAqvD,SAAA,QACAv8D,KAAAs8D,GAEAiF,EAAAjnD,SAAA,UAAAyrC,iBAGA+L,EAAA31E,WAAAolF,EAAAjnD,SAAA,YAAAyrC,eAGA8a,EACAzvF,KACAwe,EAAA0iD,cAAA51D,GACAg0C,EAAAjrC,IAAA,YACA2tB,EAAA3tB,IAAA,kBACA2tB,EAAA3tB,IAAA,cAqBAqsE,EAAAtqD,IAAA,aAAAA,IAAA,YAAAA,IAAA,YAAAA,IAAA,UACAkpB,EAAAjrC,IAAA,mBAAA2tB,EAAA4P,qBACA8uC,EACAlgF,GAAA,YAAAu0E,GACAv0E,GAAA,WAAAy0E,GACAz0E,GAAA,WAAAu0E,GACAv0E,GAAA,SAAAy0E,GAGAj1E,KAAAowF,aAAA5xE,EAAAlT,GAEAq8B,EAAAqM,cAAAh0C,OAGAgwF,EAAAI,aAAA,SAAA5xE,EAAAlT,GAEA,GAAA2jF,GAAAjvF,KAAA8nD,QAAA,GACAuoC,EAAArwF,KAAA8nD,QAAA,GAEA9lB,EAAAxjB,EAAAm9C,UACArc,EAAA9gC,EAAA+gC,aAAAj0C,GACA2nC,EAAAz0B,EAAA0iD,cAAA51D,GACAglF,EAAAr9C,EAAA23B,MACAsgB,EAAA1sE,EAAAssB,cAAAx/B,EAAA,QAEAq8B,GAAA+M,YAAAu6C,GACAnnF,OACAmZ,OAAAqvE,EAAAC,cACAD,EAAA1xF,EAAA0xF,EAAAzxF,IAAAyxF,EAAA1xF,EAAA0xF,EAAAzxF,IAAAyxF,EAAA1xF,EAAA0xF,EAAAzxF,MAGSmjC,EAAA12B,GAETq8B,EAAA+M,YAAA27C,GACA3sF,OACA9E,EAAA0xF,EAAA1xF,EACAC,EAAAyxF,EAAAzxF,IAESmjC,EAAA12B,GACT+kF,EAAAl+D,MACAzuB,OACAulB,kBAAAqnE,EAAA9iE,cACA1E,UAAAwnE,EAAAxnE,UACAE,SAAAsnE,EAAAvnE,MAEApX,SAAA2+E,EAAA3+E,SACA8hB,QAAA68D,EAAA1xF,EAAA0xF,EAAAzxF,GACAuT,GAAA,IAGA,IAAAgiC,GAAAkL,EAAApW,SAAA,gBACAsnD,EAAAlxC,EAAApW,SAAA,kBACAunD,EAAAnxC,EAAApW,SAAA,oBACAwnD,EAAApxC,EAAApW,SAAA,sBACAmL,EAAAD,EAAA//B,IAAA,aAAAm8E,EAAAn8E,IAAA,WAEAg8E,GAAAllF,SAAA2kF,EAAAtxE,EAAAlT,EAAA,SAAA8oC,EAAAC,IAEAg8C,EAAA5tF,OAAA4tF,EAAAR,cAAAz7C,EAAA//B,IAAA,QACAg8E,EAAAT,aAAAY,EAAAn8E,IAAA,QAEA46E,EAAAxsF,OAAAwsF,EAAAY,cAAAY,EAAAp8E,IAAA,QACA46E,EAAAW,aAAAc,EAAAr8E,IAAA,QAGA46E,EAAA9jF,UACAwjB,OAAAu8D,EACA78E,QAAAmQ,EAAAssB,cAAAx/B,EAAA,aAEA2jF,EAAA9jF,SAAAslF,EAAAvnD,SAAA,aAAAy3C,gBAEA0P,EAAAtlF,WAAA+kF,EAAAtxE,EAAAlT,EAAA,WAAAklF,EAAAn8C,GACA46C,EAAAlkF,WAAA2lF,EAAAxnD,SAAA,aAAAy3C,cAEA,IAAA91D,GAAA4lE,EAAAp8E,IAAA,SACAwW,SAAA,IACAA,EAAA,IAEAokE,EAAA/0C,UACArvB,YAIAxE,EAAAgC,SAAAsnE,EAAAhoD,EAAAr1B,MAIA,IAAAq+E,GAAA3zF,EAAA,KAAAiM,QAEArL,KAAA,MAEA06B,KAAA,WACA,GAAAs4D,GAAA,GAAAjpD,GAAAr1B,KACAtS,MAAA6wF,aAAAD,GAGAzqD,OAAA,SAAAnE,EAAAf,EAAAyC,EAAA9B,GACA,IAAAA,KAAAl2B,OAAA1L,KAAAykD,IAAA,CAIA,GAAAjmC,GAAAwjB,EAAAyD,UACAq8C,EAAA9hF,KAAA2qE,MACAjrC,EAAA1/B,KAAA0/B,MAEA2nD,EAAApmD,EAAA5sB,IAAA,aACAy8E,GAAAhP,EAEAiP,EAAA1qE,EAAA+W,MACAoyD,EAAAxvF,KAAAykD,IAAAziB,EAAAqlD,EAAA3jD,GAGAstD,EAAAhvD,EAAA3tB,IAAA,eAiCA,IA/BAmK,EAAAH,KAAAyjE,GACAl3D,IAAA,SAAAtf,GACA,GAAA2lF,GAAA,GAAAtB,GAAAnxE,EAAAlT,EACAwlF,IACAG,EAAAvpC,UAAA,SAAAh0C,GACAA,EAAA8d,eAAA,KAIAw/D,GAAAC,EAAAzwF,GAAA,QAAAuwF,GAEAvyE,EAAAgjD,iBAAAl2D,EAAA2lF,GAEAvxD,EAAA9U,IAAAqmE,KAEAp+E,OAAA,SAAAkvE,EAAAC,GACA,GAAAiP,GAAAnP,EAAArgB,iBAAAugB,EAEAiP,GAAAje,WAAAx0D,EAAAujE,GAEAkP,EAAA76D,IAAA,SACA46D,GAAAC,EAAAzwF,GAAA,QAAAuwF,GACArxD,EAAA9U,IAAAqmE,GACAzyE,EAAAgjD,iBAAAugB,EAAAkP,KAEAvuE,OAAA,SAAApX,GACA,GAAA2lF,GAAAnP,EAAArgB,iBAAAn2D,EACAo0B,GAAAhd,OAAAuuE,KAEAhP,UAEAoF,GAAAyJ,GAAAtyE,EAAAoT,QAAA,GACA,GAAA9pB,GAAA0W,EAAA0iD,cAAA,GACA9lD,EAAAvN,KAAAoC,IAAAyzB,EAAApgC,WAAAogC,EAAAlgC,aAAA,EAEA80E,EAAAjyD,EAAAC,KAAAoZ,EAAA44C,eAAA54C,EACAA,GAAA24C,YAAAr4E,KAAAkxF,gBACAppF,EAAAoT,GAAApT,EAAAqT,GAAAC,EAAAtT,EAAAuT,WAAAvT,EAAA4mB,UAAA4pD,EAAAt2C,IAIAhiC,KAAA2qE,MAAAnsD,IAGAhf,QAAA,aAEA0xF,gBAAA,SACAh2E,EAAAC,EAAAC,EAAAC,EAAAqT,EAAApf,EAAA0yB,GAEA,GAAA/iC,GAAA,GAAA0oC,GAAA0K,QACAvqC,OACAoT,KACAC,KACAwV,GAAA,EACAvV,IACAC,aACAC,SAAAD,EACAqT,cAUA,OANAiZ,GAAAgN,UAAA11C,GACA6I,OACAwT,SAAAD,GAAAqT,EAAA,MAAA7gB,KAAAyL,GAAA,IAEa0oB,EAAA1yB,GAEbrQ,GAMAsrC,aAAA,SAAAjf,EAAA0W,GACA,GAAAxjB,GAAAwjB,EAAAyD,UACA0rD,EAAA3yE,EAAA0iD,cAAA,EACA,IAAAiwB,EAAA,CACA,GAAA7wE,GAAAgL,EAAA,GAAA6lE,EAAAj2E,GACAqF,EAAA+K,EAAA,GAAA6lE,EAAAh2E,GACAoqD,EAAA13D,KAAAkM,KAAAuG,IAAAC,IACA,OAAAglD,IAAA4rB,EAAA/1E,GAAAmqD,GAAA4rB,EAAAxgE,MAMA9zB,GAAAC,QAAA6zF,GxH60wBMS,IACA,SAASv0F,EAAQC,QAASE,GAEhC,YyHpsxBA,SAAAq0F,GAAA/uF,EAAA4Y,EAAAC,EAAAC,EAAAkD,EAAAgzE,EAAAC,GAMA,QAAAC,GAAAj7E,EAAAuN,EAAA9N,EAAAsI,GACA,OAAAoZ,GAAAnhB,EAA+BmhB,EAAA5T,EAAS4T,IAExC,GADAp1B,EAAAo1B,GAAA74B,GAAAmX,EACA0hB,EAAAnhB,GACAmhB,EAAA,EAAA5T,GACAxhB,EAAAo1B,EAAA,GAAA74B,EAAAyD,EAAAo1B,GAAA74B,EAAAyD,EAAAo1B,GAAAn0B,OAGA,WADAkuF,GAAA/5D,EAAA1hB,EAAA,EAKAy7E,GAAA3tE,EAAA,EAAA9N,EAAA,GAIA,QAAAy7E,GAAA3tE,EAAA9N,GACA,OAAA0hB,GAAA5T,EAA6B4T,GAAA,IAC7Bp1B,EAAAo1B,GAAA74B,GAAAmX,IACA0hB,EAAA,GACAp1B,EAAAo1B,GAAA74B,EAAAyD,EAAAo1B,EAAA,GAAA74B,EAAAyD,EAAAo1B,EAAA,GAAAn0B,SAHqCm0B,MAUrC,QAAAg6D,GAAApvF,EAAAqvF,EAAAz2E,EAAAC,EAAAC,EAAAkD,GASA,OARAszE,GAAAtzE,EAAA,EACAqzE,EACApyB,OAAAC,UACA,EACAmyB,EACApyB,OAAAC,UACA,EAEAtiE,EAAA,EAAAsQ,EAAAlL,EAAAE,OAA4CtF,EAAAsQ,EAAOtQ,IAEnD,cAAAoF,EAAApF,GAAAyG,SAAA,CAGA,GAAAkuF,GAAAhkF,KAAA8N,IAAArZ,EAAApF,GAAA2B,EAAAsc,GACA3Y,EAAAF,EAAApF,GAAAyO,IACAolE,EAAAzuE,EAAApF,GAAA47E,KACAgZ,EAAAD,EAAAz2E,EAAA5Y,EACAqL,KAAAkM,MACAqB,EAAA5Y,EAAAuuE,IAAA31D,EAAA5Y,EAAAuuE,GACA8gB,KAEAhkF,KAAA8N,IAAArZ,EAAApF,GAAA0B,EAAAsc,EACAy2E,IAAAG,GAAAF,IAEAE,EAAAF,EAAA,KAEAD,GAAAG,GAAAF,IAEAE,EAAAF,EAAA,IAGAtvF,EAAApF,GAAA0B,EAAAsc,EAAA42E,EAAAxzE,EACAszE,EAAAE,GAjEAxvF,EAAAw0C,KAAA,SAAA5kC,EAAAC,GACA,MAAAD,GAAArT,EAAAsT,EAAAtT,GAyEA,QAJAmX,GADA+7E,EAAA,EAEApmF,EAAArJ,EAAAE,OACAwvF,KACAC,KACA/0F,EAAA,EAAuBA,EAAAyO,EAASzO,IAChC8Y,EAAA1T,EAAApF,GAAA2B,EAAAkzF,EACA/7E,EAAA,GACAw7E,EAAAt0F,EAAAyO,GAAAqK,EAAAsI,GAEAyzE,EAAAzvF,EAAApF,GAAA2B,EAAAyD,EAAApF,GAAAqG,MAEAguF,GAAAQ,EAAA,GACAN,EAAA9lF,EAAA,EAAAomF,EAAAR,EAEA,QAAAr0F,GAAA,EAAuBA,EAAAyO,EAASzO,IAChCoF,EAAApF,GAAA2B,GAAAsc,EACA82E,EAAApoF,KAAAvH,EAAApF,IAGA80F,EAAAnoF,KAAAvH,EAAApF,GAGAw0F,GAAAM,GAAA,EAAA92E,EAAAC,EAAAC,EAAAkD,GACAozE,EAAAO,GAAA,EAAA/2E,EAAAC,EAAAC,EAAAkD,GAGA,QAAA4zE,GAAAC,EAAAj3E,EAAAC,EAAAC,EAAAk2E,EAAAC,GAGA,OAFAa,MACAC,KACAn1F,EAAA,EAAuBA,EAAAi1F,EAAA3vF,OAA4BtF,IACnDi1F,EAAAj1F,GAAA0B,EAAAsc,EACAk3E,EAAAvoF,KAAAsoF,EAAAj1F,IAGAm1F,EAAAxoF,KAAAsoF,EAAAj1F,GAIAm0F,GAAAgB,EAAAn3E,EAAAC,EAAAC,EAAA,EAAAk2E,EAAAC,GACAF,EAAAe,EAAAl3E,EAAAC,EAAAC,KAAAk2E,EAAAC,EAEA,QAAAr0F,GAAA,EAAuBA,EAAAi1F,EAAA3vF,OAA4BtF,IAAA,CACnD,GAAAqzF,GAAA4B,EAAAj1F,GAAAqzF,UACA,IAAAA,EAAA,CACA,GAAAnwE,GAAAmwE,EAAA,MAAAA,EAAA,KACA4B,GAAAj1F,GAAA0B,EAAAsc,EACAq1E,EAAA,MAAA4B,EAAAj1F,GAAA0B,EAAA,EAGA2xF,EAAA,MAAA4B,EAAAj1F,GAAA0B,EAAA,EAEA2xF,EAAA,MAAAA,EAAA,MAAA4B,EAAAj1F,GAAA2B,EACA0xF,EAAA,MAAAA,EAAA,MAAAnwE,IA7HA,GAAAsI,GAAA1rB,EAAA,IAkIAH,GAAAC,QAAA,SAAAklC,EAAA5mB,EAAAk2E,EAAAC,GACA,GAEAr2E,GACAC,EAHAqD,EAAAwjB,EAAAyD,UACA0sD,KAGAG,GAAA,CAEA9zE,GAAAle,KAAA,SAAAgL,GACA,GAeAinF,GACAC,EACAjC,EACAznE,EAlBAmqB,EAAAz0B,EAAA0iD,cAAA51D,GAEAg0C,EAAA9gC,EAAA+gC,aAAAj0C,GACA8oC,EAAAkL,EAAApW,SAAA,gBAEAmL,EAAAD,EAAA//B,IAAA,aAAAirC,EAAAjrC,IAAA,2BAEAo8E,EAAAnxC,EAAApW,SAAA,oBACAupD,EAAAhC,EAAAp8E,IAAA,UACAq+E,EAAAjC,EAAAp8E,IAAA,WAEAq7E,GAAAz8C,EAAA53B,WAAA43B,EAAA33B,UAAA,EACAgF,EAAAzS,KAAAwL,IAAAq2E,GACAnvE,EAAA1S,KAAA2L,IAAAk2E,EAOAx0E,GAAA+3B,EAAA/3B,GACAC,EAAA83B,EAAA93B,EAEA,IAAA40E,GAAA,WAAA17C,GAAA,UAAAA,CACA,eAAAA,EACAk+C,EAAAt/C,EAAA/3B,GACAs3E,EAAAv/C,EAAA93B,GACA2N,EAAA,aAEA,CACA,GAAA3M,IAAA4zE,GAAA98C,EAAA73B,EAAA63B,EAAAtiB,IAAA,EAAArQ,EAAA2yB,EAAA73B,EAAAkF,GAAApF,EACAkB,GAAA2zE,GAAA98C,EAAA73B,EAAA63B,EAAAtiB,IAAA,EAAApQ,EAAA0yB,EAAA73B,EAAAmF,GAAApF,CAKA,IAHAo3E,EAAAp2E,EAAA,EAAAmE,EACAkyE,EAAAp2E,EAAA,EAAAmE,GAEAwvE,EAAA,CAEA,GAAA1zE,GAAAF,EAAAmE,GAAAmyE,EAAAr3E,EAAA63B,EAAA73B,GACAkB,EAAAF,EAAAmE,GAAAkyE,EAAAr3E,EAAA63B,EAAA73B,GACAmB,EAAAF,GAAAiE,EAAA,QAAAoyE,EACAl2E,EAAAF,CAEAi2E,GAAAh2E,GAAA+D,EAAA,QACAkyE,EAAAh2E,EACA+zE,IAAAp0E,EAAAC,IAAAC,EAAAC,IAAAC,EAAAC,IAGAsM,EAAAinE,EAAA,SAAAzvE,EAAA,iBAEA,GAAAyI,GAAAqrB,EAAAlL,SAAA,aAAAsL,UAEAm+C,EAAAv+C,EAAA//B,IAAA,UACAiM,EAAA,GAAAovE,EAAA7hF,KAAAyL,IAAAo2E,EAAA,EACA9mE,EAAAoZ,EAAAod,kBAAA9zC,EAAA,WACAkT,EAAAugC,QAAAzzC,GACA6hB,EAAAzE,EAAAzhB,gBACA2hB,EAAAG,EAAAD,EAAA,MAEAwpE,KAAAK,EACA1/C,EAAA23B,OACAhsE,EAAA2zF,EACA1zF,EAAA2zF,EACA7uF,SAAA0wC,EACA9wC,OAAA4pB,EAAA5pB,OACAoI,IAAA8mF,EACA3Z,KAAA4Z,EACAnC,aACAznE,YACA0E,cAAA,SACAzE,OACApX,SAAAghF,GAIA5C,GACAoC,EAAAtoF,KAAAopC,EAAA23B,UAGA0nB,GAAAtwD,EAAA3tB,IAAA,sBACA69E,EAAAC,EAAAj3E,EAAAC,EAAAC,EAAAk2E,EAAAC,KzHktxBMqB,IACA,SAAS/1F,EAAQC,QAASE,G0H76xBhC,GAAAq+C,GAAAr+C,EAAA,KACA8vB,EAAAuuB,EAAAvuB,aACAwjE,EAAAtzF,EAAA,KACAqpB,EAAArpB,EAAA,KAEAge,EAAA,EAAAnN,KAAAyL,GACA0uE,EAAAn6E,KAAAyL,GAAA,GAEAzc,GAAAC,QAAA,SAAAqiD,EAAAle,EAAAyC,EAAA9B,GACAX,EAAA4xD,iBAAA1zC,EAAA,SAAAnd,GACA,GAAAxhB,GAAAwhB,EAAA3tB,IAAA,UACAkxD,EAAAvjC,EAAA3tB,IAAA,SAEAgS,GAAAqV,QAAA6pC,KACAA,GAAA,EAAAA,IAEAl/C,EAAAqV,QAAAlb,KACAA,QAGA,IAAAnd,GAAAqgC,EAAApgC,WACAC,EAAAmgC,EAAAlgC,YACA46D,EAAAvwD,KAAAC,IAAAzK,EAAAE,GACA2X,EAAA4R,EAAAtM,EAAA,GAAAnd,GACA8X,EAAA2R,EAAAtM,EAAA,GAAAjd,GACAotB,EAAA7D,EAAAy4C,EAAA,GAAAnH,EAAA,GACAhjD,EAAA0R,EAAAy4C,EAAA,GAAAnH,EAAA,GAEA5/C,EAAAwjB,EAAAyD,UAEApqB,GAAA2mB,EAAA3tB,IAAA,cAAA2zE,EAEAoH,EAAAptD,EAAA3tB,IAAA,YAAA2zE,EAEAr8D,EAAAnN,EAAAwgD,OAAA,SAEA8zB,EAAAjlF,KAAAyL,IAAAqS,GAAAnN,EAAAoT,SAAA,EAEAlD,EAAAsT,EAAA3tB,IAAA,aAEA0+E,EAAA/wD,EAAA3tB,IAAA,YAGAiuD,EAAA9jD,EAAAqgD,cAAA,QACAyD,GAAA,IAGA,IAAA0wB,GAAAh4E,EACAi4E,EAAA,EAEAC,EAAA73E,EAEAiD,EAAAoQ,EAAA,IAsCA,IArCAlQ,EAAAle,KAAA,iBAAAqiB,EAAArX,GACA,GAAAuQ,EAGAA,GADA,SAAAk3E,EACA,IAAApnE,EAAAmnE,EAAAnwE,EAAAmwE,EAGA93E,GAAAwD,EAAAoT,SAAA,GAGA/V,EAAAuzE,GACAvzE,EAAAuzE,EACA4D,GAAA5D,GAGA6D,GAAAtwE,CAGA,IAAArH,GAAA43E,EAAA50E,EAAAzC,CACA2C,GAAA2iD,cAAA71D,GACAuQ,QACAR,WAAA63E,EACA53E,WACAoT,YACAxT,KACAC,KACAwV,KACAvV,EAAA23E,EACA13C,EAAAnF,UAAAvzB,EAAA2/C,GAAA3xC,EAAAvV,IACAA,IAGA83E,EAAA53E,IACa,GAIb03E,EAAAh4E,EAGA,GAAAg4E,GAAA,MACA,GAAAn3E,GAAAb,EAAAwD,EAAAoT,OACApT,GAAAle,KAAA,SAAAgL,GACA,GAAA2nC,GAAAz0B,EAAA0iD,cAAA51D,EACA2nC,GAAA53B,aAAAiD,EAAAhT,EAAAuQ,EACAo3B,EAAA33B,SAAAD,EAAAiD,GAAAhT,EAAA,GAAAuQ,QAIAi3E,GAAAE,EAAAC,EACAC,EAAA73E,EACAmD,EAAAle,KAAA,iBAAAqiB,EAAArX,GACA,GAAA2nC,GAAAz0B,EAAA0iD,cAAA51D,GACAuQ,EAAAo3B,EAAAp3B,QAAAuzE,EACAA,EAAAzsE,EAAAmwE,CACA7/C,GAAA53B,WAAA63E,EACAjgD,EAAA33B,SAAA43E,EAAA50E,EAAAzC,EACAq3E,GAAA50E,EAAAzC,GAKAy0E,GAAAtuD,EAAA5mB,EAAA/X,EAAAE,O1H07xBM4vF,IACA,SAASt2F,EAAQC,QAASE,GAEhC,Y2HhjyBAA,GAAA,KAEAA,EAAA,M3H0jyBMo2F,IACA,SAASv2F,EAAQC,QAASE,G4HljyBhC,QAAAq2F,GAAAC,GACA,GAAA1mD,IACAtI,cAAAgvD,EAAAxxD,SAGA,OADA8K,GAAA0mD,EAAAxxD,SAAA,SAAAwxD,EAAAhvC,eACA1X,EAkdA,QAAA2mD,GAAArnD,EAAA5d,EAAA2mB,GACA,GACAnsB,GACA0E,EAFAgmE,EAAA/7C,EAAAnpB,EAAA4d,EAAAv6B,SAuBA,OAnBAimC,GAAA47C,IACAhmE,EAAAynB,EAAA,iBACAnsB,EAAA,UAEA8uB,EAAA47C,EAAAl6E,IACAkU,EAAAynB,EAAA,iBACAnsB,EAAA,WAGA0E,EAAA,SAGA1E,EADA0qE,EAAA,GAAAA,EAAAl6E,EACA27B,EAAA,iBAGAA,EAAA,mBAKAtjC,SAAA6hF,EACA1qE,YACA0E,iBAOA,QAAAimE,GAAAvnD,EAAA9e,EAAAsmE,EAAApxB,GACA,GACAx5C,GACA0E,EAFAgmE,EAAA/7C,EAAAi8C,EAAAxnD,EAAAv6B,UAGAs2E,EAAA3lB,EAAA,GAAAA,EAAA,GACAqxB,EAAA,UAAAvmE,IAAA66D,GACA,UAAA76D,GAAA66D,CAoBA,OAlBArwC,GAAA47C,EAAAl6E,EAAA,IACAkU,EAAAmmE,EAAA,eACA7qE,EAAA,UAEA8uB,EAAA47C,EAAA,IAAAl6E,IACAkU,EAAAmmE,EAAA,eACA7qE,EAAA,WAGA0E,EAAA,SAEA1E,EADA0qE,EAAA,IAAAl6E,GAAAk6E,EAAAl6E,EAAA,EACAq6E,EAAA,eAGAA,EAAA,iBAKAhiF,SAAA6hF,EACA1qE,YACA0E,iBAOA,QAAAyhC,GAAAqkC,GACA,GAAAM,GAAAN,EAAAj/E,IAAA,UACA,OAAAi/E,GAAAj/E,IAAA,aAGAi/E,EAAAj/E,IAAA,iBAAAu/E,KAAAxb,MA/iBA,GAAA/xD,GAAArpB,EAAA,KACAs+C,EAAAt+C,EAAA,KACA2qC,EAAA3qC,EAAA,KACAkyC,EAAAlyC,EAAA,KACAq+C,EAAAr+C,EAAA,KACAy6C,EAAA4D,EAAA5D,UACAG,EAAAyD,EAAAzD,mBACAr0B,EAAAvmB,EAAA,KACA46B,EAAArU,EAAApc,eACAm2B,EAAAjX,EAAAiX,SAEAhkB,EAAAzL,KAAAyL,GAiDAu6E,EAAA,SAAAP,EAAApnD,GAKAlsC,KAAAksC,MAKAlsC,KAAAszF,YAGAjtE,EAAAyV,SACAoQ,GAEA4nD,YAAA,EACAC,cAAA,EACAC,cAAA,EACAC,eAAA,EACAj1F,QAAA,IAOAgB,KAAA0/B,MAAA,GAAAiI,GAAAr1B,KAGA,IAAA4hF,GAAA,GAAAvsD,GAAAr1B,OACA3O,SAAAuoC,EAAAvoC,SAAA2P,QACA3B,SAAAu6B,EAAAv6B,UAMAuiF,GAAA7gF,kBACArT,KAAAm0F,WAAAD,EAAAhtF,UAEAlH,KAAAo0F,WAAAF,EAGAL,GAAAt0F,WAEAkB,YAAAozF,EAEAQ,WAAA,SAAA9zF,GACA,QAAA+zF,EAAA/zF,IAGAqqB,IAAA,SAAArqB,GACA+zF,EAAA/zF,GAAAR,KAAAC,OAGAu0F,SAAA,WACA,MAAAv0F,MAAA0/B,OAKA,IAAA40D,IAKApV,SAAA,WACA,GAAAhzC,GAAAlsC,KAAAksC,IACAonD,EAAAtzF,KAAAszF,SAEA,IAAAA,EAAAj/E,IAAA,kBAIA,GAAAiuD,GAAAtiE,KAAAszF,UAAAjrB,KAAA7F,YAEApvC,EAAApzB,KAAAm0F,WACAK,GAAAlyB,EAAA,MACAmyB,GAAAnyB,EAAA,KACAlvC,KACAwE,EAAA48D,IAAAphE,GACAwE,EAAA68D,IAAArhE,IAGApzB,KAAA0/B,MAAA9U,IAAA,GAAA+c,GAAA+K,KAAA/K,EAAA2L,sBAGAoC,KAAA,OAEA5tC,OACAqU,GAAAq4E,EAAA,GACAp4E,GAAAo4E,EAAA,GACAn4E,GAAAo4E,EAAA,GACAn4E,GAAAm4E,EAAA,IAEA/wF,MAAA2iB,EAAApd,QACqByrF,QAAA,SACrBpB,EAAApqD,SAAA,sBAAAy3C,gBAEAhoC,uBAAAzM,EAAAyM,wBAAA,EACA35C,QAAA,EACAoT,GAAA,QAOAitE,SAAA,WACA,GAAAiU,GAAAtzF,KAAAszF,SAEA,IAAAA,EAAAj/E,IAAA,iBAmBA,OAfAg0D,GAAAirB,EAAAjrB,KACA+Y,EAAAkS,EAAApqD,SAAA,YACAgD,EAAAlsC,KAAAksC,IAEAo0C,EAAAc,EAAAl4C,SAAA,aACAq4C,EAAAH,EAAA/sE,IAAA,UAEAsgF,EAAAvrB,EAAAgY,EAAAl1C,EAAA0oD,eACAC,EAAAxsB,EAAAysB,eAAA1T,EAAA/sE,IAAA,mBACAwuD,EAAAwF,EAAAljE,MAAA29D,WAEA0xB,KACAC,KACArhE,EAAApzB,KAAAm0F,WAEAj3F,EAAA,EAA2BA,EAAA23F,EAAAryF,OAAwBtF,IAEnD,IAAA63F,EAAA1sB,EAAAnrE,EAAAy3F,GAAA,CAIA,GAAA1qB,GAAA4qB,EAAA33F,EAEAs3F,GAAA,GAAAvqB,EACAuqB,EAAA,KACAC,EAAA,GAAAxqB,EACAwqB,EAAA,GAAAvoD,EAAA8nD,cAAAzS,EAEAnuD,IACAwE,EAAA48D,IAAAphE,GACAwE,EAAA68D,IAAArhE,IAGApzB,KAAA0/B,MAAA9U,IAAA,GAAA+c,GAAA+K,KAAA/K,EAAA2L,sBAGAoC,KAAA,QAAAmtB,EAAA3lE,GAEA4K,OACAqU,GAAAq4E,EAAA,GACAp4E,GAAAo4E,EAAA,GACAn4E,GAAAo4E,EAAA,GACAn4E,GAAAm4E,EAAA,IAEA/wF,MAAA2iB,EAAAyV,SACAwkD,EAAAK,gBAEAhyD,OAAA2kE,EAAAj/E,IAAA,8BAGAjC,GAAA,EACApT,QAAA,QAUAsgF,UAAA,WAqFA,QAAA0V,GAAAtJ,EAAAlpE,GACA,GAAAyyE,GAAAvJ,KAAAzkF,kBAAAskB,QACA2pE,EAAA1yE,KAAAvb,kBAAAskB,OACA,IAAA0pE,GAAAC,EAGA,MAFAD,GAAA9tF,eAAAukF,EAAA73D,qBACAqhE,EAAA/tF,eAAAqb,EAAAqR,qBACAohE,EAAA5tF,UAAA6tF,GA1FA,GAAAhpD,GAAAlsC,KAAAksC,IACAonD,EAAAtzF,KAAAszF,UACAlb,EAAA96C,EAAA4O,EAAAipD,cAAA7B,EAAAj/E,IAAA,kBAEA,IAAA+jE,EAAA,CAIA,GAAA/P,GAAAirB,EAAAjrB,KACAj0B,EAAAk/C,EAAApqD,SAAA,aACAqL,EAAAH,EAAAlL,SAAA,aACAksD,EAAAhhD,EAAA//B,IAAA,UACAwuD,EAAAwF,EAAAljE,MAAA29D,WACAF,EAAA0wB,EAAAppB,qBAGAmrB,EAAA/3D,EAAA4O,EAAAmpD,cAAAjhD,EAAA//B,IAAA,aAEAghF,KAAA/7E,EAAA,GAEA,IAAAg3E,GAAAiD,EAAArnD,EAAAmpD,EAAAnpD,EAAA+nD,gBACAqB,EAAAhC,EAAAj/E,IAAA,QAEAkhF,KACAv2F,EAAAiwD,EAAAqkC,GACAkC,EAAAlC,EAAAj/E,IAAA,eAoEA,IAlEAgS,EAAA/lB,KAAAuiE,EAAA,SAAA4yB,EAAAxzD,GACA,IAAA8yD,EAAA1sB,EAAApmC,EAAAiK,EAAA0oD,eAAA,CAIA,GAAAc,GAAAnhD,CACA+gD,MAAAG,IAAAH,EAAAG,GAAAthD,YACAuhD,EAAA,GAAAxmD,GACAomD,EAAAG,GAAAthD,UAAAI,EAAA++C,EAAAryD,SAGA,IAAA00D,GAAAD,EAAAjhD,gBACA6+C,EAAAj/E,IAAA,4BAEA41D,EAAA5B,EAAA4gB,YAAAwM,GACAt0E,GACA8oD,EACA/9B,EAAA4nD,YAAA5nD,EAAA+nD,eAAAmB,GAEAQ,EAAAvtB,EAAAljE,MAAA49D,SAAA0yB,GAEAI,EAAA,GAAAluD,GAAAhf,MAGA+sB,KAAA,SAAA+/C,EAEA/xF,OACAklB,KAAAg6C,EAAA3gC,GACAnZ,UAAA4sE,EAAArhF,IAAA,aAAAi8E,EAAAxnE,UACAG,kBAAAysE,EAAArhF,IAAA,gBAAAi8E,EAAA9iE,cACAxE,SAAA0sE,EAAAlhD,UACA5lB,KAAA,kBAAA+mE,KAAAC,GAAAD,GAEAhyF,SAAAwd,EACAxP,SAAA2+E,EAAA3+E,SACA3S,SACAoT,GAAA,IAIAojF,KACAK,EAAAjpD,UAAAymD,EAAAC,GACAuC,EAAAjpD,UAAAkpD,WAAA,YACAD,EAAAjpD,UAAAjqB,MAAAizE,GAIA51F,KAAAo0F,WAAAxpE,IAAAirE,GACAA,EAAAxiF,kBAEAkiF,EAAA1rF,KAAAgsF,GACA71F,KAAA0/B,MAAA9U,IAAAirE,GAEAA,EAAA5hE,uBAEaj0B,MAWb,aAAAqoE,EAAAzqE,KAAA,CAIA,GAAA01F,EAAA9qB,OAAA8qB,EAAA9qB,SAAA8qB,EAAAj/E,IAAA,QACA,GAAA0hF,GAAAR,EAAA,GACAS,EAAAT,EAAA,EACAP,GAAAe,EAAAC,KACAD,EAAAtzF,QAAA,GAGA,GAAA6wF,EAAA7qB,OAAA6qB,EAAA7qB,SAAA6qB,EAAAj/E,IAAA,QACA,GAAA4hF,GAAAV,IAAA/yF,OAAA,GACA0zF,EAAAX,IAAA/yF,OAAA,EACAwyF,GAAAkB,EAAAD,KACAA,EAAAxzF,QAAA,OASA0zF,SAAA,WACA,GAAAjqD,GAAAlsC,KAAAksC,IACAonD,EAAAtzF,KAAAszF,UACA/yF,EAAA+8B,EAAA4O,EAAAiqD,SAAA7C,EAAAj/E,IAAA,QAEA,IAAA9T,EAAA,CAIA,GAiBA+vF,GAjBA8F,EAAA9C,EAAAj/E,IAAA,gBACA0/E,EAAA7nD,EAAA6nD,cACAx/C,EAAA++C,EAAApqD,SAAA,iBACA3xB,EAAA+7E,EAAAj/E,IAAA,cAEAiuD,EAAAtiE,KAAAszF,UAAAjrB,KAAA7F,YACA6zB,EAAA/zB,EAAA,GAAAA,EAAA,QACAnhD,GACA,UAAAi1E,EACA9zB,EAAA,GAAA+zB,EAAA9+E,EACA,QAAA6+E,EACA9zB,EAAA,GAAA+zB,EAAA9+E,GACA+qD,EAAA,GAAAA,EAAA,MAEA,WAAA8zB,EAAAlqD,EAAA4nD,YAAAC,EAAAx8E,EAAA,GAKA++E,EAAAhD,EAAAj/E,IAAA,aACA,OAAAiiF,IACAA,IAAAh9E,EAAA,IAGA,IAAAi9E,EAEA,YAAAH,EACA9F,EAAAiD,EACArnD,EACA,MAAAoqD,IAAApqD,EAAAv6B,SACAoiF,IAIAzD,EAAAmD,EACAvnD,EAAAkqD,EAAAE,GAAA,EAAAh0B,GAGAi0B,EAAArqD,EAAAqqD,uBACA,MAAAA,IACAA,EAAA1oF,KAAA8N,IACA46E,EAAA1oF,KAAA2L,IAAA82E,EAAA3+E,YAEAiQ,SAAA20E,OAAA,OAIA,IAAAvtE,GAAAurB,EAAAC,UAEAgiD,EAAAlD,EAAAj/E,IAAA,uBACAw2C,EAAA2rC,EAAA3rC,SACAtD,EAAAjqB,EAAAk5D,EAAAjvC,SAAAgvC,GACAE,EAAA,MAAA5rC,GAAA,MAAAtD,EACAjM,EAAA8B,aACA78C,EAAAgnD,EAAAv+B,EAAA6hC,GACqBE,QAAA,EAAAG,YAAAsrC,EAAAtrC,cAErB3qD,EAEAqzF,EAAAN,EAAAj/E,IAAA,cAEAytB,EAAAwxD,EAAAxxD,SACA40D,GACApyD,cAAAxC,EACAvhC,OACA+7C,OAAA,QAEAo6C,GAAA50D,EAAA,SAAAwxD,EAAAhvC,cAEA,IAAAuxC,GAAA,GAAAluD,GAAAhf,MAGA+sB,KAAA,OAEAihD,WAAAp2F,EACAq2F,gBAAAH,EAEA/yF,OACAklB,KAAA6tE,EACAztE,WACA4F,KAAA2lB,EAAAE,gBACA6+C,EAAAj/E,IAAA,4BACAyU,UAAAwnE,EAAAxnE,UACAG,kBAAAqnE,EAAA9iE,eAEA7pB,SAAAwd,EACAxP,SAAA2+E,EAAA3+E,SACA3S,OAAAiwD,EAAAqkC,GACAlhF,GAAA,EACAykF,QAAAjD,KAAAxb,KACA/xD,EAAApd,QACAhM,QAAAsD,EACAi/C,UAAA,WACA,MAAAj/C,IAEAm2F,mBACqB9C,GACrB,MAGAN,GAAAj/E,IAAA,kBACAwhF,EAAAjpD,UAAAymD,EAAAC,GACAuC,EAAAjpD,UAAAkpD,WAAA,WACAD,EAAAjpD,UAAArsC,QAIAP,KAAAo0F,WAAAxpE,IAAAirE,GACAA,EAAAxiF,kBAEArT,KAAA0/B,MAAA9U,IAAAirE,GAEAA,EAAA5hE,wBA0FA8gE,EAAAlB,EAAAkB,eAAA,SAAA1sB,EAAAnrE,EAAAm7C,GACA,GAAAy+C,GACA3xF,EAAAkjE,EAAAljE,KACA,mBAAAA,EAAAvH,OAEA,kBAAAy6C,IAEAy+C,EAAA3xF,EAAA29D,WAAA5lE,IACAm7C,EAAAy+C,EAAA3xF,EAAA49D,SAAA+zB,KAEA55F,GAAAm7C,EAAA,KAOA+wB,EAAAyqB,EAAAzqB,YAAA,SAAA7kC,EAAAqwD,GACA,GAAAv8C,GAAA9T,EAAAlwB,IAAA,WAIA,OAHA,OAAAgkC,GAAA,QAAAA,IACAA,EAAAu8C,GAEAv8C,EAGAx7C,GAAAC,QAAA+2F,G5HykyBMkD,IACA,SAASl6F,EAAQC,QAASE,G6Hp8yBhC,QAAAg6F,GAAAC,EAAA3D,GAuBA,QAAA4D,GAAAn7B,EAAAx1D,GACA,GAAA4wF,GAAAC,EAAA7P,QAAAxrB,EACA,OAAAo7B,GAAAnO,cAAAmO,EAAAlO,YAAA,IAxBA,GAAAmO,GAAAH,EAAA3sD,iBACA+9B,EAAAirB,EAAAjrB,KACAp1B,KAEAokD,EAAAhvB,EAAA1kE,SACA2zF,EAAAjvB,EAAAye,OAAA,SAAAuQ,EACAhiB,EAAAhN,EAAAtM,IAGA7yC,EAAAkuE,EAAAG,UACAC,GAAAtuE,EAAAtqB,EAAAsqB,EAAAtqB,EAAAsqB,EAAA7lB,MAAA6lB,EAAArqB,EAAAqqB,EAAArqB,EAAAqqB,EAAA3lB,QAEAk0F,EAAAnE,EAAAj/E,IAAA,aAEAqjF,GACA94F,GAAgBiF,IAAA2zF,EAAA,GAAAC,EAAAvzE,OAAAszE,EAAA,GAAAC,GAChB54F,GAAgB+E,KAAA4zF,EAAA,GAAAC,EAAAxzE,MAAAuzE,EAAA,GAAAC,GAGhBC,GAAA94F,EAAAkoF,OAAAj5E,KAAAoC,IAAApC,KAAAC,IAAAopF,EAAA,KAAAQ,EAAA94F,EAAAslB,QAAAwzE,EAAA94F,EAAAiF,KACA6zF,EAAA74F,EAAAioF,OAAAj5E,KAAAoC,IAAApC,KAAAC,IAAAopF,EAAA,KAAAQ,EAAA74F,EAAAolB,OAAAyzE,EAAA74F,EAAA+E,MAQAqvC,EAAAtvC,UACA,MAAA0xE,EAAAqiB,EAAA74F,EAAAy4F,GAAAE,EAAA,GACA,MAAAniB,EAAAqiB,EAAA94F,EAAA04F,GAAAE,EAAA,IAIAvkD,EAAAthC,SAAA9D,KAAAyL,GAAA,SAAA+7D,EAAA,IAGA,IAAAsiB,IAAsB9zF,OAAAqgB,OAAA,EAAAtgB,QAAAqgB,MAAA,EAEtBgvB,GAAAghD,eAAAhhD,EAAA+gD,cAAA/gD,EAAA8gD,cAAA4D,EAAAN,GACAhvB,EAAAye,SACA7zC,EAAA6gD,YAAA4D,EAAAriB,GAAAgiB,GAAAK,EAAAriB,GAAAyR,QAGAwM,EAAApqD,SAAA,YAAA70B,IAAA,YACA4+B,EAAA+gD,eAAA/gD,EAAA+gD,eAEAV,EAAApqD,SAAA,aAAA70B,IAAA,YACA4+B,EAAAghD,gBAAAhhD,EAAAghD,eAIA,IAAAoB,GAAA/B,EAAApqD,SAAA,aAAA70B,IAAA,SASA,OARA4+B,GAAAoiD,cAAA,QAAAiC,GAAAjC,IAGApiD,EAAA2hD,cAAAvsB,EAAAuvB,mBAGA3kD,EAAA7gC,GAAA,EAEA6gC,EAnRA,GAAA5sB,GAAArpB,EAAA,KACA2qC,EAAA3qC,EAAA,KACA62F,EAAA72F,EAAA,KACA+3F,EAAAlB,EAAAkB,eACA3rB,EAAAyqB,EAAAzqB,YAEAyuB,GACA,8CAEAC,GACA,yBAWAC,EAAA/6F,EAAA,KAAA4xC,qBAEAhxC,KAAA,OAEAuoC,OAAA,SAAAmtD,EAAAryD,GAEAjhC,KAAA0/B,MAAA4jC,WAEA,IAAA00B,GAAAh4F,KAAAi4F,UAKA,IAJAj4F,KAAAi4F,WAAA,GAAAtwD,GAAAr1B,MAEAtS,KAAA0/B,MAAA9U,IAAA5qB,KAAAi4F,YAEA3E,EAAAj/E,IAAA,SAIA,GAAA4iF,GAAA3D,EAAA7d,gBAEAxiC,EAAA+jD,EAAAC,EAAA3D,GAEA4E,EAAA,GAAArE,GAAAP,EAAArgD,EAEA5sB,GAAA/lB,KAAAu3F,EAAAK,EAAAttE,IAAAstE,GAEAl4F,KAAAi4F,WAAArtE,IAAAstE,EAAA3D,YAEAluE,EAAA/lB,KAAAw3F,EAAA,SAAAv3F,GACA+yF,EAAAj/E,IAAA9T,EAAA,UACAP,KAAA,IAAAO,GAAA+yF,EAAA2D,EAAAhkD,EAAA2hD,gBAEa50F,MAEb2nC,EAAAyN,gBAAA4iD,EAAAh4F,KAAAi4F,WAAA3E,KASA6E,WAAA,SAAA7E,EAAA2D,EAAArC,GACA,GAAAvsB,GAAAirB,EAAAjrB,KAEA8Y,EAAAmS,EAAApqD,SAAA,aACAo3C,EAAAa,EAAAj4C,SAAA,aACAkvD,EAAA9X,EAAAjsE,IAAA,SAEAgkF,EAAAjvB,EAAA+X,EAAAyT,EAEAwD,GAAA/xE,EAAAqV,QAAA08D,QAiBA,QAfAE,GAAArB,EAAA3sD,iBAAAitD,UACA9P,EAAApf,EAAAof,eAEA8Q,EAAA,EAEA1D,EAAAxsB,EAAAysB,iBAGAjyB,EAAAwF,EAAAljE,MAAA29D,WAEA52C,KACAC,KAGAgzD,EAAAmB,EAAAK,eACAzjF,EAAA,EAA2BA,EAAA23F,EAAAryF,OAAwBtF,IACnD,IAAA63F,EAAA1sB,EAAAnrE,EAAAm7F,GAAA,CAIA,GAAApuB,GAAA5B,EAAA2gB,cAAA6L,EAAA33F,GAEAuqF,IACAv7D,EAAA,GAAA+9C,EACA/9C,EAAA,GAAAosE,EAAAz5F,EACAstB,EAAA,GAAA89C,EACA99C,EAAA,GAAAmsE,EAAAz5F,EAAAy5F,EAAA/0F,SAGA2oB,EAAA,GAAAosE,EAAA15F,EACAstB,EAAA,GAAA+9C,EACA99C,EAAA,GAAAmsE,EAAA15F,EAAA05F,EAAAj1F,MACA8oB,EAAA,GAAA89C,EAGA,IAAAuuB,GAAAD,IAAAH,EAAA51F,MACAxC,MAAAi4F,WAAArtE,IAAA,GAAA+c,GAAA+K,KAAA/K,EAAA2L,sBACAoC,KAAA,QAAAmtB,EAAA3lE,GAEA4K,OACAqU,GAAA+P,EAAA,GACA9P,GAAA8P,EAAA,GACA7P,GAAA8P,EAAA,GACA7P,GAAA6P,EAAA,IAEAzoB,MAAA2iB,EAAAyV,UACAnN,OAAAypE,EAAAI,IACqBrZ,GACrBngF,QAAA,QAWAy5F,WAAA,SAAAnF,EAAA2D,EAAArC,GACA,GAAAvsB,GAAAirB,EAAAjrB,KAEAqwB,EAAApF,EAAApqD,SAAA,aACA6gD,EAAA2O,EAAAxvD,SAAA,aACAyvD,EAAA5O,EAAA11E,IAAA,SAEAikF,EAAArB,EAAA3sD,iBAAAitD,UAEA1C,EAAAxsB,EAAAysB,iBAGAjyB,EAAAwF,EAAAljE,MAAA29D,WAEA81B,EAAAvwB,EAAA2gB,cAAA6L,EAAA,IACAgE,EAAAxwB,EAAA2gB,cAAA6L,EAAA,IAEAjjE,EAAA,EAEAknE,EAAA1vB,EAAAsvB,EAAA9D,GAEAmE,EAAAhP,EAAAsB,cACAsN,GAAAtyE,EAAAqV,QAAAi9D,QAEA,QAAAz7F,GAAA,EAA2BA,EAAA23F,EAAAryF,OAAwBtF,IACnD,IAAA63F,EAAA1sB,EAAAnrE,EAAA47F,GAAA,CAIA,GAEAl6F,GACAC,EACAwE,EACAE,EALA0mE,EAAA5B,EAAA2gB,cAAA6L,EAAA33F,GAMAmrE,GAAAof,gBACA7oF,EAAAg6F,EACA/5F,EAAAy5F,EAAAz5F,EACAwE,EAAA4mE,EAAArrE,EACA2E,EAAA+0F,EAAA/0F,SAGA3E,EAAA05F,EAAA15F,EACAC,EAAAg6F,EACAx1F,EAAAi1F,EAAAj1F,MACAE,EAAA0mE,EAAAprE,EAGA,IAAA25F,GAAA5mE,IAAA+mE,EAAAn2F,MACAxC,MAAAi4F,WAAArtE,IAAA,GAAA+c,GAAA8K,MACAiD,KAAA,QAAAmtB,EAAA3lE,GAEA4K,OACAlJ,IACAC,IACAwE,QACAE,UAEAG,MAAA2iB,EAAAyV,UACAlN,KAAA+pE,EAAAH,IACqBO,GACrB/5F,QAAA,KAGA45F,EAAAh6F,EAAAyE,EACAw1F,EAAAh6F,EAAA0E,KAKAw0F,GAAA9uF,QACArL,KAAA,UAEAm6F,EAAA9uF,QACArL,KAAA,W7HuuzBMo7F,IACA,SAASn8F,EAAQC,QAASE,GAEhC,Y8Hx7zBA,IAAA2qC,GAAA3qC,EAAA,KACAqpB,EAAArpB,EAAA,KACAkwC,EAAAlwC,EAAA,IAEAA,GAAA,KAEAA,EAAA,KAGAkwC,EAAA0B,qBAEAhxC,KAAA,OAEAuoC,OAAA,SAAA8wD,EAAAh2D,GACAjhC,KAAA0/B,MAAA4jC,YACA2zB,EAAA5iF,IAAA,SACArU,KAAA0/B,MAAA9U,IAAA,GAAA+c,GAAA8K,MACA3qC,MAAAmvF,EAAA3sD,iBAAAitD,UACA7zF,MAAA2iB,EAAAyV,UACAlN,KAAAqoE,EAAA5iF,IAAA,oBACqB4iF,EAAAtiB,gBACrB31E,QAAA,EACAoT,YAOA86B,EAAAU,qBAAA,SAAAlF,GAEAA,EAAAuwD,OAAAvwD,EAAAwwD,QAAAxwD,EAAA0uD,OACA1uD,EAAA0uD,Y9Hm8zBM+B,IACA,SAASt8F,EAAQC,QAASE,G+Hj+zBhC,QAAAo8F,GAAA15D,EAAA6E,EAAAb,GACAuP,EAAA+V,gBACAtpB,EAAA6E,EAAA80D,sBAEAh2F,MAAAqgC,EAAApgC,WACAC,OAAAmgC,EAAAlgC,aAEA+gC,EAAAlwB,IAAA,YAXA,GAAA4+B,GAAAj2C,EAAA,KACAs+C,EAAAt+C,EAAA,KACA2qC,EAAA3qC,EAAA,IAaAH,GAAAC,SAQAm2C,OAAA,SAAAvT,EAAAiE,EAAAD,GACA,GAAAxa,GAAA+pB,EAAA4V,cAAAllB,EAAA01D,sBACAh2F,MAAAqgC,EAAApgC,WACAC,OAAAmgC,EAAAlgC,aACamgC,EAAAtvB,IAAA,WACb4+B,GAAAmV,IACAzkB,EAAAtvB,IAAA,UACAqrB,EACAiE,EAAAtvB,IAAA,WACA6U,EAAA7lB,MACA6lB,EAAA3lB,QAGA61F,EAAA15D,EAAAiE,EAAAD,IAGA41D,cAAA,SAAA55D,EAAAiE,GACA,GAAA41D,GAAAj+C,EAAAK,kBACAhY,EAAAtvB,IAAA,YAEAw1B,EAAAnK,EAAAz4B,kBACAvD,EAAAigC,EAAAgxC,cAAA,mBACAjxE,GAAAkrB,KAAA+U,EAAAtvB,IAAA,kBACA,IAAA6U,GAAA,GAAAye,GAAA8K,MACA3qC,OACAlJ,EAAAirC,EAAAjrC,EAAA26F,EAAA,GACA16F,EAAAgrC,EAAAhrC,EAAA06F,EAAA,GACAl2F,MAAAwmC,EAAAxmC,MAAAk2F,EAAA,GAAAA,EAAA,GACAh2F,OAAAsmC,EAAAtmC,OAAAg2F,EAAA,GAAAA,EAAA,IAEA71F,QACA1E,QAAA,EACAoT,OAEAu1B,GAAA8L,qBAAAvqB,GAEAwW,EAAA9U,IAAA1B,M/Hg/zBMswE,IACA,SAAS38F,EAAQC,QAASE,GgIri0BhC,GAAAqpB,GAAArpB,EAAA,IAEAH,GAAAC,SAEAiyF,kBAAA,SAAA0K,GACAz5F,KAAA05F,iBAAArzE,EAAAsW,OAAA88D,MAAA,SAAAE,EAAAj8F,GAEA,MADAi8F,GAAAj8F,EAAA6C,MAAA7C,EACAi8F,QAOAC,OAAA,SAAAr5F,GACA,GAAAo5F,GAAA35F,KAAA05F,iBACAh8F,EAAAi8F,EAAAp5F,GACAywF,EAAAhxF,KAAAqU,IAAA,eACA,YAAA28E,GACA3qE,EAAA/lB,KAAAq5F,EAAA,SAAAj8F,GACAA,EAAAihF,UAAA,IAGAjhF,MAAAihF,UAAA,IAMAkb,SAAA,SAAAt5F,GACA,GAAA7C,GAAAsC,KAAA05F,iBAAAn5F,EAGA7C,OAAAihF,UAAA,IAMAmb,eAAA,SAAAv5F,GACA,GAAA7C,GAAAsC,KAAA05F,iBAAAn5F,EACA,UAAA7C,EAEA,MADAsC,MAAAtC,EAAAihF,SAAA,qBAAAp+E,GACA7C,EAAAihF,UAOAC,WAAA,SAAAr+E,GACA,GAAA7C,GAAAsC,KAAA05F,iBAAAn5F,EACA,OAAA7C,MAAAihF,YhIuj0BMob,IACA,SAASl9F,EAAQC,QAASE,GiIhn0BhCA,EAAA,KACAA,EAAA,KACAA,EAAA,IAEA,IAAAkwC,GAAAlwC,EAAA,IAEAkwC,GAAAY,kBAAA9wC,EAAA,OjI4n0BMg9F,IACA,SAASn9F,EAAQC,QAASE,GAEhC,YkIvo0BA,IAAAqpB,GAAArpB,EAAA,KACAkyC,EAAAlyC,EAAA,KAEAi9F,EAAAj9F,EAAA,KAAA2xC,sBAEA/wC,KAAA,SAEAuvC,cAAA,UAEAuX,YACA9mD,KAAA,MACAgsD,YAAA,GAGAtxB,KAAA,SAAAoQ,EAAAma,EAAA5hB,GACAjhC,KAAA8kD,qBAAApc,EAAAzH,GAEAyH,EAAAi2C,SAAAj2C,EAAAi2C,cAGA57B,YAAA,SAAAra,GACAuxD,EAAAh0C,UAAAjmD,KAAA,cAAA0oC,IAGA2c,cAAA,WACArlD,KAAAk6F,YAAAl6F,KAAAihC,QAEA,IAAAk5D,GAAAn6F,KAAA2qE,KAGA,IAAAwvB,EAAA,eAAAn6F,KAAAqU,IAAA,iBAGA,OAFA+lF,IAAA,EAEAl9F,EAAA,EAA+BA,EAAAi9F,EAAA33F,OAAuBtF,IAAA,CACtD,GAAAqD,GAAA45F,EAAAj9F,GAAAmX,IAAA,OACA,IAAArU,KAAA4+E,WAAAr+E,GAAA,CAEAP,KAAA45F,OAAAr5F,GACA65F,GAAA,CACA,SAIAA,GAAAp6F,KAAA45F,OAAAO,EAAA,GAAA9lF,IAAA,WAIA6lF,YAAA,SAAAj5D,GACA,GAAAk5D,GAAA9zE,EAAAjD,IAAApjB,KAAAqU,IAAA,qBAAA6pC,GAOA,MALA,gBAAAA,IAAA,gBAAAA,KACAA,GACA39C,KAAA29C,IAGA,GAAAhP,GAAAgP,EAAAl+C,UAAAihC,UACajhC,KACbA,MAAA2qE,MAAAwvB,CAEA,IAAAE,GAAAh0E,EAAAjD,IAAA6d,EAAAq5D,YAAA,SAAA/0D,GACA,MAAAA,GAAAhlC,MAEA0gC,GAAA6C,WAAA,SAAA9B,GACA,GAAAA,EAAAuoC,mBAAA,CACA,GAAA/rD,GAAAwjB,EAAAuoC,oBACA8vB,KAAA9yE,OAAA/I,EAAAuhD,SAAAvhD,EAAAugC,aAOA/+C,KAAAu6F,gBAAAF,GAMA50D,QAAA,WACA,MAAAzlC,MAAA2qE,OAMAivB,OAAA,SAAAr5F,GACA,GAAAo+E,GAAA3+E,KAAA0oC,OAAAi2C,SACAqS,EAAAhxF,KAAAqU,IAAA,eACA,eAAA28E,EAAA,CACA,GAAAxyE,GAAAxe,KAAA2qE,KACAtkD,GAAA/lB,KAAAke,EAAA,SAAA0/B,GACAygC,EAAAzgC,EAAA7pC,IAAA,cAGAsqE,EAAAp+E,IAAA,GAMAs5F,SAAA,SAAAt5F,GACA,WAAAP,KAAAqU,IAAA,kBACArU,KAAA0oC,OAAAi2C,SAAAp+E,IAAA,IAOAu5F,eAAA,SAAAv5F,GACA,GAAAo+E,GAAA3+E,KAAA0oC,OAAAi2C,QAEAA,GAAAnuE,eAAAjQ,KACAo+E,EAAAp+E,IAAA,GAEAP,KAAA2+E,EAAAp+E,GAAA,qBAAAA,IAMAq+E,WAAA,SAAAr+E,GACA,GAAAo+E,GAAA3+E,KAAA0oC,OAAAi2C,QACA,SAAAA,EAAAnuE,eAAAjQ,KAAAo+E,EAAAp+E,KACA8lB,EAAA9a,QAAAvL,KAAAu6F,gBAAAh6F,IAAA,GAGAgkD,eAEA72C,OAAA,EAEA/C,EAAA,EACAytE,MAAA,EAIA9wB,OAAA,aAEA1jD,KAAA,SAGAC,IAAA,MAMAypB,MAAA,OAEAzc,gBAAA,gBAEA+uE,YAAA,OAEAD,YAAA,EAGA4Z,QAAA,EAGAiB,QAAA,GAEAC,UAAA,GAEAC,WAAA,GAGAC,cAAA,OAEAxmD,WAEA9E,MAAA,QAIA2hD,cAAA,EAOA6F,SACAze,MAAA,KAKAv7E,GAAAC,QAAAm9F,GlIgp0BMW,IACA,SAAS/9F,EAAQC,QAASE,GmIt00BhC,QAAA69F,GAAAt6F,EAAAmjC,GACAA,EAAA4D,gBACA1pC,KAAA,qBACA2C,SAIA,QAAAu6F,GAAA94D,EAAA+4D,EAAAr3D,GAEA,GAAA3kC,GAAA2kC,EAAA8E,QAAA7oC,QAAA4C,iBAAA,EACAxD,MAAAqnC,eACApE,EAAA3tB,IAAA,oBAAAqvB,EAAA4D,gBACA1pC,KAAA,YACA8gD,WAAA1c,EAAAzhC,KACAA,KAAAw6F,IAKA,QAAAC,GAAAh5D,EAAA+4D,EAAAr3D,GAEA,GAAA3kC,GAAA2kC,EAAA8E,QAAA7oC,QAAA4C,iBAAA,EACAxD,MAAAqnC,eACApE,EAAA3tB,IAAA,oBAAAqvB,EAAA4D,gBACA1pC,KAAA,WACA8gD,WAAA1c,EAAAzhC,KACAA,KAAAw6F,IAjCA,GAAA10E,GAAArpB,EAAA,KACAi+F,EAAAj+F,EAAA,KACA2qC,EAAA3qC,EAAA,KACAk+F,EAAAl+F,EAAA,KAEAogC,EAAA/W,EAAA+W,KAiCAvgC,GAAAC,QAAAE,EAAA,KAAA4xC,qBAEAhxC,KAAA,SAEA06B,KAAA,WACAt4B,KAAAm7F,qBAGAh1D,OAAA,SAAAi1D,EAAAn6D,EAAAyC,GACA,GAAAhE,GAAA1/B,KAAA0/B,KAGA,IAFAA,EAAA4jC,YAEA83B,EAAA/mF,IAAA,SAIA,GAAAgnF,GAAAD,EAAA/mF,IAAA,gBACAinF,EAAAF,EAAA/mF,IAAA,QAEA,UAAAinF,IACAA,EAAA,UAAAF,EAAA/mF,IAAA,SACA,aAAA+mF,EAAA/mF,IAAA,UACA,eAGA,IAAAknF,KAEAl1E,GAAA/lB,KAAA86F,EAAA31D,UAAA,SAAA6Z,GACA,GAAA/+C,GAAA++C,EAAAjrC,IAAA,OAGA,SAAA9T,GAAA,OAAAA,EAIA,WAHAm/B,GAAA9U,IAAA,GAAA+c,GAAAr1B,OACA21C,SAAA,IAKA,IAAAjmB,GAAAf,EAAAu6D,gBAAAj7F,GAAA,EAEA,KAAAg7F,EAAAh7F,GAAA,CAMA,GAAAyhC,EAAA,CACA,GAAAxjB,GAAAwjB,EAAAyD,UACA4J,EAAA7wB,EAAAgsB,UAAA,QAGA,mBAAA6E,KAEAA,IAAArN,EAAA0K,cAAA,IAIA,IAAA+uD,GAAAj9E,EAAAgsB,UAAA,6BACA6oC,EAAA70D,EAAAgsB,UAAA,UAEAkxD,EAAA17F,KAAA27F,YACAp7F,EAAA++C,EAAA87C,EACAK,EAAApoB,EACAioB,EAAAjsD,EACAgsD,EAGAK,GAAAl7F,GAAA,QAAA48B,EAAAy9D,EAAAt6F,EAAAmjC,IACAljC,GAAA,YAAA48B,EAAA09D,EAAA94D,EAAA,KAAA0B,IACAljC,GAAA,WAAA48B,EAAA49D,EAAAh5D,EAAA,KAAA0B,IAEA63D,EAAAh7F,IAAA,MAIA0gC,GAAA26D,cAAA,SAAA55D,GAEA,IAAAu5D,EAAAh7F,IAGAyhC,EAAAuoC,mBAAA,CACA,GAAA/rD,GAAAwjB,EAAAuoC,qBACAj/D,EAAAkT,EAAA6iC,YAAA9gD,EACA,IAAA+K,EAAA,EACA,MAGA,IAAA+jC,GAAA7wB,EAAAssB,cAAAx/B,EAAA,SAEAmwF,EAAA,YAEAC,EAAA17F,KAAA27F,YACAp7F,EAAA++C,EAAA87C,EACAK,EAAA,KACAH,EAAAjsD,EACAgsD,EAGAK,GAAAl7F,GAAA,QAAA48B,EAAAy9D,EAAAt6F,EAAAmjC,IAEAljC,GAAA,YAAA48B,EAAA09D,EAAA94D,EAAAzhC,EAAAmjC,IACAljC,GAAA,WAAA48B,EAAA49D,EAAAh5D,EAAAzhC,EAAAmjC,IAEA63D,EAAAh7F,IAAA,IAEqBP,KAGrBwhC,WACA+5D,EAAAh7F,IACAkhC,QAAAC,KAAAnhC,EAAA,oFAGaP,MAEbk7F,EAAAjoD,OAAAvT,EAAA07D,EAAA13D,GAGAw3D,EAAA5B,cAAA55D,EAAA07D,KAGAO,YAAA,SACAp7F,EAAA++C,EAAA87C,EACAK,EAAApoB,EACAioB,EAAAjsD,EAAAgsD,GAEA,GAAAZ,GAAAW,EAAA/mF,IAAA,aACAqmF,EAAAU,EAAA/mF,IAAA,cACAsmF,EAAAS,EAAA/mF,IAAA,iBAEAuqE,EAAAwc,EAAAxc,WAAAr+E,GACAm7F,EAAA,GAAA/zD,GAAAr1B,MAEAiiC,EAAA+K,EAAApW,SAAA,aAEA2yD,EAAAv8C,EAAAjrC,IAAA,QAEAynF,EAAAx8C,EAAApW,SAAA,WACA6yD,EAAAD,EAAAj5C,WAUA,IAPA44C,EAAAI,GAAAJ,EACAC,EAAA9wE,IAAAqwE,EAAA1nB,aACAkoB,EAAA,IAAAhB,EAAAC,EAAA9b,EAAAvvC,EAAAsrD,KAKAkB,GAAAxoB,IAEAA,IAAAooB,GAAA,QAAApoB,GACA,CACA,GAAAjV,GAAA,GAAAs8B,CACA,UAAArnB,IACAA,EAAA,UAGAqoB,EAAA9wE,IAAAqwE,EAAA1nB,aACAF,GAAAonB,EAAAr8B,GAAA,GAAAs8B,EAAAt8B,GAAA,EAAAA,IACAwgB,EAAAvvC,EAAAsrD,IAKA,GAAApI,GAAA,SAAA+I,EAAAb,EAAA,KACA3xE,EAAAwyE,EAEA97C,EAAA47C,EAAA/mF,IAAA,aACApX,EAAAsD,CACA,iBAAAi/C,MACAviD,EAAAuiD,EAAA/pB,QAAA,SAAmD,MAAAl1B,IAAA,IAEnD,kBAAAi/C,KACAviD,EAAAuiD,EAAAj/C,GAGA,IAAAqoB,GAAA,GAAA+e,GAAAhf,MACAjlB,OACAklB,KAAA3rB,EACA2B,EAAA2zF,EACA1zF,EAAA67F,EAAA,EACA9rE,KAAAgwD,EAAArqC,EAAAE,eAAAkmD,EACA3xE,SAAAurB,EAAAC,UACA1rB,YACAG,kBAAA,WAGAyyE,GAAA9wE,IAAAhC,EAGA,IAAAozE,GAAA,GAAAr0D,GAAA8K,MACA3qC,MAAA4zF,EAAAz0F,kBACAgF,WAAA,EACA4qF,QAAAiF,EAAAznF,IAAA,QAAAgS,EAAApd,QACAhM,QAAAsD,EAEAi/C,UAAAu8C,EAAA1nF,IAAA,4BACA,MAAA9T,IAEAm2F,iBACApyD,cAAA,SACA23D,YAAAb,EAAA92C,eACA/jD,OACA+7C,OAAA,UAEiBw/C,EAAApzD,QAAA,MAgBjB,OAdAgzD,GAAA9wE,IAAAoxE,GAEAN,EAAAh0C,UAAA,SAAAh0C,GACAA,EAAA1U,QAAA,IAGAg9F,EAAAh9F,QAAAq8F,EAIAr7F,KAAA0/B,MAAA9U,IAAA8wE,GAEA/zD,EAAAqM,cAAA0nD,GAEAA,MnIw10BMQ,IACA,SAASr/F,EAAQC,QAASE,GoItl1BhC,QAAAm/F,GAAAp7D,EAAAa,EAAAX,GACA,GAEA29C,GAFAwd,KACAC,EAAA,mBAAAt7D,CAiCA,OA9BAE,GAAAY,cAAA,kBAAAu5D,GACAiB,GAAA,MAAAzd,EAKAwc,EAAAxc,EAAA,qBAAAh9C,EAAArhC,OAGA66F,EAAAr6D,GAAAa,EAAArhC,MACAq+E,EAAAwc,EAAAxc,WAAAh9C,EAAArhC,MAEA,IAAA45F,GAAAiB,EAAA31D,SACApf,GAAA/lB,KAAA65F,EAAA,SAAA51D,GACA,GAAAhkC,GAAAgkC,EAAAlwB,IAAA,OAEA,WAAA9T,GAAA,KAAAA,EAAA,CAGA,GAAA+7F,GAAAlB,EAAAxc,WAAAr+E,EACAA,KAAA67F,GAEAA,EAAA77F,GAAA67F,EAAA77F,IAAA+7F,EAGAF,EAAA77F,GAAA+7F,QAMA/7F,KAAAqhC,EAAArhC,KACAo+E,SAAAyd,GAxCA,GAAAlvD,GAAAlwC,EAAA,KACAqpB,EAAArpB,EAAA,IAiDAkwC,GAAAe,eACA,2CACA5nB,EAAA+W,MAAA++D,EAAA,mBASAjvD,EAAAe,eACA,gCACA5nB,EAAA+W,MAAA++D,EAAA,WASAjvD,EAAAe,eACA,oCACA5nB,EAAA+W,MAAA++D,EAAA,cpIsm1BMI,IACA,SAAS1/F,EAAQC,SqIrr1BvBD,EAAAC,QAAA,SAAAmkC,GACA,GAAAu7D,GAAAv7D,EAAAw7D,gBACA36D,SAAA,UAEA06D,MAAAh6F,QACAy+B,EAAAy7D,aAAA,SAAAn3D,GAGA,OAAAroC,GAAA,EAA+BA,EAAAs/F,EAAAh6F,OAAyBtF,IACxD,IAAAs/F,EAAAt/F,GAAA0hF,WAAAr5C,EAAAhlC,MACA,QAGA,crIgs1BMo8F,IACA,SAAS9/F,EAAQC,QAASE,GAEhC,YsI9s1BA,IAAAkwC,GAAAlwC,EAAA,KACA2qC,EAAA3qC,EAAA,KACAi2C,EAAAj2C,EAAA,IAGAkwC,GAAAyB,sBAEA/wC,KAAA,QAEA8mD,YAAqB9mD,KAAA,MAAAgsD,YAAA,GAErBrF,eAEA72C,OAAA,EAEA/C,EAAA,EACAytE,MAAA,EAEAxvD,KAAA,GAIAlrB,OAAA,QACAk/F,QAAA,GAKAC,UAAA,QAIAj5F,KAAA,EAGAC,IAAA,EAYAgN,gBAAA,gBAGA+uE,YAAA,OAGAD,YAAA,EAIA4Z,QAAA,EAGAiB,QAAA,GACArmD,WACAurC,SAAA,GACAod,WAAA,SACAztD,MAAA,QAEA0tD,cACA1tD,MAAA,WAMAnC,EAAA0B,qBAEAhxC,KAAA,QAEAuoC,OAAA,SAAAg8C,EAAAlhD,EAAAyC,GAGA,GAFA1jC,KAAA0/B,MAAA4jC,YAEA6e,EAAA9tE,IAAA,SAIA,GAAAqrB,GAAA1/B,KAAA0/B,MAEA6U,EAAA4tC,EAAAj5C,SAAA,aACA8zD,EAAA7a,EAAAj5C,SAAA,gBAEApgB,EAAAq5D,EAAA9tE,IAAA,aACAwU,EAAAs5D,EAAA9tE,IAAA,gBAEAwhF,EAAA,GAAAluD,GAAAhf,MACAjlB,OACAklB,KAAAu5D,EAAA9tE,IAAA,QACA2U,SAAAurB,EAAAC,UACA5lB,KAAA2lB,EAAAE,gBAEAriC,GAAA,KAGA+a,EAAA0oE,EAAA5uF,kBAEAg2F,EAAA9a,EAAA9tE,IAAA,WACA6oF,EAAA,GAAAv1D,GAAAhf,MACAjlB,OACAklB,KAAAq0E,EACAj0E,SAAAg0E,EAAAxoD,UACA5lB,KAAAouE,EAAAvoD,eACA51C,EAAAsuB,EAAA5pB,OAAA4+E,EAAA9tE,IAAA,WACAwU,aAAA,OAEAzW,GAAA,KAGAu8D,EAAAwT,EAAA9tE,IAAA,QACA8oF,EAAAhb,EAAA9tE,IAAA,UAEAwhF,GAAA72F,QAAA2vE,EACAuuB,EAAAl+F,QAAAm+F,EAEAxuB,GACAknB,EAAAr1F,GAAA,mBACA+mC,OAAA61D,KAAAzuB,EAAA,IAAAwT,EAAA9tE,IAAA,aAGA8oF,GACAD,EAAA18F,GAAA,mBACA+mC,OAAA61D,KAAAD,EAAA,IAAAhb,EAAA9tE,IAAA,gBAIAqrB,EAAA9U,IAAAirE,GACAoH,GAAAv9D,EAAA9U,IAAAsyE,EAGA,IAAAG,GAAA39D,EAAAz4B,kBACAq2F,EAAAnb,EAAAkX,oBACAiE,GAAAj6F,MAAAg6F,EAAAh6F,MACAi6F,EAAA/5F,OAAA85F,EAAA95F,MACA,IAAAg6F,GAAAtqD,EAAA4V,cACAy0C,GACAj6F,MAAAqgC,EAAApgC,WACAC,OAAAmgC,EAAAlgC,aACiB2+E,EAAA9tE,IAAA,WAGjByU,KAEAA,EAAAq5D,EAAA9tE,IAAA,SAAA8tE,EAAA9tE,IAAA,SACA,WAAAyU,IACAA,EAAA,UAGA,UAAAA,EACAy0E,EAAA3+F,GAAA2+F,EAAAl6F,MAEA,WAAAylB,IACAy0E,EAAA3+F,GAAA2+F,EAAAl6F,MAAA,IAGAwlB,IACAA,EAAAs5D,EAAA9tE,IAAA,QAAA8tE,EAAA9tE,IAAA,UACA,WAAAwU,IACAA,EAAA,UAEA,WAAAA,EACA00E,EAAA1+F,GAAA0+F,EAAAh6F,OAEA,WAAAslB,IACA00E,EAAA1+F,GAAA0+F,EAAAh6F,OAAA,GAGAslB,KAAA,OAGA6W,EAAAvN,KAAA,YAAAorE,EAAA3+F,EAAA2+F,EAAA1+F,GACA,IAAA2+F,IACA10E,YACAG,kBAAAJ,EAEAgtE,GAAA1qF,SAAAqyF,GACAN,EAAA/xF,SAAAqyF,GAIAH,EAAA39D,EAAAz4B,iBACA,IAAAsyF,GAAAgE,EAAA70C,OACAhlD,EAAAy+E,EAAAxN,cAAA,mBACAjxE,GAAAkrB,KAAAuzD,EAAA9tE,IAAA,kBACA,IAAA6U,GAAA,GAAAye,GAAA8K,MACA3qC,OACAlJ,EAAAy+F,EAAAz+F,EAAA26F,EAAA,GACA16F,EAAAw+F,EAAAx+F,EAAA06F,EAAA,GACAl2F,MAAAg6F,EAAAh6F,MAAAk2F,EAAA,GAAAA,EAAA,GACAh2F,OAAA85F,EAAA95F,OAAAg2F,EAAA,GAAAA,EAAA,IAEA71F,QACA1E,QAAA,GAEA2oC,GAAA8L,qBAAAvqB,GAEAwW,EAAA9U,IAAA1B,QtIyt1BMu0E,IACA,SAAS5gG,EAAQC,QAASE,GuIp61BhCA,EAAA,KAEAA,EAAA,KAWAA,EAAA,KAAAixC,gBAEArwC,KAAA,UACAD,MAAA,UACAkV,OAAA,QAGA,cAGA7V,EAAA,KAAAixC,gBAEArwC,KAAA,UACAD,MAAA,UACAkV,OAAA,QAGA,evI+61BM6qF,IACA,SAAS7gG,EAAQC,QAASE,GwI371BhC,QAAA2gG,GAAA5rD,GACA,GAAA6rD,GAAA,iCACAC,EAAA,QAAA9rD,EAAA,KAAA6rD,EAAA,QACA7rD,EAAA,KAAA6rD,CACA,OAAAv3E,GAAAjD,IAAA06E,EAAA,SAAAC,GACA,MAAAA,GAAA,cAAAF,IACSz1F,KAAA,KAQT,QAAA41F,GAAAzpD,GACA,GAAApsC,MAEAu3E,EAAAnrC,EAAAlgC,IAAA,YACAg7B,EAAAkF,EAAAE,cAcA,OAZApF,IAAAlnC,EAAA0B,KAAA,SAAAwlC,GAEAlnC,EAAA0B,KAAA,QAAA0qC,EAAAC,WAEAkrC,GACAv3E,EAAA0B,KAAA,eAAAgE,KAAAskC,MAAA,EAAAutC,EAAA,SAEAp/E,GAAA,+BAAAC,GACA,GAAAgG,GAAAguC,EAAAlgC,IAAA9T,EACAgG,IAAA4B,EAAA0B,KAAA,QAAAtJ,EAAA,IAAAgG,KAGA4B,EAAAC,KAAA,KAQA,QAAA61F,GAAAnC,GAEAA,GAEA,IAAA3zF,MAEA+1F,EAAApC,EAAAznF,IAAA,sBACAxD,EAAAirF,EAAAznF,IAAA,mBACAkgC,EAAAunD,EAAA5yD,SAAA,aACAqwD,EAAAuC,EAAAznF,IAAA,UAoCA,OAjCA6pF,IACA/1F,EAAA0B,KAAA8zF,EAAAO,IAEArtF,IACAwB,EAAAa,gBACA/K,EAAA0B,KAAA,oBAAAgH,IAIA1I,EAAA0B,KACA,qBAAAs0F,EAAAntC,MAAAngD,IAEA1I,EAAA0B,KAAA,8BAKAvJ,GAAA,mCAAAC,GACA,GAAA69F,GAAA,UAAA79F,EACA89F,EAAA7iD,EAAA4iD,GACA73F,EAAAu1F,EAAAznF,IAAAgqF,EACA,OAAA93F,GACA4B,EAAA0B,KAAAu0F,EAAA,IAAA73F,GAAA,UAAAhG,EAAA,YAIA4H,EAAA0B,KAAAm0F,EAAAzpD,IAGA,MAAAglD,GACApxF,EAAA0B,KAAA,WAAAyxC,EAAAK,kBAAA49C,GAAAnxF,KAAA,aAGAD,EAAAC,KAAA,KAA8B,IAO9B,QAAAk2F,GAAA33C,EAAAjjB,GACA,GAAA3kC,GAAAoE,SAAAC,cAAA,OACA+tB,EAAAuS,EAAA8E,OAEAxoC,MAAAjB,KAEAiB,KAAA0f,GAAAgkB,EAAApgC,WAAA,EACAtD,KAAA6yB,GAAA6Q,EAAAlgC,YAAA,EAEAmjD,EAAA38C,YAAAjL,GAEAiB,KAAAu+F,WAAA53C,EAEA3mD,KAAAw+F,OAAA,EAKAx+F,KAAAy+F,YAEA,IAAAlyF,GAAAvM,IACAjB,GAAA2/F,aAAA,WAEAnyF,EAAAoyF,YACAl5E,aAAAlZ,EAAAkyF,cACAlyF,EAAAiyF,OAAA,GAEAjyF,EAAAqyF,YAAA,GAEA7/F,EAAA8/F,YAAA,SAAA9sF,GAEA,GADAA,KAAAw1B,OAAA5pC,OACA4O,EAAAoyF,UAAA,CAGA,GAAA1+F,GAAAkxB,EAAAlxB,OACAwgB,GAAAqG,eAAA6/B,EAAA50C,GAAA,GACA9R,EAAA0B,SAAA,YAAAoQ,KAGAhT,EAAA+/F,aAAA,WACAvyF,EAAAoyF,WACApyF,EAAAiyF,OACAjyF,EAAAwyF,UAAAxyF,EAAAyyF,YAGAzyF,EAAAqyF,YAAA,GA1JA,GAAAv4E,GAAArpB,EAAA,KACAmhG,EAAAnhG,EAAA,KACAyjB,EAAAzjB,EAAA,KACAs+C,EAAAt+C,EAAA,KACAsD,EAAA+lB,EAAA/lB,KACAk7C,EAAAF,EAAAE,YACAnpC,EAAArV,EAAA,KAEA8gG,GAAA,6BAEAmB,EAAA,wFAoJAX,GAAA/+F,WAEAkB,YAAA69F,EAEAK,WAAA,EAKA9rF,OAAA,WACA,GAAA8zC,GAAA3mD,KAAAu+F,WACAltF,EAAAs1C,EAAAu4C,cACA/7F,SAAAmO,YAAAC,iBAAAo1C,GACAriD,EAAAqiD,EAAAjjD,KACA,cAAAY,EAAAX,UAAA,aAAA0N,EAAA1N,WACAW,EAAAX,SAAA,aAOAy0E,KAAA,SAAA0jB,GACAr2E,aAAAzlB,KAAAy+F,aACA,IAAA1/F,GAAAiB,KAAAjB,EAEAA,GAAA2E,MAAAyE,QAAA82F,EAAAhB,EAAAnC,GAEA,SAAoB97F,KAAA0f,GAAA,UAAuB1f,KAAA6yB,GAAA,OAC3CipE,EAAAznF,IAAA,qBAEAtV,EAAA2E,MAAA6M,QAAAxR,EAAAqK,UAAA,eAEApJ,KAAAw+F,OAAA,GAGAW,WAAA,SAAAliG,GACA,GAAA8B,GAAAiB,KAAAjB,EACAA,GAAAqK,UAAAnM,EACA8B,EAAA2E,MAAA6M,QAAAtT,EAAA,gBAGAitB,OAAA,SAAAtrB,EAAAC,GACA,GAAA6E,GAAA1D,KAAAjB,GAAA2E,KACAA,GAAAE,KAAAhF,EAAA,KACA8E,EAAAG,IAAAhF,EAAA,KAEAmB,KAAA0f,GAAA9gB,EACAoB,KAAA6yB,GAAAh0B,GAGAs5E,KAAA,WACAn4E,KAAAjB,GAAA2E,MAAA6M,QAAA,OACAvQ,KAAAw+F,OAAA,GAKAO,UAAA,SAAAjpF,IACA9V,KAAAw+F,OAAAx+F,KAAA4+F,YAAA5+F,KAAA2+F,YACA7oF,GACA9V,KAAAg/F,WAAAlpF,EAEA9V,KAAAw+F,OAAA,EACAx+F,KAAAy+F,aAAA94E,WAAAU,EAAAC,KAAAtmB,KAAAm4E,KAAAn4E,MAAA8V,IAGA9V,KAAAm4E,SAKAinB,OAAA,WACA,MAAAp/F,MAAAw+F,QAIA3hG,EAAAC,QAAAwhG,GxIw91BMe,IACA,SAASxiG,EAAQC,QAASE,GyIvs2BhCA,EAAA,KAAA2xC,sBAEA/wC,KAAA,UAEA2mD,eACA72C,OAAA,EAEA/C,EAAA,EAEAytE,MAAA,EAGAknB,aAAA,EAGA79F,QAAA,OAGA89F,UAAA,YAGAC,mBAAA,EAMAC,SAAA,EAKAC,UAAA,EAGAC,UAAA,IAGAzB,mBAAA,GAEAS,WAAA,EAGA9tF,gBAAA,qBAGA+uE,YAAA,OAGAggB,aAAA,EAGAjgB,YAAA,EAIA4Z,QAAA,EAGAsG,aAAA,GAGAC,aAGAliG,KAAA,OAMAyqE,KAAA,OAEA7yD,WAAA,EACAuqF,wBAAA,IACAC,sBAAA,iBAGA7gB,WACA9vC,MAAA,OACAhsC,MAAA,EACAzF,KAAA,SAGAqiG,YACA5wD,MAAA,OACAhsC,MAAA,EACAzF,KAAA,SAGAu2C,cAIA+rD,aACA7wD,MAAA,0BAGA8E,WACA9E,MAAA,OACAqwC,SAAA,QzImt2BMygB,IACA,SAAStjG,EAAQC,QAASE,G0I9y2BhC,QAAAojG,GAAAluF,EAAAC,GACA,IAAAD,IAAAC,EACA,QAEA,IAAAggC,GAAAkJ,EAAAlJ,KACA,OAAAA,GAAAjgC,EAAA,MAAAigC,EAAAhgC,EAAA,KACAggC,EAAAjgC,EAAA,MAAAigC,EAAAhgC,EAAA,IAKA,QAAAkuF,GAAAlkF,EAAAC,EAAAC,EAAAC,GACA,OACAH,KACAC,KACAC,KACAC,MAOA,QAAAgkF,GAAA1hG,EAAAC,EAAAwE,EAAAE,GACA,OACA3E,IACAC,IACAwE,QACAE,UAOA,QAAAg9F,GAAArlF,EAAAC,EAAAwV,EAAAvV,EAAAC,EAAAC,GACA,OACAJ,KACAC,KACAwV,KACAvV,IACAC,aACAC,WACAoT,WAAA,GAIA,QAAA8xE,GAAA5hG,EAAAC,EAAAE,EAAAuyF,EAAAC,GACA,GAAAluF,GAAAtE,EAAAquC,YACA7pC,EAAAxE,EAAAsuC,aACA91B,EAAA,EAcA,OAZA3Y,GAAAyE,EAAAkU,EAAA+5E,EACA1yF,GAAAyE,EAAAkU,EAGA3Y,GAAA2Y,EAEA1Y,EAAA0E,EAAAgU,EAAAg6E,EACA1yF,GAAA0E,EAAAgU,EAGA1Y,GAAA0Y,GAEA3Y,EAAAC,GAGA,QAAA4hG,GAAA7hG,EAAAC,EAAAE,EAAAuyF,EAAAC,GACA,GAAAluF,GAAAtE,EAAAquC,YACA7pC,EAAAxE,EAAAsuC,YAOA,OALAzuC,GAAAiP,KAAAC,IAAAlP,EAAAyE,EAAAiuF,GAAAjuF,EACAxE,EAAAgP,KAAAC,IAAAjP,EAAA0E,EAAAguF,GAAAhuF,EACA3E,EAAAiP,KAAAoC,IAAArR,EAAA,GACAC,EAAAgP,KAAAoC,IAAApR,EAAA,IAEAD,EAAAC,GAGA,QAAA6hG,GAAA/8F,EAAAulB,EAAA/kB,GACA,GAAAw8F,GAAAx8F,EAAAipC,YACAwzD,EAAAz8F,EAAAkpC,aACA91B,EAAA,EACA3Y,EAAA,EACAC,EAAA,EACAgiG,EAAA33E,EAAA7lB,MACAy9F,EAAA53E,EAAA3lB,MACA,QAAAI,GACA,aACA/E,EAAAsqB,EAAAtqB,EAAAiiG,EAAA,EAAAF,EAAA,EACA9hG,EAAAqqB,EAAArqB,EAAAiiG,EAAA,EAAAF,EAAA,CACA,MACA,WACAhiG,EAAAsqB,EAAAtqB,EAAAiiG,EAAA,EAAAF,EAAA,EACA9hG,EAAAqqB,EAAArqB,EAAA+hG,EAAArpF,CACA,MACA,cACA3Y,EAAAsqB,EAAAtqB,EAAAiiG,EAAA,EAAAF,EAAA,EACA9hG,EAAAqqB,EAAArqB,EAAAiiG,EAAAvpF,CACA,MACA,YACA3Y,EAAAsqB,EAAAtqB,EAAA+hG,EAAAppF,EACA1Y,EAAAqqB,EAAArqB,EAAAiiG,EAAA,EAAAF,EAAA,CACA,MACA,aACAhiG,EAAAsqB,EAAAtqB,EAAAiiG,EAAAtpF,EACA1Y,EAAAqqB,EAAArqB,EAAAiiG,EAAA,EAAAF,EAAA,EAEA,OAAAhiG,EAAAC,GAcA,QAAAkiG,GAAAC,EAAApiG,EAAAC,EAAA4gG,EAAAxiG,EAAAqvC,EAAAvtC,EAAA2kC,GACA,GAAA4tD,GAAA5tD,EAAApgC,WACAiuF,EAAA7tD,EAAAlgC,YAEA0lB,EAAAnqB,KAAAkI,kBAAAskB,OAOA,IANAxsB,GAAAmqB,EAAA/hB,eAAApI,EAAAmI,WACA,kBAAA85F,KAEAA,KAAApiG,EAAAC,GAAAytC,EAAArvC,EAAA8B,GAAAmqB,IAGA7C,EAAAqV,QAAAslE,GACApiG,EAAAkuB,EAAAk0E,EAAA,GAAA1P,GACAzyF,EAAAiuB,EAAAk0E,EAAA,GAAAzP,OAGA,oBAAAyP,IAAAjiG,EAAA,CACA,GAAAoiB,GAAAu/E,EACAM,EAAA93E,EAAAjsB,EAAA8B,GAEAH,GAAAuiB,EAAA,GACAtiB,EAAAsiB,EAAA,OAEA,CACA,GAAAA,GAAAq/E,EACA5hG,EAAAC,EAAA5B,EAAA8B,GAAAuyF,EAAAC,EAEA3yF,GAAAuiB,EAAA,GACAtiB,EAAAsiB,EAAA,GAGA,GAAAs+E,EAAA,CACA,GAAAt+E,GAAAs/E,EACA7hG,EAAAC,EAAA5B,EAAA8B,GAAAuyF,EAAAC,EAEA3yF,GAAAuiB,EAAA,GACAtiB,EAAAsiB,EAAA,GAGAlkB,EAAAitB,OAAAtrB,EAAAC,GAGA,QAAAoiG,GAAAj/D,GACA,GAAAT,GAAAS,EAAAsI,iBACA7oC,EAAAugC,EAAA3tB,IAAA,qBAEA,UAAAktB,GACA,gBAAAA,EAAA3jC,MAAA,UAAA2jC,EAAA3jC,MAAA,eAAA2jC,EAAA3jC,MACA,SAAA6D,GApLA,GAAA68F,GAAAthG,EAAA,KACA2qC,EAAA3qC,EAAA,KACAqpB,EAAArpB,EAAA,KACAs+C,EAAAt+C,EAAA,KACAq+C,EAAAr+C,EAAA,KACAqkC,EAAArkC,EAAA,KACA8vB,EAAAuuB,EAAAvuB,aACAza,EAAArV,EAAA,KACAkyC,EAAAlyC,EAAA,IA+KAA,GAAA,KAAA4xC,qBAEAhxC,KAAA,UAEAsjG,iBAEA5oE,KAAA,SAAA2I,EAAAyC,GACA,IAAArxB,EAAA2mB,KAAA,CAGA,GAAAmoE,GAAA,GAAA7C,GAAA56D,EAAA6E,SAAA7E,EACA1jC,MAAAohG,gBAAAD,EAEAz9D,EAAAljC,GAAA,UAAAR,KAAAqhG,iBAAArhG,MACA0jC,EAAAljC,GAAA,UAAAR,KAAAshG,iBAAAthG,QAGAmmC,OAAA,SAAA21D,EAAA76D,EAAAyC,GACA,IAAArxB,EAAA2mB,KAAA,CAKAh5B,KAAA0/B,MAAA4jC,YAMAtjE,KAAAkhG,iBAMAlhG,KAAAuhG,cAAAzF,EAMA97F,KAAAwhG,SAAAvgE,EAMAjhC,KAAAogC,KAAAsD,EAMA1jC,KAAAyhG,aAKA,IAAAN,GAAAnhG,KAAAohG,eACAD,GAAAtuF,SACAsuF,EAAAxC,UAAA7C,EAAAznF,IAAA,aACArU,KAAA0hG,mBAAA5F,EAAAznF,IAAA,qBAKArU,KAAA2hG,mBAAA3hG,KAAA4hG,wBACA9F,EAAA76D,EAGA,IAAA4gE,GAAA7hG,KAAA8hG,UACAD,IACA7hG,KAAA0/B,MAAA9U,IAAAi3E,EAGA,IAAAtC,GAAAzD,EAAAznF,IAAA,YAGA,UAAArU,KAAAI,QACA,MAAAJ,KAAAK,QAIA,SAAAk/F,EACA,CACA,GAAAhzF,GAAAvM,IACAylB,cAAAzlB,KAAA+hG,uBACA/hG,KAAA+hG,sBAAAp8E,WAAA,WAIApZ,EAAA80F,kBACAziG,EAAA2N,EAAAnM,OACAvB,EAAA0N,EAAAlM,WAKA,GAAA8wB,GAAAnxB,KAAAogC,KAAAoI,OACArX,GAAAiF,IAAA,QAAAp2B,KAAAgiG,UACA7wE,EAAAiF,IAAA,YAAAp2B,KAAAiiG,YACA9wE,EAAAiF,IAAA,WAAAp2B,KAAAkiG,OACA/wE,EAAAiF,IAAA,YAAAp2B,KAAAkiG,OAEA,UAAA3C,EACApuE,EAAA3wB,GAAA,QAAAR,KAAAgiG,SAAAhiG,MAEA,cAAAu/F,IACApuE,EAAA3wB,GAAA,YAAAR,KAAAiiG,WAAAjiG,MACAmxB,EAAA3wB,GAAA,WAAAR,KAAAkiG,MAAAliG,MACAmxB,EAAA3wB,GAAA,YAAAR,KAAAkiG,MAAAliG,SAMAiiG,WAAA,SAAAlwF,GACA,GAAA2tF,GAAA1/F,KAAAuhG,cAAAltF,IAAA,aACA9H,EAAAvM,IACAylB,cAAAzlB,KAAAmiG,cACAzC,EAAA,EACA1/F,KAAAmiG,aAAAx8E,WAAA,WACApZ,EAAAy1F,SAAAjwF,IACiB2tF,GAGjB1/F,KAAAgiG,SAAAjwF,IAoBAsvF,iBAAA,SAAA1jG,GAYA,QAAAykG,GAAAC,GACA,GAAA7jF,GAAA6jF,EAAA58D,UACAoF,EAAAxJ,EAAA+f,eAAA5iC,EAAA7gB,EAEA,UAAAktC,IAAAxkB,EAAAqV,QAAAmP,IACArsB,EAAAsrC,SAAAjf,GAEA,SAjBA,GAAAltC,EAAA+N,OAAA1L,KAAAykD,IAAA,CAIA,GAAAxjB,GAAAjhC,KAAAwhG,SACA/0D,EAAA9uC,EAAA8uC,YACAzK,EAAAf,EAAAuL,iBAAAC,GACA/I,EAAA1jC,KAAAogC,KAEAkiE,EAAA,SAAAtiG,KAAAuhG,cAAAltF,IAAA,UAYA,UAAA1W,EAAAiB,GAAA,MAAAjB,EAAAkB,GAqBA,GApBAyjG,GAEAtgE,IAAAogE,EAAApgE,KACAA,EAAA,MAEAA,GAEAf,EAAA6C,WAAA,SAAAu+D,GACApB,EAAAoB,KAAArgE,GACAogE,EAAAC,KACArgE,EAAAqgE,MAQArgE,KAAAf,EAAAuL,iBAAA,GAEAxK,EAAA,CACA,GAAAxjB,GAAAwjB,EAAAyD,UACAoF,EAAAxJ,EAAA+f,eAAA5iC,EAAA7gB,EAEA,UAAAktC,GAAAxkB,EAAAqV,QAAAmP,GACA,MAGA,IACA3vB,GACAC,EAFApc,EAAAyf,EAAAijD,iBAAA52B,GAIAtJ,EAAAS,EAAAsI,gBACA,IAAAtI,EAAA6pC,mBAAA,CACA,GAAAvgD,GAAA0W,EAAA6pC,mBAAAhhC,MACA3vB,GAAAoQ,EAAA,GACAnQ,EAAAmQ,EAAA,OAEA,IAAAiW,KAAA2lD,YAAA,CACA,GAAA57D,GAAAiW,EAAA2lD,YACA1oE,EAAAogD,UACAv4C,EAAAjD,IAAAme,EAAA85B,WAAA,SAAAU,GACA,MAAA/5B,GAAAipC,kBAAAlP,GAAA,KACiClxB,GAAA,GAGjC3vB,GAAAoQ,KAAA,GACAnQ,EAAAmQ,KAAA,OAEA,IAAAvsB,EAAA,CAEA,GAAAmqB,GAAAnqB,EAAAkI,kBAAAskB,OACArC,GAAA/hB,eAAApI,EAAAmI,WACAgU,EAAAgO,EAAAtqB,EAAAsqB,EAAA7lB,MAAA,EACA8X,EAAA+N,EAAArqB,EAAAqqB,EAAA3lB,OAAA,EAGA,MAAA2X,GAAA,MAAAC,GACAnb,KAAAgiG,UACAlkG,QAAAod,EACAld,QAAAmd,EACAxX,SAAAhG,EAAAgG,SACAjG,OAAAqB,EACApB,gBAKA,CACA,GAAAoB,GAAA2kC,EAAA8E,QAAAvoC,QAAAW,UAAAjD,EAAAiB,EAAAjB,EAAAkB,EACAmB,MAAAgiG,UACAlkG,QAAAH,EAAAiB,EACAZ,QAAAL,EAAAkB,EACA8E,SAAAhG,EAAAgG,SACAjG,OAAAqB,EACApB,cAKA2jG,iBAAA,SAAAvvF,GACAA,EAAArG,OAAA1L,KAAAykD,KAIAzkD,KAAAkiG,SAGAN,wBAAA,SAAA9F,EAAA76D,GAEA,GAAAshE,KA+BA,OA9BAthE,GAAA6C,WAAA,SAAA9B,GACA,GAAAi/D,EAAAj/D,GAAA,CACA,GACA0kD,GACAvjE,EAFAoe,EAAAS,EAAAsI,gBAKA,iBAAA/I,EAAA3jC,MAEA8oF,EAAAnlD,EAAA8pC,cACAloD,EAAAujE,EAAA3qB,IAAA2qB,EAAAzkD,OAEA,eAAAV,EAAA3jC,MACA8oF,EAAAnlD,EAAAgmD,UACApkE,EAAAujE,EAAA3qB,IAAA2qB,EAAA9oF,OAGA8oF,EAAAnlD,EAAA8pC,cACAloD,EAAAujE,EAAA3qB,IAAAx6B,EAAAhhC,MAGAgiG,EAAAp/E,GAAAo/E,EAAAp/E,KACAoe,YACAgE,WAEAg9D,EAAAp/E,GAAAoe,SAAA13B,KAAA03B,GACAghE,EAAAp/E,GAAAoiB,OAAA17B,KAAAm4B,KAEahiC,MAEbuiG,GAQAP,SAAA,SAAAjwF,GACA,GAAAhT,GAAAgT,EAAArU,OACAo+F,EAAA97F,KAAAuhG,cACAiB,EAAA1G,EAAAznF,IAAA,WACA4sB,EAAAjhC,KAAAwhG,SACA99D,EAAA1jC,KAAAogC,IAEA,IAAA07D,EASA,GAJA97F,KAAAI,OAAA2R,EAAAjU;AACAkC,KAAAK,OAAA0R,EAAA/T,QAGAe,GAAA,MAAAA,EAAA8rC,UAAA,CAIA,GAAA0B,GAAAxtC,EAAAwtC,WAAAtL,EAAAuL,iBAAAztC,EAAA0tC,aACA5B,EAAA9rC,EAAA8rC,UACAyU,EAAA/S,EAAA9G,UAAA8Z,aAAA1U,EAEA,WAAAyU,EAAAjrC,IAAA,oBAAAmuF,GACAxiG,KAAAyiG,iBAAA3G,EAAA76D,EAAAlvB,IAIA/R,KAAA0iG,QAAA,GAEA1iG,KAAA2iG,mBAEA3iG,KAAA4iG,kBAEA5iG,KAAA6iG,wBAAAt2D,EAAA1B,EAAA9rC,EAAA4tC,SAAA56B,IAGA2xB,EAAA4D,gBACA1pC,KAAA,UACA8N,KAAA1L,KAAAykD,IACA9Z,gBAAA5rC,EAAA8rC,UACA4B,YAAA1tC,EAAA0tC,kBAIA,IAAA1tC,KAAA83F,QAAA,CACA,GAAAjD,GAAA70F,EAAA83F,OACA,oBAAAjD,GAAA,CACA,GAAA32F,GAAA22F,CACAA,IACA32F,UAEAuiD,UAAAviD,GAGA,GAAA6lG,GAAA,GAAA5zD,GAAA0kD,EAAAkI,GACAiH,EAAAD,EAAAzuF,IAAA,WACA2uF,EAAAn1F,KAAA8+D,QACA3sE,MAAAijG,oBAEAH,EAAAC,EAAAD,EAAAzuF,IAAA,uBACA2uF,EAAAjxF,EAAAjU,QAAAiU,EAAA/T,QAAA+T,EAAApO,SAAA5E,EAAA2kC,OAIA,SAAA8+D,EACAxiG,KAAAkiG,QAIAliG,KAAAyiG,iBAAA3G,EAAA76D,EAAAlvB,GAKA,UAAA+pF,EAAAznF,IAAA,qBACAqvB,EAAA4D,gBACA1pC,KAAA,UACA8N,KAAA1L,KAAAykD,IACA7lD,EAAAmT,EAAAjU,QACAe,EAAAkT,EAAA/T,WAaAykG,iBAAA,SAAA3G,EAAA76D,EAAAlvB,GACA,GAAAmxF,GAAApH,EAAA5yD,SAAA,eACAi6D,EAAAD,EAAA7uF,IAAA,OAEA,cAAA8uF,EAAA,CACA,GAAApkG,GAAAgT,EAAArU,MACA,IAAAqB,GAAA,MAAAA,EAAA8rC,UAAA,CACA,GAAA7I,GAAAf,EAAAuL,iBAAAztC,EAAA0tC,aACA5B,EAAA9rC,EAAA8rC,SACA7qC,MAAA6iG,wBAAA7gE,EAAA6I,EAAA9rC,EAAA4tC,SAAA56B,IAIA/R,KAAAojG,kBACA,IAAAC,IAAA,CACAh9E,GAAA/lB,KAAAN,KAAA2hG,mBAAA,SAAA2B,GAEA,GAAAC,GAAAD,EAAA/hE,SACAA,EAAAgiE,EAAA,GAGAj4E,GAAAvZ,EAAAjU,QAAAiU,EAAA/T,QAEA,KAAAujC,EAAAgJ,aAAAjf,GAGA,WADAtrB,MAAA2iG,iBAAAphE,EAAAhhC,KAIA8iG,IAAA,CAEA,IAAAhoC,GAAA95B,EAAA85B,WACA14C,EAAA4e,EAAAiiE,YAAAl4E,GAAA,EACAA,GAAAiW,EAAA2lD,YAAAvkE,EACA,IAAA+jE,GAAAnlD,EAAA8pC,cACA7B,EAAA05B,EAAA7uF,IAAA,OACA,UAAAm1D,IACAA,EAAAkd,EAAA3qB,IAGA,IAAA0nC,IAAA,EACAC,EAAA1jG,KAAAyhG,UACA,cAAA0B,EAGA/C,EAAAsD,EAAAllF,KAAAmE,KACA8gF,GAAA,GAEAC,EAAAllF,KAAAmE,MAEA,CACA,GAAAghF,GAAAt9E,EAAA9a,QAAA8vD,EAAAmO,EAGAk6B,GAAAllF,OAAAmE,EAAAghF,KACAF,GAAA,GAEAC,EAAAllF,KAAAmE,EAAAghF,GAGA,GAAA5gB,GAAA+Y,EAAAznF,IAAA,YAEA,iBAAAktB,EAAA3jC,MAAA6lG,EAKA,UAAAliE,EAAA3jC,MAAA6lG,EAKA,eAAAliE,EAAA3jC,MAAA6lG,GACAzjG,KAAA4jG,mBACAV,EAAA3hE,EAAAioC,EAAAl+C,EAAAy3D,GANA/iF,KAAA6jG,kBACAX,EAAA3hE,EAAAioC,EAAAl+C,EAAAy3D,GANA/iF,KAAA8jG,sBACAZ,EAAA3hE,EAAAioC,EAAAl+C,EAAAy3D,GAcA,UAAAogB,GACAnjG,KAAA+jG,qCACAxiE,EAAA+hE,EAAA/9D,OAAAja,EAAA3I,EAAA8gF,EAAA1xF,EAAApO,WAGa3D,MAEbA,KAAAuhG,cAAAltF,IAAA,SACArU,KAAA2iG,mBAGAU,GACArjG,KAAAkiG,SAYA4B,sBAAA,SAAAZ,EAAA9b,EAAA5d,EAAAl+C,EAAAy3D,GA8BA,QAAAihB,GAAAx6B,EAAAl+C,EAAA24E,GACA,GAAAC,GAAA,MAAA16B,EACA62B,EAAA/0E,EAAA,GAAA24E,EAAA,GAAA34E,EAAA,GAAA24E,EAAA,IACA5D,EAAA4D,EAAA,GAAA34E,EAAA,GAAA24E,EAAA,GAAA34E,EAAA,IAEA64E,EAAA53F,EAAA63F,mBACAhd,EAAA8b,EAAA15B,EAAA06B,EAEAv8D,GAAA2L,sBACAxrC,MAAAo8F,EACAxgG,MAAAygG,EAAAzgG,QAGA2gG,EACA18D,EAAA+M,YAAAyvD,GACAr8F,MAAAo8F,GACqBhB,GACrBiB,EAAAhyE,MACArqB,MAAAo8F,IAOA,QAAAI,GAAA96B,EAAAl+C,EAAA24E,GACA,GAAA57B,GAAA+e,EAAAG,QAAA/d,GACA+6B,EAAAl8B,EAAAke,eACAhe,EAAA07B,EAAA,GAAAA,EAAA,GACAC,EAAA,MAAA16B,EACA82B,EAAAh1E,EAAA,GAAAi5E,EAAA,EAAAN,EAAA,GAAAM,EAAAh8B,GACA+3B,EAAA2D,EAAA,GAAA34E,EAAA,GAAAi5E,EAAA,EAAAh8B,EAAAg8B,GAEAJ,EAAA53F,EAAA63F,mBACAhd,EAAA8b,EAAA15B,EAAA06B,EAEAG,GACA18D,EAAA+M,YAAAyvD,GACAr8F,MAAAo8F,GACqBhB,GACrBiB,EAAAhyE,MACArqB,MAAAo8F,IAtEA,GAAA33F,GAAAvM,KAEAmjG,EAAAD,EAAA7uF,IAAA,QACAqyE,EAAAU,EAAA/b,cACAg5B,EAAAthB,GACA,UAAAogB,GACA,aAAAzc,EAAA9oF,MACA8oF,EAAAH,eAAA,EAEA,cAAA4c,EACAa,EAAA,IAAA14E,EAAA87D,EAAAG,QAAA,KAAAnB,mBACA4d,EAAA,IAAA14E,EAAA87D,EAAAG,QAAA,KAAAnB,mBAEApmF,KAAAwkG,iBAAApd,EAAA97D,EAAA43E,OAEA,CACA,GAAAuB,GAAArd,EAAAG,QAAA,MAAA/d,EAAA,SACAy6B,EAAAQ,EAAAre,iBAEA,iBAAAgB,EAAAxpF,OACA,SAAAulG,EAAAa,EAAAM,GACA96B,EAAAl+C,EAAA24E,KAsDAL,mBAAA,SAAAV,EAAAwB,EAAAl7B,EAAAl+C,EAAAy3D,GAeA,QAAA4hB,GAAAn7B,EAAAl+C,EAAA24E,GACA,GAAA57B,GAAAq8B,EAAAnd,UACAjgC,EAAA+gB,EAAA/gB,OAEA48C,EAAA,eAAA58C,EACA+4C,EAAA/0E,EAAA,GAAA24E,EAAA,GAAA34E,EAAA,GAAA24E,EAAA,IACA5D,EAAA4D,EAAA,GAAA34E,EAAA,GAAA24E,EAAA,GAAA34E,EAAA,IAEA64E,EAAA53F,EAAA63F,mBACAM,EAAAxB,EAAA15B,EAAA06B,EAEAG,GACA18D,EAAA+M,YAAAyvD,GACAr8F,MAAAo8F,GACqBhB,GACrBiB,EAAAhyE,MACArqB,MAAAo8F,IA9BA,GAAA33F,GAAAvM,KACAmjG,EAAAD,EAAA7uF,IAAA,QACAgwF,EACAthB,GACA,UAAAogB,GACA,aAAAuB,EAAAr5B,cAAAztE,KACAsrB,EAAAw7E,EAAAnN,UACA0M,GAAA/6E,EAAArqB,EAAAqqB,EAAArqB,EAAAqqB,EAAA3lB,OAEAohG,GAAAn7B,EAAAl+C,EAAA24E,IAkCAJ,kBAAA,SAAAX,EAAAxe,EAAAlb,EAAAl+C,EAAAy3D,GA6BA,QAAA6hB,GAAAp7B,EAAAl+C,EAAA24E,GACA,GAEAC,GAFAW,EAAAngB,EAAAogB,aAAAx5E,EAIA,cAAAk+C,EAAA,CACA,GAAAt9C,GAAAw4D,EAAAqgB,cAAAd,EAAA,GAAAY,EAAA,KACA14E,EAAAu4D,EAAAqgB,cAAAd,EAAA,GAAAY,EAAA,IACAX,GAAA7D,EAAAn0E,EAAA,GAAAA,EAAA,GAAAC,EAAA,GAAAA,EAAA,QAGA+3E,IACAhpF,GAAAwpE,EAAAxpE,GACAC,GAAAupE,EAAAvpE,GACAC,EAAAypF,EAAA,GAIA,IAAAV,GAAA53F,EAAA63F,mBACA1f,EAAAwe,EAAA15B,EAAA06B,EAGAG,GACA18D,EAAA+M,YAAAyvD,GACAr8F,MAAAo8F,GACqBhB,GACrBiB,EAAAhyE,MACArqB,MAAAo8F,IAOA,QAAAc,GAAAx7B,EAAAl+C,EAAA24E,GACA,GAKAC,GALA77B,EAAAqc,EAAA6C,QAAA/d,GACA+6B,EAAAl8B,EAAAke,eAEAse,EAAAngB,EAAAogB,aAAAx5E,GAIAosB,EAAA7pC,KAAAyL,GAAA,GAGA4qF,GADA,UAAA16B,EACA+2B,EACA7b,EAAAxpE,GAAAwpE,EAAAvpE,GACA8oF,EAAA,GAAAA,EAAA,KAEAY,EAAA,GAAAN,EAAA,GAAA7sD,IACAmtD,EAAA,GAAAN,EAAA,GAAA7sD,GAIA6oD,EACA7b,EAAAxpE,GAAAwpE,EAAAvpE,GACA0pF,EAAA,GAAAN,EAAA,EACAM,EAAA,GAAAN,EAAA,EACA,IAAA12F,KAAAyL,GAIA,IAAA6qF,GAAA53F,EAAA63F,mBACA1f,EAAAwe,EAAA15B,EAAA06B,EAEAG,GACA18D,EAAA+M,YAAAyvD,GACAr8F,MAAAo8F,GACqBhB,GACrBiB,EAAAhyE,MACArqB,MAAAo8F,IAlGA,GAAA33F,GAAAvM,KAEAmjG,EAAAD,EAAA7uF,IAAA,QAEAszE,EAAAjD,EAAAkD,eACAC,EAAAnD,EAAAoD,gBAEAuc,EAAAthB,GACA,UAAAogB,GACA,aAAAze,EAAArZ,cAAAztE,IAEA,cAAAulG,EACAyB,EAAA,QAAAt5E,EAAAu8D,EAAArlB,aACAoiC,EAAA,SAAAt5E,EAAAq8D,EAAAnlB,aAEAxiE,KAAAwkG,iBAAA9f,EAAAp5D,EAAA43E,OAEA,CACA,GAAAuB,GAAA/f,EAAA6C,QAAA,WAAA/d,EAAA,kBACAy6B,EAAAQ,EAAAjiC,aAEA,SAAA2gC,EAAAyB,EAAAI,GACAx7B,EAAAl+C,EAAA24E,KAiFAO,iBAAA,SAAAjjE,EAAAjW,EAAA43E,GACA,GAAA+B,GAAA/B,EAAAh6D,SAAA,cACAqL,EAAA0wD,EAAA/7D,SAAA,aAEA4yD,EAAA97F,KAAAuhG,cAEA34E,EAAA5oB,KAAA8hG,UACAl5E,KACAA,EAAA5oB,KAAA8hG,WAAA,GAAAn6D,GAAAhf,MACAjlB,OACAolB,UAAA,OACAG,kBAAA,YAGAjpB,KAAA0/B,MAAA9U,IAAAhC,GAGA,IAAAjG,GAAA4e,EAAAiiE,YAAAl4E,GAEAo0C,EAAAn+B,EAAA85B,UACA14C,GAAA0D,EAAAjD,IAAAT,EAAA,SAAApc,EAAA+E,GACA,GAAA+8D,GAAA9mC,EAAAgmD,QAAA7nB,EAAAp0D,GASA,OAPA/E,GADA,aAAA8hE,EAAAzqE,MAAA,SAAAyqE,EAAAzqE,KACAyqE,EAAAljE,MAAA49D,SAAAx8D,GAGA+0C,EAAAC,UACAh1C,EAAAqwC,QAAAyxB,EAAAnxB,wBAMAtuB,EAAAzd,UACAyjB,KAAA2lB,EAAAE,gBAAAwwD,EAAA5wF,IAAA,SACA2U,SAAAurB,EAAAC,UACA5rB,KAAAjG,EAAAva,KAAA,MACAxJ,EAAA0sB,EAAA,KACAzsB,EAAAysB,EAAA,OAEA1C,EAAAje,EAAAmxF,EAAAznF,IAAA,KACAuU,EAAAlb,OAAAouF,EAAAznF,IAAA,WAGA+vF,mBAAA,SAAA7iE,EAAA2gD,EAAA1Y,EAAA07B,GACA,GAAApJ,GAAA97F,KAAAuhG,cACA52F,EAAAmxF,EAAAznF,IAAA,KACA3G,EAAAouF,EAAAznF,IAAA,UACA8wF,EAAAnlG,KAAAkhG,cACA7d,EAAA9hD,EAAAhhC,IAEA,IADA4kG,EAAA9hB,GAAA8hB,EAAA9hB,OACA8hB,EAAA9hB,GAAA7Z,GACA,MAAA27B,GAAA9hB,GAAA7Z,EAIA,IAAA47B,GAAAljB,EAAA7tE,IAAA,QACAgxF,EAAAnjB,EAAAh5C,SAAAk8D,EAAA,SACAE,EAAA,WAAAF,EACA1hG,EAAA2hG,EAAAC,EAAA,iCAEAC,EAAA,UAAAhkE,EAAA3jC,KACA0nG,EAAA,oBAAA97B,EAAA,gBACA87B,EAAA,aAEAA,GAAA5hG,EAAAirB,OAAA,KAAAjrB,EAAAkrB,KAAA,IAEA,IAAA7vB,GAAAomG,EAAA9hB,GAAA7Z,GAAA,GAAA7hC,GAAA49D,IACA7hG,QACAiH,IACA+C,SACA1O,QAAA,EACA8I,MAAAo9F,GAIA,OADAllG,MAAA0/B,MAAA9U,IAAA7rB,GACAA,GAWAglG,qCAAA,SACAxiE,EAAAikE,EAAAl6E,EAAA3I,EAAA8gF,EAAAzC,GAGA,GAkBAyE,GAlBAC,EAAA1lG,KAAAuhG,cAEA7a,EAAAnlD,EAAA8pC,cACAs6B,EAAA,MAAAjf,EAAA3qB,KAAA,WAAA2qB,EAAA3qB,IAAA,IAEA6pC,EAAAv/E,EAAAjD,IAAAoiF,EAAA,SAAAjgE,GACA,OACAkH,YAAAlH,EAAAkH,YACA9B,gBAAApF,EAAAqmC,wBACArmC,EAAAqmC,wBAAArmC,EAAA0lC,kBAAAyb,EAAA3qB,KAAAp5C,EAAA+jE,GACAnhD,EAAAE,UAAA05B,eACA55B,EAAA0lC,kBAAAyb,EAAA3qB,KAAA,GACAp5C,EAAAgjF,IAEA,eAAAjf,EAAA9oF,KAAA,WAKAyoB,GAAA/lB,KAAAslG,EAAA,SAAAhkE,EAAAt2B,GACAk6F,EAAAl6F,GAAAm6B,UAAAqkB,SAAAloB,EAAA+I,mBACA86D,EAAAn6F,KAIAm6F,KAAA,CAEA,IAAA/B,GAAA1jG,KAAAyhG,WACA/9D,EAAA1jC,KAAAogC,IAwBA,IAtBAsjE,EAAAkC,eAAAnC,GACA//D,EAAA4D,gBACA1pC,KAAA,WACAilC,MAAA6gE,EAAAkC,eAIAnC,IACA//D,EAAA4D,gBACA1pC,KAAA,YACAilC,MAAA+iE,IAEAlC,EAAAkC,gBAGAliE,EAAA4D,gBACA1pC,KAAA,UACA+sC,gBAAAi7D,EAAAH,GAAA96D,gBACA8B,YAAAm5D,EAAAH,GAAAh5D,YACA/gC,KAAA1L,KAAAykD,MAGAiiC,GAAAgf,EAAArxF,IAAA,gBAAAqxF,EAAArxF,IAAA,SACA,GAAA+nC,GAAA/1B,EAAAjD,IAAAoiF,EAAA,SAAAjgE,EAAAtD,GACA,MAAAsD,GAAAmH,cAAAk5D,EAAA3jE,GAAA0I,kBAGA,IAAA84D,EAwBA1C,EACAC,GAAA0E,EAAArxF,IAAA,YACAiX,EAAA,GAAAA,EAAA,GACAo6E,EAAArxF,IAAA,WACArU,KAAAohG,gBAAAhlD,EAAA,KAAA1Y,OA5BA,CAEA,GAAAmiE,GAAAD,EAAAH,GAAA96D,gBAMAm7D,EAAA,SAAApf,EAAA9oF,KACA8oF,EAAAvhF,MAAA49D,SAAApgD,EAAAgjF,IACAH,EAAAC,GAAAhgE,UAAAsZ,QAAA8mD,GACA9C,GAAA+C,IAAA,aACAz/E,EAAAjD,IAAAoiF,EAAA,SAAAjgE,EAAAtD,GACA,MAAAsD,GAAAka,cAAAmmD,EAAA3jE,GAAA0I,iBAAA,KACyBviC,KAAA,UAEzB46F,EAAA,QAAAzhE,EAAAhhC,KAAA,IAAAslG,CAEA7lG,MAAAijG,oBACAyC,EAAA3C,EAAA3mD,EAAA4mD,EACA13E,EAAA,GAAAA,EAAA,GAAA01E,EAAA,KAAAt9D,MAqBAm/D,wBAAA,SAAA7gE,EAAA6I,EAAA8B,EAAA56B,GAEA,GAAA2xB,GAAA1jC,KAAAogC,KACA5hB,EAAAwjB,EAAAyD,QAAAkH,GACA2S,EAAA9gC,EAAA+gC,aAAA1U,GAEA+oD,EAAAt0C,EAAAjrC,IAAA,aACA,oBAAAu/E,GAAA,CAMA,GAAAuN,GAAAvN,CACAA,IACAp0C,UAAA2hD,GAGA,GAAAuE,GAAA1lG,KAAAuhG,cACAwE,EAAA/jE,EAAAkH,SACA,UAAAw8D,GAEA5J,EAAA,GAAA5sD,GAAA0kD,EAAAmS,IAAA9kE,SAEAqL,EAAAtK,EAAA0K,cAAA7B,EAAA8B,GACAo2D,EAAA/gE,EAAAyd,cAAA5U,GAAA,EAAA8B,GAEAq2D,EAAA,QAAAhhE,EAAAzhC,KAAA,IAAAsqC,CAEA7qC,MAAAijG,oBACAnH,EAAAiH,EAAAz2D,EAAA02D,EACAjxF,EAAAjU,QAAAiU,EAAA/T,QAAA+T,EAAApO,SAAAoO,EAAArU,OAAAgmC,IAIAu/D,oBAAA,SACAnH,EAAAiH,EAAAz2D,EAAA02D,EAAApkG,EAAAC,EAAAmiG,EAAAtjG,EAAAgmC,GAKA,GAFA1jC,KAAA0iG,QAAA,GAEA5G,EAAAznF,IAAA,gBAAAynF,EAAAznF,IAAA,SACA,GAAA8sF,GAAAnhG,KAAAohG,gBACA3B,EAAA3D,EAAAznF,IAAA,WAEAmrC,EAAAs8C,EAAAznF,IAAA,YACA2sF,MAAAlF,EAAAznF,IAAA,WACA,IAAA2xF,GAAAjD,CAEA,IAAAvjD,EACA,mBAAAA,GACAwmD,EAAA1qD,EAAAY,UAAAsD,EAAAlT,OAEA,sBAAAkT,GAAA,CACA,GAAAjzC,GAAAvM,KACAimG,EAAAjD,EACArxE,EAAA,SAAAu0E,EAAAF,GACAE,IAAA35F,EAAAm2F,UACAvB,EAAAhC,WAAA6G,GAEAjF,EACAC,EAAApiG,EAAAC,EAAA4gG,EACA0B,EAAA70D,EAAA5uC,EAAAgmC,IAIAn3B,GAAAm2F,QAAAuD,EACAD,EAAAxmD,EAAAlT,EAAA25D,EAAAt0E,GAIAwvE,EAAA/oB,KAAA0jB,GACAqF,EAAAhC,WAAA6G,GAEAjF,EACAC,EAAApiG,EAAAC,EAAA4gG,EACA0B,EAAA70D,EAAA5uC,EAAAgmC,KASA0/D,iBAAA,SAAA/f,GACA,GAAAA,EAAA,CACA,GAAA8hB,GAAAnlG,KAAAkhG,cAAA7d,EACA8hB,IAAA9+E,EAAA/lB,KAAA6kG,EAAA,SAAApmG,GACAA,EAAAq5E,aAIAp4E,MAAA0/B,MAAAgoB,UAAA,SAAAh0C,GACAA,EAAA0kE,SAEAp4E,KAAA0/B,MAAA04C,QAIAwqB,gBAAA,WACA,GAAAc,GAAA1jG,KAAAyhG,UACAiC,GAAAkC,cACA5lG,KAAAogC,KAAAkH,gBACA1pC,KAAA,WACAilC,MAAA6gE,EAAAkC,eAIA5lG,KAAAyhG,eAMAkB,iBAAA,SAAAtf,GACA,GAAAA,EAAA,CACA,GAAA8hB,GAAAnlG,KAAAkhG,cAAA7d,EACA8hB,IAAA9+E,EAAA/lB,KAAA6kG,EAAA,SAAApmG,GACAA,EAAAo5E,aAIAn4E,MAAA0/B,MAAAlsB,WAAAhR,QACAxC,KAAA0/B,MAAAy4C,QAKA+pB,MAAA,WACAz8E,aAAAzlB,KAAAmiG,cAEAniG,KAAA2iG,mBACA3iG,KAAA4iG,kBACA5iG,KAAA0hG,oBACA1hG,KAAAohG,gBAAArC,UAAA/+F,KAAAuhG,cAAAltF,IAAA,cAGArU,KAAAogC,KAAAkH,gBACA1pC,KAAA,UACA8N,KAAA1L,KAAAykD,MAGAzkD,KAAAI,OAAAJ,KAAAK,OAAA,MAGAb,QAAA,SAAAyhC,EAAAyC,GACA,IAAArxB,EAAA2mB,KAAA,CAGA,GAAA7H,GAAAuS,EAAA8E,OACAxoC,MAAAohG,gBAAAjpB,OAEAhnD,EAAAiF,IAAA,QAAAp2B,KAAAgiG,UACA7wE,EAAAiF,IAAA,YAAAp2B,KAAAiiG,YACA9wE,EAAAiF,IAAA,WAAAp2B,KAAAkiG,OACA/wE,EAAAiF,IAAA,YAAAp2B,KAAAkiG,OAEAx+D,EAAAtN,IAAA,UAAAp2B,KAAAqhG,kBACA39D,EAAAtN,IAAA,UAAAp2B,KAAAshG,uB1Im02BM6E,IACA,SAAStpG,EAAQC,QAASE,G2Ili5BhC,QAAAopG,GAAA9jC,EAAA+jC,GACA,GAAAjoC,GAAAkE,EAAA,GAAAA,EAAA,GACA32D,EAAA06F,EACA39C,EAAA0V,EAAAzyD,EAAA,CACA22D,GAAA,IAAA5Z,EACA4Z,EAAA,IAAA5Z,EATA,GAAArN,GAAAr+C,EAAA,KACAk5C,EAAAmF,EAAAnF,UACA7vB,EAAArpB,EAAA,KAUAspG,GAAA,KAKAC,EAAA,SAAAxqC,EAAA52D,EAAAm9D,GAMAtiE,KAAA+7D,MAMA/7D,KAAAmF,QAMAnF,KAAA69D,QAAAyE,IAAA,KAKAtiE,KAAAioF,SAAA,EAMAjoF,KAAAqmF,QAAA,EAGAkgB,GAAAhnG,WAEAkB,YAAA8lG,EAOArnG,QAAA,SAAAozE,GACA,GAAAhQ,GAAAtiE,KAAA69D,QACA/vD,EAAAD,KAAAC,IAAAw0D,EAAA,GAAAA,EAAA,IACAryD,EAAApC,KAAAoC,IAAAqyD,EAAA,GAAAA,EAAA,GACA,OAAAgQ,IAAAxkE,GAAAwkE,GAAAriE,GAQAu2F,YAAA,SAAAhoF,GACA,MAAAxe,MAAAd,QAAAc,KAAAipF,YAAAzqE,KAOAgkD,UAAA,WACA,GAAAh2C,GAAAxsB,KAAA69D,QAAAvqD,OACA,OAAAkZ,IAQA0qB,kBAAA,SAAAC,GACA,MAAAkE,GAAAnE,kBACAC,GAAAn3C,KAAAmF,MAAAq9D,YACAxiE,KAAA69D,UASA4E,UAAA,SAAAlsD,EAAAuN,GACA,GAAAw+C,GAAAtiE,KAAA69D,OACAyE,GAAA,GAAA/rD,EACA+rD,EAAA,GAAAx+C,GASAmlE,YAAA,SAAAzqE,EAAA63B,GACA,GAAAisB,GAAAtiE,KAAA69D,QACA14D,EAAAnF,KAAAmF,KAQA,OAPAqZ,GAAArZ,EAAA4qB,UAAAvR,GAEAxe,KAAAqmF,QAAA,YAAAlhF,EAAAvH,OACA0kE,IAAAhvD,QACA8yF,EAAA9jC,EAAAn9D,EAAAysB,UAGAskB,EAAA13B,EAAA8nF,EAAAhkC,EAAAjsB,IASAowD,YAAA,SAAAn0B,EAAAj8B,GACA,GAAAisB,GAAAtiE,KAAA69D,QACA14D,EAAAnF,KAAAmF,KAEAnF,MAAAqmF,QAAA,YAAAlhF,EAAAvH,OACA0kE,IAAAhvD,QACA8yF,EAAA9jC,EAAAn9D,EAAAysB,SAGA,IAAAlU,GAAAw4B,EAAAo8B,EAAAhQ,EAAAgkC,EAAAjwD,EAEA,OAAAr2C,MAAAmF,YAAAuY,IAKAo3E,eAAA,SAAA4R,GACA,GAAA1mG,KAAAqmF,SAAAqgB,EAAA,CAGA,OAFAC,GAAA3mG,KAAA4mG,WACAC,KACA3pG,EAAA,EAA+BA,EAAAypG,EAAAnkG,OAAkBtF,IACjD2pG,EAAAh9F,KAAA88F,EAAAzpG,GAAA,GAKA,OAHAypG,GAAAzpG,EAAA,IACA2pG,EAAAh9F,KAAA88F,EAAAzpG,EAAA,OAEA2pG,EAGA,MAAAxgF,GAAAjD,IAAApjB,KAAAmF,MAAA29D,WAAA9iE,KAAAipF,YAAAjpF,OAQA8mG,gBAAA,WACA,MAAAzgF,GAAAjD,IAAApjB,KAAAmF,MAAA29D,WAAA9iE,KAAAipF,YAAAjpF,OAYA4mG,SAAA,WAQA,OAPAtkC,GAAAtiE,KAAAwiE,YACAmkC,KACAh7F,EAAA3L,KAAAmF,MAAAysB,QACArb,EAAA+rD,EAAA,GACAx+C,EAAAw+C,EAAA,GACAiG,EAAAzkD,EAAAvN,EAEArZ,EAAA,EAA2BA,EAAAyO,EAASzO,IACpCypG,EAAA98F,MACA0+D,EAAArrE,EAAAyO,EAAA4K,EACAgyD,GAAArrE,EAAA,GAAAyO,EAAA4K,GAGA,OAAAowF,IAOApgB,aAAA,WACA,GAAAwgB,GAAA/mG,KAAA69D,QACA1mB,EAAAn3C,KAAAmF,MAAAq9D,YAEA72D,EAAAwrC,EAAA,GAAAA,EAAA,IAAAn3C,KAAAqmF,OAAA,IAEA,KAAA16E,MAAA,EAEA,IAAAyyD,GAAAvwD,KAAA8N,IAAAorF,EAAA,GAAAA,EAAA,GAEA,OAAAl5F,MAAA8N,IAAAyiD,GAAAzyD,IAIA9O,EAAAC,QAAAypG,G3I+i5BMS,IACA,SAASnqG,EAAQC,QAASE,G4Ixw5BhC,GAAAqpB,GAAArpB,EAAA,KAEAunD,GACA6zB,MAAA,EACA1qE,OAAA,EACA/C,EAAA,EAEAs9E,SAAA,EAGA1nF,KAAA,GAEA61F,aAAA,MAEA6Q,WAAA,KACAC,cACA3/C,SAAA,KACAsD,SAAA,MACAK,YAAA,KAGAi8C,iBAEAC,QAAA,GAEApoG,QAAA,EACAw2F,cAAA,EAEAqB,SACAze,MAAA,GAIA8G,UAEA9G,MAAA,EACA0O,QAAA,EAEA3H,WACA9vC,MAAA,OACAhsC,MAAA,EACAzF,KAAA,UAIAyhF,UAEAjH,MAAA,EAEAivB,QAAA,EAEA7kG,OAAA,EAEA28E,WACA97E,MAAA,IAIAi8E,WACAlH,MAAA,EAEAivB,QAAA,EACA74E,OAAA,EACAk6B,OAAA,EAGAvU,WACAurC,SAAA,KAIAN,WAEAhH,MAAA,EAEA+G,WACA9vC,OAAA,QACAhsC,MAAA,EACAzF,KAAA,UAIA0pG,WAEAlvB,MAAA,EAEA2gB,WACA1pD,OAAA,oDAKAk8C,EAAAllE,EAAAxX,OAEA+5D,aAAA,EAIAwW,WACAhH,MAAA,GAGAiH,UAGAqnB,gBAAA,EACAruD,SAAA,QAGAinC,WACAjnC,SAAA,SAEKkM,GAELoiC,EAAAtgE,EAAAxX,OAEA+5D,aAAA,KAYAI,YAAA,GAGKzkB,GAGLgjD,EAAAlhF,EAAAyV,UACA32B,OAAA,EACA2I,IAAA,UACAmC,IAAA,WACK02E,GACL6gB,EAAAnhF,EAAAyV,UACA2rE,QAAA,IACK9gB,EACL6gB,GAAAriG,OAAA,EAEAtI,EAAAC,SACAyuF,eACA5E,YACA4gB,WACAC,Y5Ikx5BME,IACA,SAAS7qG,EAAQC,QAASE,G6Ip65BhC,QAAA+hD,GAAAhlB,GACA,MAAA1T,GAAAhiB,SAAA01B,IAAA,MAAAA,EAAApX,MACAoX,EAAApX,MAGAoX,EAMA,QAAA0vC,KACA,mBAAAzpE,KAAAqU,IAAA,SACAgS,EAAAjD,IAAApjB,KAAAqU,IAAA,QAAA0qC,GAOA,QAAAmrB,KACA,MAAA/B,GAAA+B,mBACAlqE,KAAAqoE,KACAroE,KAAAqU,IAAA,wBA1BA,GAAAgS,GAAArpB,EAAA,KACAmrE,EAAAnrE,EAAA,IA6BAH,GAAAC,SAEAotE,qBAEAT,kB7Ii75BMk+B,IACA,SAAS9qG,EAAQC,QAASE,G8Ip95BhC,GAAA4qG,GAAA5qG,EAAA,KACAqpB,EAAArpB,EAAA,KACA2nC,EAAA3nC,EAAA,KACAi2C,EAAAj2C,EAAA,KAGA6qG,GAAA,gCASAhrG,GAAAC,QAAA,SAAAq5F,EAAA2R,EAAAC,EAAAC,GAEA3hF,EAAA/lB,KAAAunG,EAAA,SAAAr+B,GAEAs+B,EAAA7+F,QAEArL,KAAAu4F,EAAA,QAAA3sB,EAEA1kB,qBAAA,SAAApc,EAAAzH,GACA,GAAAyjB,GAAA1kD,KAAA0kD,WACAK,EAAAL,EACAzR,EAAA+R,gBAAAtc,MAEAuc,EAAAhkB,EAAAikB,UACA7+B,GAAAxX,MAAA65B,EAAAuc,EAAA5wC,IAAAm1D,EAAA,SACAnjD,EAAAxX,MAAA65B,EAAA1oC,KAAAmlD,oBAEAzc,EAAA9qC,KAAAmqG,EAAA5R,EAAAztD,GAEAgc,GACAzR,EAAAmS,iBAAA1c,EAAAqc,EAAAL,IAIAH,cAAAl+B,EAAAuV,aAGAgsE,EAAAp+B,EAAA,QACAw+B,IAEA,OAKArjE,EAAAkoC,yBACAspB,EAAA,OACA9vE,EAAA+W,MAAA2qE,EAAA5R,M9I+95BM8R,IACA,SAASprG,EAAQC,S+Iph6BvBD,EAAAC,SAMA0rE,OAAA,WACA,GAAA9/B,GAAA1oC,KAAA0oC,OACA56B,EAAA,MAAA46B,EAAAw/D,WAAAx/D,EAAAw/D,WAAAx/D,EAAA56B,GAMA,OAHAA,aAAAlB,QACAkB,MAEAA,GAOA26D,OAAA,WACA,GAAA//B,GAAA1oC,KAAA0oC,OACAz4B,EAAA,MAAAy4B,EAAAy/D,SAAAz/D,EAAAy/D,SAAAz/D,EAAAz4B,GAMA,OAHAA,aAAArD,QACAqD,MAEAA,GAOA04D,iBAAA,WACA,GAAAjgC,GAAA1oC,KAAA0oC,MACA,cAAAA,EAAAw/D,YAAA,MAAAx/D,EAAAy/D,WACAz/D,EAAAvjC,OAQAijG,SAAA,SAAAF,EAAAC,GACAnoG,KAAA0oC,OAAAw/D,aACAloG,KAAA0oC,OAAAy/D,YAMA3yB,WAAA,WAEAx1E,KAAA0oC,OAAAw/D,WAAAloG,KAAA0oC,OAAAy/D,SAAA,Q/Igi6BME,IACA,SAASxrG,EAAQC,QAASE,GgJ1l6BhC,GAAAqpB,GAAArpB,EAAA,KACAupG,EAAAvpG,EAAA,KACAsrG,EAAAtrG,EAAA,KAYAurG,EAAA,SAAAxsC,EAAA52D,EAAAqjG,EAAAh/B,EAAA7lE,GACA4iG,EAAAxmG,KAAAC,KAAA+7D,EAAA52D,EAAAqjG,GASAxoG,KAAApC,KAAA4rE,GAAA,QASAxpE,KAAA2D,YAAA,SAGA4kG,GAAAhpG,WAEAkB,YAAA8nG,EAKAtmE,MAAA,EAKA6kD,QAAA,EAMAviD,MAAA,KAEAkjD,aAAA,WACA,GAAA9jF,GAAA3D,KAAA2D,QACA,eAAAA,GAAA,WAAAA,GAGAyiF,gBAAA,WACA,GAAA55D,GAAAxsB,KAAAwiE,WAGA,OAFAh2C,GAAA,GAAAxsB,KAAAgpF,cAAAx8D,EAAA,IACAA,EAAA,GAAAxsB,KAAAgpF,cAAAx8D,EAAA,IACAA,GAMAorE,iBAAA,WACA,GAAAhD,GAAA50F,KAAAyoG,cAIA,OAHA7T,KACAA,EAAA50F,KAAAyoG,eAAAH,EAAAtoG,OAEA40F,GASAnJ,eAAA,SAAAngF,GACA,gBAAAtL,KAAApC,KAAA,CACA,GAAAg3F,GAAA50F,KAAA43F,kBACA,yBAAAhD,KACAA,EAAAtpF,EAAAtL,KAAAmF,MAAA49D,SAAAz3D,KACAA,GAAAspF,EAAA,KAUA8T,aAAA,KAQA1f,cAAA,MAGA3iE,EAAAgC,SAAAkgF,EAAAhC,GAEA1pG,EAAAC,QAAAyrG,GhJmm6BMI,IACA,SAAS9rG,EAAQC,QAASE,GAEhC,YiJ/s6BA,SAAA4rG,GAAA7sC,GACA,MAAA/7D,MAAA6oG,MAAA9sC,GAHA,GAAA11C,GAAArpB,EAAA,KAUA8rG,EAAA,SAAAvoG,GACAP,KAAA6oG,SAEA7oG,KAAA+oG,YAKA/oG,KAAAO,QAAA,GAGAuoG,GAAAvpG,WAEAkB,YAAAqoG,EAEAlrG,KAAA,YAOA2pF,QAAA,SAAAxrB,GACA,MAAA/7D,MAAA6oG,MAAA9sC,IAOAitC,QAAA,WACA,MAAA3iF,GAAAjD,IAAApjB,KAAA+oG,SAAAH,EAAA5oG,OAMAwrF,eAAA,SAAAyd,GAEA,MADAA,KAAA9pE,cACA9Y,EAAAyW,OACA98B,KAAAgpG,UACA,SAAA3gC,GACA,MAAAA,GAAAljE,MAAAvH,OAAAqrG,KASAC,QAAA,SAAA7gC,GACA,GAAAtM,GAAAsM,EAAAtM,GAEA/7D,MAAA6oG,MAAA9sC,GAAAsM,EAEAroE,KAAA+oG,SAAAl/F,KAAAkyD,IAQAktB,YAAA,SAAA1iF,GACA,MAAAvG,MAAAmpG,kBAAA5iG,EAAA,gBAQAkgG,YAAA,SAAAlgG,GACA,MAAAvG,MAAAmpG,kBAAA5iG,EAAA,gBAGA4iG,kBAAA,SAAAC,EAAAlqE,GAKA,OAJAmqE,GAAArpG,KAAA+oG,SAEAO,EAAAF,YAAAn1F,aAEA/W,EAAA,EAA2BA,EAAAmsG,EAAA7mG,OAAoBtF,IAAA,CAC/C,GAAA6+D,GAAAstC,EAAAnsG,GACAmrE,EAAAroE,KAAA6oG,MAAA9sC,EAEAutC,GAAAvtC,GAAAsM,EAAAnpC,GAAAkqE,EAAArtC,IAGA,MAAAutC,KAIAzsG,EAAAC,QAAAgsG,GjJ+t6BMS,IACA,SAAS1sG,EAAQC,QAASE,GAEhC,YkJ306BA,SAAAwsG,GAAAjpG,GAEAuoG,EAAA/oG,KAAAC,KAAAO,GALA,GAAA8lB,GAAArpB,EAAA,KACA8rG,EAAA9rG,EAAA,IAOAwsG,GAAAjqG,WAEAkB,YAAA+oG,EAEA5rG,KAAA,cAMAy9D,YAAA,SAOAgQ,YAAA,WACA,MAAArrE,MAAAwrF,eAAA,eACAxrF,KAAAwrF,eAAA,YACAxrF,KAAAunF,QAAA,MAQAh9C,aAAA,SAAAjf,GACA,GAAAm+E,GAAAzpG,KAAAunF,QAAA,KACAmiB,EAAA1pG,KAAAunF,QAAA,IACA,OAAAkiB,GAAAvqG,QAAAuqG,EAAAf,aAAAp9E,EAAA,MACAo+E,EAAAxqG,QAAAwqG,EAAAhB,aAAAp9E,EAAA,MAQAk7E,YAAA,SAAAhoF,GACA,MAAAxe,MAAAunF,QAAA,KAAAif,YAAAhoF,EAAA,KACAxe,KAAAunF,QAAA,KAAAif,YAAAhoF,EAAA,KAWAmrF,aAAA,SAAAnrF,EAAAgnB,GACA,MAAAhnB,GAAAuhD,UAAA,kBAAAnhE,EAAAC,GACA,MAAAmB,MAAAknF,aAAAtoF,EAAAC,KACa2mC,EAAAxlC,OAQbknF,YAAA,SAAA1oE,EAAA63B,GACA,GAAA4iD,GAAAj5F,KAAAunF,QAAA,KACA2R,EAAAl5F,KAAAunF,QAAA,IACA,QACA0R,EAAAjQ,cAAAiQ,EAAAhQ,YAAAzqE,EAAA,GAAA63B,IACA6iD,EAAAlQ,cAAAkQ,EAAAjQ,YAAAzqE,EAAA,GAAA63B,MASAmtD,YAAA,SAAAl4E,EAAA+qB,GACA,GAAA4iD,GAAAj5F,KAAAunF,QAAA,KACA2R,EAAAl5F,KAAAunF,QAAA,IACA,QACA0R,EAAAwN,YAAAxN,EAAAyP,aAAAp9E,EAAA,IAAA+qB,GACA6iD,EAAAuN,YAAAvN,EAAAwP,aAAAp9E,EAAA,IAAA+qB,KAQAuwC,aAAA,SAAAve,GACA,MAAAroE,MAAAunF,QAAA,MAAAlf,EAAAtM,IAAA,WAIA11C,EAAAgC,SAAAmhF,EAAAV,GAEAjsG,EAAAC,QAAA0sG,GlJu16BMI,IACA,SAAS/sG,EAAQC,QAASE,GmJ366BhC,QAAA6sG,GAAAvW,EAAA2D,EAAAh2D,GACA,MAAAqyD,GAAA7d,kBAAAwhB,EAGA,QAAA6S,GAAAzhC,GACA,GAGAn/C,GAHAoqE,EAAAjrB,EAAA9jC,MACAq+B,EAAA0wB,EAAAppB,qBACA31B,EAAA++C,EAAApqD,SAAA,uBAEA78B,EAAA,EACA09F,EAAAnnC,EAAApgE,MACAunG,GAAA,KAEA19F,EAAAwB,KAAAyjD,KAAAy4C,EAAA,IAEA,QAAA7sG,GAAA,EAAuBA,EAAA6sG,EAAgB7sG,GAAAmP,EACvC,IAAAg8D,EAAAojB,eAAAvuF,GAAA,CACA,GAAA8sG,GAAAz1D,EAAAkW,YAAAmY,EAAA1lE,GAEAgsB,KAAAy4B,MAAAqoD,GAAA9gF,EAAA8gF,EAGA,MAAA9gF,GAGA,QAAA+gF,GAAAhT,EAAAh2D,EAAAyC,GAKA1jC,KAAAkqG,cAMAlqG,KAAAmqG,eAMAnqG,KAAAoqG,YAMApqG,KAAAqqG,aAEArqG,KAAAsqG,eAAArT,EAAAh2D,EAAAyC,GAEA1jC,KAAAkhC,OAAA+1D,EA6XA,QAAAsT,GAAAliC,EAAAmiC,GACA,GAAAzD,GAAA1+B,EAAA7F,YACAioC,EAAA1D,EAAA,GAAAA,EAAA,EAGA1+B,GAAA2gB,cAAA,MAAA3gB,EAAAtM,IACA,SAAAuW,GACA,MAAAA,GAAAk4B,GAEA,SAAAl4B,GACA,MAAAm4B,GAAAn4B,EAAAk4B,GAEAniC,EAAAqgC,aAAA,MAAArgC,EAAAtM,IACA,SAAAuW,GACA,MAAAA,GAAAk4B,GAEA,SAAAl4B,GACA,MAAAm4B,GAAAn4B,EAAAk4B,GAQA,QAAAE,GAAA1oE,EAAAf,GACA,MAAA5a,GAAAjD,IAAAunF,EAAA,SAAAnhC,GACA,GAAA8pB,GAAAtxD,EAAA2jB,uBAAA6jB,GAAA,EAEA,IAAAhoC,UACA8xD,EACA,SAAAx6D,OAAA0wC,EAAA,KAAAnjD,EAAAiX,SACA0E,EAAA3tB,IAAAm1D,EAAA,SACAxnC,EAAA3tB,IAAAm1D,EAAA,MACA,GACA,cAGA,OAAA8pB,KAOA,QAAAsX,GAAA5oE,GACA,sBAAAA,EAAA3tB,IAAA,oBApfA,GAEA4+B,GAAAj2C,EAAA,KACAmrE,EAAAnrE,EAAA,KAEAqpB,EAAArpB,EAAA,KACAwsG,EAAAxsG,EAAA,KACAurG,EAAAvrG,EAAA,KAEAsD,EAAA+lB,EAAA/lB,KAEAopE,EAAAvB,EAAAuB,gBACAX,EAAAZ,EAAAY,eAGA/rE,GAAA,IA6DA,IAAA6tG,GAAAZ,EAAA1qG,SAEAsrG,GAAAjtG,KAAA,OAEAitG,EAAAtT,QAAA,WACA,MAAAv3F,MAAA2pB,OAGAkhF,EAAAh4F,OAAA,SAAAouB,EAAAyC,GAMA,QAAAonE,GAAAC,GACA,GAAAC,GAAAC,EAAAF,EACA,QAAAz/F,KAAA0/F,GACA,GAAAA,EAAAx6F,eAAAlF,GAAA,CACA,GAAA+8D,GAAA2iC,EAAA1/F,EACA,IAAA+8D,IAAA,aAAAA,EAAAzqE,OAAA8rE,EAAArB,IACA,SAIA,SAdA,GAAA4iC,GAAAjrG,KAAAoqG,QAEApqG,MAAAkrG,aAAAjqE,EAAAjhC,KAAAkhC,QAeA5gC,EAAA2qG,EAAArsG,EAAA,SAAAq6F,GACAlwB,EAAAkwB,IAAA10D,SAEAjkC,EAAA2qG,EAAApsG,EAAA,SAAAq6F,GACAnwB,EAAAmwB,IAAA30D,SAGAjkC,EAAA2qG,EAAArsG,EAAA,SAAAq6F,GAIA6R,EAAA,OACA7R,EAAAnS,QAAA,KAGAxmF,EAAA2qG,EAAApsG,EAAA,SAAAq6F,GACA4R,EAAA,OACA5R,EAAApS,QAAA,KAMA9mF,KAAA0B,OAAA1B,KAAAkhC,OAAAwC,IAQAmnE,EAAAnpG,OAAA,SAAAu1F,EAAAvzD,GAoCA,QAAAynE,KACA7qG,EAAA8qG,EAAA,SAAA/iC,GACA,GAAAof,GAAApf,EAAAof,eACAnlB,EAAAmlB,GAAA,EAAA6Q,EAAAj1F,QAAA,EAAAi1F,EAAA/0F,QACA+H,EAAA+8D,EAAA4f,QAAA,GACA5f,GAAA5F,UAAAH,EAAAh3D,GAAAg3D,EAAA,EAAAh3D,IACAi/F,EAAAliC,EAAAof,EAAA6Q,EAAA15F,EAAA05F,EAAAz5F,KAxCA,GAAAy5F,GAAArlD,EAAA4V,cACAouC,EAAAoC,sBACAh2F,MAAAqgC,EAAApgC,WACAC,OAAAmgC,EAAAlgC,aAGAxD,MAAA2pB,MAAA2uE,CAEA,IAAA8S,GAAAprG,KAAAqqG,SAEAc,KAGAlU,EAAA5iF,IAAA,kBACA/T,EAAA8qG,EAAA,SAAA/iC,GACA,IAAAA,EAAA9jC,MAAAlwB,IAAA,qBACA,GAAAg3F,GAAAvB,EAAAzhC,EACA,IAAAgjC,EAAA,CACA,GAAAtvC,GAAAsM,EAAAof,eAAA,iBACA/+B,EAAA2f,EAAA9jC,MAAAlwB,IAAA,mBACAikF,GAAAv8B,IAAAsvC,EAAAtvC,GAAArT,EACA,QAAA2f,EAAA1kE,SACA20F,EAAAz5F,GAAAwsG,EAAA9nG,OAAAmlD,EAEA,SAAA2f,EAAA1kE,WACA20F,EAAA15F,GAAAysG,EAAAhoG,MAAAqlD,OAMAyiD,MAkBAN,EAAAtjB,QAAA,SAAA/d,EAAA8hC,GACA,GAAAC,GAAAvrG,KAAAoqG,SAAA5gC,EACA,UAAA+hC,EAAA,CACA,SAAAD,EAEA,OAAA/qG,KAAAgrG,GACA,GAAAA,EAAA/6F,eAAAjQ,GACA,MAAAgrG,GAAAhrG,EAIA,OAAAgrG,GAAAD,KAIAT,EAAAW,aAAA,SAAAC,EAAAC,GACA,SAAAD,GAAA,MAAAC,EAAA,CACA,GAAAvoF,GAAA,IAAAsoF,EAAA,IAAAC,CACA,OAAA1rG,MAAAkqG,WAAA/mF,GAIA,OAAAjmB,GAAA,EAAAyuG,EAAA3rG,KAAAmqG,YAAyDjtG,EAAAyuG,EAAAnpG,OAAsBtF,IAC/E,GAAAyuG,EAAAzuG,GAAAqqF,QAAA,KAAAtlD,QAAAwpE,GACAE,EAAAzuG,GAAAqqF,QAAA,KAAAtlD,QAAAypE,EAEA,MAAAC,GAAAzuG,IAUA2tG,EAAA3gE,eAAA,SAAAjJ,EAAAD,EAAAre,GACA,GAAAjlB,GAAAsC,KAAA4rG,mBAAA3qE,EAAAD,EAEA,OAAAtjC,GAAA0pF,UACA1pF,EAAA0pF,UAAAF,YAAAvkE,GACAjlB,EAAA2qE,KACA3qE,EAAA2qE,KAAA2gB,cAAAtrF,EAAA2qE,KAAA4gB,YAAAtmE,IACA,MAOAkoF,EAAA1gE,iBAAA,SAAAlJ,EAAAD,EAAAre,GACA,GAAAjlB,GAAAsC,KAAA4rG,mBAAA3qE,EAAAD,EAEA,OAAAtjC,GAAA0pF,UACA1pF,EAAA0pF,UAAAoc,YAAA7gF,GACAjlB,EAAA2qE,KACA3qE,EAAA2qE,KAAAo+B,YAAA/oG,EAAA2qE,KAAAqgC,aAAA/lF,IACA,MAMAkoF,EAAAe,mBAAA,SAAA3qE,EAAAD,GACA,GAOAomD,GACA/e,EARArmC,EAAAhB,EAAAgB,YACAoiD,EAAApjD,EAAAojD,YACApiD,KAAA2jB,uBAAA,YACA0+B,EAAArjD,EAAAqjD,YACAriD,KAAA2jB,uBAAA,YACAsxC,EAAAj2D,EAAAi2D,UACA4U,EAAA7rG,KAAAmqG,WAIA,IAAAnoE,EACAolD,EAAAplD,EAAAsI,iBACAjkB,EAAA9a,QAAAsgG,EAAAzkB,GAAA,IAAAA,EAAA,UAEA,IAAAhD,GAAAC,EACA+C,EAAApnF,KAAAwrG,aAAApnB,EAAA9/B,eAAA+/B,EAAA//B,oBAEA,IAAA8/B,EACA/b,EAAAroE,KAAAunF,QAAA,IAAAnD,EAAA9/B,oBAEA,IAAA+/B,EACAhc,EAAAroE,KAAAunF,QAAA,IAAAlD,EAAA//B,oBAGA,IAAA2yC,EAAA,CACA,GAAAG,GAAAH,EAAA3sD,gBACA8sD,KAAAp3F,OACAonF,EAAApnF,KAAAmqG,YAAA,IAIA,OAAgB/iB,YAAA/e,SAOhBwiC,EAAAtgE,aAAA,SAAAjf,GACA,GAAAgnD,GAAAtyE,KAAAmqG,YAAA,EACA,IAAA73B,EACA,MAAAA,GAAA/nC,aAAAjf,IAQAu/E,EAAAP,eAAA,SAAArT,EAAAh2D,EAAAyC,GA8CA,QAAAooE,GAAAtiC,GACA,gBAAA8pB,EAAAhoF,GACA,GAAAu+F,EAAAvW,EAAA2D,EAAAh2D,GAAA,CAIA,GAAAq2D,GAAAhE,EAAAj/E,IAAA,WACA,OAAAm1D,EAEA,QAAA8tB,GAAA,WAAAA,IAEAA,EAAA,SACAyU,EAAAzU,KACAA,EAAA,QAAAA,EAAA,iBAMA,SAAAA,GAAA,UAAAA,IAEAA,EAAA,OACAyU,EAAAzU,KACAA,EAAA,SAAAA,EAAA,iBAIAyU,EAAAzU,IAAA,CAEA,IAAAjvB,GAAA,GAAAkgC,GACA/+B,EAAArB,EAAAoB,mBAAA+pB,IACA,KACAA,EAAAj/E,IAAA,QACAijF,GAGA0U,EAAA,aAAA3jC,EAAAzqE,IACAyqE,GAAAge,OAAA2lB,GAAA1Y,EAAAj/E,IAAA,eACAg0D,EAAA4f,QAAAqL,EAAAj/E,IAAA,WAEAg0D,EAAAye,OAAAwM,EAAAj/E,IAAA,mBAGAi/E,EAAAjrB,OAGAA,EAAA9jC,MAAA+uD,EAGAjrB,EAAA+uB,KAAAp3F,KAGAqoE,EAAApmC,MAAA32B,EAEAtL,KAAAqqG,UAAAxgG,KAAAw+D,GAEA4iC,EAAAzhC,GAAAl+D,GAAA+8D,EACA4jC,EAAAziC,OAtGA,GAAAuiC,IACAnoG,MAAA,EACAqgB,OAAA,EACApgB,KAAA,EACAqgB,QAAA,GAGA+mF,GACArsG,KACAC,MAEAotG,GACArtG,EAAA,EACAC,EAAA,EAOA,OAHAoiC,GAAAY,cAAA,QAAAiqE,EAAA,KAAA9rG,MACAihC,EAAAY,cAAA,QAAAiqE,EAAA,KAAA9rG,MAEAisG,EAAArtG,GAAAqtG,EAAAptG,GAOAmB,KAAAoqG,SAAAa,MAGA3qG,GAAA2qG,EAAArsG,EAAA,SAAAq6F,EAAAwS,GACAnrG,EAAA2qG,EAAApsG,EAAA,SAAAq6F,EAAAwS,GACA,GAAAvoF,GAAA,IAAAsoF,EAAA,IAAAC,EACAtkB,EAAA,GAAAoiB,GAAArmF,EAEAikE,GAAAgQ,KAAAp3F,KAEAA,KAAAkqG,WAAA/mF,GAAAikE,EACApnF,KAAAmqG,YAAAtgG,KAAAu9E,GAEAA,EAAA8hB,QAAAjQ,GACA7R,EAAA8hB,QAAAhQ,IACal5F,OACJA,QArBTA,KAAAoqG,iBACApqG,KAAAqqG,gBAyFAQ,EAAAK,aAAA,SAAAjqE,EAAAg2D,GA+BA,QAAA10B,GAAA/jD,EAAA6pD,EAAArmC,GACA1hC,EAAA0hC,EAAAipC,kBAAA5C,EAAAtM,KAAA,SAAAA,GACAsM,EAAAljE,MAAAo9D,YAAA/jD,EAAAqgD,cACA9C,EAAA,YAAAsM,EAAAljE,MAAAvH,SAhCAyoB,EAAA/lB,KAAAN,KAAAqqG,UAAA,SAAAhiC,GACAA,EAAAljE,MAAAs9D,UAAAj+C,cAEAyc,EAAA6C,WAAA,SAAA9B,GACA,GAAA4oE,EAAA5oE,GAAA,CACA,GAAAmiD,GAAAumB,EAAA1oE,EAAAf,GACAmjD,EAAAD,EAAA,GACAE,EAAAF,EAAA,EAEA,KAAA0lB,EAAAzlB,EAAA6S,EAAAh2D,KACA4oE,EAAAxlB,EAAA4S,EAAAh2D,GAEA,MAGA,IAAAmmD,GAAApnF,KAAAwrG,aACApnB,EAAA9/B,eAAA+/B,EAAA//B,gBAEA9lC,EAAAwjB,EAAAyD,UACAwzD,EAAA7R,EAAAG,QAAA,KACA2R,EAAA9R,EAAAG,QAAA,IAEA,UAAA/oE,EAAA5gB,OACA2kE,EAAA/jD,EAAAy6E,EAAAj3D,GACAugC,EAAA/jD,EAAA06E,EAAAl3D,MAGShiC,MAmCT,IAAA2qG,IAAA,gBA4BAV,GAAApmF,OAAA,SAAAod,EAAAyC,GACA,GAAAwoE,KA6CA,OA5CAjrE,GAAAY,cAAA,gBAAAo1D,EAAA3rF,GACA,GAAA8rF,GAAA,GAAA6S,GAAAhT,EAAAh2D,EAAAyC,EACA0zD,GAAA72F,KAAA,QAAA+K,EACA8rF,EAAA11F,OAAAu1F,EAAAvzD,GAEAuzD,EAAA3sD,iBAAA8sD,EAEA8U,EAAAriG,KAAAutF,KAIAn2D,EAAA6C,WAAA,SAAA9B,GACA,GAAA4oE,EAAA5oE,GAAA,CAIA,GAAAmiD,GAAAumB,EAAA1oE,EAAAf,GACAmjD,EAAAD,EAAA,GACAE,EAAAF,EAAA,GAEA8S,EAAA7S,EAAA3O,eAEA,IAAAj0C,QAAA,CACA,IAAAy1D,EACA,SAAAn+D,OACA,SAAAzS,EAAAiX,SACA8mD,EAAA/vE,IAAA,aACA+vE,EAAA/vE,IAAA,UACA,GACA,cAGA,IAAA+vE,EAAA3O,kBAAA4O,EAAA5O,gBACA,SAAA38C,OAAA,0CAIA,GAAAs+D,GAAAH,EAAA3sD,gBAEAtI,GAAAsI,iBAAA8sD,EAAAoU,aACApnB,EAAA9/B,eAAA+/B,EAAA//B,mBAIA4nD,GAIAjC,EAAA5uC,WAAAmuC,EAAAjqG,UAAA87D,WAEAr+D,EAAA,KAAAoxC,SAAA,cAAA67D,GAEAptG,EAAAC,QAAAmtG,GnJ486BMkC,IACA,SAAStvG,EAAQC,QAASE,GAEhC,YoJ5/7BAA,GAAA,IACA,IAAA2nC,GAAA3nC,EAAA,IAEAH,GAAAC,QAAA6nC,EAAA17B,QAEArL,KAAA,OAEAuvC,cAAA,iBAEAuX,WAAA,MAKApa,iBAAA,KAEAia,eACA6zB,MAAA,EACA1qE,OAAA,EACA/C,EAAA,EACA/G,KAAA,MACAC,IAAA,GACAogB,MAAA,MACAC,OAAA,GAEAkoF,cAAA,EAGAv7F,gBAAA,gBACA8uE,YAAA,EACAC,YAAA,WpJyg8BMysB,IACA,SAASxvG,EAAQC,QAASE,GAEhC,YqJxi8BA,IAAAqpB,GAAArpB,EAAA,KACAmrE,EAAAnrE,EAAA,IAEAH,GAAAC,QAAA,SAAAurE,GACA,GAAAirB,GAAAjrB,EAAA9jC,MACA6P,EAAAk/C,EAAApqD,SAAA,aACA0rD,EAAAxgD,EAAA//B,IAAA,WACA,oBAAAg0D,EAAAzqE,MAAA,SAAAg3F,EACA,SAAAA,EAAA,EAAAA,EAGAzsB,EAAAwB,qBACAtjD,EAAAjD,IAAAilD,EAAAljE,MAAA29D,WAAAuF,EAAA4gB,YAAA5gB,GACAirB,EAAAppB,qBACA91B,EAAAlL,SAAA,aAAAsL,UACA6zB,EAAAof,kBrJuj8BM6kB,IACA,SAASzvG,EAAQC,SAEvB,YsJ7k8BA,SAAAyvG,GAAAzpE,GACA,MAAAA,GAGA,QAAA25B,GAAA+vC,EAAAC,EAAAC,EAAAC,GACA3sG,KAAA4sG,KAAAJ,EACAxsG,KAAA6sG,KAAAJ,EAEAzsG,KAAA8sG,cAAAJ,GAAAH,EACAvsG,KAAA+sG,cAAAJ,GAAAJ,EA6FA,QAAAS,GAAAn3E,EAAAzS,EAAA6pF,EAAAC,GACA,OAAAhwG,GAAA,EAAuBA,EAAA24B,EAAArzB,OAAgBtF,IAAA,CACvC,GAAAimB,GAAA+pF,EAAAr3E,EAAA34B,MACAiwG,EAAA/pF,EAAAD,EACA,OAAAgqF,GACAF,EAAApjG,KAAAsZ,GACAC,EAAAD,GAAAjmB,IAGAiwG,EAAA3qG,SACA4gB,EAAAD,GAAAgqF,OAEAA,EAAAtjG,KAAA3M,KAtGAu/D,EAAAl9D,WAEAkB,YAAAg8D,EAKA7xC,IAAA,SAAAqS,GAEA,MADAj9B,MAAAotG,KAAAnwE,EACAj9B,MAMA6S,OAAA,SAAAoqB,GAEA,MADAj9B,MAAA6V,QAAAonB,EACAj9B,MAMA0iB,OAAA,SAAAua,GAEA,MADAj9B,MAAAqtG,QAAApwE,EACAj9B,MAGAiiF,QAAA,WACA,GASA/kF,GATAsvG,EAAAxsG,KAAA4sG,KACAH,EAAAzsG,KAAA6sG,KACAH,EAAA1sG,KAAA8sG,cACAH,EAAA3sG,KAAA+sG,cAEAO,KACAC,KACAC,KACAC,IASA,KANAT,EAAAR,EAAAc,EAAAE,EAAAd,GACAM,EAAAP,EAAAc,EAAAE,EAAAd,GAKAzvG,EAAA,EAAuBA,EAAAsvG,EAAAhqG,OAAmBtF,IAAA,CAC1C,GAAAimB,GAAAqqF,EAAAtwG,GACAoO,EAAAiiG,EAAApqF,EAGA,UAAA7X,EAAA,CAGA,GAAAK,GAAAL,EAAA9I,MACAmJ,IACA,IAAAA,IAAA4hG,EAAApqF,GAAA,MACA7X,IAAAk+E,WAGA+jB,EAAApqF,GAAA,KAEAnjB,KAAA6V,SAAA7V,KAAA6V,QAAAvK,EAAApO,OAGA8C,MAAAqtG,SAAArtG,KAAAqtG,QAAAnwG,GAIA,OAAAA,GAAA,EAA2BA,EAAAuwG,EAAAjrG,OAA0BtF,IAAA,CACrD,GAAAimB,GAAAsqF,EAAAvwG,EACA,IAAAqwG,EAAA/8F,eAAA2S,GAAA,CACA,GAAA7X,GAAAiiG,EAAApqF,EACA,UAAA7X,EACA,QAGA,IAAAA,EAAA9I,OAIA,OAAAk1B,GAAA,EAAA/rB,EAAAL,EAAA9I,OAAyDk1B,EAAA/rB,EAAS+rB,IAClE13B,KAAAotG,MAAAptG,KAAAotG,KAAA9hG,EAAAosB,QAJA13B,MAAAotG,MAAAptG,KAAAotG,KAAA9hG,OA6BAzO,EAAAC,QAAA2/D,GtJsl8BMixC,IACA,SAAS7wG,EAAQC,SuJ/s8BvBD,EAAAC,QAAA,SAAAqiD,EAAAle,GACAA,EAAA4xD,iBAAA1zC,EAAA,SAAAnd,GACA,GAAAxjB,GAAAwjB,EAAAyD,UACAlE,EAAAS,EAAAsI,gBAEA,IAAA/I,EAAA,CACA,GAAAm+B,GAAAn+B,EAAA85B,UAEA,gBAAA95B,EAAA3jC,KACA4gB,EAAAle,KAAAo/D,EAAA,YAAA9gE,EAAA0M,GAEAkT,EAAA2iD,cAAA71D,EAAA+qB,MAAAz3B,IAAA83C,SAAAnV,EAAA2lD,YAAAtoF,MAIA4f,EAAAle,KAAAo/D,EAAA,SAAA9gE,EAAAC,EAAAyM,GAEAkT,EAAA2iD,cACA71D,EAAA+qB,MAAAz3B,IAAAy3B,MAAAx3B,IAAA63C,SAAAnV,EAAA2lD,aAAAtoF,EAAAC,OAEqB,QvJ4t8Bf8uG,IACA,SAAS9wG,EAAQC,QAASE,GwJjv8BhC,GAAA2qC,GAAA3qC,EAAA,KACAqpB,EAAArpB,EAAA,KACAsc,EAAAzL,KAAAyL,EASAzc,GAAAC,QAAA,SAAA4mC,EAAA96B,GACAA,QACAyd,EAAAyV,SAAAlzB,GACAggB,KAAA,UACAymB,MAAA,UACAsmD,UAAA,OACAiY,UAAA,2BACAlgG,OAAA,GAEA,IAAAmgG,GAAA,GAAAlmE,GAAA8K,MACA/uC,OACAkrB,KAAAhmB,EAAAglG,WAEAlgG,OAAA9E,EAAA8E,OACA/C,EAAA,MAEAgV,EAAA,GAAAgoB,GAAAiL,KACA9qC,OACAuT,YAAA/B,EAAA,EACAgC,UAAAhC,EAAA,KACA8B,EAAA,IAEA1X,OACAirB,OAAA/lB,EAAAymC,MACAqlD,QAAA,QACAl5E,UAAA,GAEA9N,OAAA9E,EAAA8E,OACA/C,EAAA,QAEAmjG,EAAA,GAAAnmE,GAAA8K,MACA/uC,OACAkrB,KAAA,OACAhG,KAAAhgB,EAAAggB,KACAwE,aAAA,QACAC,aAAA,GACAO,SAAAhlB,EAAA+sF,WAEAjoF,OAAA9E,EAAA8E,OACA/C,EAAA,OAGAgV,GAAAq6B,cAAA,GACA5nB,KAAA,KACA9W,SAAA,EAAAhC,EAAA,IAEA/C,MAAA,iBACAoJ,EAAAq6B,cAAA,GACA5nB,KAAA,KACA/W,WAAA,EAAA/B,EAAA,IAEAjC,MAAA,KACAd,MAAA,gBAEA,IAAAmpB,GAAA,GAAAiI,GAAAr1B,KA4BA,OA3BAotB,GAAA9U,IAAAjL,GACA+f,EAAA9U,IAAAkjF,GACApuE,EAAA9U,IAAAijF,GAEAnuE,EAAAh+B,OAAA,WACA,GAAAwZ,GAAAwoB,EAAApgC,WAAA,EACA6X,EAAAuoB,EAAAlgC,YAAA,CACAmc,GAAAu6B,UACAh/B,KACAC,MAEA,IAAAC,GAAAuE,EAAA7X,MAAAsT,CACA0yF,GAAA5zD,UACAt7C,EAAAsc,EAAAE,EACAvc,EAAAsc,EAAAC,EACA/X,MAAA,EAAA+X,EACA7X,OAAA,EAAA6X,IAGAyyF,EAAA3zD,UACAt7C,EAAA,EACAC,EAAA,EACAwE,MAAAqgC,EAAApgC,WACAC,OAAAmgC,EAAAlgC,eAGAk8B,EAAAh+B,SACAg+B,IxJ2v8BMquE,IACA,SAASlxG,EAAQC,QAASE,GyJjx7BhC,QAAAgxG,GAAAtlE,EAAApJ,GACAjZ,EAAA/lB,KAAAg/B,EAAA,SAAA2uE,EAAA1tG,GAEAokC,EAAAoiB,SAAAxmD,KACA,gBAAA0tG,GACAvlE,EAAAnoC,GAAAmoC,EAAAnoC,GAEA8lB,EAAAxX,MAAA65B,EAAAnoC,GAAA0tG,GAAA,GADA5nF,EAAAkF,MAAA0iF,GAIA,MAAAvlE,EAAAnoC,KACAmoC,EAAAnoC,GAAA0tG,MAOA,QAAAC,GAAAC,GACAA,IAIAnuG,KAAA0oC,UACA1oC,KAAA0oC,OAAA0lE,GAAA,EAMApuG,KAAAmgC,kBAQAngC,KAAAquG,eAAA,KAEAL,EAAAG,EAAAnuG,KAAA+/B,OAAA2I,QAGAriB,EAAAxX,MAAAs/F,EAAAG,GAAA,GAEAtuG,KAAA+iD,YAAAorD,GAQA,QAAAI,GAAAC,EAAAvnD,GACA5gC,EAAAqV,QAAAurB,KACAA,WAGA,IAAAz6B,KAKA,OAJAlsB,GAAA2mD,EAAA,SAAArpD,GACA4uB,EAAA5uB,IAAA4wG,EAAA5wG,QAAA0V,UAGAkZ,EAMA,QAAAugD,GAAAjrC,EAAAwjB,EAAAmpD,GACA,GAAAhwD,GAAA6G,EAAA1nD,KACA0nD,EAAA1nD,KACA6wG,EACAA,EAAAhwD,QAEA9Z,EAAAooC,iBAAAjrC,EAAAwjB,EAGA,OAAA7G,GAMA,QAAAiwD,GAAAC,GACA,MAAAvrF,GAAAurF,EAAA,SAAAppE,GACA,MAAAA,GAAA+e,qBAOA,QAAAsqD,GAAAC,EAAAnxE,GAGA,MAAAA,GAAAltB,eAAA,WACAssB,EAAA+xE,EAAA,SAAAC,GACA,MAAAA,GAAArwD,UAAA/gB,EAAA+gB,UAEAowD,EAMA,QAAAE,GAAA9tE,GAGA,GAAAO,UACAP,EAAAotE,eACA,SAAAv1E,OAAA,wCApqBA,GAAAzS,GAAArpB,EAAA,KACAqkC,EAAArkC,EAAA,KACAkyC,EAAAlyC,EAAA,KACAsD,EAAA+lB,EAAA/lB,KACAw8B,EAAAzW,EAAAyW,OACA1Z,EAAAiD,EAAAjD,IACAsY,EAAArV,EAAAqV,QACAnwB,EAAA8a,EAAA9a,QACAlH,EAAAgiB,EAAAhiB,SAEAsgC,EAAA3nC,EAAA,KAEAsxG,EAAAtxG,EAAA,KAEAoxG,EAAA,cASA5mE,EAAA0H,EAAAjmC,QAEAxI,YAAA+mC,EAEAlP,KAAA,SAAAoQ,EAAAma,EAAAvjB,EAAAuJ,GACAvJ,QAEAt/B,KAAA0oC,OAAA,KAMA1oC,KAAA+/B,OAAA,GAAAmP,GAAA5P,GAKAt/B,KAAAgvG,eAAAnmE,GAGAJ,UAAA,SAAAC,EAAAM,GACA3iB,EAAAoX,SACA2wE,IAAA1lE,IACA,gCAGA1oC,KAAAgvG,eAAAvmE,UAAAC,EAAAM,GAEAhpC,KAAA4rC,eAUAA,YAAA,SAAAhuC,GACA,GAAA+tC,IAAA,EACA9C,EAAA7oC,KAAAgvG,cAEA,KAAApxG,GAAA,aAAAA,EAAA,CACA,GAAAuwG,GAAAtlE,EAAAomE,YAAA,aAAArxG,EAEAoC,MAAA0oC,QAAA,aAAA9qC,GAIAoC,KAAAgrC,cACAhrC,KAAA+iD,YAAAorD,IAJAD,EAAAnuG,KAAAC,KAAAmuG,GAMAxiE,GAAA,EAOA,GAJA,aAAA/tC,GAAA,UAAAA,GACAoC,KAAAgrC,eAGAptC,GAAA,aAAAA,GAAA,aAAAA,EAAA,CACA,GAAAsxG,GAAArmE,EAAAsmE,kBAAAnvG,KACAkvG,KAAAlvG,KAAA+iD,YAAAmsD,GAAAvjE,GAAA,GAGA,IAAA/tC,GAAA,aAAAA,GAAA,UAAAA,EAAA,CACA,GAAAwxG,GAAAvmE,EAAAwmE,eAAArvG,UAAAogC,KACAgvE,GAAA5sG,QACAlC,EAAA8uG,EAAA,SAAAE,GACAtvG,KAAA+iD,YAAAusD,EAAA3jE,GAAA,IACqB3rC,MAIrB,MAAA2rC,IAMAoX,YAAA,SAAAsG,GA4BA,QAAAkmD,GAAAztE,EAAAqL,GACA,GAAAqiE,GAAAnuE,EAAAmc,iBAAA6L,EAAAvnB,IAEAme,EAAA5e,EAAAqe,gBACA8uD,EAAA1sE,GAAA0tE,EAGAnuE,GAAA2e,cAAAC,GAGA3/C,EAAA2/C,EAAA,SAAAnd,EAAAb,GACA,GAAAiK,GAAApJ,EAAA4F,MACArkC,GAAA6nC,KACApJ,EAAAsd,QAAAte,WACAgB,EAAAsd,QAAA3B,QAAAsuB,EAAAjrC,EAAAoK,EAAApJ,EAAA+c,SAIA,IAAA2E,GAAA+pD,EACAC,EAAArhE,EAGAzE,GAAA5G,MACA0sE,EAAA1sE,MAEAxhC,EAAA2/C,EAAA,SAAAwvD,EAAAxtE,GACA,GAAA0B,GAAA8rE,EAAA5vD,MACAyF,EAAAmqD,EAAA/mE,MAUA,IARAriB,EAAAoX,OACAp5B,EAAAihD,IAAA3hB,EACA,8BAMA2hB,EAIA,CACA,GAAAoqD,GAAA/qE,EAAAI,SACAjD,EAAA2tE,EAAArvD,QAAA3B,SAAA,EAGA,IAAA9a,eAAA+rE,GACA/rE,EAAApjC,KAAAkvG,EAAArvD,QAAA7/C,KACAojC,EAAAof,YAAAuC,EAAAtlD,MACA2jC,EAAA0hB,cAAAC,GAAA,OAEA,CAEA,GAAAV,GAAAv+B,EAAApd,QAEAu7C,kBACAF,eAAAriB,GAEAwtE,EAAArvD,QAEAzc,GAAA,GAAA+rE,GACApqD,EAAAtlD,UAAA4kD,GAEAv+B,EAAApd,OAAA06B,EAAAihB,GACAjhB,EAAArL,KAAAgtB,EAAAtlD,UAAA4kD,GAKAjhB,EAAA0hB,cAAA,cA/BA1hB,GAAAof,eAAqD/iD,MACrD2jC,EAAA0hB,kBAAuD,EAkCvDmpD,GAAA1sE,GAAAG,GAAA0B,EACA+E,EAAA5G,GAAAG,GAAA0B,EAAA+E,QACiB1oC,MAGjB,WAAA8hC,IACA9hC,KAAAquG,eAAAK,EAAAF,EAAAjpE,SA1GA,GAAAmD,GAAA1oC,KAAA0oC,OACA8lE,EAAAxuG,KAAAmgC,eACAwvE,IAGArvG,GAAA+oD,EAAA,SAAAumD,EAAA9tE,GACA,MAAA8tE,IAIAjrE,EAAAoiB,SAAAjlB,GAMA6tE,EAAA9lG,KAAAi4B,GALA4G,EAAA5G,GAAA,MAAA4G,EAAA5G,GACAzb,EAAAkF,MAAAqkF,GACAvpF,EAAAxX,MAAA65B,EAAA5G,GAAA8tE,GAAA,MAQAjrE,EAAAqpC,kBACA2hC,EAAAhrE,EAAAqiB,uBAAAuoD,EAAAvvG,MAGAA,KAAAquG,eAAAruG,KAAAquG,oBA2FAllE,UAAA,WACA,GAAAT,GAAAriB,EAAAkF,MAAAvrB,KAAA0oC,OAiBA,OAfApoC,GAAAooC,EAAA,SAAA9/B,EAAAk5B,GACA,GAAA6C,EAAAoiB,SAAAjlB,GAAA,CAEA,OADAl5B,GAAAy4B,EAAAmc,iBAAA50C,GACA1L,EAAA0L,EAAApG,OAAA,EAAiDtF,GAAA,EAAQA,IAEzDmkC,EAAA0e,UAAAn3C,EAAA1L,KACA0L,EAAA4C,OAAAtO,EAAA,EAGAwrC,GAAA5G,GAAAl5B,WAIA8/B,GAAA0lE,GAEA1lE,GAMAwc,SAAA,WACA,MAAAllD,MAAA+/B,QAQA8vE,aAAA,SAAA/tE,EAAAx2B,GACA,GAAAhJ,GAAAtC,KAAAmgC,eAAA2B,EACA,IAAAx/B,EACA,MAAAA,GAAAgJ,GAAA,IAaAm2C,gBAAA,SAAA/jB,GACA,GAAAoE,GAAApE,EAAAoE,QACA,KAAAA,EACA,QAGA,IAAAG,GAAAvE,EAAAuE,MACAj/B,EAAA06B,EAAA16B,GACAzC,EAAAm9B,EAAAn9B,KAEAuvG,EAAA9vG,KAAAmgC,eAAA2B,EAEA,KAAAguE,MAAAttG,OACA,QAGA,IAAAy4B,EAEA,UAAAgH,EACAvG,EAAAuG,KACAA,OAEAhH,EAAA6B,EAAA1Z,EAAA6e,EAAA,SAAA32B,GACA,MAAAwkG,GAAAxkG,KACiB,SAAA/E,GACjB,QAAAA,QAGA,UAAAvD,EAAA,CACA,GAAA+sG,GAAAr0E,EAAA14B,EACAi4B,GAAA6B,EAAAgzE,EAAA,SAAAhB,GACA,MAAAiB,IAAAxkG,EAAAvI,EAAA8rG,EAAA9rG,KAAA,IACA+sG,GAAAjB,EAAA9rG,aAGA,UAAAzC,EAAA,CACA,GAAAyvG,GAAAt0E,EAAAn7B,EACA06B,GAAA6B,EAAAgzE,EAAA,SAAAhB,GACA,MAAAkB,IAAAzkG,EAAAhL,EAAAuuG,EAAAvuG,OAAA,IACAyvG,GAAAlB,EAAAvuG,eAKA06B,GAAA60E,CAGA,OAAAlB,GAAA3zE,EAAAyC,IA+BA++D,eAAA,SAAA/+D,GAWA,QAAAuyE,GAAAC,GACA,GAAAC,GAAAruE,EAAA,QACAsuE,EAAAtuE,EAAA,KACAuuE,EAAAvuE,EAAA,MACA,OAAAouE,KACAA,EAAA1/F,eAAA2/F,IACAD,EAAA1/F,eAAA4/F,IACAF,EAAA1/F,eAAA6/F,KAGAvuE,WAEAG,MAAAiuE,EAAAC,GACAntG,GAAAktG,EAAAE,GACA7vG,KAAA2vG,EAAAG,IAEA,KAGA,QAAAC,GAAA5iF,GACA,MAAAgQ,GAAAZ,OACAA,EAAApP,EAAAgQ,EAAAZ,QACApP,EAhCA,GAAAqU,GAAArE,EAAAqE,MACAD,EAAApE,EAAAoE,SAEAyuE,EAAAN,EAAAluE,GACA9G,EAAAs1E,EACAvwG,KAAAyhD,gBAAA8uD,GACAvwG,KAAAmgC,eAAA2B,EAEA,OAAAwuE,GAAA1B,EAAA3zE,EAAAyC,KAmDAmE,cAAA,SAAAC,EAAAxyB,EAAAC,GACA,GAAAi/F,GAAAxuG,KAAAmgC,cAEA,sBAAA2B,GACAvyB,EAAAD,EACAA,EAAAwyB,EACAxhC,EAAAkuG,EAAA,SAAAK,EAAAvqE,GACAhkC,EAAAuuG,EAAA,SAAAp0E,EAAAwH,GACA3yB,EAAAvP,KAAAwP,EAAA+0B,EAAA7J,EAAAwH,WAIA,IAAA5b,EAAAyK,SAAAgR,GACAxhC,EAAAkuG,EAAA1sE,GAAAxyB,EAAAC,OAEA,IAAAlL,EAAAy9B,GAAA,CACA,GAAA0uE,GAAAxwG,KAAAy8F,eAAA36D,EACAxhC,GAAAkwG,EAAAlhG,EAAAC,KAQAisF,gBAAA,SAAAj7F,GACA,GAAAglC,GAAAvlC,KAAAmgC,eAAAoF,MACA,OAAAzI,GAAAyI,EAAA,SAAAkrE,GACA,MAAAA,GAAAlwG,YAQAisC,iBAAA,SAAAC,GACA,MAAAzsC,MAAAmgC,eAAAoF,OAAAkH,IAOAikE,gBAAA,SAAAjyD,GACA,GAAAlZ,GAAAvlC,KAAAmgC,eAAAoF,MACA,OAAAzI,GAAAyI,EAAA,SAAAkrE,GACA,MAAAA,GAAAhyD,eAOA67C,UAAA,WACA,MAAAt6F,MAAAmgC,eAAAoF,OAAAjyB,SAUAwwB,WAAA,SAAAx0B,EAAAC,GACAw/F,EAAA/uG,MACAM,EAAAN,KAAAquG,eAAA,SAAAsC,GACA,GAAAprE,GAAAvlC,KAAAmgC,eAAAoF,OAAAorE,EACArhG,GAAAvP,KAAAwP,EAAAg2B,EAAAorE,IACa3wG,OASb47F,cAAA,SAAAtsF,EAAAC,GACAjP,EAAAN,KAAAmgC,eAAAoF,OAAAj2B,EAAAC,IAWAsjF,iBAAA,SAAAp0C,EAAAnvC,EAAAC,GACAw/F,EAAA/uG,MACAM,EAAAN,KAAAquG,eAAA,SAAAsC,GACA,GAAAprE,GAAAvlC,KAAAmgC,eAAAoF,OAAAorE,EACAprE,GAAAkZ,aACAnvC,EAAAvP,KAAAwP,EAAAg2B,EAAAorE,IAEa3wG,OAUb4wG,oBAAA,SAAAnyD,EAAAnvC,EAAAC,GACA,MAAAjP,GAAAN,KAAA0wG,gBAAAjyD,GAAAnvC,EAAAC,IAMAshG,iBAAA,SAAA7uE,GAEA,MADA+sE,GAAA/uG,MACAqmB,EAAA9a,QAAAvL,KAAAquG,eAAArsE,EAAAsiB,gBAAA,GAOAo4C,aAAA,SAAAptF,EAAAC,GACAw/F,EAAA/uG,KACA,IAAA8wG,GAAAh0E,EACA98B,KAAAmgC,eAAAoF,OAAAj2B,EAAAC,EAEAvP,MAAAquG,eAAAK,EAAAoC,IAGA9lE,YAAA,WACA,GAAAwjE,GAAAxuG,KAAAmgC,cAEAngC,MAAAquG,eAAAK,EAAAF,EAAAjpE,OAEA,IAAAwrE,KACAzwG,GAAAkuG,EAAA,SAAAK,EAAAvqE,GACAysE,EAAAlnG,KAAAy6B,KAGAK,EAAAqpC,kBACA+iC,EACApsE,EAAAqiB,uBACA,SAAA1iB,EAAA6I,GACA7sC,EAAAkuG,EAAAlqE,GAAA,SAAA7J,GACAA,EAAAuQ,oBA+HA3kB,GAAAzjB,MAAA4kC,EAAAxqC,EAAA,MAEAH,EAAAC,QAAA0qC,GzJk28BMwpE,IACA,SAASn0G,EAAQC,QAASE,G0J199BhC,QAAAyqC,GAAA/D,GAMA1jC,KAAAogC,KAAAsD,EAMA1jC,KAAAixG,oBAMAjxG,KAAAkxG,cAMAlxG,KAAAmxG,cAQAnxG,KAAAoxG,wBAMApxG,KAAAqxG,cAMArxG,KAAAsxG,eAuJA,QAAAC,GAAAC,EAAAxoE,EAAAyoE,GACA,GAEAC,GACAvD,EAHAwD,KACAC,KAKAC,EAAAL,EAAAM,QAaA,IAXAN,EAAArD,aACAA,EAAAqD,EAAArD,aAIA0D,GAAAL,EAAA58F,WACAu5F,QACAwD,GAAAH,EAAA58F,aAAAtB,SAIAk+F,EAAAO,MAAA,CACA5D,OACA,IAAA4D,GAAAP,EAAAO,KACAzxG,GAAAyxG,EAAA,SAAAC,GACAA,KAAAtpE,SACAspE,EAAAjwE,MACA6vE,EAAA/nG,KAAAmoG,GAEAN,IAEAA,EAAAM,MA6BA,MAtBA7D,KACAA,EAAAqD,GAKArD,EAAA2D,WACA3D,EAAA2D,SAAAD,GAIAvxG,GAAA6tG,GAAA5mF,OAAAoqF,GACApqF,OAAAlB,EAAAjD,IAAAwuF,EAAA,SAAAG,GACA,MAAAA,GAAArpE,UAEA,SAAAA,GACApoC,EAAA0oC,EAAA,SAAAipE,GACAA,EAAAvpE,EAAA+oE,QAMAtD,aACAwD,kBACAD,eACAE,aASA,QAAAM,GAAAnwE,EAAAowE,EAAAC,GACA,GAAAC,IACAhvG,MAAA8uG,EACA5uG,OAAA6uG,EACAE,YAAAH,EAAAC,GAGAG,GAAA,CAiBA,OAfAlsF,GAAA/lB,KAAAyhC,EAAA,SAAApf,EAAAwP,GACA,GAAAqgF,GAAArgF,EAAAskB,MAAAg8D,EAEA,IAAAD,KAAA,IAAAA,EAAA,IAIA,GAAAE,GAAAF,EAAA,GACAG,EAAAH,EAAA,GAAArzE,aAEAqwC,GAAA6iC,EAAAM,GAAAhwF,EAAA+vF,KACAH,GAAA,MAIAA,EAGA,QAAA/iC,GAAAojC,EAAAC,EAAAH,GACA,cAAAA,EACAE,GAAAC,EAEA,QAAAH,EACAE,GAAAC,EAGAD,IAAAC,EAIA,QAAAC,GAAAC,EAAAC,GAEA,MAAAD,GAAA3qG,KAAA,OAAA4qG,EAAA5qG,KAAA,KAwBA,QAAA26C,GAAAkwD,EAAA5pD,GACAA,QAEA/oD,EAAA+oD,EAAA,SAAA6pD,EAAApxE,GACA,SAAAoxE,EAAA,CAIA,GAAAC,GAAAF,EAAAnxE,EAEA,IAAA6C,EAAAoiB,SAAAjlB,GAGA,CACAoxE,EAAA7xE,EAAAmc,iBAAA01D,GACAC,EAAA9xE,EAAAmc,iBAAA21D,EAEA,IAAAlzD,GAAA5e,EAAAqe,gBAAAyzD,EAAAD,EAEAD,GAAAnxE,GAAA1e,EAAA68B,EAAA,SAAAnd,GACA,MAAAA,GAAA4F,QAAA5F,EAAA+c,MACAhxC,EAAAi0B,EAAA+c,MAAA/c,EAAA4F,QAAA,GACA5F,EAAA+c,OAAA/c,EAAA4F,aAXAuqE,GAAAnxE,GAAAjzB,EAAAskG,EAAAD,GAAA,MAxZA,GAAA7sF,GAAArpB,EAAA,KACAqkC,EAAArkC,EAAA,KACA2nC,EAAA3nC,EAAA,KACAsD,EAAA+lB,EAAA/lB,KACAirB,EAAAlF,EAAAkF,MACAnI,EAAAiD,EAAAjD,IACAvU,EAAAwX,EAAAxX,MAEA4jG,EAAA,kBAiHAhrE,GAAAloC,WAEAkB,YAAAgnC,EASAgB,UAAA,SAAA+oE,EAAAxoE,GACAwoE,EAAAjmF,EAAAimF,GAAA,EAKA,IAAA4B,GAAApzG,KAAAqxG,cACAgC,EAAA9B,EAAAxxG,KACAC,KAAAwxG,EAAAxoE,GAAAoqE,EAEApzG,MAAAsxG,eAAA+B,EAAAlF,WAGAiF,GAEArwD,EAAAqwD,EAAAjF,WAAAkF,EAAAlF,YAKAkF,EAAA1B,gBAAAnvG,SACA4wG,EAAAzB,gBAAA0B,EAAA1B,iBAEA0B,EAAAzB,UAAApvG,SACA4wG,EAAAxB,UAAAyB,EAAAzB,WAEAyB,EAAA3B,eACA0B,EAAA1B,aAAA2B,EAAA3B,eAIA1xG,KAAAqxG,cAAAgC,GAQApE,YAAA,SAAAqE,GACA,GAAAC,GAAAvzG,KAAAqxG,aAUA,OALArxG,MAAAixG,iBAAA7tF,EAAAmwF,EAAA5B,gBAAApmF,GACAvrB,KAAAkxG,WAAA9tF,EAAAmwF,EAAA3B,UAAArmF,GACAvrB,KAAAmxG,cAAA5lF,EAAAgoF,EAAA7B,cACA1xG,KAAAoxG,wBAEA7lF,EAAA+nF,EAMAC,EAAApF,WAAAnuG,KAAAsxG,iBAQAnC,kBAAA,SAAAluE,GACA,GAAAyH,GACAipE,EAAA3xG,KAAAixG,gBAEA,IAAAU,EAAAnvG,OAAA,CAGA,GAAAgxG,GAAAvyE,EAAA4uE,aAAA,WACA2D,KACA9qE,EAAAnd,EACAomF,EAAA6B,EAAAC,oBACA,IAKA,MAAA/qE,IAOA2mE,eAAA,SAAApuE,GACA,GAAAkxE,GAAAnyG,KAAAogC,KAAA98B,WACA8uG,EAAApyG,KAAAogC,KAAA58B,YACAouG,EAAA5xG,KAAAkxG,WACAQ,EAAA1xG,KAAAmxG,cACAh0C,KACAliC,IAGA,KAAA22E,EAAApvG,SAAAkvG,EACA,MAAAz2E,EAIA,QAAA/9B,GAAA,EAAAyO,EAAAimG,EAAApvG,OAAmDtF,EAAAyO,EAASzO,IAC5Dg1G,EAAAN,EAAA10G,GAAA6kC,MAAAowE,EAAAC,IACAj1C,EAAAtzD,KAAA3M,EAqBA,QAfAigE,EAAA36D,QAAAkvG,IACAv0C,QAGAA,EAAA36D,SAAAswG,EAAA31C,EAAAn9D,KAAAoxG,wBACAn2E,EAAA7X,EAAA+5C,EAAA,SAAAl7B,GACA,MAAA1W,GACA0W,OAAAyvE,EAAAhpE,OAAAkpE,EAAA3vE,GAAAyG,WAMA1oC,KAAAoxG,qBAAAj0C,EAEAliC,IAyKAp+B,EAAAC,QAAA2qC,G1J0i+BMisE,IACA,SAAS72G,EAAQC,S2J39+BvB,GAAA62G,GAAA,EAEA,oBAAA7vD,aACA6vD,EAAA7vD,UAAA6vD,UAAA,IAEA92G,EAAAC,SAUAuyC,OAAA,+GAKA8E,WAIAy/D,WAAAD,EAAAl9D,MAAA,uCAEAipC,SAAA,GACAm0B,UAAA,SACA/W,WAAA,UAMAv2D,UAAA,KAEA/wB,WAAA,EACAs+F,kBAAA,IACA/T,wBAAA,IACA/tD,gBAAA,iBACAguD,sBAAA,WAEA+T,mBAAA,IAEAC,qBAAA,IACAhkG,YAAA,IAOA61E,oBAAA,M3Jo++BMouB,IACA,SAASp3G,EAAQC,QAASE,G4Jzh/BhCH,EAAAC,SACAuuF,aAAAruF,EAAA,OAEA,iBACA,eACA,kBACA,kBACA,YACA,mB5Joi/BMk3G,IACA,SAASr3G,EAAQC,S6J5i/BvBD,EAAAC,SACAu8F,mBAAA,WACA,OACAz1F,KAAA5D,KAAAqU,IAAA,QACAxQ,IAAA7D,KAAAqU,IAAA,OACA4P,MAAAjkB,KAAAqU,IAAA,SACA6P,OAAAlkB,KAAAqU,IAAA,UACAhR,MAAArD,KAAAqU,IAAA,SACA9Q,OAAAvD,KAAAqU,IAAA,c7Jwj/BM8/F,IACA,SAASt3G,EAAQC,QAASE,G8Jlk/BhC,GAAA23E,GAAA33E,EAAA,OAEA,iBACA,yBACA,4BACA,YACA,eACA,kBACA,kBACA,gBACA,iBACA,cAGAH,GAAAC,SACA63E,aAAA,SAAA5I,GACA,GAAAroE,GAAAixE,EAAA50E,KAAAC,KAAA+rE,GACA7yB,EAAAl5C,KAAAo0G,mBAEA,OADAl7D,KAAAx1C,EAAAw1C,YACAx1C,GAGA0wG,kBAAA,WACA,GAAAC,GAAAr0G,KAAAqU,IAAA,aACA,iBAAAggG,GAAA,MAAAA,EAAA,KACA,WAAAA,GAAA,c9J4k/BMC,IACA,SAASz3G,EAAQC,QAASE,G+Jtm/BhC,GAAA2jF,GAAA3jF,EAAA,OAEA,sBACA,mBACA,YACA,eACA,kBACA,kBACA,gBAGAH,GAAAC,SACA6jF,aAAA,SAAA5U,GACA,GAAAroE,GAAAi9E,EAAA5gF,KAAAC,KAAA+rE,GACA7yB,EAAAl5C,KAAAu0G,YAAA7wG,EAAA8X,UAEA,OADA09B,KAAAx1C,EAAAw1C,YACAx1C,GAGA6wG,YAAA,SAAA/4F,GACA,MAAAA,IACAA,EAAA;AAEA,GAAA64F,GAAAr0G,KAAAqU,IAAA,QACAmgG,EAAA3mG,KAAAoC,IAAAuL,EAAA,GACAi5F,EAAA,EAAAj5F,CACA,iBAAA64F,GAAA,MAAAA,EAAA,KACA,WAAAA,GAAAI,MAAAD,Q/Jgn/BME,IACA,SAAS73G,EAAQC,QAASE,GgKzo/BhC,QAAA60C,GAAAtN,EAAA78B,GACA,MAAA68B,MAAAsN,WAAAnqC,GAHA,GAAAghB,GAAA1rB,EAAA,IAMAH,GAAAC,SAKA23C,aAAA,WACA,GAAAxT,GAAAjhC,KAAAihC,OACA,OAAAjhC,MAAA6xC,WAAA,UACA5Q,KAAA5sB,IAAA,oBAOAmgC,QAAA,WACA,GAAAvT,GAAAjhC,KAAAihC,QACA0zE,EAAA1zE,KAAAiI,SAAA,YACA,QAEAlpC,KAAA6xC,WAAA,cAAAA,EAAA8iE,EAAA,aACA30G,KAAA6xC,WAAA,eAAAA,EAAA8iE,EAAA,eACA30G,KAAA6xC,WAAA,aAAAA,EAAA8iE,EAAA,sBACA30G,KAAA6xC,WAAA,eAAAA,EAAA8iE,EAAA,6BACAvsG,KAAA,MAGAqiD,YAAA,SAAA7hC,GACA,MAAAF,GAAAzhB,gBACA2hB,EACA5oB,KAAAw0C,UACAx0C,KAAA6xC,WAAA,SACA7xC,KAAA6xC,WAAA,cAIAuL,aAAA,SAAAx0B,EAAA+/B,EAAAkC,EAAAj2C,GACA,MAAA8T,GAAA00B,aACAx0B,EAAA+/B,EAAA3oD,KAAAw0C,UAAAqW,EAAAj2C,MhKup/BMggG,IACA,SAAS/3G,EAAQC,QAASE,GiKhs/BhC,QAAAqX,GAAA63B,EAAAxkC,GACAA,IAAA4hB,MAAA,IAEA,QADAyQ,GAAAmS,EACAhvC,EAAA,EAAuBA,EAAAwK,EAAAlF,SACvBu3B,OAAAryB,EAAAxK,IACA,MAAA68B,GAFwC78B,KAMxC,MAAA68B,GAGA,QAAA2gB,GAAAxO,EAAAxkC,EAAAnB,EAAAg1B,GACA7zB,IAAA4hB,MAAA,IAGA,QADAnG,GADA4W,EAAAmS,EAEAhvC,EAAA,EAAuBA,EAAAwK,EAAAlF,OAAA,EAAqBtF,IAC5CimB,EAAAzb,EAAAxK,GACA,MAAA68B,EAAA5W,KACA4W,EAAA5W,OAEA4W,IAAA5W,IAEAoY,GAAA,MAAAxB,EAAAryB,EAAAxK,OACA68B,EAAAryB,EAAAxK,IAAAqJ,GAIA,QAAAsuG,GAAAnsE,GACApoC,EAAAw0G,EAAA,SAAAzjF,GACAA,EAAA,IAAAqX,MAAArX,EAAA,IAAAqX,MACAA,EAAArX,EAAA,IAAAqX,EAAArX,EAAA,OAlCA,GAAAhL,GAAArpB,EAAA,KACA+3G,EAAA/3G,EAAA,KAsCA83G,IACA,wDAGAE,GACA,sFAGAC,GACA,sDACA,mEACA,4CAGA30G,EAAA+lB,EAAA/lB,IAEAzD,GAAAC,QAAA,SAAA4rC,GACApoC,EAAAooC,EAAAnD,OAAA,SAAA2vE,GACA,GAAA7uF,EAAAhiB,SAAA6wG,GAAA,CAIA,GAAA/1D,GAAA+1D,EAAAt3G,IASA,IAPAm3G,EAAAG,GAEA,QAAA/1D,GAAA,UAAAA,GACA,MAAA+1D,EAAAC,YACAD,EAAAxmF,UAAAwmF,EAAAC,WAGA,UAAAh2D,EAAA,CACA,GAAAi2D,GAAA/gG,EAAA6gG,EAAA,gBACA,OAAAE,GACA16D,EAAAw6D,EAAA,yBAAAE,GAGA,OAAAl4G,GAAA,EAA2BA,EAAA+3G,EAAAzyG,OAAgCtF,IAC3D,GAAA+3G,EAAA/3G,KAAAg4G,EAAAt3G,KAAA,CACAi3G,EAAAK,EACA,WAMAxsE,EAAA2sE,YACA3sE,EAAA4sE,UAAA5sE,EAAA2sE,WAGA/0G,EAAA00G,EAAA,SAAAO,GACA,GAAA3gG,GAAA8zB,EAAA6sE,EACA3gG,KACAyR,EAAAqV,QAAA9mB,KACAA,OAEAtU,EAAAsU,EAAA,SAAA8zB,GACAmsE,EAAAnsE,UjKit/BM8sE,IACA,SAAS34G,EAAQC,QAASE,GkK5y/BhC,QAAAy4G,GAAAvpE,GACA,GAAAwpE,GAAAxpE,KAAAmoC,SACAqhC,IACArvF,EAAA/lB,KAAAq1G,EAAA,SAAAl4B,GACA,GAAAm4B,GAAAF,EAAA53D,OACA+3D,EAAAH,EAAA93D,QACAg4D,MAAAn4B,KACAvxC,EAAAuxC,GAAAvxC,EAAAuxC,OACAvxC,EAAAuxC,GAAA3/B,OAIAz3B,EAAAxX,MAAAq9B,EAAAuxC,GAAA3/B,OAAA83D,EAAAn4B,IAHAvxC,EAAAuxC,GAAA3/B,OAAA83D,EAAAn4B,GAKAm4B,EAAAn4B,GAAA,MAEAo4B,KAAAp4B,KACAvxC,EAAAuxC,GAAAvxC,EAAAuxC,OACAvxC,EAAAuxC,GAAA7/B,SAIAv3B,EAAAxX,MAAAq9B,EAAAuxC,GAAA7/B,SAAAi4D,EAAAp4B,IAHAvxC,EAAAuxC,GAAA7/B,SAAAi4D,EAAAp4B,GAKAo4B,EAAAp4B,GAAA,QA/BA,GAAAp3D,GAAArpB,EAAA,KAEA24G,GACA,gDACA,iCAiCA94G,GAAAC,QAAA,SAAAo4G,GACA,GAAAA,EAAA,CAGAO,EAAAP,GACAO,EAAAP,EAAAY,WACAL,EAAAP,EAAAa,SACA,IAAAv3F,GAAA02F,EAAA12F,IACA,IAAAA,EAAA,CACA,OAAAthB,GAAA,EAA2BA,EAAAshB,EAAAhc,OAAiBtF,IAC5Cu4G,EAAAj3F,EAAAthB,GAGA,IAAA44G,GAAAZ,EAAAY,SACA,IAAAA,KAAAt3F,KAEA,OADAw3F,GAAAF,EAAAt3F,KACAthB,EAAA,EAA+BA,EAAA84G,EAAAxzG,OAAmBtF,IAClDu4G,EAAAO,EAAA94G,GAIA,IAAA64G,GAAAb,EAAAa,QACA,IAAAA,KAAAv3F,KAEA,OADAy3F,GAAAF,EAAAv3F,KACAthB,EAAA,EAA+BA,EAAA+4G,EAAAzzG,OAAmBtF,IAClDmpB,EAAAqV,QAAAu6E,EAAA/4G,KACAu4G,EAAAQ,EAAA/4G,GAAA,IACAu4G,EAAAQ,EAAA/4G,GAAA,KAGAu4G,EAAAQ,EAAA/4G,QlKi0/BMg5G,IACA,SAASr5G,EAAQC,SmKt4/BvBD,EAAAC,QAAA,SAAAqiD,EAAAle,GACA,GAAAu7D,GAAAv7D,EAAAw7D,gBACA36D,SAAA,UAEA06D,MAAAh6F,QAGAy+B,EAAA4xD,iBAAA1zC,EAAA,SAAA5Z,GACA,GAAA/mB,GAAA+mB,EAAAE,SACAjnB,GAAAohD,WAAA,SAAAt0D,GAGA,OAFA/K,GAAAie,EAAAugC,QAAAzzC,GAEApO,EAAA,EAA+BA,EAAAs/F,EAAAh6F,OAAyBtF,IACxD,IAAAs/F,EAAAt/F,GAAA0hF,WAAAr+E,GACA,QAGA,WACaP,OACJA,QnK+4/BHm2G,IACA,SAASt5G,EAAQC,SoKn6/BvB,GAAAs5G,IACAC,QAAA,SAAA9oG,GAGA,OAFAoe,GAAA,EACAiG,EAAA,EACA10B,EAAA,EAA2BA,EAAAqQ,EAAA/K,OAAkBtF,IAC7Cm5B,MAAA9oB,EAAArQ,MACAyuB,GAAApe,EAAArQ,GACA00B,IAIA,YAAAA,EAAA8kB,IAAA/qB,EAAAiG,GAEAjG,IAAA,SAAApe,GAEA,OADAoe,GAAA,EACAzuB,EAAA,EAA2BA,EAAAqQ,EAAA/K,OAAkBtF,IAE7CyuB,GAAApe,EAAArQ,IAAA,CAEA,OAAAyuB,IAEA1b,IAAA,SAAA1C,GAEA,OADA0C,KAAAuU,KACAtnB,EAAA,EAA2BA,EAAAqQ,EAAA/K,OAAkBtF,IAC7CqQ,EAAArQ,GAAA+S,MAAA1C,EAAArQ,GAEA,OAAA+S,IAEAnC,IAAA,SAAAP,GAEA,OADAO,GAAA0W,IACAtnB,EAAA,EAA2BA,EAAAqQ,EAAA/K,OAAkBtF,IAC7CqQ,EAAArQ,GAAA4Q,MAAAP,EAAArQ,GAEA,OAAA4Q,IAIAwoG,QAAA,SAAA/oG,GACA,MAAAA,GAAA,KAIAgpG,EAAA,SAAAhpG,EAAAoV,GACA,MAAA9U,MAAAskC,MAAA5kC,EAAA/K,OAAA,GAEA3F,GAAAC,QAAA,SAAAqiD,EAAAle,EAAAyC,GACAzC,EAAA4xD,iBAAA1zC,EAAA,SAAAnd,GACA,GAAAxjB,GAAAwjB,EAAAyD,UACAmgD,EAAA5jD,EAAA3tB,IAAA,YACAktB,EAAAS,EAAAsI,gBAEA,oBAAA/I,EAAA3jC,MAAAgoF,EAAA,CACA,GAAAc,GAAAnlD,EAAA8pC,cACAsb,EAAAplD,EAAAqlD,aAAAF,GACApkB,EAAAokB,EAAAlkB,YAEApE,EAAAkE,EAAA,GAAAA,EAAA,GACAlC,EAAAvyD,KAAAskC,MAAA3zB,EAAAoT,QAAAwsC,EACA,IAAAgC,EAAA,GACA,GAAAo2C,EACA,iBAAA5wB,GACA4wB,EAAAJ,EAAAxwB,GAEA,kBAAAA,KACA4wB,EAAA5wB,GAEA4wB,IACAh4F,IAAA0hD,WACAymB,EAAA5qB,IAAA,EAAAqE,EAAAo2C,EAAAD,GAEAv0E,EAAArL,QAAAnY,OAISxe,QpK46/BHy2G,IACA,SAAS55G,EAAQC,QAASE,GqKx0/BhC,QAAA05G,GAAAnwG,EAAAowG,GACA,MAAAxqC,GAAA5lE,EAAAywC,EAAA2/D,IA3KA,GAAAtwF,GAAArpB,EAAA,KACAmlE,EAAAnlE,EAAA,KACAq+C,EAAAr+C,EAAA,KAGAkrE,EAAAlrE,EAAA,KAEAqlE,EAAAF,EAAA5iE,UACAq3G,EAAA1uC,EAAA3oE,UAEAy3C,EAAAqE,EAAArE,iBACAm1B,EAAA9wB,EAAAlJ,MAEA85B,EAAAp+D,KAAA6e,MACAw/C,EAAAr+D,KAAAyjD,KACAlF,EAAAv+C,KAAA8L,IAEAk9F,EAAAhpG,KAAAxF,IAEAyuG,EAAA30C,EAAAl5D,QAEArL,KAAA,MAEAqrE,KAAA,GAEAtkB,aAAA,WACAwd,EAAAl8C,MAAAjmB,KAAAkmB,WACAlmB,KAAA+2G,eAAA,GAAA7uC,IAMApF,SAAA,WACA,GAAAk0C,GAAAh3G,KAAA+2G,eACAz0C,EAAAtiE,KAAA69D,QACAyK,EAAA0uC,EAAAx0C,WAEA,OAAAn8C,GAAAjD,IAAAwzF,EAAA9zC,SAAA/iE,KAAAC,MAAA,SAAAuG,GACA,GAAA0wG,GAAA57D,EAAAlJ,MAAAia,EAAApsD,KAAAipE,KAAA1iE,GAUA,OAPA0wG,GAAA1wG,IAAA+7D,EAAA,IAAA00C,EAAAE,SACAR,EAAAO,EAAA3uC,EAAA,IACA2uC,EACAA,EAAA1wG,IAAA+7D,EAAA,IAAA00C,EAAAG,SACAT,EAAAO,EAAA3uC,EAAA,IACA2uC,GAGaj3G,OAOb+iE,SAAA6zC,EAAA7zC,SAMA59D,MAAA,SAAAoB,GAEA,MADAA,GAAA87D,EAAAl9D,MAAApF,KAAAC,KAAAuG,GACA6lD,EAAApsD,KAAAipE,KAAA1iE,IAOAk8D,UAAA,SAAAlsD,EAAAuN,GACA,GAAAmlD,GAAAjpE,KAAAipE,IACA1yD,GAAAsgG,EAAAtgG,GAAAsgG,EAAA5tC,GACAnlD,EAAA+yF,EAAA/yF,GAAA+yF,EAAA5tC,GACA2tC,EAAAn0C,UAAA1iE,KAAAC,KAAAuW,EAAAuN,IAMA0+C,UAAA,WACA,GAAAyG,GAAAjpE,KAAAipE,KACA3G,EAAAD,EAAAG,UAAAziE,KAAAC,KACAsiE,GAAA,GAAAlW,EAAA6c,EAAA3G,EAAA,IACAA,EAAA,GAAAlW,EAAA6c,EAAA3G,EAAA,GAGA,IAAA00C,GAAAh3G,KAAA+2G,eACAzuC,EAAA0uC,EAAAx0C,WAIA,OAHAw0C,GAAAE,WAAA50C,EAAA,GAAAo0C,EAAAp0C,EAAA,GAAAgG,EAAA,KACA0uC,EAAAG,WAAA70C,EAAA,GAAAo0C,EAAAp0C,EAAA,GAAAgG,EAAA,KAEAhG,GAMAC,YAAA,SAAAD,GACAtiE,KAAA+2G,eAAAx0C,YAAAD,EAEA,IAAA2G,GAAAjpE,KAAAipE,IACA3G,GAAA,GAAAu0C,EAAAv0C,EAAA,IAAAu0C,EAAA5tC,GACA3G,EAAA,GAAAu0C,EAAAv0C,EAAA,IAAAu0C,EAAA5tC,GACA5G,EAAAE,YAAAxiE,KAAAC,KAAAsiE,IAOA8J,UAAA,SAAAgrC,GACAA,KAAA,EACA,IAAA90C,GAAAtiE,KAAA69D,QACA0K,EAAAjG,EAAA,GAAAA,EAAA,EACA,MAAAiG,IAAA/jD,KAAA+jD,GAAA,IAIA,GAAAlwB,GAAAgD,EAAAvD,SAAAywB,GACA8uC,EAAAD,EAAA7uC,EAAAlwB,CAQA,KALAg/D,GAAA,KACAh/D,GAAA,KAIAhiB,MAAAgiB,IAAAxqC,KAAA8N,IAAA08B,GAAA,GAAAxqC,KAAA8N,IAAA08B,GAAA,GACAA,GAAA,EAGA,IAAA6wB,IACA7tB,EAAAlJ,MAAA+5B,EAAA5J,EAAA,GAAAjqB,MACAgD,EAAAlJ,MAAA85B,EAAA3J,EAAA,GAAAjqB,MAGAr4C,MAAAoiE,UAAA/pB,EACAr4C,KAAAqsE,YAAAnD,IASAA,WAAA,SAAAF,EAAAH,EAAAC,GACA8tC,EAAA1tC,WAAAnpE,KAAAC,KAAAgpE,EAAAH,EAAAC,EAEA,IAAAkuC,GAAAh3G,KAAA+2G,cACAC,GAAAE,SAAAruC,EACAmuC,EAAAG,SAAAruC,IAKAziD,GAAA/lB,MAAA,gCAAAygC,GACA+1E,EAAAv3G,UAAAwhC,GAAA,SAAAx6B,GAEA,MADAA,GAAAswG,EAAAtwG,GAAAswG,EAAA72G,KAAAipE,MACA5G,EAAAthC,GAAAhhC,KAAAC,KAAAuG,MAIAuwG,EAAAjzF,OAAA,WACA,UAAAizF,IAOAj6G,EAAAC,QAAAg6G,GrK+//BMQ,IACA,SAASz6G,EAAQC,QAASE,GsK1qgChC,GAAAqpB,GAAArpB,EAAA,KACAmlE,EAAAnlE,EAAA,KAEAqlE,EAAAF,EAAA5iE,UAEA0oE,EAAA9F,EAAAl5D,QAEArL,KAAA,UAEA06B,KAAA,SAAA9Z,EAAA8jD,GACAtiE,KAAA2qE,MAAAnsD,EACAxe,KAAA69D,QAAAyE,IAAA,EAAA9jD,EAAAhc,OAAA,IAGA0oC,MAAA,SAAA3kC,GACA,sBAAAA,GACA8f,EAAA9a,QAAAvL,KAAA2qE,MAAApkE,GAEAsH,KAAAskC,MAAA5rC,IAGArH,QAAA,SAAAq4G,GAEA,MADAA,GAAAv3G,KAAAkrC,MAAAqsE,GACAl1C,EAAAnjE,QAAAa,KAAAC,KAAAu3G,IACA,MAAAv3G,KAAA2qE,MAAA4sC,IAQAxnF,UAAA,SAAAxpB,GACA,MAAA87D,GAAAtyC,UAAAhwB,KAAAC,UAAAkrC,MAAA3kC,KAGApB,MAAA,SAAAoB,GACA,MAAAsH,MAAAskC,MAAAkwB,EAAAl9D,MAAApF,KAAAC,KAAAuG,KAMAu8D,SAAA,WAKA,IAJA,GAAAD,MACAP,EAAAtiE,KAAA69D,QACA05C,EAAAj1C,EAAA,GAEAi1C,GAAAj1C,EAAA,IACAO,EAAAh5D,KAAA0tG,GACAA,GAGA,OAAA10C,IAQAE,SAAA,SAAAx+C,GACA,MAAAvkB,MAAA2qE,MAAApmD,IAMAqN,MAAA,WACA,MAAA5xB,MAAA69D,QAAA,GAAA79D,KAAA69D,QAAA,MAGAuO,UAAA/lD,EAAA0Y,KACAmqC,WAAA7iD,EAAA0Y,MAMAkpC,GAAApkD,OAAA,WACA,UAAAokD,IAGAprE,EAAAC,QAAAmrE,GtK2rgCMuvC,IACA,SAAS36G,EAAQC,QAASE,GuKlxgChC,GAAAqpB,GAAArpB,EAAA,KACAq+C,EAAAr+C,EAAA,KACAs+C,EAAAt+C,EAAA,KAEAkrE,EAAAlrE,EAAA,KAEA45G,EAAA1uC,EAAA3oE,UAEA2sE,EAAAr+D,KAAAyjD,KACA2a,EAAAp+D,KAAA6e,MACA+qF,EAAA,IACAC,EAAA,GAAAD,EACAE,EAAA,GAAAD,EACAE,EAAA,GAAAD,EAGAE,EAAA,SAAA3lG,EAAAtT,EAAA0wE,EAAAC,GACA,KAAAD,EAAAC,GAAA,CACA,GAAArQ,GAAAoQ,EAAAC,IAAA,CACAr9D,GAAAgtD,GAAA,GAAAtgE,EACA0wE,EAAApQ,EAAA,EAGAqQ,EAAArQ,EAGA,MAAAoQ,IAOAwoC,EAAA5vC,EAAAj/D,QACArL,KAAA,OAGAmlE,SAAA,SAAAx8D,GACA,GAAAwxG,GAAA/3G,KAAAg4G,SAEAt7D,EAAA,GAAA9vC,MAAArG,EAEA,OAAA+0C,GAAAmB,WAAAs7D,EAAA,GAAAr7D,IAIAwsB,WAAA,SAAAkuC,EAAAvuC,EAAAC,GACA,GAAAxG,GAAAtiE,KAAA69D,OAQA,IANAyE,EAAA,KAAAA,EAAA,KAEAA,EAAA,IAAAs1C,EACAt1C,EAAA,IAAAs1C,GAGAt1C,EAAA,OAAA99C,MAAA89C,EAAA,KAAA99C,IAAA,CACA,GAAA9I,GAAA,GAAA9O,KACA01D,GAAA,MAAA11D,MAAA8O,EAAAihC,cAAAjhC,EAAAkhC,WAAAlhC,EAAAmhC,WACAylB,EAAA,GAAAA,EAAA,GAAAs1C,EAGA53G,KAAAosE,UAAAgrC,EAGA,IAAA/+D,GAAAr4C,KAAAoiE,SAEAyG,KACAvG,EAAA,GAAAjnB,EAAAlJ,MAAA85B,EAAA3J,EAAA,GAAAjqB,OAEAywB,IACAxG,EAAA,GAAAjnB,EAAAlJ,MAAA+5B,EAAA5J,EAAA,GAAAjqB,QAKA+zB,UAAA,SAAAgrC,GACAA,KAAA,EAEA,IAAA90C,GAAAtiE,KAAA69D,QACA0K,EAAAjG,EAAA,GAAAA,EAAA,GACA21C,EAAA1vC,EAAA6uC,EACAc,EAAAC,EAAA31G,OACA8I,EAAAusG,EAAAM,EAAAF,EAAA,EAAAC,GAEAnnD,EAAAonD,EAAAtqG,KAAAC,IAAAxC,EAAA4sG,EAAA,IACA7/D,EAAA0Y,EAAA,EAEA,aAAAA,EAAA,IACA,GAAAqnD,GAAA7vC,EAAAlwB,EAIAggE,EAAAh9D,EAAAtD,KAAAqgE,EAAAhB,GAAA,EAEA/+D,IAAAggE,EAGA,GAAAnvC,IACAgD,EAAA5J,EAAA,GAAAjqB,KACA4zB,EAAA3J,EAAA,GAAAjqB,KAGAr4C,MAAAg4G,SAAAjnD,EAEA/wD,KAAAoiE,UAAA/pB,EACAr4C,KAAAqsE,YAAAnD,GAGAh+B,MAAA,SAAA3kC,GAEA,OAAA80C,EAAAxD,UAAAtxC,KAIA8f,GAAA/lB,MAAA,gCAAAygC,GACA+2E,EAAAv4G,UAAAwhC,GAAA,SAAAx6B,GACA,MAAAqwG,GAAA71E,GAAAhhC,KAAAC,UAAAkrC,MAAA3kC,MAKA,IAAA4xG,KAEA,aAAAV,IACA,eAAAA,IACA,iBAAAA,IACA,iBAAAA,IACA,iBAAAA,IACA,iBAAAC,IACA,mBAAAA,IACA,qBAAAA,IACA,qBAAAA,IACA,qBAAAA,IACA,iBAAAC,IACA,mBAAAA,IACA,mBAAAA,IACA,qBAAAA,IACA,gBAAAC,IACA,WAAAA,IACA,aAAAA,IACA,gBAAAA,EAAA,IACA,kBAAAA,EAAA,IACA,aAAAA,GAMAE,GAAAj0F,OAAA,WACA,UAAAi0F,IAGAj7G,EAAAC,QAAAg7G,GvKgygCMQ,IACA,SAASz7G,EAAQC,SwK97gCvB,GAAAy7G,MAEAC,EAAA,2BACAC,EAAA,mBACAC,EAAA,kBAWAH,GAAAz4E,SAAA,SAAA9Z,EAAA3O,EAAAshG,GAYA,QAAAC,KACAC,GAAA,GAAAjsG,OAAAmJ,UACA+iG,EAAA,KACA9yF,EAAAC,MAAAla,EAAAmxB,OAbA,GAAA67E,GAIA16F,EACAtS,EACAmxB,EALA87E,EAAA,EACAH,EAAA,EACAC,EAAA,IAKAzhG,MAAA,CAQA,IAAA/H,GAAA,WACAypG,GAAA,GAAAnsG,OAAAmJ,UACAhK,EAAA/L,KACAk9B,EAAAhX,UACA7H,EAAA06F,GAAAJ,EAAAK,EAAAH,GAAAxhG,EAEAoO,aAAAqzF,GAEAH,EACAG,EAAAnzF,WAAAizF,EAAAvhG,GAGAgH,GAAA,EACAu6F,IAGAE,EAAAnzF,WAAAizF,GAAAv6F,GAIA26F,EAAAD,EAcA,OAPAzpG,GAAAlK,MAAA,WACA0zG,IACArzF,aAAAqzF,GACAA,EAAA,OAIAxpG,GA8BAipG,EAAAU,eAAA,SAAAl/E,EAAAm/E,EAAA94C,EAAA+4C,GACA,GAAAnzF,GAAA+T,EAAAm/E,EAEA,IAAAlzF,EAAA,CAIA,GAAAozF,GAAApzF,EAAAwyF,IAAAxyF,EACAqzF,EAAArzF,EAAA0yF,GACAY,EAAAtzF,EAAAyyF,EAEA,IAAAa,IAAAl5C,GAAAi5C,IAAAF,EAAA,CACA,SAAA/4C,IAAA+4C,EACA,MAAAp/E,GAAAm/E,GAAAE,CAGApzF,GAAA+T,EAAAm/E,GAAAX,EAAAz4E,SACAs5E,EAAAh5C,EAAA,aAAA+4C,GAEAnzF,EAAAwyF,GAAAY,EACApzF,EAAA0yF,GAAAS,EACAnzF,EAAAyyF,GAAAr4C,EAGA,MAAAp6C,KAUAuyF,EAAAnzG,MAAA,SAAA20B,EAAAm/E,GACA,GAAAlzF,GAAA+T,EAAAm/E,EACAlzF,MAAAwyF,KACAz+E,EAAAm/E,GAAAlzF,EAAAwyF,KAIA37G,EAAAC,QAAAy7G,GxKw8gCMgB,IACA,SAAS18G,EAAQC,QAASE,GyKnlhChC,GAAAsV,GAAAtV,EAAA,KACAqnD,EAAArnD,EAAA,KACA8lD,EAAA9lD,EAAA,KAEAw8G,EAAA,WAKAx5G,KAAA0/B,MAAA,GAAAptB,GAMAtS,KAAAykD,IAAAJ,EAAAQ,OAAA,iBAGA20D,GAAAj6G,WAEAkB,YAAA+4G,EAEAlhF,KAAA,SAAA2I,EAAAyC,KAEAyC,OAAA,SAAAxC,EAAA1C,EAAAyC,EAAA9B,KAEApiC,QAAA,aAIA,IAAAi6G,GAAAD,EAAAj6G,SACAk6G,GAAApuE,WACAouE,EAAAjuE,aACAiuE,EAAAluE,aACA,SAAAvJ,EAAAf,EAAAyC,EAAA9B,KAIAkhB,EAAAO,kBAAAm2D,GAGA12D,EAAA8C,sBAAA4zD,GAAgD3zD,oBAAA,IAEhDhpD,EAAAC,QAAA08G,GzK4lhCME,IACA,SAAS78G,EAAQC,S0KvohCvBD,EAAAC,QAAA,SAAAqiD,EAAAle,GAEA,GAAA04E,KACA14E,GAAA2vE,oBAAAzxD,EAAA,SAAAnd,GACA,GAAA43E,GAAA53E,EAAAgpC,aACA6uC,IACA,KAAA54E,EAAA4vE,iBAAA7uE,GAAA,CACA,GAAAxjB,GAAAwjB,EAAAyD,SACAjnB,GAAAle,KAAA,SAAAgL,GACA,GAAAm0D,GAAAjhD,EAAAsgC,YAAAxzC,EACAuuG,GAAAp6C,GAAAn0D,IAEAsuG,EAAAt5G,KAAA,SAAAm/D,GAEA,GAAAngB,GAAAs6D,EAAAr6D,aAAAkgB,GACAq6C,EAAAD,EAAAp6C,GAGAs6C,EAAA,MAAAD,GACAt7F,EAAAssB,cAAAgvE,EAAA,WAEA,IAAAC,EAaAH,EAAAt4C,cAAA7B,EAAA,QAAAs6C,OAbA,CACA,GAAA1qE,GAAAiQ,EAAAjrC,IAAA,2BACA2tB,EAAA2pC,oBAAAiuC,EAAA76D,QAAA0gB,GAAAk6C,EAEAC,GAAAt4C,cAAA7B,EAAA,QAAApwB,GAGA,MAAAyqE,GACAt7F,EAAA8iD,cAAAw4C,EAAA,QAAAzqE,W1K2phCM2qE,IACA,SAASn9G,EAAQC,QAASE,G2K3rhChC,GAAAirB,GAAAjrB,EAAA,IACAH,GAAAC,QAAA,SAAAmkC,GACA,QAAAg5E,GAAAj4E,GACA,GAAAk4E,IAAAl4E,EAAAwoC,uBAAA,0BAAAlhD,MAAA,KACA9K,EAAAwjB,EAAAyD,UACA4J,EAAArN,EAAA3tB,IAAA6lG,IACAl4E,EAAA2pC,oBAAA3pC,EAAA3tB,IAAA,QAGAmK,GAAAuiD,UAAA,QAAA1xB,GAGApO,EAAA4vE,iBAAA7uE,KACA,kBAAAqN,gBAAApnB,IACAzJ,EAAAle,KAAA,SAAAgL,GACAkT,EAAA8iD,cACAh2D,EAAA,QAAA+jC,EAAArN,EAAA0K,cAAAphC,OAMAkT,EAAAle,KAAA,SAAAgL,GACA,GAAAg0C,GAAA9gC,EAAA+gC,aAAAj0C,GACA+jC,EAAAiQ,EAAAjrC,IAAA6lG,GAAA,EACA,OAAA7qE,GACA7wB,EAAA8iD,cAAAh2D,EAAA,QAAA+jC,MAKApO,EAAA26D,cAAAqe,K3KoshCME,IACA,SAASt9G,EAAQC,S4KnuhCvBD,EAAAC,QAAA,SAAAqiD,EAAAi7D,EAAAC,EAAAp5E,EAAAyC,GAGAzC,EAAA2vE,oBAAAzxD,EAAA,SAAAnd,GACA,GAAAxjB,GAAAwjB,EAAAyD,UAEA4tC,EAAArxC,EAAA3tB,IAAA,WAAA+lG,EACAvnC,EAAA7wC,EAAA3tB,IAAA,aAEAmK,GAAAuiD,WACAs5C,gBAAAhnC,EACAmS,OAAAnS,EACAR,eAIA5xC,EAAA4vE,iBAAA7uE,KACA,kBAAA6wC,IACAr0D,EAAAle,KAAA,SAAAgL,GACA,GAAAqzC,GAAA3c,EAAA4c,YAAAtzC,GAEAghC,EAAAtK,EAAA0K,cAAAphC,EACAkT,GAAA8iD,cAAAh2D,EAAA,aAAAunE,EAAAl0B,EAAArS,MAGA9tB,EAAAle,KAAA,SAAAgL,GACA,GAAAg0C,GAAA9gC,EAAA+gC,aAAAj0C,GACAgvG,EAAAh7D,EAAAzN,WAAA,aACA0oE,EAAAj7D,EAAAzN,WAAA,gBAEA,OAAAyoE,GACA97F,EAAA8iD,cAAAh2D,EAAA,SAAAgvG,GAEA,MAAAC,GAEA/7F,EAAA8iD,cAAAh2D,EAAA,aAAAivG,U5KivhCMC,IACA,SAAS39G,EAAQC,QAASE,GAEhC,YAiBA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFG,OAAOC,eAAer9B,QAAS,cAC7B6lB,OAAO,G6K7xhCT,IAAA83F,GAAAz9G,EAAA,K7KkyhCI09G,EAAe5gF,EAAuB2gF,G6KjyhC1CE,EAAA39G,EAAA,K7KqyhCI49G,EAAyB9gF,EAAuB6gF,E6KpyhCpD39G,GAAA,M7K0yhCAF,oB6KvyhCEmyE,SAAU,IACV4rC,YACAC,sBACAC,wBACAC,aAAc,O7K6yhCVC,IACA,SAASp+G,EAAQC,SAEvB,Y8KjzhCA,SAASo+G,GAAgB31F,EAAU41F,GAAe,KAAM51F,YAAoB41F,IAAgB,KAAM,IAAIC,WAAU,qCANhHlhF,OAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,GAGR,IAAI04F,GAAe,WAAc,QAASC,GAAiB59G,EAAQw0B,GAAS,IAAK,GAAIh1B,GAAI,EAAGA,EAAIg1B,EAAM1vB,OAAQtF,IAAK,CAAE,GAAIq+G,GAAarpF,EAAMh1B,EAAIq+G,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMxhF,OAAOC,eAAez8B,EAAQ69G,EAAWp4F,IAAKo4F,IAAiB,MAAO,UAAUJ,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY57G,UAAWo8G,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,M9K8zhC5hBU,EAAuB,W8Kl0hC1B,QAAAA,GAAYC,GACX,UADmBZ,GAAAl7G,KAAA67G,GAEnB77G,KAAK87G,OAASA,EACd97G,KAAK+7G,iBA+GN,M9KithCAF,GAAqBG,SAAW,U8KjzhChCX,EAAaQ,IACZ14F,IAAK,iBACLR,MAAO,WAbP3iB,KAAKi8G,aACJ38E,MAAO,UACPyvC,YAAY,GAGb/uE,KAAKk8G,aACJ32E,SACChlC,KAAM,KACNoK,EAAG,EACH/M,KAAM,QACNyd,WAAY,IACZC,SAAU,EACVkF,QAAS,MAAO,OAChB+kD,OAAQ,GACR2Z,UACCC,WACC97E,MAAO,EACPgsC,QAAS,EAAG,YAAa,EAAG,cAG9BgwC,UACCjH,MAAM,GAEPkH,WACClH,MAAM,GAEPgH,WACChH,MAAM,GAEPmH,SACCl8E,MAAO,EACPb,OAAQ,MACR6sC,MAAO,WAERmwC,OACCpH,MAAM,GAEPjR,QACCiR,MAAM,GAEP55D,OACCmE,MAAO,IACPpiB,KAAM,WAINA,KAAM,KACN3C,KAAM,QACNyd,WAAY,IACZC,SAAU,EACVkF,QAAS,MAAO,OAChB+kD,OAAQ,GACR2Z,UACCC,WACC97E,MAAO,GACPgsC,QAAS,KAAO,YAAa,EAAG,cAGlCgwC,UACCjH,MAAM,GAEPkH,WACClH,MAAM,GAEPgH,WACChH,MAAM,GAEPmH,SACCl8E,MAAO,EACPb,OAAQ,MACR6sC,MAAO,WAERmwC,OACCpH,MAAM,EACNqH,cAAe,EAAG,SAClBtrC,WACC9E,MAAO,UACPqwC,SAAU,GACVk0B,WAAY,QACZ9W,WAAY,WAGd31B,QACCiR,MAAM,GAEP55D,OACCmE,MAAO,KACPpiB,KAAM,kBAoBJs7G,IAGR/+G,oBAtHqB++G,G9Kq7hCfM,IACA,SAASt/G,EAAQC,QAASE,GAEhC,YAiBA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFG,OAAOC,eAAer9B,QAAS,cAC7B6lB,OAAO,G+K77hCT,IAAAy5F,GAAAp/G,EAAA,K/Kk8hCIq/G,EAAcviF,EAAuBsiF,G+Kj8hCzCE,EAAAt/G,EAAA,K/Kq8hCIu/G,EAAwBziF,EAAuBwiF,E+Kp8hCnDt/G,GAAA,M/K08hCAF,oB+Kv8hCEmyE,SAAU,IACV4rC,YACAC,sBACAC,wBACAC,aAAc,O/K68hCVwB,IACA,SAAS3/G,EAAQC,SAEvB,YgLj9hCA,SAASo+G,GAAgB31F,EAAU41F,GAAe,KAAM51F,YAAoB41F,IAAgB,KAAM,IAAIC,WAAU,qCANhHlhF,OAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,GAGR,IAAI04F,GAAe,WAAc,QAASC,GAAiB59G,EAAQw0B,GAAS,IAAK,GAAIh1B,GAAI,EAAGA,EAAIg1B,EAAM1vB,OAAQtF,IAAK,CAAE,GAAIq+G,GAAarpF,EAAMh1B,EAAIq+G,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMxhF,OAAOC,eAAez8B,EAAQ69G,EAAWp4F,IAAKo4F,IAAiB,MAAO,UAAUJ,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY57G,UAAWo8G,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MhLm+hC5hBsB,EAAsB,WgLn+hCzB,QAAAA,GAAYX,GACX,UADmBZ,GAAAl7G,KAAAy8G,GAEnBz8G,KAAK87G,OAASA,EACd97G,KAAK08G,gBAsFN,MhL24hCAD,GAAoBT,SAAW,UgLj9hC/BX,EAAaoB,IACZt5F,IAAK,gBACLR,MAAO,WAbP3iB,KAAK28G,YACJr9E,MAAO,UACPyvC,YAAY,GAGb/uE,KAAK48G,YACJp9B,OACC52D,KAAM,SACNg0E,QAAS,mBACT9zE,UAAW,OACXlqB,EAAG,IACHu1C,WACC9E,MAAO,OACPqwC,SAAU,MAEXqd,cACC1tD,MAAO,UACPqwC,SAAU,KACVnvE,QAAS,WAGX6mF,MACCzX,YAAa,EACbC,YAAa,WAEdi9B,QACCv1D,OAAQ,aACRzjD,IAAK,IACLogB,MAAO,IACPqJ,MAAO,OACP9O,MAAO,mBAAoB,0BAE5Bq4E,SACCp1F,QAAS,QAEVw3F,OACCr7F,KAAM,WACNgrE,aAAa,EACbpqD,MAAO,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,QAAS,SAC1G4gE,WACChH,MAAM,EACN//B,SAAU,SAGZ6gD,OACCt7F,KAAM,QACN0hF,WACC9/B,UAAW,gBAGbnQ,OAAQ,UAAW,WACnB9J,SAEEhlC,KAAM,mBACN3C,KAAM,OACNitB,QAAQ,EACRrM,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,OAG9Dje,KAAM,wBACN3C,KAAM,OACNitB,QAAQ,EACRrM,MAAO,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,IAAK,YAmB3Di+F,IAGR3/G,oBA7FqB2/G,GhL4jiCfK,IACA,SAASjgH,EAAQC,QAASE,GAEhC,YAiBA,SAAS88B,GAAuBC,GAAO,MAAOA,IAAOA,EAAIC,WAAaD,GAAQE,UAASF,GAdvFG,OAAOC,eAAer9B,QAAS,cAC7B6lB,OAAO,GiLxkiCT,IAAAo6F,GAAA//G,EAAA,MjL6kiCIggH,EAAaljF,EAAuBijF,GiL5kiCxCE,EAAAjgH,EAAA,KjLgliCIkgH,EAAuBpjF,EAAuBmjF,EiL/kiClDjgH,GAAA,MjLqliCAF,oBiLlliCEmyE,SAAU,IACV4rC,YACAC,sBACAC,wBACAC,aAAc,OjLwliCVmC,IACA,SAAStgH,EAAQC,SAEvB,YkL5liCA,SAASo+G,GAAgB31F,EAAU41F,GAAe,KAAM51F,YAAoB41F,IAAgB,KAAM,IAAIC,WAAU,qCANhHlhF,OAAOC,eAAer9B,QAAS,cAC9B6lB,OAAO,GAGR,IAAI04F,GAAe,WAAc,QAASC,GAAiB59G,EAAQw0B,GAAS,IAAK,GAAIh1B,GAAI,EAAGA,EAAIg1B,EAAM1vB,OAAQtF,IAAK,CAAE,GAAIq+G,GAAarpF,EAAMh1B,EAAIq+G,GAAWC,WAAaD,EAAWC,aAAc,EAAOD,EAAWE,cAAe,EAAU,SAAWF,KAAYA,EAAWG,UAAW,GAAMxhF,OAAOC,eAAez8B,EAAQ69G,EAAWp4F,IAAKo4F,IAAiB,MAAO,UAAUJ,EAAaQ,EAAYC,GAAiJ,MAA9HD,IAAYL,EAAiBH,EAAY57G,UAAWo8G,GAAiBC,GAAaN,EAAiBH,EAAaS,GAAqBT,MlL+miC5hBiC,EAAqB,WkL9miCxB,QAAAA,GAAYtB,GACX,UADmBZ,GAAAl7G,KAAAo9G,GAEnBp9G,KAAK87G,OAASA,EACd97G,KAAKq9G,eA4EN,MlLgiiCAD,GAAmBpB,SAAW,UkL5liC9BX,EAAa+B,IACZj6F,IAAK,eACLR,MAAO,WAdP,GAAIpW,GAAOvM,IACXuM,GAAK+wG,WACJh+E,MAAO,UACPyvC,YAAY,GAGbxiE,EAAKgxG,WACJ1mB,SACCp1F,QAAS,OACT+9C,UAAW,6BAEZq9D,QACCv1D,OAAQ,WACR1oD,EAAG,MACHiF,IAAK,MACL2a,MAAO,KAAM,KAAM,MACnBghC,UAAW,SAAUj/C,GAEpB,IAAK,GADDi9G,GAAKjxG,EAAKgxG,UAAUh4E,OAAO,GAAG/mB,KACzBthB,EAAI,EAAGA,EAAIqP,EAAKgxG,UAAUh4E,OAAO,GAAG/mB,KAAKhc,OAAQtF,IACzD,GAAIqD,GAAQi9G,EAAGtgH,GAAGqD,KACjB,MAAOA,GAAO,IAAMi9G,EAAGtgH,GAAGylB,MAAQ,MAKtC0sB,OAAQ,UAAW,UAAW,WAC9B9J,SACChlC,KAAM,OACN3C,KAAM,MACN2nE,OAAQ,MACR/kD,QAAS,MAAO,OAChBhC,OACCmE,MAAO,IACPpiB,KAAM,OAENoiB,MAAO,IACPpiB,KAAM,OAENoiB,MAAO,IACPpiB,KAAM,OAEP8zE,WACCv2B,QACC8sB,OACCwN,MAAM,EACN54B,UAAW,qBAGbyvC,WACC7W,MAAM,WAuBJglC,IAGRtgH,oBAnFqBsgH,GlL6riCfK,IACA,SAAS5gH,EAAQC,SmLpsiCvBD,EAAAC,QAAA,qkGnL0siCM4gH,IACA,SAAS7gH,EAAQC,SoL3siCvBD,EAAAC,QAAA","file":"chart.min.js","sourcesContent":["webpackJsonp([0],{\n\n/***/ 1007:\n/***/ function(module, exports) {\n\nmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport piechartComponent from './piechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('pieChart', [\\n  Charts.name\\n])\\n.component('pieChart', piechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\" >\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\" >\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nself.pieConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nself.pieOption = {\\n  tooltip: {\\n  trigger: 'item',\\n  formatter: \\\"{a} <br/>{b} : {c} ({d}%)\\\"\\n},\\nlegend: {\\n  orient: 'vertical',\\n  x: '65%',\\n  top: '25%',\\n  data: ['正常', '断开', '等待'],\\n  formatter: function (name) {\\n    var oa = self.pieOption.series[0].data;\\n    for (var i = 0; i < self.pieOption.series[0].data.length; i++) {\\n      if (name == oa[i].name) {\\n        return name + ':' + oa[i].value + '个';\\n      }\\n    }\\n  }\\n},\\ncolor: ['#bdea75', '#fe5454', '#faba3c'],\\nseries: [\\n  {\\n    name: '比例分析',\\n    type: 'pie',\\n    radius: '55%',\\n    center: ['35%', '50%'],\\n    data: [\\n    {\\n      value: '2',\\n      name: '正常'\\n    },\\n    {\\n      value: '2',\\n      name: '断开'\\n    },\\n    {\\n      value: '2',\\n      name: '等待'\\n    }],\\n    itemStyle: {\\n      normal: {\\n        label: {\\n          show: false,\\n          formatter: '{b} : {c} ({d}%)'\\n        }\\n      },\\n      labelLine: {\\n        show: true\\n      }\\n    }\\n}]\\n</div>\\n</div>\"\n\n/***/ },\n\n/***/ 1057:\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(687);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(2)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n\n/***/ 1066:\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(696);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(2)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n\n/***/ 1075:\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(705);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(2)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n\n/***/ 1093:\n/***/ function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(723);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(2)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./chart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./chart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ },\n\n/***/ 1111:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = __webpack_require__(412);\n    var Draggable = __webpack_require__(1146);\n\n    var Eventful = __webpack_require__(613);\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n/***/ },\n\n/***/ 1112:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = __webpack_require__(412);\n    var config = __webpack_require__(624);\n    var Style = __webpack_require__(673);\n    var Pattern = __webpack_require__(672);\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n/***/ },\n\n/***/ 1113:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = __webpack_require__(624);\n    var util = __webpack_require__(412);\n    var log = __webpack_require__(670);\n    var BoundingRect = __webpack_require__(574);\n    var timsort = __webpack_require__(654);\n\n    var Layer = __webpack_require__(1112);\n\n    var requestAnimationFrame = __webpack_require__(667);\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n        }\n\n        this.pathToImage = this._createPathToImage();\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = __webpack_require__(671);\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n/***/ },\n\n/***/ 1114:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = __webpack_require__(412);\n    var env = __webpack_require__(576);\n\n    var Group = __webpack_require__(625);\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = __webpack_require__(654);\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var clipPath = el.clipPath;\n            if (clipPath) {\n                // clipPath 的变换是基于 group 的变换\n                clipPath.parent = el;\n                clipPath.updateTransform();\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                    clipPaths.push(clipPath);\n                }\n                else {\n                    clipPaths = [clipPath];\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n/***/ },\n\n/***/ 1115:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = __webpack_require__(412);\n    var Dispatcher = __webpack_require__(627).Dispatcher;\n\n    var requestAnimationFrame = __webpack_require__(667);\n\n    var Animator = __webpack_require__(666);\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n/***/ },\n\n/***/ 1116:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = __webpack_require__(1117);\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (globalTime - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n/***/ },\n\n/***/ 1117:\n/***/ function(module, exports) {\n\n/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n/***/ },\n\n/***/ 1118:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var normalizeRadian = __webpack_require__(668).normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n/***/ },\n\n/***/ 1119:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(605);\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ },\n\n/***/ 1120:\n/***/ function(module, exports) {\n\n\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n/***/ },\n\n/***/ 1121:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var CMD = __webpack_require__(626).CMD;\n    var line = __webpack_require__(1120);\n    var cubic = __webpack_require__(1119);\n    var quadratic = __webpack_require__(1122);\n    var arc = __webpack_require__(1118);\n    var normalizeRadian = __webpack_require__(668).normalizeRadian;\n    var curve = __webpack_require__(605);\n\n    var windingLine = __webpack_require__(1123);\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n/***/ },\n\n/***/ 1122:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var curve = __webpack_require__(605);\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n/***/ },\n\n/***/ 1123:\n/***/ function(module, exports) {\n\n\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n/***/ },\n\n/***/ 1124:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = __webpack_require__(627);\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n/***/ },\n\n/***/ 1125:\n/***/ function(module, exports) {\n\n// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n/***/ },\n\n/***/ 1126:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(555);\n    var curve = __webpack_require__(605);\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n/***/ },\n\n/***/ 1127:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var eventTool = __webpack_require__(627);\n    var zrUtil = __webpack_require__(412);\n    var Eventful = __webpack_require__(613);\n    var env = __webpack_require__(576);\n    var GestureMgr = __webpack_require__(1124);\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        if (gestureInfo) {\n            // eventTool.stop(event);\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n    function useTouchEvent() {\n        return env.touchEventsSupported;\n    }\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        }\n    };\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        for (var i = 0; i < touchHandlerNames.length; i++) {\n            var name = touchHandlerNames[i];\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        }\n\n        for (var i = 0; i < mouseHandlerNames.length; i++) {\n            var name = mouseHandlerNames[i];\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        }\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (useTouchEvent()) {\n            mountHandlers(touchHandlerNames, this);\n\n            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n        }\n\n        // Considering some devices that both enable touch and mouse event (like MS Surface\n        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n        // mouse event can not be handle in those devices.\n        mountHandlers(mouseHandlerNames, this);\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n/***/ },\n\n/***/ 1128:\n/***/ function(module, exports, __webpack_require__) {\n\n// CompoundPath to improve performance\n\n\n    var Path = __webpack_require__(553);\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n/***/ },\n\n/***/ 1129:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var Gradient = __webpack_require__(656);\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n/***/ },\n\n/***/ 1130:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var Gradient = __webpack_require__(656);\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n/***/ },\n\n/***/ 1131:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = __webpack_require__(655);\n    var zrUtil = __webpack_require__(412);\n    var textContain = __webpack_require__(604);\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n/***/ },\n\n/***/ 1132:\n/***/ function(module, exports) {\n\n\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n/***/ },\n\n/***/ 1133:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = __webpack_require__(555);\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n/***/ },\n\n/***/ 1134:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = __webpack_require__(555);\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n/***/ },\n\n/***/ 1135:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = __webpack_require__(604);\n    var BoundingRect = __webpack_require__(574);\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n/***/ },\n\n/***/ 1136:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n/***/ },\n\n/***/ 1137:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = __webpack_require__(605);\n    var vec2 = __webpack_require__(555);\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1138:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1139:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1140:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = __webpack_require__(674);\n\n    module.exports = __webpack_require__(553).extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n/***/ },\n\n/***/ 1141:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = __webpack_require__(674);\n\n    module.exports = __webpack_require__(553).extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n/***/ },\n\n/***/ 1142:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = __webpack_require__(1132);\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1143:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1144:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n/***/ },\n\n/***/ 1145:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = __webpack_require__(666);\n    var util = __webpack_require__(412);\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = __webpack_require__(670);\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n/***/ },\n\n/***/ 1146:\n/***/ function(module, exports) {\n\n// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n/***/ },\n\n/***/ 1147:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = __webpack_require__(612);\n    var vector = __webpack_require__(555);\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n/***/ },\n\n/***/ 1148:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var Path = __webpack_require__(553);\n    var PathProxy = __webpack_require__(626);\n    var transformPath = __webpack_require__(1149);\n    var matrix = __webpack_require__(612);\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n/***/ },\n\n/***/ 1149:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var CMD = __webpack_require__(626).CMD;\n    var vec2 = __webpack_require__(555);\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n/***/ },\n\n/***/ 1150:\n/***/ function(module, exports, __webpack_require__) {\n\n/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = __webpack_require__(669);\n    var env = __webpack_require__(576);\n    var zrUtil = __webpack_require__(412);\n\n    var Handler = __webpack_require__(1111);\n    var Storage = __webpack_require__(1114);\n    var Animation = __webpack_require__(1115);\n    var HandlerProxy = __webpack_require__(1127);\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: __webpack_require__(1113)\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.2.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n/***/ },\n\n/***/ 292:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _gaugechartComponent = __webpack_require__(839);\n\nvar _gaugechartComponent2 = _interopRequireDefault(_gaugechartComponent);\n\nvar _index = __webpack_require__(641);\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = angular.module('gaugeChart', [_index2.default.name]).component('gaugeChart', _gaugechartComponent2.default);\n\n/***/ },\n\n/***/ 301:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\t\tvalue: true\n});\n\nvar _linechartComponent = __webpack_require__(857);\n\nvar _linechartComponent2 = _interopRequireDefault(_linechartComponent);\n\nvar _index = __webpack_require__(641);\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = angular.module('lineChart', [_index2.default.name]).component('lineChart', _linechartComponent2.default);\n\n/***/ },\n\n/***/ 310:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _piechartComponent = __webpack_require__(876);\n\nvar _piechartComponent2 = _interopRequireDefault(_piechartComponent);\n\nvar _index = __webpack_require__(641);\n\nvar _index2 = _interopRequireDefault(_index);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = angular.module('pieChart', [_index2.default.name]).component('pieChart', _piechartComponent2.default);\n\n/***/ },\n\n/***/ 412:\n/***/ function(module, exports) {\n\n/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n/***/ },\n\n/***/ 421:\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = __webpack_require__(576);\n\n    var GlobalModel = __webpack_require__(789);\n    var ExtensionAPI = __webpack_require__(741);\n    var CoordinateSystemManager = __webpack_require__(630);\n    var OptionManager = __webpack_require__(790);\n\n    var ComponentModel = __webpack_require__(578);\n    var SeriesModel = __webpack_require__(632);\n\n    var ComponentView = __webpack_require__(805);\n    var ChartView = __webpack_require__(617);\n    var graphic = __webpack_require__(422);\n    var modelUtil = __webpack_require__(558);\n    var throttle = __webpack_require__(804);\n\n    var zrender = __webpack_require__(1150);\n    var zrUtil = __webpack_require__(412);\n    var colorTool = __webpack_require__(614);\n    var Eventful = __webpack_require__(613);\n    var timsort = __webpack_require__(654);\n\n    var each = zrUtil.each;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * @param {Object} option\n     * @param {boolean} notMerge\n     * @param {boolean} [lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = true;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n            this[OPTION_UPDATED] = false;\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this, false);\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        // PENDING\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        highlight: function (payload) {\n            toggleHighlight.call(this, 'highlight', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        downplay: function (payload) {\n            toggleHighlight.call(this, 'downplay', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @param {Object} payload\n     * @private\n     */\n    function toggleHighlight(method, payload) {\n        var ecModel = this._model;\n\n        // dispatchAction before setOption\n        if (!ecModel) {\n            return;\n        }\n\n        ecModel.eachComponent(\n            {mainType: 'series', query: payload},\n            function (seriesModel, index) {\n                var chartView = this._chartsMap[seriesModel.__viewId];\n                if (chartView && chartView.__alive) {\n                    chartView[method](\n                        seriesModel, ecModel, this._api, payload\n                    );\n                }\n            },\n            this\n        );\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var actionWrap = actions[payload.type];\n        var actionInfo = actionWrap.actionInfo;\n        var updateMethod = actionInfo.update || 'update';\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // Highlight and downplay are special.\n            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\n        }\n\n        if (updateMethod !== 'none' && !isHighlightOrDownplay) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payload.type,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = ComponentModel.parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.3.2',\n        dependencies: {\n            zrender: '3.2.2'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n\n    var parseClassType = ComponentModel.parseClassType;\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts, superClass) {\n        var Clazz = ComponentModel;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts, superClass) {\n        var Clazz = ComponentView;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts, superClass) {\n        var Clazz = SeriesModel;\n        if (superClass) {\n            superClass = 'series.' + superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts, superClass) {\n        var Clazz = ChartView;\n        if (superClass) {\n            superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ChartView.getClass(classType.main, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, __webpack_require__(807));\n    echarts.registerPreprocessor(__webpack_require__(797));\n    echarts.registerLoading('default', __webpack_require__(788));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = __webpack_require__(615);\n    echarts.Model = __webpack_require__(575);\n\n    echarts.graphic = __webpack_require__(422);\n    echarts.number = __webpack_require__(444);\n    echarts.format = __webpack_require__(557);\n    echarts.matrix = __webpack_require__(612);\n    echarts.vector = __webpack_require__(555);\n    echarts.color = __webpack_require__(614);\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(664)))\n\n/***/ },\n\n/***/ 422:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var pathTool = __webpack_require__(1148);\n    var round = Math.round;\n    var Path = __webpack_require__(553);\n    var colorTool = __webpack_require__(614);\n    var matrix = __webpack_require__(612);\n    var vector = __webpack_require__(555);\n\n    var graphic = {};\n\n    graphic.Group = __webpack_require__(625);\n\n    graphic.Image = __webpack_require__(671);\n\n    graphic.Text = __webpack_require__(1131);\n\n    graphic.Circle = __webpack_require__(1138);\n\n    graphic.Sector = __webpack_require__(1144);\n\n    graphic.Ring = __webpack_require__(1143);\n\n    graphic.Polygon = __webpack_require__(1140);\n\n    graphic.Polyline = __webpack_require__(1141);\n\n    graphic.Rect = __webpack_require__(1142);\n\n    graphic.Line = __webpack_require__(1139);\n\n    graphic.BezierCurve = __webpack_require__(1137);\n\n    graphic.Arc = __webpack_require__(1136);\n\n    graphic.CompoundPath = __webpack_require__(1128);\n\n    graphic.LinearGradient = __webpack_require__(1129);\n\n    graphic.RadialGradient = __webpack_require__(1130);\n\n    graphic.BoundingRect = __webpack_require__(574);\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            this.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        var animationEnabled = animatableModel\n            && (\n                animatableModel.ifEnableAnimation\n                ? animatableModel.ifEnableAnimation()\n                // Directly use animation property\n                : animatableModel.getShallow('animation')\n            );\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel\n                && animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel\n                && animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel\n                && animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(dataIndex);\n            }\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n/***/ },\n\n/***/ 444:\n/***/ function(module, exports) {\n\n/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number}  precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        return Math.max(\n            -dataQuantity + sizeQuantity,\n            0\n        );\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    module.exports = number;\n\n\n/***/ },\n\n/***/ 553:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = __webpack_require__(655);\n    var zrUtil = __webpack_require__(412);\n    var PathProxy = __webpack_require__(626);\n    var pathContain = __webpack_require__(1121);\n\n    var Pattern = __webpack_require__(672);\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n/***/ },\n\n/***/ 555:\n/***/ function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n/***/ },\n\n/***/ 557:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var numberUtil = __webpack_require__(444);\n    var textContain = __webpack_require__(604);\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param  {string} tpl\n     * @param  {Array.<Object>|Object} paramsList\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    paramsList[seriesIdx][$vars[k]]\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n/***/ },\n\n/***/ 558:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var formatUtil = __webpack_require__(557);\n    var nubmerUtil = __webpack_require__(444);\n    var Model = __webpack_require__(575);\n    var zrUtil = __webpack_require__(412);\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n/***/ },\n\n/***/ 574:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = __webpack_require__(555);\n    var matrix = __webpack_require__(612);\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n/***/ },\n\n/***/ 575:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = __webpack_require__(412);\n    var clazzUtil = __webpack_require__(602);\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (!path) {\n                return this.option;\n            }\n\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n\n            var obj = this.option;\n            var parentModel = this.parentModel;\n            for (var i = 0; i < path.length; i++) {\n                // Ignore empty\n                if (!path[i]) {\n                    continue;\n                }\n                // obj could be number/string/... (like 0)\n                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\n                if (obj == null) {\n                    break;\n                }\n            }\n            if (obj == null && parentModel && !ignoreParent) {\n                obj = parentModel.get(path);\n            }\n            return obj;\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = this.parentModel;\n            if (val == null && parentModel && !ignoreParent) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = this.get(path, true);\n            var thisParentModel = this.parentModel;\n            var model = new Model(\n                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\n                this.ecModel\n            );\n            return model;\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        }\n    };\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, __webpack_require__(795));\n    mixin(Model, __webpack_require__(792));\n    mixin(Model, __webpack_require__(796));\n    mixin(Model, __webpack_require__(794));\n\n    module.exports = Model;\n\n\n/***/ },\n\n/***/ 576:\n/***/ function(module, exports) {\n\n/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default,\n                // only MS browsers are reliable on pointer events currently.\n                && (browser.edge || (browser.ie && browser.version >= 10))\n        };\n    }\n\n\n/***/ },\n\n/***/ 578:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = __webpack_require__(575);\n    var zrUtil = __webpack_require__(412);\n    var arrayPush = Array.prototype.push;\n    var componentUtil = __webpack_require__(635);\n    var clazzUtil = __webpack_require__(602);\n    var layout = __webpack_require__(603);\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!this.hasOwnProperty('__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                this.__defaultOption = defaultOption;\n            }\n            return this.__defaultOption;\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, __webpack_require__(793));\n\n    module.exports = ComponentModel;\n\n\n/***/ },\n\n/***/ 602:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\n            var Clazz = storage[componentTypeMain];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n/***/ },\n\n/***/ 603:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = __webpack_require__(412);\n    var BoundingRect = __webpack_require__(574);\n    var numberUtil = __webpack_require__(444);\n    var formatUtil = __webpack_require__(557);\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n/***/ },\n\n/***/ 604:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = __webpack_require__(412);\n    var BoundingRect = __webpack_require__(574);\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n/***/ },\n\n/***/ 605:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = __webpack_require__(555);\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n/***/ },\n\n/***/ 612:\n/***/ function(module, exports) {\n\n\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n/***/ },\n\n/***/ 613:\n/***/ function(module, exports) {\n\n/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n/***/ },\n\n/***/ 614:\n/***/ function(module, exports) {\n\n/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n/***/ },\n\n/***/ 615:\n/***/ function(module, exports, __webpack_require__) {\n\n/* WEBPACK VAR INJECTION */(function(global) {/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = __webpack_require__(575);\n    var DataDiffer = __webpack_require__(786);\n\n    var zrUtil = __webpack_require__(412);\n    var modelUtil = __webpack_require__(558);\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getDataExtent = function (dim, stack) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                value < min && (min = value);\n                value > max && (max = value);\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n/* WEBPACK VAR INJECTION */}.call(exports, __webpack_require__(664)))\n\n/***/ },\n\n/***/ 616:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = __webpack_require__(602);\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n/***/ },\n\n/***/ 617:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(625);\n    var componentUtil = __webpack_require__(635);\n    var clazzUtil = __webpack_require__(602);\n    var modelUtil = __webpack_require__(558);\n    var zrUtil = __webpack_require__(412);\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n/***/ },\n\n/***/ 624:\n/***/ function(module, exports) {\n\n\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n/***/ },\n\n/***/ 625:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = __webpack_require__(412);\n    var Element = __webpack_require__(665);\n    var BoundingRect = __webpack_require__(574);\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n/***/ },\n\n/***/ 626:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = __webpack_require__(605);\n    var vec2 = __webpack_require__(555);\n    var bbox = __webpack_require__(1126);\n    var BoundingRect = __webpack_require__(574);\n    var dpr = __webpack_require__(624).devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._xi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n/***/ },\n\n/***/ 627:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = __webpack_require__(613);\n    var env = __webpack_require__(576);\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * 停止冒泡和阻止默认行为\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n/***/ },\n\n/***/ 630:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n/***/ },\n\n/***/ 631:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var OrdinalScale = __webpack_require__(802);\n    var IntervalScale = __webpack_require__(634);\n    __webpack_require__(803);\n    __webpack_require__(801);\n    var Scale = __webpack_require__(616);\n\n    var numberUtil = __webpack_require__(444);\n    var zrUtil = __webpack_require__(412);\n    var textContain = __webpack_require__(604);\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var originalExtent = scale.getExtent();\n        var span = originalExtent[1] - originalExtent[0];\n        if (scale.type === 'ordinal') {\n            // If series has no data, scale extent may be wrong\n            if (!isFinite(span)) {\n                return [0, 0];\n            }\n            else {\n                return originalExtent;\n            }\n        }\n        var min = model.getMin ? model.getMin() : model.get('min');\n        var max = model.getMax ? model.getMax() : model.get('max');\n        var crossZero = model.getNeedCrossZero\n            ? model.getNeedCrossZero() : !model.get('scale');\n        var boundaryGap = model.get('boundaryGap');\n        if (!zrUtil.isArray(boundaryGap)) {\n            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n        }\n        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n        var fixMin = true;\n        var fixMax = true;\n        // Add boundary gap\n        if (min == null) {\n            min = originalExtent[0] - boundaryGap[0] * span;\n            fixMin = false;\n        }\n        if (max == null) {\n            max = originalExtent[1] + boundaryGap[1] * span;\n            fixMax = false;\n        }\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        // Evaluate if axis needs cross zero\n        if (crossZero) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\n        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n/***/ },\n\n/***/ 632:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n    var formatUtil = __webpack_require__(557);\n    var modelUtil = __webpack_require__(558);\n    var ComponentModel = __webpack_require__(578);\n    var colorPaletteMixin = __webpack_require__(660);\n    var env = __webpack_require__(576);\n    var layout = __webpack_require__(603);\n\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\n\n            // If we reverse the order (make this._data firstly, and then make\n            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause this._data.graph.data !== this._data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                this._data = data;\n                this._dataBeforeProcessed = data.cloneShallow();\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            return dataType == null ? this._data : this._data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            this._data = data;\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return this._dataBeforeProcessed;\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = this._data;\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : addCommas(value);\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue)\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        ifEnableAnimation: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n/***/ },\n\n/***/ 633:\n/***/ function(module, exports, __webpack_require__) {\n\n// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = __webpack_require__(412);\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n/***/ },\n\n/***/ 634:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = __webpack_require__(444);\n    var formatUtil = __webpack_require__(557);\n    var Scale = __webpack_require__(616);\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n/***/ },\n\n/***/ 635:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var clazz = __webpack_require__(602);\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n/***/ },\n\n/***/ 641:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\n__webpack_require__(1093);\n\nvar echarts = __webpack_require__(421);\n\n// include gauge chart\n__webpack_require__(743);\n\n// include pie chart\n__webpack_require__(754);\n// include line chart\n__webpack_require__(749);\n\n// include tooltip component\n__webpack_require__(771);\n// include title component\n__webpack_require__(770);\n// include legend component\n__webpack_require__(765);\n\nexports.default = angular.module('ng-echarts', []).directive('ngEcharts', [function () {\n\treturn {\n\t\tlink: function link(scope, element, attrs, ctrl) {\n\t\t\tfunction refreshChart() {\n\t\t\t\tvar theme = scope.config && scope.config.theme ? scope.config.theme : 'default';\n\t\t\t\tvar chart = echarts.init(element[0], theme);\n\t\t\t\tif (scope.config && scope.config.dataLoaded === false) {\n\t\t\t\t\tchart.showLoading();\n\t\t\t\t}\n\n\t\t\t\tif (scope.config && scope.config.dataLoaded) {\n\t\t\t\t\tchart.setOption(scope.option);\n\t\t\t\t\tchart.resize();\n\t\t\t\t\tchart.hideLoading();\n\t\t\t\t}\n\n\t\t\t\tif (scope.config && scope.config.event) {\n\t\t\t\t\tif (angular.isArray(scope.config.event)) {\n\t\t\t\t\t\tangular.forEach(scope.config.event, function (value, key) {\n\t\t\t\t\t\t\tfor (var e in value) {\n\t\t\t\t\t\t\t\tchart.on(e, value[e]);\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t});\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t};\n\n\t\t\t//自定义参数 - config\n\t\t\t// event 定义事件\n\t\t\t// theme 主题名称\n\t\t\t// dataLoaded 数据是否加载\n\n\t\t\tscope.$watch(function () {\n\t\t\t\treturn scope.config;\n\t\t\t}, function (value) {\n\t\t\t\tif (value) {\n\t\t\t\t\trefreshChart();\n\t\t\t\t}\n\t\t\t}, true);\n\n\t\t\t//图表原生option\n\t\t\tscope.$watch(function () {\n\t\t\t\treturn scope.option;\n\t\t\t}, function (value) {\n\t\t\t\tif (value) {\n\t\t\t\t\trefreshChart();\n\t\t\t\t}\n\t\t\t}, true);\n\t\t},\n\t\tscope: {\n\t\t\toption: '=ecOption',\n\t\t\tconfig: '=ecConfig'\n\t\t},\n\t\trestrict: 'EA'\n\t};\n}]);\n\n/***/ },\n\n/***/ 654:\n/***/ function(module, exports) {\n\n// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n/***/ },\n\n/***/ 655:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var Style = __webpack_require__(673);\n\n    var Element = __webpack_require__(665);\n    var RectText = __webpack_require__(1135);\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n/***/ },\n\n/***/ 656:\n/***/ function(module, exports) {\n\n\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n/***/ },\n\n/***/ 657:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = __webpack_require__(412);\n    var symbolUtil = __webpack_require__(661);\n    var graphic = __webpack_require__(422);\n    var numberUtil = __webpack_require__(444);\n\n    function normalizeSymbolSize(symbolSize) {\n        symbolSize = symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n        symbolSize[0] /= 2;\n        symbolSize[1] /= 2;\n        return symbolSize;\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        graphic.initProps(symbolPath, {\n            scale: size\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: symbolSize\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        if (hoverAnimation && seriesModel.ifEnableAnimation()) {\n            var onEmphasis = function() {\n                var ratio = size[1] / size[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(size[0] * 1.1, size[0] + 3),\n                        Math.max(size[1] * 1.1, size[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: size\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n/***/ },\n\n/***/ 658:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var ComponentModel = __webpack_require__(578);\n    var zrUtil = __webpack_require__(412);\n    var axisModelCreator = __webpack_require__(778);\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        findGridModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.get('gridIndex'),\n                id: this.get('gridId')\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(777));\n    zrUtil.merge(AxisModel.prototype, __webpack_require__(779));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n/***/ },\n\n/***/ 659:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = __webpack_require__(412);\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n/***/ },\n\n/***/ 660:\n/***/ function(module, exports) {\n\n\n    module.exports = {\n        clearColorPalette: function () {\n            this._colorIdx = 0;\n            this._colorNameMap = {};\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = scope._colorIdx || 0;\n            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\n\n            return color;\n        }\n    };\n\n\n/***/ },\n\n/***/ 661:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// Symbol factory\n\n\n    var graphic = __webpack_require__(422);\n    var BoundingRect = __webpack_require__(574);\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n/***/ },\n\n/***/ 664:\n/***/ function(module, exports) {\n\nvar g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n/***/ },\n\n/***/ 665:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = __webpack_require__(669);\n    var Eventful = __webpack_require__(613);\n    var Transformable = __webpack_require__(1147);\n    var Animatable = __webpack_require__(1145);\n    var zrUtil = __webpack_require__(412);\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n/***/ },\n\n/***/ 666:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = __webpack_require__(1116);\n    var color = __webpack_require__(614);\n    var util = __webpack_require__(412);\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n/***/ },\n\n/***/ 667:\n/***/ function(module, exports) {\n\n\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n/***/ },\n\n/***/ 668:\n/***/ function(module, exports) {\n\n\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n/***/ },\n\n/***/ 669:\n/***/ function(module, exports) {\n\n/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n/***/ },\n\n/***/ 670:\n/***/ function(module, exports, __webpack_require__) {\n\n\n        var config = __webpack_require__(624);\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n/***/ },\n\n/***/ 671:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = __webpack_require__(655);\n    var BoundingRect = __webpack_require__(574);\n    var zrUtil = __webpack_require__(412);\n\n    var LRU = __webpack_require__(1125);\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n/***/ },\n\n/***/ 672:\n/***/ function(module, exports) {\n\n\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n/***/ },\n\n/***/ 673:\n/***/ function(module, exports) {\n\n/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n/***/ },\n\n/***/ 674:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var smoothSpline = __webpack_require__(1134);\n    var smoothBezier = __webpack_require__(1133);\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n/***/ },\n\n/***/ 687:\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ },\n\n/***/ 696:\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ },\n\n/***/ 705:\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1)();\n// imports\n\n\n// module\nexports.push([module.i, \"\", \"\"]);\n\n// exports\n\n\n/***/ },\n\n/***/ 723:\n/***/ function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(1)();\n// imports\n\n\n// module\nexports.push([module.i, \".echarts {\\n  width: 100%;\\n  height: 100%;\\n  display: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n/***/ },\n\n/***/ 741:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n/***/ },\n\n/***/ 742:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    var echarts = __webpack_require__(421);\n    var zrUtil = __webpack_require__(412);\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n/***/ },\n\n/***/ 743:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    __webpack_require__(744);\n    __webpack_require__(745);\n\n\n/***/ },\n\n/***/ 744:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var List = __webpack_require__(615);\n    var SeriesModel = __webpack_require__(632);\n    var zrUtil = __webpack_require__(412);\n\n    var GaugeSeries = SeriesModel.extend({\n\n        type: 'series.gauge',\n\n        getInitialData: function (option, ecModel) {\n            var list = new List(['value'], this);\n            var dataOpt = option.data || [];\n            if (!zrUtil.isArray(dataOpt)) {\n                dataOpt = [dataOpt];\n            }\n            // Only use the first data item\n            list.initData(dataOpt);\n            return list;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            legendHoverLink: true,\n            radius: '75%',\n            startAngle: 225,\n            endAngle: -45,\n            clockwise: true,\n            // 最小值\n            min: 0,\n            // 最大值\n            max: 100,\n            // 分割段数，默认为10\n            splitNumber: 10,\n            // 坐标轴线\n            axisLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                lineStyle: {       // 属性lineStyle控制线条样式\n                    color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n                    width: 30\n                }\n            },\n            // 分隔线\n            splitLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                // 属性length控制线长\n                length: 30,\n                // 属性lineStyle（详见lineStyle）控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // 坐标轴小标记\n            axisTick: {\n                // 属性show控制显示与否，默认不显示\n                show: true,\n                // 每份split细分多少段\n                splitNumber: 5,\n                // 属性length控制线长\n                length: 8,\n                // 属性lineStyle控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 1,\n                    type: 'solid'\n                }\n            },\n            axisLabel: {\n                show: true,\n                distance: 5,\n                // formatter: null,\n                textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                    color: 'auto'\n                }\n            },\n            pointer: {\n                show: true,\n                length: '80%',\n                width: 8\n            },\n            itemStyle: {\n                normal: {\n                    color: 'auto'\n                }\n            },\n            title: {\n                show: true,\n                // x, y，单位px\n                offsetCenter: [0, '-40%'],\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: '#333',\n                    fontSize: 15\n                }\n            },\n            detail: {\n                show: true,\n                backgroundColor: 'rgba(0,0,0,0)',\n                borderWidth: 0,\n                borderColor: '#ccc',\n                width: 100,\n                height: 40,\n                // x, y，单位px\n                offsetCenter: [0, '40%'],\n                // formatter: null,\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: 'auto',\n                    fontSize: 30\n                }\n            }\n        }\n    });\n\n    module.exports = GaugeSeries;\n\n\n/***/ },\n\n/***/ 745:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var PointerPath = __webpack_require__(746);\n\n    var graphic = __webpack_require__(422);\n    var numberUtil = __webpack_require__(444);\n    var parsePercent = numberUtil.parsePercent;\n\n    function parsePosition(seriesModel, api) {\n        var center = seriesModel.get('center');\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        var cx = parsePercent(center[0], api.getWidth());\n        var cy = parsePercent(center[1], api.getHeight());\n        var r = parsePercent(seriesModel.get('radius'), size / 2);\n\n        return {\n            cx: cx,\n            cy: cy,\n            r: r\n        };\n    }\n\n    function formatLabel(label, labelFormatter) {\n        if (labelFormatter) {\n            if (typeof labelFormatter === 'string') {\n                label = labelFormatter.replace('{value}', label != null ? label : '');\n            }\n            else if (typeof labelFormatter === 'function') {\n                label = labelFormatter(label);\n            }\n        }\n\n        return label;\n    }\n\n    var PI2 = Math.PI * 2;\n\n    var GaugeView = __webpack_require__(617).extend({\n\n        type: 'gauge',\n\n        render: function (seriesModel, ecModel, api) {\n\n            this.group.removeAll();\n\n            var colorList = seriesModel.get('axisLine.lineStyle.color');\n            var posInfo = parsePosition(seriesModel, api);\n\n            this._renderMain(\n                seriesModel, ecModel, api, colorList, posInfo\n            );\n        },\n\n        dispose: function () {},\n\n        _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n            var group = this.group;\n\n            var axisLineModel = seriesModel.getModel('axisLine');\n            var lineStyleModel = axisLineModel.getModel('lineStyle');\n\n            var clockwise = seriesModel.get('clockwise');\n            var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n            var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n\n            var angleRangeSpan = (endAngle - startAngle) % PI2;\n\n            var prevEndAngle = startAngle;\n            var axisLineWidth = lineStyleModel.get('width');\n\n            for (var i = 0; i < colorList.length; i++) {\n                // Clamp\n                var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n                var endAngle = startAngle + angleRangeSpan * percent;\n                var sector = new graphic.Sector({\n                    shape: {\n                        startAngle: prevEndAngle,\n                        endAngle: endAngle,\n                        cx: posInfo.cx,\n                        cy: posInfo.cy,\n                        clockwise: clockwise,\n                        r0: posInfo.r - axisLineWidth,\n                        r: posInfo.r\n                    },\n                    silent: true\n                });\n\n                sector.setStyle({\n                    fill: colorList[i][1]\n                });\n\n                sector.setStyle(lineStyleModel.getLineStyle(\n                    // Because we use sector to simulate arc\n                    // so the properties for stroking are useless\n                    ['color', 'borderWidth', 'borderColor']\n                ));\n\n                group.add(sector);\n\n                prevEndAngle = endAngle;\n            }\n\n            var getColor = function (percent) {\n                // Less than 0\n                if (percent <= 0) {\n                    return colorList[0][1];\n                }\n                for (var i = 0; i < colorList.length; i++) {\n                    if (colorList[i][0] >= percent\n                        && (i === 0 ? 0 : colorList[i - 1][0]) < percent\n                    ) {\n                        return colorList[i][1];\n                    }\n                }\n                // More than 1\n                return colorList[i - 1][1];\n            };\n\n            if (!clockwise) {\n                var tmp = startAngle;\n                startAngle = endAngle;\n                endAngle = tmp;\n            }\n\n            this._renderTicks(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderPointer(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderTitle(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n            this._renderDetail(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n        },\n\n        _renderTicks: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var group = this.group;\n            var cx = posInfo.cx;\n            var cy = posInfo.cy;\n            var r = posInfo.r;\n\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n\n            var splitLineModel = seriesModel.getModel('splitLine');\n            var tickModel = seriesModel.getModel('axisTick');\n            var labelModel = seriesModel.getModel('axisLabel');\n\n            var splitNumber = seriesModel.get('splitNumber');\n            var subSplitNumber = tickModel.get('splitNumber');\n\n            var splitLineLen = parsePercent(\n                splitLineModel.get('length'), r\n            );\n            var tickLen = parsePercent(\n                tickModel.get('length'), r\n            );\n\n            var angle = startAngle;\n            var step = (endAngle - startAngle) / splitNumber;\n            var subStep = step / subSplitNumber;\n\n            var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n            var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n            var textStyleModel = labelModel.getModel('textStyle');\n\n            for (var i = 0; i <= splitNumber; i++) {\n                var unitX = Math.cos(angle);\n                var unitY = Math.sin(angle);\n                // Split line\n                if (splitLineModel.get('show')) {\n                    var splitLine = new graphic.Line({\n                        shape: {\n                            x1: unitX * r + cx,\n                            y1: unitY * r + cy,\n                            x2: unitX * (r - splitLineLen) + cx,\n                            y2: unitY * (r - splitLineLen) + cy\n                        },\n                        style: splitLineStyle,\n                        silent: true\n                    });\n                    if (splitLineStyle.stroke === 'auto') {\n                        splitLine.setStyle({\n                            stroke: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(splitLine);\n                }\n\n                // Label\n                if (labelModel.get('show')) {\n                    var label = formatLabel(\n                        numberUtil.round(i / splitNumber * (maxVal - minVal) + minVal),\n                        labelModel.get('formatter')\n                    );\n                    var distance = labelModel.get('distance');\n\n                    var text = new graphic.Text({\n                        style: {\n                            text: label,\n                            x: unitX * (r - splitLineLen - distance) + cx,\n                            y: unitY * (r - splitLineLen - distance) + cy,\n                            fill: textStyleModel.getTextColor(),\n                            textFont: textStyleModel.getFont(),\n                            textVerticalAlign: unitY < -0.4 ? 'top' : (unitY > 0.4 ? 'bottom' : 'middle'),\n                            textAlign: unitX < -0.4 ? 'left' : (unitX > 0.4 ? 'right' : 'center')\n                        },\n                        silent: true\n                    });\n                    if (text.style.fill === 'auto') {\n                        text.setStyle({\n                            fill: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(text);\n                }\n\n                // Axis tick\n                if (tickModel.get('show') && i !== splitNumber) {\n                    for (var j = 0; j <= subSplitNumber; j++) {\n                        var unitX = Math.cos(angle);\n                        var unitY = Math.sin(angle);\n                        var tickLine = new graphic.Line({\n                            shape: {\n                                x1: unitX * r + cx,\n                                y1: unitY * r + cy,\n                                x2: unitX * (r - tickLen) + cx,\n                                y2: unitY * (r - tickLen) + cy\n                            },\n                            silent: true,\n                            style: tickLineStyle\n                        });\n\n                        if (tickLineStyle.stroke === 'auto') {\n                            tickLine.setStyle({\n                                stroke: getColor((i + j / subSplitNumber) / splitNumber)\n                            });\n                        }\n\n                        group.add(tickLine);\n                        angle += subStep;\n                    }\n                    angle -= subStep;\n                }\n                else {\n                    angle += step;\n                }\n            }\n        },\n\n        _renderPointer: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n            var angleExtent = [startAngle, endAngle];\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var pointer = new PointerPath({\n                        shape: {\n                            angle: startAngle\n                        }\n                    });\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(idx, pointer);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var pointer = oldData.getItemGraphicEl(oldIdx);\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(newIdx, pointer);\n                })\n                .remove(function (idx) {\n                    var pointer = oldData.getItemGraphicEl(idx);\n                    group.remove(pointer);\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (pointer, idx) {\n                var itemModel = data.getItemModel(idx);\n                var pointerModel = itemModel.getModel('pointer');\n\n                pointer.setShape({\n                    x: posInfo.cx,\n                    y: posInfo.cy,\n                    width: parsePercent(\n                        pointerModel.get('width'), posInfo.r\n                    ),\n                    r: parsePercent(pointerModel.get('length'), posInfo.r)\n                });\n\n                pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n                if (pointer.style.fill === 'auto') {\n                    pointer.setStyle('fill', getColor(\n                        (data.get('value', idx) - valueExtent[0]) / (valueExtent[1] - valueExtent[0])\n                    ));\n                }\n\n                graphic.setHoverStyle(\n                    pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle()\n                );\n            });\n\n            this._data = data;\n        },\n\n        _renderTitle: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var titleModel = seriesModel.getModel('title');\n            if (titleModel.get('show')) {\n                var textStyleModel = titleModel.getModel('textStyle');\n                var offsetCenter = titleModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var text = new graphic.Text({\n                    style: {\n                        x: x,\n                        y: y,\n                        // FIXME First data name ?\n                        text: seriesModel.getData().getName(0),\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont(),\n                        textAlign: 'center',\n                        textVerticalAlign: 'middle'\n                    }\n                });\n                this.group.add(text);\n            }\n        },\n\n        _renderDetail: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var detailModel = seriesModel.getModel('detail');\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n            if (detailModel.get('show')) {\n                var textStyleModel = detailModel.getModel('textStyle');\n                var offsetCenter = detailModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var width = parsePercent(detailModel.get('width'), posInfo.r);\n                var height = parsePercent(detailModel.get('height'), posInfo.r);\n                var value = seriesModel.getData().get('value', 0);\n                var rect = new graphic.Rect({\n                    shape: {\n                        x: x - width / 2,\n                        y: y - height / 2,\n                        width: width,\n                        height: height\n                    },\n                    style: {\n                        text: formatLabel(\n                            // FIXME First data name ?\n                            value, detailModel.get('formatter')\n                        ),\n                        fill: detailModel.get('backgroundColor'),\n                        textFill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    }\n                });\n                if (rect.style.textFill === 'auto') {\n                    rect.setStyle('textFill', getColor(\n                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\n                    ));\n                }\n                rect.setStyle(detailModel.getItemStyle(['color']));\n                this.group.add(rect);\n            }\n        }\n    });\n\n    module.exports = GaugeView;\n\n\n/***/ },\n\n/***/ 746:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    module.exports = __webpack_require__(553).extend({\n\n        type: 'echartsGaugePointer',\n\n        shape: {\n            angle: 0,\n\n            width: 10,\n\n            r: 10,\n\n            x: 0,\n\n            y: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var mathCos = Math.cos;\n            var mathSin = Math.sin;\n\n            var r = shape.r;\n            var width = shape.width;\n            var angle = shape.angle;\n            var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n            var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n\n            angle = shape.angle - Math.PI / 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(\n                shape.x + mathCos(angle) * width,\n                shape.y + mathSin(angle) * width\n            );\n            ctx.lineTo(\n                shape.x + mathCos(shape.angle) * r,\n                shape.y + mathSin(shape.angle) * r\n            );\n            ctx.lineTo(\n                shape.x - mathCos(angle) * width,\n                shape.y - mathSin(angle) * width\n            );\n            ctx.lineTo(x, y);\n            return;\n        }\n    });\n\n\n/***/ },\n\n/***/ 747:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = __webpack_require__(422);\n    var Symbol = __webpack_require__(657);\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n/***/ },\n\n/***/ 748:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var List = __webpack_require__(615);\n    var completeDimensions = __webpack_require__(659);\n    var zrUtil = __webpack_require__(412);\n    var modelUtil = __webpack_require__(558);\n    var CoordinateSystem = __webpack_require__(630);\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n/***/ },\n\n/***/ 749:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var echarts = __webpack_require__(421);\n    var PRIORITY = echarts.PRIORITY;\n\n    __webpack_require__(750);\n    __webpack_require__(751);\n\n    echarts.registerVisual(zrUtil.curry(\n        __webpack_require__(808), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(787), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        __webpack_require__(800), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    __webpack_require__(762);\n\n\n/***/ },\n\n/***/ 750:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var createListFromArray = __webpack_require__(748);\n    var SeriesModel = __webpack_require__(632);\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n/***/ },\n\n/***/ 751:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = __webpack_require__(412);\n    var SymbolDraw = __webpack_require__(747);\n    var Symbol = __webpack_require__(657);\n    var lineAnimationDiff = __webpack_require__(752);\n    var graphic = __webpack_require__(422);\n    var modelUtil = __webpack_require__(558);\n    var polyHelper = __webpack_require__(753);\n    var ChartView = __webpack_require__(617);\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n/***/ },\n\n/***/ 752:\n/***/ function(module, exports) {\n\n\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n/***/ },\n\n/***/ 753:\n/***/ function(module, exports, __webpack_require__) {\n\n// Poly path support NaN point\n\n\n    var Path = __webpack_require__(553);\n    var vec2 = __webpack_require__(555);\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n/***/ },\n\n/***/ 754:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var echarts = __webpack_require__(421);\n\n    __webpack_require__(755);\n    __webpack_require__(756);\n\n    __webpack_require__(742)('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(__webpack_require__(806), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        __webpack_require__(758), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(__webpack_require__(799), 'pie'));\n\n\n/***/ },\n\n/***/ 755:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var List = __webpack_require__(615);\n    var zrUtil = __webpack_require__(412);\n    var modelUtil = __webpack_require__(558);\n    var completeDimensions = __webpack_require__(659);\n\n    var dataSelectableMixin = __webpack_require__(764);\n\n    var PieSeries = __webpack_require__(421).extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this._dataBeforeProcessed;\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this._data;\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n/***/ },\n\n/***/ 756:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(422);\n    var zrUtil = __webpack_require__(412);\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n                shape: {\n                    endAngle: layout.endAngle\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = __webpack_require__(617).extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    if (isFirstRender) {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (hasAnimation && isFirstRender && data.count() > 0) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n/***/ },\n\n/***/ 757:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = __webpack_require__(604);\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n/***/ },\n\n/***/ 758:\n/***/ function(module, exports, __webpack_require__) {\n\n// TODO minAngle\n\n\n\n    var numberUtil = __webpack_require__(444);\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = __webpack_require__(757);\n    var zrUtil = __webpack_require__(412);\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = sum === 0 ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n/***/ },\n\n/***/ 759:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// TODO boundaryGap\n\n\n    __webpack_require__(658);\n\n    __webpack_require__(761);\n\n\n/***/ },\n\n/***/ 760:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var formatUtil = __webpack_require__(557);\n    var graphic = __webpack_require__(422);\n    var Model = __webpack_require__(575);\n    var numberUtil = __webpack_require__(444);\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = __webpack_require__(555);\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisTick.show')) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n            if (axis.type !== 'category') {\n                // If min or max are user set, we need to check\n                // If the tick on min(max) are overlap on their neighbour tick\n                // If they are overlapped, we need to hide the min(max) tick label\n                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\n                    var firstLabel = textEls[0];\n                    var nextLabel = textEls[1];\n                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                        firstLabel.ignore = true;\n                    }\n                }\n                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\n                    var lastLabel = textEls[textEls.length - 1];\n                    var prevLabel = textEls[textEls.length - 2];\n                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                        lastLabel.ignore = true;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n/***/ },\n\n/***/ 761:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var graphic = __webpack_require__(422);\n    var AxisBuilder = __webpack_require__(760);\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = __webpack_require__(421).extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.findGridModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n/***/ },\n\n/***/ 762:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var graphic = __webpack_require__(422);\n    var zrUtil = __webpack_require__(412);\n    var echarts = __webpack_require__(421);\n\n    __webpack_require__(783);\n\n    __webpack_require__(759);\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n/***/ },\n\n/***/ 763:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    // List layout\n    var layout = __webpack_require__(603);\n    var formatUtil = __webpack_require__(557);\n    var graphic = __webpack_require__(422);\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n/***/ },\n\n/***/ 764:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = __webpack_require__(412);\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n/***/ },\n\n/***/ 765:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Legend component entry file8\n */\n\n\n    __webpack_require__(766);\n    __webpack_require__(768);\n    __webpack_require__(767);\n\n    var echarts = __webpack_require__(421);\n    // Series Filter\n    echarts.registerProcessor(__webpack_require__(769));\n\n\n/***/ },\n\n/***/ 766:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n    var Model = __webpack_require__(575);\n\n    var LegendModel = __webpack_require__(421).extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n/***/ },\n\n/***/ 767:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var symbolCreator = __webpack_require__(661);\n    var graphic = __webpack_require__(422);\n    var listComponentHelper = __webpack_require__(763);\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = __webpack_require__(421).extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n/***/ },\n\n/***/ 768:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @file Legend action\n */\n\n\n    var echarts = __webpack_require__(421);\n    var zrUtil = __webpack_require__(412);\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n/***/ },\n\n/***/ 769:\n/***/ function(module, exports) {\n\n\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n/***/ },\n\n/***/ 770:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var echarts = __webpack_require__(421);\n    var graphic = __webpack_require__(422);\n    var layout = __webpack_require__(603);\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n/***/ },\n\n/***/ 771:\n/***/ function(module, exports, __webpack_require__) {\n\n// FIXME Better way to pack data in graphic element\n\n\n    __webpack_require__(773);\n\n    __webpack_require__(774);\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    __webpack_require__(421).registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    __webpack_require__(421).registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n\n\n/***/ },\n\n/***/ 772:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = __webpack_require__(412);\n    var zrColor = __webpack_require__(614);\n    var eventUtil = __webpack_require__(627);\n    var formatUtil = __webpack_require__(557);\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = __webpack_require__(576);\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n/***/ },\n\n/***/ 773:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    __webpack_require__(421).extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n/***/ },\n\n/***/ 774:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var TooltipContent = __webpack_require__(772);\n    var graphic = __webpack_require__(422);\n    var zrUtil = __webpack_require__(412);\n    var formatUtil = __webpack_require__(557);\n    var numberUtil = __webpack_require__(444);\n    var modelUtil = __webpack_require__(558);\n    var parsePercent = numberUtil.parsePercent;\n    var env = __webpack_require__(576);\n    var Model = __webpack_require__(575);\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    __webpack_require__(421).extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n\n            api.on('showTip', this._manuallyShowTip, this);\n            api.on('hideTip', this._manuallyHideTip, this);\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self._manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self._manuallyShowTip({\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        _manuallyShowTip: function (event) {\n            // From self\n            if (event.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = event.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, event);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (event.x == null || event.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, event);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: event.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(event.x, event.y);\n                this._tryShow({\n                    offsetX: event.x,\n                    offsetY: event.y,\n                    position: event.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        _manuallyHideTip: function (e) {\n            if (e.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var itemModel = dataModel.getData().getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: el.dataIndex,\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: payloadBatch[sampleSeriesIndex].dataIndexInside,\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? firstLine + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            api.off('showTip', this._manuallyShowTip);\n            api.off('hideTip', this._manuallyHideTip);\n        }\n    });\n\n\n/***/ },\n\n/***/ 775:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var numberUtil = __webpack_require__(444);\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = __webpack_require__(412);\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n    };\n\n    module.exports = Axis;\n\n\n/***/ },\n\n/***/ 776:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n/***/ },\n\n/***/ 777:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var axisHelper = __webpack_require__(631);\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Get categories\n     */\n    function getCategories() {\n        return this.get('type') === 'category'\n            && zrUtil.map(this.get('data'), getName);\n    }\n\n    /**\n     * Format labels\n     * @return {Array.<string>}\n     */\n    function getFormattedLabels() {\n        return axisHelper.getFormattedLabels(\n            this.axis,\n            this.get('axisLabel.formatter')\n        );\n    }\n\n    module.exports = {\n\n        getFormattedLabels: getFormattedLabels,\n\n        getCategories: getCategories\n    };\n\n\n/***/ },\n\n/***/ 778:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var axisDefault = __webpack_require__(776);\n    var zrUtil = __webpack_require__(412);\n    var ComponentModel = __webpack_require__(578);\n    var layout = __webpack_require__(603);\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n/***/ },\n\n/***/ 779:\n/***/ function(module, exports) {\n\n\n\n    module.exports = {\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMin: function () {\n            var option = this.option;\n            var min = option.rangeStart != null ? option.rangeStart : option.min;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (min instanceof Date) {\n                min = +min;\n            }\n            return min;\n        },\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMax: function () {\n            var option = this.option;\n            var max = option.rangeEnd != null ? option.rangeEnd : option.max;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (max instanceof Date) {\n                max = +max;\n            }\n            return max;\n        },\n\n        /**\n         * @public\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * @public\n         * @param {number} rangeStart\n         * @param {number} rangeEnd\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * @public\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n/***/ },\n\n/***/ 780:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var Axis = __webpack_require__(775);\n    var axisLabelInterval = __webpack_require__(785);\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n/***/ },\n\n/***/ 781:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = __webpack_require__(412);\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n/***/ },\n\n/***/ 782:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\n\n    var zrUtil = __webpack_require__(412);\n    var Cartesian = __webpack_require__(781);\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n/***/ },\n\n/***/ 783:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = __webpack_require__(603);\n    var axisHelper = __webpack_require__(631);\n\n    var zrUtil = __webpack_require__(412);\n    var Cartesian2D = __webpack_require__(782);\n    var Axis2D = __webpack_require__(780);\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    __webpack_require__(784);\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.findGridModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtent(data.getDataExtent(\n                    dim, axis.scale.type !== 'ordinal'\n                ));\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.findGridModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.findGridModel() !== yAxisModel.findGridModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    __webpack_require__(630).register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n/***/ },\n\n/***/ 784:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    __webpack_require__(658);\n    var ComponentModel = __webpack_require__(578);\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n/***/ },\n\n/***/ 785:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var axisHelper = __webpack_require__(631);\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n/***/ },\n\n/***/ 786:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n/***/ },\n\n/***/ 787:\n/***/ function(module, exports) {\n\n\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n/***/ },\n\n/***/ 788:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var graphic = __webpack_require__(422);\n    var zrUtil = __webpack_require__(412);\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n/***/ },\n\n/***/ 789:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = __webpack_require__(412);\n    var modelUtil = __webpack_require__(558);\n    var Model = __webpack_require__(575);\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = __webpack_require__(578);\n\n    var globalDefault = __webpack_require__(791);\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q.hasOwnProperty(indexAttr)\n                        || q.hasOwnProperty(idAttr)\n                        || q.hasOwnProperty(nameAttr)\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, __webpack_require__(660));\n\n    module.exports = GlobalModel;\n\n\n/***/ },\n\n/***/ 790:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var modelUtil = __webpack_require__(558);\n    var ComponentModel = __webpack_require__(578);\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n/***/ },\n\n/***/ 791:\n/***/ function(module, exports) {\n\n\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n/***/ },\n\n/***/ 792:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    module.exports = {\n        getAreaStyle: __webpack_require__(633)(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n/***/ },\n\n/***/ 793:\n/***/ function(module, exports) {\n\n\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n/***/ },\n\n/***/ 794:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    var getItemStyle = __webpack_require__(633)(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n/***/ },\n\n/***/ 795:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    var getLineStyle = __webpack_require__(633)(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n/***/ },\n\n/***/ 796:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var textContain = __webpack_require__(604);\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n/***/ },\n\n/***/ 797:\n/***/ function(module, exports, __webpack_require__) {\n\n// Compatitable with 2.0\n\n\n    var zrUtil = __webpack_require__(412);\n    var compatStyle = __webpack_require__(798);\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n/***/ },\n\n/***/ 798:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var zrUtil = __webpack_require__(412);\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n/***/ },\n\n/***/ 799:\n/***/ function(module, exports) {\n\n\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n/***/ },\n\n/***/ 800:\n/***/ function(module, exports) {\n\n\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n/***/ },\n\n/***/ 801:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = __webpack_require__(412);\n    var Scale = __webpack_require__(616);\n    var numberUtil = __webpack_require__(444);\n\n    // Use some method of IntervalScale\n    var IntervalScale = __webpack_require__(634);\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n/***/ },\n\n/***/ 802:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = __webpack_require__(412);\n    var Scale = __webpack_require__(616);\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n/***/ },\n\n/***/ 803:\n/***/ function(module, exports, __webpack_require__) {\n\n/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = __webpack_require__(412);\n    var numberUtil = __webpack_require__(444);\n    var formatUtil = __webpack_require__(557);\n\n    var IntervalScale = __webpack_require__(634);\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n/***/ },\n\n/***/ 804:\n/***/ function(module, exports) {\n\n\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n/***/ },\n\n/***/ 805:\n/***/ function(module, exports, __webpack_require__) {\n\n\n\n    var Group = __webpack_require__(625);\n    var componentUtil = __webpack_require__(635);\n    var clazzUtil = __webpack_require__(602);\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n/***/ },\n\n/***/ 806:\n/***/ function(module, exports) {\n\n// Pick color from palette for each data item\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    // FIXME Performance\n                    var itemModel = dataAll.getItemModel(rawIdx);\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ },\n\n/***/ 807:\n/***/ function(module, exports, __webpack_require__) {\n\n\n    var Gradient = __webpack_require__(656);\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n/***/ },\n\n/***/ 808:\n/***/ function(module, exports) {\n\n\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n/***/ },\n\n/***/ 839:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _gaugechart = __webpack_require__(989);\n\nvar _gaugechart2 = _interopRequireDefault(_gaugechart);\n\nvar _gaugechartController = __webpack_require__(840);\n\nvar _gaugechartController2 = _interopRequireDefault(_gaugechartController);\n\n__webpack_require__(1057);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  restrict: 'E',\n  bindings: {},\n  template: _gaugechart2.default,\n  controller: _gaugechartController2.default,\n  controllerAs: 'vm'\n};\n\n/***/ },\n\n/***/ 840:\n/***/ function(module, exports) {\n\n\"use strict\";\n\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar GaugechartController = function () {\n\tGaugechartController.$inject = [\"$state\"];\n\tfunction GaugechartController($state) {\n\t\t\"ngInject\";\n\n\t\t_classCallCheck(this, GaugechartController);\n\n\t\tthis.$state = $state;\n\t\tthis.initGaugeChart();\n\t}\n\n\t_createClass(GaugechartController, [{\n\t\tkey: \"initGaugeChart\",\n\t\tvalue: function initGaugeChart() {\n\t\t\tthis.gaugeConfig = {\n\t\t\t\ttheme: 'default',\n\t\t\t\tdataLoaded: true\n\t\t\t};\n\n\t\t\tthis.gaugeOption = {\n\t\t\t\tseries: [{\n\t\t\t\t\tname: \"外层\",\n\t\t\t\t\tz: 3,\n\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\tendAngle: 0,\n\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\tradius: 80,\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 3, //柱子的宽度\n\t\t\t\t\t\t\tcolor: [[1, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tpointer: {\n\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\tvalue: 100,\n\t\t\t\t\t\tname: \"100%\"\n\t\t\t\t\t}]\n\t\t\t\t}, {\n\t\t\t\t\tname: \"内层\",\n\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\tendAngle: 0,\n\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\tradius: 75,\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 30, //柱子的宽度\n\t\t\t\t\t\t\tcolor: [[0.305, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tpointer: {\n\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\toffsetCenter: [0, '-10px'], //标题位置设置\n\t\t\t\t\t\ttextStyle: { //标题样式设置\n\t\t\t\t\t\t\tcolor: \"#1fbba6\",\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\t\t\t\tfontWeight: \"normal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\tvalue: 30.50,\n\t\t\t\t\t\tname: \"30.50%\"\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn GaugechartController;\n}();\n\nexports.default = GaugechartController;\n\n/***/ },\n\n/***/ 857:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _linechart = __webpack_require__(998);\n\nvar _linechart2 = _interopRequireDefault(_linechart);\n\nvar _linechartController = __webpack_require__(858);\n\nvar _linechartController2 = _interopRequireDefault(_linechartController);\n\n__webpack_require__(1066);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  restrict: 'E',\n  bindings: {},\n  template: _linechart2.default,\n  controller: _linechartController2.default,\n  controllerAs: 'vm'\n};\n\n/***/ },\n\n/***/ 858:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * (description)\n *\n * @author yourname\n */\nvar LinechartController = function () {\n\tLinechartController.$inject = [\"$state\"];\n\tfunction LinechartController($state) {\n\t\t\"ngInject\";\n\n\t\t_classCallCheck(this, LinechartController);\n\n\t\tthis.$state = $state;\n\t\tthis.initLineChart();\n\t}\n\n\t_createClass(LinechartController, [{\n\t\tkey: 'initLineChart',\n\t\tvalue: function initLineChart() {\n\t\t\tvar self = this;\n\t\t\tthis.lineConfig = {\n\t\t\t\ttheme: 'default',\n\t\t\t\tdataLoaded: true\n\t\t\t};\n\n\t\t\tthis.lineOption = {\n\t\t\t\ttitle: {\n\t\t\t\t\ttext: '内存使用情况',\n\t\t\t\t\tsubtext: 'pod memory usage',\n\t\t\t\t\ttextAlign: 'left',\n\t\t\t\t\tx: \"0\",\n\t\t\t\t\ttextStyle: {\n\t\t\t\t\t\tcolor: '#666',\n\t\t\t\t\t\tfontSize: '14'\n\t\t\t\t\t},\n\t\t\t\t\tsubtextStyle: {\n\t\t\t\t\t\tcolor: '#d6d6d6',\n\t\t\t\t\t\tfontSize: '12',\n\t\t\t\t\t\tdisplay: 'inline'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tgrid: {\n\t\t\t\t\tborderWidth: 0,\n\t\t\t\t\tborderColor: '#f2f2f2'\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\torient: 'horizontal',\n\t\t\t\t\ttop: '0',\n\t\t\t\t\tright: '0',\n\t\t\t\t\talign: 'left',\n\t\t\t\t\tdata: ['op-lodgings-sync', 'elasticsearch-logging']\n\t\t\t\t},\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'axis'\n\t\t\t\t},\n\t\t\t\txAxis: {\n\t\t\t\t\ttype: 'category',\n\t\t\t\t\tboundaryGap: false,\n\t\t\t\t\tdata: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\tinterval: 'auto'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tyAxis: {\n\t\t\t\t\ttype: 'value',\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tformatter: '{value} GiB'\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcolor: ['#64b1e4', '#fa9073'],\n\t\t\t\tseries: [{\n\t\t\t\t\tname: 'op-lodgings-sync',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\n\t\t\t\t}, {\n\t\t\t\t\tname: 'elasticsearch-logging',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn LinechartController;\n}();\n\nexports.default = LinechartController;\n\n/***/ },\n\n/***/ 876:\n/***/ function(module, exports, __webpack_require__) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _piechart = __webpack_require__(1007);\n\nvar _piechart2 = _interopRequireDefault(_piechart);\n\nvar _piechartController = __webpack_require__(877);\n\nvar _piechartController2 = _interopRequireDefault(_piechartController);\n\n__webpack_require__(1075);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nexports.default = {\n  restrict: 'E',\n  bindings: {},\n  template: _piechart2.default,\n  controller: _piechartController2.default,\n  controllerAs: 'vm'\n};\n\n/***/ },\n\n/***/ 877:\n/***/ function(module, exports) {\n\n\"use strict\";\n'use strict';\n\nObject.defineProperty(exports, \"__esModule\", {\n\tvalue: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\n/**\n * (description)\n *\n * @author yourname\n */\n\nvar PiechartController = function () {\n\tPiechartController.$inject = [\"$state\"];\n\tfunction PiechartController($state) {\n\t\t\"ngInject\";\n\n\t\t_classCallCheck(this, PiechartController);\n\n\t\tthis.$state = $state;\n\t\tthis.initPieChart();\n\t}\n\n\t_createClass(PiechartController, [{\n\t\tkey: 'initPieChart',\n\t\tvalue: function initPieChart() {\n\t\t\tvar self = this;\n\t\t\tself.pieConfig = {\n\t\t\t\ttheme: 'default',\n\t\t\t\tdataLoaded: true\n\t\t\t};\n\n\t\t\tself.pieOption = {\n\t\t\t\ttooltip: {\n\t\t\t\t\ttrigger: 'item',\n\t\t\t\t\tformatter: \"{a} <br/>{b} : {c} ({d}%)\"\n\t\t\t\t},\n\t\t\t\tlegend: {\n\t\t\t\t\torient: 'vertical',\n\t\t\t\t\tx: '65%',\n\t\t\t\t\ttop: '25%',\n\t\t\t\t\tdata: ['正常', '断开', '等待'],\n\t\t\t\t\tformatter: function formatter(name) {\n\t\t\t\t\t\tvar oa = self.pieOption.series[0].data;\n\t\t\t\t\t\tfor (var i = 0; i < self.pieOption.series[0].data.length; i++) {\n\t\t\t\t\t\t\tif (name == oa[i].name) {\n\t\t\t\t\t\t\t\treturn name + ':' + oa[i].value + '个';\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\tcolor: ['#bdea75', '#fe5454', '#faba3c'],\n\t\t\t\tseries: [{\n\t\t\t\t\tname: '比例分析',\n\t\t\t\t\ttype: 'pie',\n\t\t\t\t\tradius: '55%',\n\t\t\t\t\tcenter: ['35%', '50%'],\n\t\t\t\t\tdata: [{\n\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\tname: '正常'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\tname: '断开'\n\t\t\t\t\t}, {\n\t\t\t\t\t\tvalue: '2',\n\t\t\t\t\t\tname: '等待'\n\t\t\t\t\t}],\n\t\t\t\t\titemStyle: {\n\t\t\t\t\t\tnormal: {\n\t\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\t\tformatter: '{b} : {c} ({d}%)'\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t},\n\t\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\t\tshow: true\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}]\n\t\t\t};\n\t\t}\n\t}]);\n\n\treturn PiechartController;\n}();\n\nexports.default = PiechartController;\n\n/***/ },\n\n/***/ 989:\n/***/ function(module, exports) {\n\nmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport gaugechartComponent from './gaugechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('gaugeChart', [\\n  Charts.name\\n])\\n.component('gaugeChart', gaugechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nthis.gaugeConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\nthis.gaugeOption = {\\n  series: [\\n  {\\n    name: \\\"外层\\\",\\n    z: 3,\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 80,\\n    axisLine: {\\n      lineStyle: {\\n        width: 3, //柱子的宽度\\n        color: [[1, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]]\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: false\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 100,\\n      name: \\\"100%\\\"\\n    }]\\n  },\\n  {\\n    name: \\\"内层\\\",\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 75,\\n    axisLine: {\\n      lineStyle: {\\n        width: 30, //柱子的宽度\\n        color: [[0.305, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: true,\\n      offsetCenter: [0, '-10px'], //标题位置设置\\n      textStyle: { //标题样式设置\\n        color: \\\"#1fbba6\\\",\\n        fontSize: 18,\\n        fontFamily: \\\"Arial\\\",\\n        fontWeight: \\\"normal\\\"\\n      }\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 30.50,\\n      name: \\\"30.50%\\\"\\n    }]\\n  }]\\n};\\n</div>\\n</div>\"\n\n/***/ },\n\n/***/ 998:\n/***/ function(module, exports) {\n\nmodule.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport linechartComponent from './linechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('lineChart', [\\n  Charts.name\\n])\\n.component('lineChart', linechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-12 echarts-container\\\" style=\\\"height: 400px\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\">\\n  <div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\"></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nthis.lineConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nthis.lineOption = {\\n  title: {\\n    text: '内存使用情况',\\n    subtext: 'pod memory usage',\\n    textAlign: 'left',\\n    x: \\\"0\\\",\\n    textStyle: {\\n      color: '#666',\\n      fontSize: '14'\\n    },\\n    subtextStyle: {\\n      color: '#d6d6d6',\\n      fontSize: '12',\\n      display: 'inline'\\n    }\\n  },\\n  grid: {\\n    borderWidth: 0,\\n    borderColor: '#f2f2f2'\\n  },\\n  legend: {\\n    orient: 'horizontal',\\n    top: '0',\\n    right: '0',\\n    align: 'left',\\n    data: ['op-lodgings-sync', 'elasticsearch-logging']\\n  },\\n  tooltip: {\\n    trigger: 'axis'\\n  },\\n  xAxis: {\\n    type: 'category',\\n    boundaryGap: false,\\n    data: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\\n      splitLine: {\\n      show: true,\\n      interval: 'auto'\\n    }\\n  },\\n  yAxis: {\\n    type: 'value',\\n    axisLabel: {\\n      formatter: '{value} GiB'\\n    }\\n  },\\n  color: ['#64b1e4', '#fa9073'],\\n  series: [\\n    {\\n      name: 'op-lodgings-sync',\\n      type: 'line',\\n      smooth: false,\\n      data: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\\n    },\\n    {\\n      name: 'elasticsearch-logging',\\n      type: 'line',\\n      smooth: false,\\n      data: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\\n    }\\n  ]\\n};\\n</div>\\n</div>\\n\"\n\n/***/ }\n\n});\n\n\n// WEBPACK FOOTER //\n// chart.min.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport piechartComponent from './piechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('pieChart', [\\n  Charts.name\\n])\\n.component('pieChart', piechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\" >\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.pieConfig\\\" ec-option=\\\"vm.pieOption\\\" ></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\" >\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nself.pieConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nself.pieOption = {\\n  tooltip: {\\n  trigger: 'item',\\n  formatter: \\\"{a} <br/>{b} : {c} ({d}%)\\\"\\n},\\nlegend: {\\n  orient: 'vertical',\\n  x: '65%',\\n  top: '25%',\\n  data: ['正常', '断开', '等待'],\\n  formatter: function (name) {\\n    var oa = self.pieOption.series[0].data;\\n    for (var i = 0; i < self.pieOption.series[0].data.length; i++) {\\n      if (name == oa[i].name) {\\n        return name + ':' + oa[i].value + '个';\\n      }\\n    }\\n  }\\n},\\ncolor: ['#bdea75', '#fe5454', '#faba3c'],\\nseries: [\\n  {\\n    name: '比例分析',\\n    type: 'pie',\\n    radius: '55%',\\n    center: ['35%', '50%'],\\n    data: [\\n    {\\n      value: '2',\\n      name: '正常'\\n    },\\n    {\\n      value: '2',\\n      name: '断开'\\n    },\\n    {\\n      value: '2',\\n      name: '等待'\\n    }],\\n    itemStyle: {\\n      normal: {\\n        label: {\\n          show: false,\\n          formatter: '{b} : {c} ({d}%)'\\n        }\\n      },\\n      labelLine: {\\n        show: true\\n      }\\n    }\\n}]\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/piechart/piechart.html\n// module id = 1007\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./gaugechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/gaugechart/gaugechart.less\n// module id = 1057\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./linechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/linechart/linechart.less\n// module id = 1066\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../../../node_modules/css-loader/index.js!./../../../../node_modules/less-loader/index.js!./piechart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/piechart/piechart.less\n// module id = 1075\n// module chunks = 0","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./chart.less\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!./../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./chart.less\", function() {\n\t\t\tvar newContent = require(\"!!./../../node_modules/css-loader/index.js!./../../node_modules/less-loader/index.js!./chart.less\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./lib/Charts/chart.less\n// module id = 1093\n// module chunks = 0","'use strict';\n/**\n * Handler\n * @module zrender/Handler\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (shenyi.914@gmail.com)\n */\n\n\n    var util = require('./core/util');\n    var Draggable = require('./mixin/Draggable');\n\n    var Eventful = require('./mixin/Eventful');\n\n    function makeEventPacket(eveType, target, event) {\n        return {\n            type: eveType,\n            event: event,\n            target: target,\n            cancelBubble: false,\n            offsetX: event.zrX,\n            offsetY: event.zrY,\n            gestureEvent: event.gestureEvent,\n            pinchX: event.pinchX,\n            pinchY: event.pinchY,\n            pinchScale: event.pinchScale,\n            wheelDelta: event.zrDelta,\n            zrByTouch: event.zrByTouch\n        };\n    }\n\n    function EmptyProxy () {}\n    EmptyProxy.prototype.dispose = function () {};\n\n    var handlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n    /**\n     * @alias module:zrender/Handler\n     * @constructor\n     * @extends module:zrender/mixin/Eventful\n     * @param {module:zrender/Storage} storage Storage instance.\n     * @param {module:zrender/Painter} painter Painter instance.\n     * @param {module:zrender/dom/HandlerProxy} proxy HandlerProxy instance.\n     * @param {HTMLElement} painterRoot painter.root (not painter.getViewportRoot()).\n     */\n    var Handler = function(storage, painter, proxy, painterRoot) {\n        Eventful.call(this);\n\n        this.storage = storage;\n\n        this.painter = painter;\n\n        this.painterRoot = painterRoot;\n\n        proxy = proxy || new EmptyProxy();\n\n        /**\n         * Proxy of event. can be Dom, WebGLSurface, etc.\n         */\n        this.proxy = proxy;\n\n        // Attach handler\n        proxy.handler = this;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._hovered;\n\n        /**\n         * @private\n         * @type {Date}\n         */\n        this._lastTouchMoment;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastX;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._lastY;\n\n\n        Draggable.call(this);\n\n        util.each(handlerNames, function (name) {\n            proxy.on && proxy.on(name, this[name], this);\n        }, this);\n    };\n\n    Handler.prototype = {\n\n        constructor: Handler,\n\n        mousemove: function (event) {\n            var x = event.zrX;\n            var y = event.zrY;\n\n            var hovered = this.findHover(x, y, null);\n            var lastHovered = this._hovered;\n            var proxy = this.proxy;\n\n            this._hovered = hovered;\n\n            proxy.setCursor && proxy.setCursor(hovered ? hovered.cursor : 'default');\n\n            // Mouse out on previous hovered element\n            if (lastHovered && hovered !== lastHovered && lastHovered.__zr) {\n                this.dispatchToElement(lastHovered, 'mouseout', event);\n            }\n\n            // Mouse moving on one element\n            this.dispatchToElement(hovered, 'mousemove', event);\n\n            // Mouse over on a new element\n            if (hovered && hovered !== lastHovered) {\n                this.dispatchToElement(hovered, 'mouseover', event);\n            }\n        },\n\n        mouseout: function (event) {\n            this.dispatchToElement(this._hovered, 'mouseout', event);\n\n            // There might be some doms created by upper layer application\n            // at the same level of painter.getViewportRoot() (e.g., tooltip\n            // dom created by echarts), where 'globalout' event should not\n            // be triggered when mouse enters these doms. (But 'mouseout'\n            // should be triggered at the original hovered element as usual).\n            var element = event.toElement || event.relatedTarget;\n            var innerDom;\n            do {\n                element = element && element.parentNode;\n            }\n            while (element && element.nodeType != 9 && !(\n                innerDom = element === this.painterRoot\n            ));\n\n            !innerDom && this.trigger('globalout', {event: event});\n        },\n\n        /**\n         * Resize\n         */\n        resize: function (event) {\n            this._hovered = null;\n        },\n\n        /**\n         * Dispatch event\n         * @param {string} eventName\n         * @param {event=} eventArgs\n         */\n        dispatch: function (eventName, eventArgs) {\n            var handler = this[eventName];\n            handler && handler.call(this, eventArgs);\n        },\n\n        /**\n         * Dispose\n         */\n        dispose: function () {\n\n            this.proxy.dispose();\n\n            this.storage =\n            this.proxy =\n            this.painter = null;\n        },\n\n        /**\n         * 设置默认的cursor style\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            var proxy = this.proxy;\n            proxy.setCursor && proxy.setCursor(cursorStyle);\n        },\n\n        /**\n         * 事件分发代理\n         *\n         * @private\n         * @param {Object} targetEl 目标图形元素\n         * @param {string} eventName 事件名称\n         * @param {Object} event 事件对象\n         */\n        dispatchToElement: function (targetEl, eventName, event) {\n            var eventHandler = 'on' + eventName;\n            var eventPacket = makeEventPacket(eventName, targetEl, event);\n\n            var el = targetEl;\n\n            while (el) {\n                el[eventHandler]\n                    && (eventPacket.cancelBubble = el[eventHandler].call(el, eventPacket));\n\n                el.trigger(eventName, eventPacket);\n\n                el = el.parent;\n\n                if (eventPacket.cancelBubble) {\n                    break;\n                }\n            }\n\n            if (!eventPacket.cancelBubble) {\n                // 冒泡到顶级 zrender 对象\n                this.trigger(eventName, eventPacket);\n                // 分发事件到用户自定义层\n                // 用户有可能在全局 click 事件中 dispose，所以需要判断下 painter 是否存在\n                this.painter && this.painter.eachOtherLayer(function (layer) {\n                    if (typeof(layer[eventHandler]) == 'function') {\n                        layer[eventHandler].call(layer, eventPacket);\n                    }\n                    if (layer.trigger) {\n                        layer.trigger(eventName, eventPacket);\n                    }\n                });\n            }\n        },\n\n        /**\n         * @private\n         * @param {number} x\n         * @param {number} y\n         * @param {module:zrender/graphic/Displayable} exclude\n         * @method\n         */\n        findHover: function(x, y, exclude) {\n            var list = this.storage.getDisplayList();\n            for (var i = list.length - 1; i >= 0 ; i--) {\n                if (!list[i].silent\n                 && list[i] !== exclude\n                 // getDisplayList may include ignored item in VML mode\n                 && !list[i].ignore\n                 && isHover(list[i], x, y)) {\n                    return list[i];\n                }\n            }\n        }\n    };\n\n    // Common handlers\n    util.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        Handler.prototype[name] = function (event) {\n            // Find hover again to avoid click event is dispatched manually. Or click is triggered without mouseover\n            var hovered = this.findHover(event.zrX, event.zrY, null);\n\n            if (name === 'mousedown') {\n                this._downel = hovered;\n                // In case click triggered before mouseup\n                this._upel = hovered;\n            }\n            else if (name === 'mosueup') {\n                this._upel = hovered;\n            }\n            else if (name === 'click') {\n                if (this._downel !== this._upel) {\n                    return;\n                }\n            }\n\n            this.dispatchToElement(hovered, name, event);\n        };\n    });\n\n    function isHover(displayable, x, y) {\n        if (displayable[displayable.rectHover ? 'rectContain' : 'contain'](x, y)) {\n            var el = displayable;\n            while (el) {\n                // If ancestor is silent or clipped by ancestor\n                if (el.silent || (el.clipPath && !el.clipPath.contain(x, y)))  {\n                    return false;\n                }\n                el = el.parent;\n            }\n            return true;\n        }\n\n        return false;\n    }\n\n    util.mixin(Handler, Eventful);\n    util.mixin(Handler, Draggable);\n\n    module.exports = Handler;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Handler.js\n// module id = 1111\n// module chunks = 0","/**\n * @module zrender/Layer\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var util = require('./core/util');\n    var config = require('./config');\n    var Style = require('./graphic/Style');\n    var Pattern = require('./graphic/Pattern');\n\n    function returnFalse() {\n        return false;\n    }\n\n    /**\n     * 创建dom\n     *\n     * @inner\n     * @param {string} id dom id 待用\n     * @param {string} type dom type，such as canvas, div etc.\n     * @param {Painter} painter painter instance\n     * @param {number} number\n     */\n    function createDom(id, type, painter, dpr) {\n        var newDom = document.createElement(type);\n        var width = painter.getWidth();\n        var height = painter.getHeight();\n\n        var newDomStyle = newDom.style;\n        // 没append呢，请原谅我这样写，清晰~\n        newDomStyle.position = 'absolute';\n        newDomStyle.left = 0;\n        newDomStyle.top = 0;\n        newDomStyle.width = width + 'px';\n        newDomStyle.height = height + 'px';\n        newDom.width = width * dpr;\n        newDom.height = height * dpr;\n\n        // id不作为索引用，避免可能造成的重名，定义为私有属性\n        newDom.setAttribute('data-zr-dom-id', id);\n        return newDom;\n    }\n\n    /**\n     * @alias module:zrender/Layer\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @param {string} id\n     * @param {module:zrender/Painter} painter\n     * @param {number} [dpr]\n     */\n    var Layer = function(id, painter, dpr) {\n        var dom;\n        dpr = dpr || config.devicePixelRatio;\n        if (typeof id === 'string') {\n            dom = createDom(id, 'canvas', painter, dpr);\n        }\n        // Not using isDom because in node it will return false\n        else if (util.isObject(id)) {\n            dom = id;\n            id = dom.id;\n        }\n        this.id = id;\n        this.dom = dom;\n\n        var domStyle = dom.style;\n        if (domStyle) { // Not in node\n            dom.onselectstart = returnFalse; // 避免页面选中的尴尬\n            domStyle['-webkit-user-select'] = 'none';\n            domStyle['user-select'] = 'none';\n            domStyle['-webkit-touch-callout'] = 'none';\n            domStyle['-webkit-tap-highlight-color'] = 'rgba(0,0,0,0)';\n            domStyle['padding'] = 0;\n            domStyle['margin'] = 0;\n            domStyle['border-width'] = 0;\n        }\n\n        this.domBack = null;\n        this.ctxBack = null;\n\n        this.painter = painter;\n\n        this.config = null;\n\n        // Configs\n        /**\n         * 每次清空画布的颜色\n         * @type {string}\n         * @default 0\n         */\n        this.clearColor = 0;\n        /**\n         * 是否开启动态模糊\n         * @type {boolean}\n         * @default false\n         */\n        this.motionBlur = false;\n        /**\n         * 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         * @type {number}\n         * @default 0.7\n         */\n        this.lastFrameAlpha = 0.7;\n\n        /**\n         * Layer dpr\n         * @type {number}\n         */\n        this.dpr = dpr;\n    };\n\n    Layer.prototype = {\n\n        constructor: Layer,\n\n        elCount: 0,\n\n        __dirty: true,\n\n        initContext: function () {\n            this.ctx = this.dom.getContext('2d');\n\n            this.ctx.dpr = this.dpr;\n        },\n\n        createBackBuffer: function () {\n            var dpr = this.dpr;\n\n            this.domBack = createDom('back-' + this.id, 'canvas', this.painter, dpr);\n            this.ctxBack = this.domBack.getContext('2d');\n\n            if (dpr != 1) {\n                this.ctxBack.scale(dpr, dpr);\n            }\n        },\n\n        /**\n         * @param  {number} width\n         * @param  {number} height\n         */\n        resize: function (width, height) {\n            var dpr = this.dpr;\n\n            var dom = this.dom;\n            var domStyle = dom.style;\n            var domBack = this.domBack;\n\n            domStyle.width = width + 'px';\n            domStyle.height = height + 'px';\n\n            dom.width = width * dpr;\n            dom.height = height * dpr;\n\n            if (domBack) {\n                domBack.width = width * dpr;\n                domBack.height = height * dpr;\n\n                if (dpr != 1) {\n                    this.ctxBack.scale(dpr, dpr);\n                }\n            }\n        },\n\n        /**\n         * 清空该层画布\n         * @param {boolean} clearAll Clear all with out motion blur\n         */\n        clear: function (clearAll) {\n            var dom = this.dom;\n            var ctx = this.ctx;\n            var width = dom.width;\n            var height = dom.height;\n\n            var clearColor = this.clearColor;\n            var haveMotionBLur = this.motionBlur && !clearAll;\n            var lastFrameAlpha = this.lastFrameAlpha;\n\n            var dpr = this.dpr;\n\n            if (haveMotionBLur) {\n                if (!this.domBack) {\n                    this.createBackBuffer();\n                }\n\n                this.ctxBack.globalCompositeOperation = 'copy';\n                this.ctxBack.drawImage(\n                    dom, 0, 0,\n                    width / dpr,\n                    height / dpr\n                );\n            }\n\n            ctx.clearRect(0, 0, width, height);\n            if (clearColor) {\n                var clearColorGradientOrPattern;\n                // Gradient\n                if (clearColor.colorStops) {\n                    // Cache canvas gradient\n                    clearColorGradientOrPattern = clearColor.__canvasGradient || Style.getGradient(ctx, clearColor, {\n                        x: 0,\n                        y: 0,\n                        width: width,\n                        height: height\n                    });\n\n                    clearColor.__canvasGradient = clearColorGradientOrPattern;\n                }\n                // Pattern\n                else if (clearColor.image) {\n                    clearColorGradientOrPattern = Pattern.prototype.getCanvasPattern.call(clearColor, ctx);\n                }\n                ctx.save();\n                ctx.fillStyle = clearColorGradientOrPattern || clearColor;\n                ctx.fillRect(0, 0, width, height);\n                ctx.restore();\n            }\n\n            if (haveMotionBLur) {\n                var domBack = this.domBack;\n                ctx.save();\n                ctx.globalAlpha = lastFrameAlpha;\n                ctx.drawImage(domBack, 0, 0, width, height);\n                ctx.restore();\n            }\n        }\n    };\n\n    module.exports = Layer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Layer.js\n// module id = 1112\n// module chunks = 0","'use strict';\n/**\n * Default canvas painter\n * @module zrender/Painter\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n \n\n    var config = require('./config');\n    var util = require('./core/util');\n    var log = require('./core/log');\n    var BoundingRect = require('./core/BoundingRect');\n    var timsort = require('./core/timsort');\n\n    var Layer = require('./Layer');\n\n    var requestAnimationFrame = require('./animation/requestAnimationFrame');\n\n    // PENDIGN\n    // Layer exceeds MAX_PROGRESSIVE_LAYER_NUMBER may have some problem when flush directly second time.\n    //\n    // Maximum progressive layer. When exceeding this number. All elements will be drawed in the last layer.\n    var MAX_PROGRESSIVE_LAYER_NUMBER = 5;\n\n    function parseInt10(val) {\n        return parseInt(val, 10);\n    }\n\n    function isLayerValid(layer) {\n        if (!layer) {\n            return false;\n        }\n\n        if (layer.isBuildin) {\n            return true;\n        }\n\n        if (typeof(layer.resize) !== 'function'\n            || typeof(layer.refresh) !== 'function'\n        ) {\n            return false;\n        }\n\n        return true;\n    }\n\n    function preProcessLayer(layer) {\n        layer.__unusedCount++;\n    }\n\n    function postProcessLayer(layer) {\n        if (layer.__unusedCount == 1) {\n            layer.clear();\n        }\n    }\n\n    var tmpRect = new BoundingRect(0, 0, 0, 0);\n    var viewRect = new BoundingRect(0, 0, 0, 0);\n    function isDisplayableCulled(el, width, height) {\n        tmpRect.copy(el.getBoundingRect());\n        if (el.transform) {\n            tmpRect.applyTransform(el.transform);\n        }\n        viewRect.width = width;\n        viewRect.height = height;\n        return !tmpRect.intersect(viewRect);\n    }\n\n    function isClipPathChanged(clipPaths, prevClipPaths) {\n        if (clipPaths == prevClipPaths) { // Can both be null or undefined\n            return false;\n        }\n\n        if (!clipPaths || !prevClipPaths || (clipPaths.length !== prevClipPaths.length)) {\n            return true;\n        }\n        for (var i = 0; i < clipPaths.length; i++) {\n            if (clipPaths[i] !== prevClipPaths[i]) {\n                return true;\n            }\n        }\n    }\n\n    function doClip(clipPaths, ctx) {\n        for (var i = 0; i < clipPaths.length; i++) {\n            var clipPath = clipPaths[i];\n            var path = clipPath.path;\n\n            clipPath.setTransform(ctx);\n            path.beginPath(ctx);\n            clipPath.buildPath(path, clipPath.shape);\n            ctx.clip();\n            // Transform back\n            clipPath.restoreTransform(ctx);\n        }\n    }\n\n    function createRoot(width, height) {\n        var domRoot = document.createElement('div');\n\n        // domRoot.onselectstart = returnFalse; // 避免页面选中的尴尬\n        domRoot.style.cssText = [\n            'position:relative',\n            'overflow:hidden',\n            'width:' + width + 'px',\n            'height:' + height + 'px',\n            'padding:0',\n            'margin:0',\n            'border-width:0'\n        ].join(';') + ';';\n\n        return domRoot;\n    }\n\n    /**\n     * @alias module:zrender/Painter\n     * @constructor\n     * @param {HTMLElement} root 绘图容器\n     * @param {module:zrender/Storage} storage\n     * @param {Ojbect} opts\n     */\n    var Painter = function (root, storage, opts) {\n        // In node environment using node-canvas\n        var singleCanvas = !root.nodeName // In node ?\n            || root.nodeName.toUpperCase() === 'CANVAS';\n\n        this._opts = opts = util.extend({}, opts || {});\n\n        /**\n         * @type {number}\n         */\n        this.dpr = opts.devicePixelRatio || config.devicePixelRatio;\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._singleCanvas = singleCanvas;\n        /**\n         * 绘图容器\n         * @type {HTMLElement}\n         */\n        this.root = root;\n\n        var rootStyle = root.style;\n\n        if (rootStyle) {\n            rootStyle['-webkit-tap-highlight-color'] = 'transparent';\n            rootStyle['-webkit-user-select'] =\n            rootStyle['user-select'] =\n            rootStyle['-webkit-touch-callout'] = 'none';\n\n            root.innerHTML = '';\n        }\n\n        /**\n         * @type {module:zrender/Storage}\n         */\n        this.storage = storage;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        var zlevelList = this._zlevelList = [];\n\n        /**\n         * @type {Object.<string, module:zrender/Layer>}\n         * @private\n         */\n        var layers = this._layers = {};\n\n        /**\n         * @type {Object.<string, Object>}\n         * @type {private}\n         */\n        this._layerConfig = {};\n\n        if (!singleCanvas) {\n            this._width = this._getSize(0);\n            this._height = this._getSize(1);\n\n            var domRoot = this._domRoot = createRoot(\n                this._width, this._height\n            );\n            root.appendChild(domRoot);\n        }\n        else {\n            // Use canvas width and height directly\n            var width = root.width;\n            var height = root.height;\n            this._width = width;\n            this._height = height;\n\n            // Create layer if only one given canvas\n            // Device pixel ratio is fixed to 1 because given canvas has its specified width and height\n            var mainLayer = new Layer(root, this, 1);\n            mainLayer.initContext();\n            // FIXME Use canvas width and height\n            // mainLayer.resize(width, height);\n            layers[0] = mainLayer;\n            zlevelList.push(0);\n        }\n\n        this.pathToImage = this._createPathToImage();\n\n        // Layers for progressive rendering\n        this._progressiveLayers = [];\n\n        /**\n         * @type {module:zrender/Layer}\n         * @private\n         */\n        this._hoverlayer;\n\n        this._hoverElements = [];\n    };\n\n    Painter.prototype = {\n\n        constructor: Painter,\n\n        /**\n         * If painter use a single canvas\n         * @return {boolean}\n         */\n        isSingleCanvas: function () {\n            return this._singleCanvas;\n        },\n        /**\n         * @return {HTMLDivElement}\n         */\n        getViewportRoot: function () {\n            return this._singleCanvas ? this._layers[0].dom : this._domRoot;\n        },\n\n        /**\n         * 刷新\n         * @param {boolean} [paintAll=false] 强制绘制所有displayable\n         */\n        refresh: function (paintAll) {\n\n            var list = this.storage.getDisplayList(true);\n\n            var zlevelList = this._zlevelList;\n\n            this._paintList(list, paintAll);\n\n            // Paint custum layers\n            for (var i = 0; i < zlevelList.length; i++) {\n                var z = zlevelList[i];\n                var layer = this._layers[z];\n                if (!layer.isBuildin && layer.refresh) {\n                    layer.refresh();\n                }\n            }\n\n            this.refreshHover();\n\n            if (this._progressiveLayers.length) {\n                this._startProgessive();\n            }\n\n            return this;\n        },\n\n        addHover: function (el, hoverStyle) {\n            if (el.__hoverMir) {\n                return;\n            }\n            var elMirror = new el.constructor({\n                style: el.style,\n                shape: el.shape\n            });\n            elMirror.__from = el;\n            el.__hoverMir = elMirror;\n            elMirror.setStyle(hoverStyle);\n            this._hoverElements.push(elMirror);\n        },\n\n        removeHover: function (el) {\n            var elMirror = el.__hoverMir;\n            var hoverElements = this._hoverElements;\n            var idx = util.indexOf(hoverElements, elMirror);\n            if (idx >= 0) {\n                hoverElements.splice(idx, 1);\n            }\n            el.__hoverMir = null;\n        },\n\n        clearHover: function (el) {\n            var hoverElements = this._hoverElements;\n            for (var i = 0; i < hoverElements.length; i++) {\n                var from = hoverElements[i].__from;\n                if (from) {\n                    from.__hoverMir = null;\n                }\n            }\n            hoverElements.length = 0;\n        },\n\n        refreshHover: function () {\n            var hoverElements = this._hoverElements;\n            var len = hoverElements.length;\n            var hoverLayer = this._hoverlayer;\n            hoverLayer && hoverLayer.clear();\n\n            if (!len) {\n                return;\n            }\n            timsort(hoverElements, this.storage.displayableSortFunc);\n\n            // Use a extream large zlevel\n            // FIXME?\n            if (!hoverLayer) {\n                hoverLayer = this._hoverlayer = this.getLayer(1e5);\n            }\n\n            var scope = {};\n            hoverLayer.ctx.save();\n            for (var i = 0; i < len;) {\n                var el = hoverElements[i];\n                var originalEl = el.__from;\n                // Original el is removed\n                // PENDING\n                if (!(originalEl && originalEl.__zr)) {\n                    hoverElements.splice(i, 1);\n                    originalEl.__hoverMir = null;\n                    len--;\n                    continue;\n                }\n                i++;\n\n                // Use transform\n                // FIXME style and shape ?\n                if (!originalEl.invisible) {\n                    el.transform = originalEl.transform;\n                    el.invTransform = originalEl.invTransform;\n                    el.__clipPaths = originalEl.__clipPaths;\n                    // el.\n                    this._doPaintEl(el, hoverLayer, true, scope);\n                }\n            }\n            hoverLayer.ctx.restore();\n        },\n\n        _startProgessive: function () {\n            var self = this;\n\n            if (!self._furtherProgressive) {\n                return;\n            }\n\n            // Use a token to stop progress steps triggered by\n            // previous zr.refresh calling.\n            var token = self._progressiveToken = +new Date();\n\n            self._progress++;\n            requestAnimationFrame(step);\n\n            function step() {\n                // In case refreshed or disposed\n                if (token === self._progressiveToken && self.storage) {\n\n                    self._doPaintList(self.storage.getDisplayList());\n\n                    if (self._furtherProgressive) {\n                        self._progress++;\n                        requestAnimationFrame(step);\n                    }\n                    else {\n                        self._progressiveToken = -1;\n                    }\n                }\n            }\n        },\n\n        _clearProgressive: function () {\n            this._progressiveToken = -1;\n            this._progress = 0;\n            util.each(this._progressiveLayers, function (layer) {\n                layer.__dirty && layer.clear();\n            });\n        },\n\n        _paintList: function (list, paintAll) {\n\n            if (paintAll == null) {\n                paintAll = false;\n            }\n\n            this._updateLayerStatus(list);\n\n            this._clearProgressive();\n\n            this.eachBuildinLayer(preProcessLayer);\n\n            this._doPaintList(list, paintAll);\n\n            this.eachBuildinLayer(postProcessLayer);\n        },\n\n        _doPaintList: function (list, paintAll) {\n            var currentLayer;\n            var currentZLevel;\n            var ctx;\n\n            // var invTransform = [];\n            var scope;\n\n            var progressiveLayerIdx = 0;\n            var currentProgressiveLayer;\n\n            var width = this._width;\n            var height = this._height;\n            var layerProgress;\n            var frame = this._progress;\n            function flushProgressiveLayer(layer) {\n                var dpr = ctx.dpr || 1;\n                ctx.save();\n                ctx.globalAlpha = 1;\n                ctx.shadowBlur = 0;\n                // Avoid layer don't clear in next progressive frame\n                currentLayer.__dirty = true;\n                ctx.setTransform(1, 0, 0, 1, 0, 0);\n                ctx.drawImage(layer.dom, 0, 0, width * dpr, height * dpr);\n                ctx.restore();\n            }\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var elZLevel = this._singleCanvas ? 0 : el.zlevel;\n\n                var elFrame = el.__frame;\n\n                // Flush at current context\n                // PENDING\n                if (elFrame < 0 && currentProgressiveLayer) {\n                    flushProgressiveLayer(currentProgressiveLayer);\n                    currentProgressiveLayer = null;\n                }\n\n                // Change draw layer\n                if (currentZLevel !== elZLevel) {\n                    if (ctx) {\n                        ctx.restore();\n                    }\n\n                    // Reset scope\n                    scope = {};\n\n                    // Only 0 zlevel if only has one canvas\n                    currentZLevel = elZLevel;\n                    currentLayer = this.getLayer(currentZLevel);\n\n                    if (!currentLayer.isBuildin) {\n                        log(\n                            'ZLevel ' + currentZLevel\n                            + ' has been used by unkown layer ' + currentLayer.id\n                        );\n                    }\n\n                    ctx = currentLayer.ctx;\n                    ctx.save();\n\n                    // Reset the count\n                    currentLayer.__unusedCount = 0;\n\n                    if (currentLayer.__dirty || paintAll) {\n                        currentLayer.clear();\n                    }\n                }\n\n                if (!(currentLayer.__dirty || paintAll)) {\n                    continue;\n                }\n\n                if (elFrame >= 0) {\n                    // Progressive layer changed\n                    if (!currentProgressiveLayer) {\n                        currentProgressiveLayer = this._progressiveLayers[\n                            Math.min(progressiveLayerIdx++, MAX_PROGRESSIVE_LAYER_NUMBER - 1)\n                        ];\n\n                        currentProgressiveLayer.ctx.save();\n                        currentProgressiveLayer.renderScope = {};\n\n                        if (currentProgressiveLayer\n                            && (currentProgressiveLayer.__progress > currentProgressiveLayer.__maxProgress)\n                        ) {\n                            // flushProgressiveLayer(currentProgressiveLayer);\n                            // Quick jump all progressive elements\n                            // All progressive element are not dirty, jump over and flush directly\n                            i = currentProgressiveLayer.__nextIdxNotProg - 1;\n                            // currentProgressiveLayer = null;\n                            continue;\n                        }\n\n                        layerProgress = currentProgressiveLayer.__progress;\n\n                        if (!currentProgressiveLayer.__dirty) {\n                            // Keep rendering\n                            frame = layerProgress;\n                        }\n\n                        currentProgressiveLayer.__progress = frame + 1;\n                    }\n\n                    if (elFrame === frame) {\n                        this._doPaintEl(el, currentProgressiveLayer, true, currentProgressiveLayer.renderScope);\n                    }\n                }\n                else {\n                    this._doPaintEl(el, currentLayer, paintAll, scope);\n                }\n\n                el.__dirty = false;\n            }\n\n            if (currentProgressiveLayer) {\n                flushProgressiveLayer(currentProgressiveLayer);\n            }\n\n            // Restore the lastLayer ctx\n            ctx && ctx.restore();\n            // If still has clipping state\n            // if (scope.prevElClipPaths) {\n            //     ctx.restore();\n            // }\n\n            this._furtherProgressive = false;\n            util.each(this._progressiveLayers, function (layer) {\n                if (layer.__maxProgress >= layer.__progress) {\n                    this._furtherProgressive = true;\n                }\n            }, this);\n        },\n\n        _doPaintEl: function (el, currentLayer, forcePaint, scope) {\n            var ctx = currentLayer.ctx;\n            var m = el.transform;\n            if (\n                (currentLayer.__dirty || forcePaint)\n                // Ignore invisible element\n                && !el.invisible\n                // Ignore transparent element\n                && el.style.opacity !== 0\n                // Ignore scale 0 element, in some environment like node-canvas\n                // Draw a scale 0 element can cause all following draw wrong\n                // And setTransform with scale 0 will cause set back transform failed.\n                && !(m && !m[0] && !m[3])\n                // Ignore culled element\n                && !(el.culling && isDisplayableCulled(el, this._width, this._height))\n            ) {\n\n                var clipPaths = el.__clipPaths;\n\n                // Optimize when clipping on group with several elements\n                if (scope.prevClipLayer !== currentLayer\n                    || isClipPathChanged(clipPaths, scope.prevElClipPaths)\n                ) {\n                    // If has previous clipping state, restore from it\n                    if (scope.prevElClipPaths) {\n                        scope.prevClipLayer.ctx.restore();\n                        scope.prevClipLayer = scope.prevElClipPaths = null;\n\n                        // Reset prevEl since context has been restored\n                        scope.prevEl = null;\n                    }\n                    // New clipping state\n                    if (clipPaths) {\n                        ctx.save();\n                        doClip(clipPaths, ctx);\n                        scope.prevClipLayer = currentLayer;\n                        scope.prevElClipPaths = clipPaths;\n                    }\n                }\n                el.beforeBrush && el.beforeBrush(ctx);\n\n                el.brush(ctx, scope.prevEl || null);\n                scope.prevEl = el;\n\n                el.afterBrush && el.afterBrush(ctx);\n            }\n        },\n\n        /**\n         * 获取 zlevel 所在层，如果不存在则会创建一个新的层\n         * @param {number} zlevel\n         * @return {module:zrender/Layer}\n         */\n        getLayer: function (zlevel) {\n            if (this._singleCanvas) {\n                return this._layers[0];\n            }\n\n            var layer = this._layers[zlevel];\n            if (!layer) {\n                // Create a new layer\n                layer = new Layer('zr_' + zlevel, this, this.dpr);\n                layer.isBuildin = true;\n\n                if (this._layerConfig[zlevel]) {\n                    util.merge(layer, this._layerConfig[zlevel], true);\n                }\n\n                this.insertLayer(zlevel, layer);\n\n                // Context is created after dom inserted to document\n                // Or excanvas will get 0px clientWidth and clientHeight\n                layer.initContext();\n            }\n\n            return layer;\n        },\n\n        insertLayer: function (zlevel, layer) {\n\n            var layersMap = this._layers;\n            var zlevelList = this._zlevelList;\n            var len = zlevelList.length;\n            var prevLayer = null;\n            var i = -1;\n            var domRoot = this._domRoot;\n\n            if (layersMap[zlevel]) {\n                log('ZLevel ' + zlevel + ' has been used already');\n                return;\n            }\n            // Check if is a valid layer\n            if (!isLayerValid(layer)) {\n                log('Layer of zlevel ' + zlevel + ' is not valid');\n                return;\n            }\n\n            if (len > 0 && zlevel > zlevelList[0]) {\n                for (i = 0; i < len - 1; i++) {\n                    if (\n                        zlevelList[i] < zlevel\n                        && zlevelList[i + 1] > zlevel\n                    ) {\n                        break;\n                    }\n                }\n                prevLayer = layersMap[zlevelList[i]];\n            }\n            zlevelList.splice(i + 1, 0, zlevel);\n\n            if (prevLayer) {\n                var prevDom = prevLayer.dom;\n                if (prevDom.nextSibling) {\n                    domRoot.insertBefore(\n                        layer.dom,\n                        prevDom.nextSibling\n                    );\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n            else {\n                if (domRoot.firstChild) {\n                    domRoot.insertBefore(layer.dom, domRoot.firstChild);\n                }\n                else {\n                    domRoot.appendChild(layer.dom);\n                }\n            }\n\n            layersMap[zlevel] = layer;\n        },\n\n        // Iterate each layer\n        eachLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                cb.call(context, this._layers[z], z);\n            }\n        },\n\n        // Iterate each buildin layer\n        eachBuildinLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        // Iterate each other layer except buildin layer\n        eachOtherLayer: function (cb, context) {\n            var zlevelList = this._zlevelList;\n            var layer;\n            var z;\n            var i;\n            for (i = 0; i < zlevelList.length; i++) {\n                z = zlevelList[i];\n                layer = this._layers[z];\n                if (! layer.isBuildin) {\n                    cb.call(context, layer, z);\n                }\n            }\n        },\n\n        /**\n         * 获取所有已创建的层\n         * @param {Array.<module:zrender/Layer>} [prevLayer]\n         */\n        getLayers: function () {\n            return this._layers;\n        },\n\n        _updateLayerStatus: function (list) {\n\n            var layers = this._layers;\n            var progressiveLayers = this._progressiveLayers;\n\n            var elCountsLastFrame = {};\n            var progressiveElCountsLastFrame = {};\n\n            this.eachBuildinLayer(function (layer, z) {\n                elCountsLastFrame[z] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            util.each(progressiveLayers, function (layer, idx) {\n                progressiveElCountsLastFrame[idx] = layer.elCount;\n                layer.elCount = 0;\n                layer.__dirty = false;\n            });\n\n            var progressiveLayerCount = 0;\n            var currentProgressiveLayer;\n            var lastProgressiveKey;\n            var frameCount = 0;\n            for (var i = 0, l = list.length; i < l; i++) {\n                var el = list[i];\n                var zlevel = this._singleCanvas ? 0 : el.zlevel;\n                var layer = layers[zlevel];\n                var elProgress = el.progressive;\n                if (layer) {\n                    layer.elCount++;\n                    layer.__dirty = layer.__dirty || el.__dirty;\n                }\n\n                /////// Update progressive\n                if (elProgress >= 0) {\n                    // Fix wrong progressive sequence problem.\n                    if (lastProgressiveKey !== elProgress) {\n                        lastProgressiveKey = elProgress;\n                        frameCount++;\n                    }\n                    var elFrame = el.__frame = frameCount - 1;\n                    if (!currentProgressiveLayer) {\n                        var idx = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER - 1);\n                        currentProgressiveLayer = progressiveLayers[idx];\n                        if (!currentProgressiveLayer) {\n                            currentProgressiveLayer = progressiveLayers[idx] = new Layer(\n                                'progressive', this, this.dpr\n                            );\n                            currentProgressiveLayer.initContext();\n                        }\n                        currentProgressiveLayer.__maxProgress = 0;\n                    }\n                    currentProgressiveLayer.__dirty = currentProgressiveLayer.__dirty || el.__dirty;\n                    currentProgressiveLayer.elCount++;\n\n                    currentProgressiveLayer.__maxProgress = Math.max(\n                        currentProgressiveLayer.__maxProgress, elFrame\n                    );\n\n                    if (currentProgressiveLayer.__maxProgress >= currentProgressiveLayer.__progress) {\n                        // Should keep rendering this  layer because progressive rendering is not finished yet\n                        layer.__dirty = true;\n                    }\n                }\n                else {\n                    el.__frame = -1;\n\n                    if (currentProgressiveLayer) {\n                        currentProgressiveLayer.__nextIdxNotProg = i;\n                        progressiveLayerCount++;\n                        currentProgressiveLayer = null;\n                    }\n                }\n            }\n\n            if (currentProgressiveLayer) {\n                progressiveLayerCount++;\n                currentProgressiveLayer.__nextIdxNotProg = i;\n            }\n\n            // 层中的元素数量有发生变化\n            this.eachBuildinLayer(function (layer, z) {\n                if (elCountsLastFrame[z] !== layer.elCount) {\n                    layer.__dirty = true;\n                }\n            });\n\n            progressiveLayers.length = Math.min(progressiveLayerCount, MAX_PROGRESSIVE_LAYER_NUMBER);\n            util.each(progressiveLayers, function (layer, idx) {\n                if (progressiveElCountsLastFrame[idx] !== layer.elCount) {\n                    el.__dirty = true;\n                }\n                if (layer.__dirty) {\n                    layer.__progress = 0;\n                }\n            });\n        },\n\n        /**\n         * 清除hover层外所有内容\n         */\n        clear: function () {\n            this.eachBuildinLayer(this._clearLayer);\n            return this;\n        },\n\n        _clearLayer: function (layer) {\n            layer.clear();\n        },\n\n        /**\n         * 修改指定zlevel的绘制参数\n         *\n         * @param {string} zlevel\n         * @param {Object} config 配置对象\n         * @param {string} [config.clearColor=0] 每次清空画布的颜色\n         * @param {string} [config.motionBlur=false] 是否开启动态模糊\n         * @param {number} [config.lastFrameAlpha=0.7]\n         *                 在开启动态模糊的时候使用，与上一帧混合的alpha值，值越大尾迹越明显\n         */\n        configLayer: function (zlevel, config) {\n            if (config) {\n                var layerConfig = this._layerConfig;\n                if (!layerConfig[zlevel]) {\n                    layerConfig[zlevel] = config;\n                }\n                else {\n                    util.merge(layerConfig[zlevel], config, true);\n                }\n\n                var layer = this._layers[zlevel];\n\n                if (layer) {\n                    util.merge(layer, layerConfig[zlevel], true);\n                }\n            }\n        },\n\n        /**\n         * 删除指定层\n         * @param {number} zlevel 层所在的zlevel\n         */\n        delLayer: function (zlevel) {\n            var layers = this._layers;\n            var zlevelList = this._zlevelList;\n            var layer = layers[zlevel];\n            if (!layer) {\n                return;\n            }\n            layer.dom.parentNode.removeChild(layer.dom);\n            delete layers[zlevel];\n\n            zlevelList.splice(util.indexOf(zlevelList, zlevel), 1);\n        },\n\n        /**\n         * 区域大小变化后重绘\n         */\n        resize: function (width, height) {\n            var domRoot = this._domRoot;\n            // FIXME Why ?\n            domRoot.style.display = 'none';\n\n            // Save input w/h\n            var opts = this._opts;\n            width != null && (opts.width = width);\n            height != null && (opts.height = height);\n\n            width = this._getSize(0);\n            height = this._getSize(1);\n\n            domRoot.style.display = '';\n\n            // 优化没有实际改变的resize\n            if (this._width != width || height != this._height) {\n                domRoot.style.width = width + 'px';\n                domRoot.style.height = height + 'px';\n\n                for (var id in this._layers) {\n                    if (this._layers.hasOwnProperty(id)) {\n                        this._layers[id].resize(width, height);\n                    }\n                }\n                util.each(this._progressiveLayers, function (layer) {\n                    layer.resize(width, height);\n                });\n\n                this.refresh(true);\n            }\n\n            this._width = width;\n            this._height = height;\n\n            return this;\n        },\n\n        /**\n         * 清除单独的一个层\n         * @param {number} zlevel\n         */\n        clearLayer: function (zlevel) {\n            var layer = this._layers[zlevel];\n            if (layer) {\n                layer.clear();\n            }\n        },\n\n        /**\n         * 释放\n         */\n        dispose: function () {\n            this.root.innerHTML = '';\n\n            this.root =\n            this.storage =\n\n            this._domRoot =\n            this._layers = null;\n        },\n\n        /**\n         * Get canvas which has all thing rendered\n         * @param {Object} opts\n         * @param {string} [opts.backgroundColor]\n         */\n        getRenderedCanvas: function (opts) {\n            opts = opts || {};\n            if (this._singleCanvas) {\n                return this._layers[0].dom;\n            }\n\n            var imageLayer = new Layer('image', this, opts.pixelRatio || this.dpr);\n            imageLayer.initContext();\n\n            imageLayer.clearColor = opts.backgroundColor;\n            imageLayer.clear();\n\n            var displayList = this.storage.getDisplayList(true);\n\n            var scope = {};\n            for (var i = 0; i < displayList.length; i++) {\n                var el = displayList[i];\n                this._doPaintEl(el, imageLayer, true, scope);\n            }\n\n            return imageLayer.dom;\n        },\n        /**\n         * 获取绘图区域宽度\n         */\n        getWidth: function () {\n            return this._width;\n        },\n\n        /**\n         * 获取绘图区域高度\n         */\n        getHeight: function () {\n            return this._height;\n        },\n\n        _getSize: function (whIdx) {\n            var opts = this._opts;\n            var wh = ['width', 'height'][whIdx];\n            var cwh = ['clientWidth', 'clientHeight'][whIdx];\n            var plt = ['paddingLeft', 'paddingTop'][whIdx];\n            var prb = ['paddingRight', 'paddingBottom'][whIdx];\n\n            if (opts[wh] != null && opts[wh] !== 'auto') {\n                return parseFloat(opts[wh]);\n            }\n\n            var root = this.root;\n            var stl = document.defaultView.getComputedStyle(root);\n\n            return (\n                (root[cwh] || parseInt10(stl[wh]) || parseInt10(root.style[wh]))\n                - (parseInt10(stl[plt]) || 0)\n                - (parseInt10(stl[prb]) || 0)\n            ) | 0;\n        },\n\n        _pathToImage: function (id, path, width, height, dpr) {\n            var canvas = document.createElement('canvas');\n            var ctx = canvas.getContext('2d');\n\n            canvas.width = width * dpr;\n            canvas.height = height * dpr;\n\n            ctx.clearRect(0, 0, width * dpr, height * dpr);\n\n            var pathTransform = {\n                position: path.position,\n                rotation: path.rotation,\n                scale: path.scale\n            };\n            path.position = [0, 0, 0];\n            path.rotation = 0;\n            path.scale = [1, 1];\n            if (path) {\n                path.brush(ctx);\n            }\n\n            var ImageShape = require('./graphic/Image');\n            var imgShape = new ImageShape({\n                id: id,\n                style: {\n                    x: 0,\n                    y: 0,\n                    image: canvas\n                }\n            });\n\n            if (pathTransform.position != null) {\n                imgShape.position = path.position = pathTransform.position;\n            }\n\n            if (pathTransform.rotation != null) {\n                imgShape.rotation = path.rotation = pathTransform.rotation;\n            }\n\n            if (pathTransform.scale != null) {\n                imgShape.scale = path.scale = pathTransform.scale;\n            }\n\n            return imgShape;\n        },\n\n        _createPathToImage: function () {\n            var me = this;\n\n            return function (id, e, width, height) {\n                return me._pathToImage(\n                    id, e, width, height, me.dpr\n                );\n            };\n        }\n    };\n\n    module.exports = Painter;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Painter.js\n// module id = 1113\n// module chunks = 0","'use strict';\n/**\n * Storage内容仓库模块\n * @module zrender/Storage\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n * @author errorrik (errorrik@gmail.com)\n * @author pissang (https://github.com/pissang/)\n */\n\n\n    var util = require('./core/util');\n    var env = require('./core/env');\n\n    var Group = require('./container/Group');\n\n    // Use timsort because in most case elements are partially sorted\n    // https://jsfiddle.net/pissang/jr4x7mdm/8/\n    var timsort = require('./core/timsort');\n\n    function shapeCompareFunc(a, b) {\n        if (a.zlevel === b.zlevel) {\n            if (a.z === b.z) {\n                // if (a.z2 === b.z2) {\n                //     // FIXME Slow has renderidx compare\n                //     // http://stackoverflow.com/questions/20883421/sorting-in-javascript-should-every-compare-function-have-a-return-0-statement\n                //     // https://github.com/v8/v8/blob/47cce544a31ed5577ffe2963f67acb4144ee0232/src/js/array.js#L1012\n                //     return a.__renderidx - b.__renderidx;\n                // }\n                return a.z2 - b.z2;\n            }\n            return a.z - b.z;\n        }\n        return a.zlevel - b.zlevel;\n    }\n    /**\n     * 内容仓库 (M)\n     * @alias module:zrender/Storage\n     * @constructor\n     */\n    var Storage = function () {\n        // 所有常规形状，id索引的map\n        this._elements = {};\n\n        this._roots = [];\n\n        this._displayList = [];\n\n        this._displayListLen = 0;\n    };\n\n    Storage.prototype = {\n\n        constructor: Storage,\n\n        /**\n         * @param  {Function} cb\n         *\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._roots.length; i++) {\n                this._roots[i].traverse(cb, context);\n            }\n        },\n\n        /**\n         * 返回所有图形的绘制队列\n         * @param {boolean} [update=false] 是否在返回前更新该数组\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组, 在 update 为 true 的时候有效\n         *\n         * 详见{@link module:zrender/graphic/Displayable.prototype.updateDisplayList}\n         * @return {Array.<module:zrender/graphic/Displayable>}\n         */\n        getDisplayList: function (update, includeIgnore) {\n            includeIgnore = includeIgnore || false;\n            if (update) {\n                this.updateDisplayList(includeIgnore);\n            }\n            return this._displayList;\n        },\n\n        /**\n         * 更新图形的绘制队列。\n         * 每次绘制前都会调用，该方法会先深度优先遍历整个树，更新所有Group和Shape的变换并且把所有可见的Shape保存到数组中，\n         * 最后根据绘制的优先级（zlevel > z > 插入顺序）排序得到绘制队列\n         * @param {boolean} [includeIgnore=false] 是否包含 ignore 的数组\n         */\n        updateDisplayList: function (includeIgnore) {\n            this._displayListLen = 0;\n            var roots = this._roots;\n            var displayList = this._displayList;\n            for (var i = 0, len = roots.length; i < len; i++) {\n                this._updateAndAddDisplayable(roots[i], null, includeIgnore);\n            }\n            displayList.length = this._displayListLen;\n\n            // for (var i = 0, len = displayList.length; i < len; i++) {\n            //     displayList[i].__renderidx = i;\n            // }\n\n            // displayList.sort(shapeCompareFunc);\n            env.canvasSupported && timsort(displayList, shapeCompareFunc);\n        },\n\n        _updateAndAddDisplayable: function (el, clipPaths, includeIgnore) {\n\n            if (el.ignore && !includeIgnore) {\n                return;\n            }\n\n            el.beforeUpdate();\n\n            if (el.__dirty) {\n\n                el.update();\n\n            }\n\n            el.afterUpdate();\n\n            var clipPath = el.clipPath;\n            if (clipPath) {\n                // clipPath 的变换是基于 group 的变换\n                clipPath.parent = el;\n                clipPath.updateTransform();\n\n                // FIXME 效率影响\n                if (clipPaths) {\n                    clipPaths = clipPaths.slice();\n                    clipPaths.push(clipPath);\n                }\n                else {\n                    clipPaths = [clipPath];\n                }\n            }\n\n            if (el.isGroup) {\n                var children = el._children;\n\n                for (var i = 0; i < children.length; i++) {\n                    var child = children[i];\n\n                    // Force to mark as dirty if group is dirty\n                    // FIXME __dirtyPath ?\n                    if (el.__dirty) {\n                        child.__dirty = true;\n                    }\n\n                    this._updateAndAddDisplayable(child, clipPaths, includeIgnore);\n                }\n\n                // Mark group clean here\n                el.__dirty = false;\n\n            }\n            else {\n                el.__clipPaths = clipPaths;\n\n                this._displayList[this._displayListLen++] = el;\n            }\n        },\n\n        /**\n         * 添加图形(Shape)或者组(Group)到根节点\n         * @param {module:zrender/Element} el\n         */\n        addRoot: function (el) {\n            // Element has been added\n            if (this._elements[el.id]) {\n                return;\n            }\n\n            if (el instanceof Group) {\n                el.addChildrenToStorage(this);\n            }\n\n            this.addToMap(el);\n            this._roots.push(el);\n        },\n\n        /**\n         * 删除指定的图形(Shape)或者组(Group)\n         * @param {string|Array.<string>} [elId] 如果为空清空整个Storage\n         */\n        delRoot: function (elId) {\n            if (elId == null) {\n                // 不指定elId清空\n                for (var i = 0; i < this._roots.length; i++) {\n                    var root = this._roots[i];\n                    if (root instanceof Group) {\n                        root.delChildrenFromStorage(this);\n                    }\n                }\n\n                this._elements = {};\n                this._roots = [];\n                this._displayList = [];\n                this._displayListLen = 0;\n\n                return;\n            }\n\n            if (elId instanceof Array) {\n                for (var i = 0, l = elId.length; i < l; i++) {\n                    this.delRoot(elId[i]);\n                }\n                return;\n            }\n\n            var el;\n            if (typeof(elId) == 'string') {\n                el = this._elements[elId];\n            }\n            else {\n                el = elId;\n            }\n\n            var idx = util.indexOf(this._roots, el);\n            if (idx >= 0) {\n                this.delFromMap(el.id);\n                this._roots.splice(idx, 1);\n                if (el instanceof Group) {\n                    el.delChildrenFromStorage(this);\n                }\n            }\n        },\n\n        addToMap: function (el) {\n            if (el instanceof Group) {\n                el.__storage = this;\n            }\n            el.dirty(false);\n\n            this._elements[el.id] = el;\n\n            return this;\n        },\n\n        get: function (elId) {\n            return this._elements[elId];\n        },\n\n        delFromMap: function (elId) {\n            var elements = this._elements;\n            var el = elements[elId];\n            if (el) {\n                delete elements[elId];\n                if (el instanceof Group) {\n                    el.__storage = null;\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 清空并且释放Storage\n         */\n        dispose: function () {\n            this._elements =\n            this._renderList =\n            this._roots = null;\n        },\n\n        displayableSortFunc: shapeCompareFunc\n    };\n\n    module.exports = Storage;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Storage.js\n// module id = 1114\n// module chunks = 0","'use strict';\n/**\n * 动画主类, 调度和管理所有动画控制器\n *\n * @module zrender/animation/Animation\n * @author pissang(https://github.com/pissang)\n */\n// TODO Additive animation\n// http://iosoteric.com/additive-animations-animatewithduration-in-ios-8/\n// https://developer.apple.com/videos/wwdc2014/#236\n\n\n    var util = require('../core/util');\n    var Dispatcher = require('../core/event').Dispatcher;\n\n    var requestAnimationFrame = require('./requestAnimationFrame');\n\n    var Animator = require('./Animator');\n    /**\n     * @typedef {Object} IZRenderStage\n     * @property {Function} update\n     */\n\n    /**\n     * @alias module:zrender/animation/Animation\n     * @constructor\n     * @param {Object} [options]\n     * @param {Function} [options.onframe]\n     * @param {IZRenderStage} [options.stage]\n     * @example\n     *     var animation = new Animation();\n     *     var obj = {\n     *         x: 100,\n     *         y: 100\n     *     };\n     *     animation.animate(node.position)\n     *         .when(1000, {\n     *             x: 500,\n     *             y: 500\n     *         })\n     *         .when(2000, {\n     *             x: 100,\n     *             y: 100\n     *         })\n     *         .start('spline');\n     */\n    var Animation = function (options) {\n\n        options = options || {};\n\n        this.stage = options.stage || {};\n\n        this.onframe = options.onframe || function() {};\n\n        // private properties\n        this._clips = [];\n\n        this._running = false;\n\n        this._time;\n\n        this._pausedTime;\n\n        this._pauseStart;\n\n        this._paused = false;\n\n        Dispatcher.call(this);\n    };\n\n    Animation.prototype = {\n\n        constructor: Animation,\n        /**\n         * 添加 clip\n         * @param {module:zrender/animation/Clip} clip\n         */\n        addClip: function (clip) {\n            this._clips.push(clip);\n        },\n        /**\n         * 添加 animator\n         * @param {module:zrender/animation/Animator} animator\n         */\n        addAnimator: function (animator) {\n            animator.animation = this;\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.addClip(clips[i]);\n            }\n        },\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Clip} clip\n         */\n        removeClip: function(clip) {\n            var idx = util.indexOf(this._clips, clip);\n            if (idx >= 0) {\n                this._clips.splice(idx, 1);\n            }\n        },\n\n        /**\n         * 删除动画片段\n         * @param {module:zrender/animation/Animator} animator\n         */\n        removeAnimator: function (animator) {\n            var clips = animator.getClips();\n            for (var i = 0; i < clips.length; i++) {\n                this.removeClip(clips[i]);\n            }\n            animator.animation = null;\n        },\n\n        _update: function() {\n\n            var time = new Date().getTime() - this._pausedTime;\n            var delta = time - this._time;\n            var clips = this._clips;\n            var len = clips.length;\n\n            var deferredEvents = [];\n            var deferredClips = [];\n            for (var i = 0; i < len; i++) {\n                var clip = clips[i];\n                var e = clip.step(time);\n                // Throw out the events need to be called after\n                // stage.update, like destroy\n                if (e) {\n                    deferredEvents.push(e);\n                    deferredClips.push(clip);\n                }\n            }\n\n            // Remove the finished clip\n            for (var i = 0; i < len;) {\n                if (clips[i]._needsRemove) {\n                    clips[i] = clips[len - 1];\n                    clips.pop();\n                    len--;\n                }\n                else {\n                    i++;\n                }\n            }\n\n            len = deferredEvents.length;\n            for (var i = 0; i < len; i++) {\n                deferredClips[i].fire(deferredEvents[i]);\n            }\n\n            this._time = time;\n\n            this.onframe(delta);\n\n            this.trigger('frame', delta);\n\n            if (this.stage.update) {\n                this.stage.update();\n            }\n        },\n\n        _startLoop: function () {\n            var self = this;\n\n            this._running = true;\n\n            function step() {\n                if (self._running) {\n\n                    requestAnimationFrame(step);\n\n                    !self._paused && self._update();\n                }\n            }\n\n            requestAnimationFrame(step);\n        },\n\n        /**\n         * 开始运行动画\n         */\n        start: function () {\n\n            this._time = new Date().getTime();\n            this._pausedTime = 0;\n\n            this._startLoop();\n        },\n        /**\n         * 停止运行动画\n         */\n        stop: function () {\n            this._running = false;\n        },\n\n        /**\n         * Pause\n         */\n        pause: function () {\n            if (!this._paused) {\n                this._pauseStart = new Date().getTime();\n                this._paused = true;\n            }\n        },\n\n        /**\n         * Resume\n         */\n        resume: function () {\n            if (this._paused) {\n                this._pausedTime += (new Date().getTime()) - this._pauseStart;\n                this._paused = false;\n            }\n        },\n\n        /**\n         * 清除所有动画片段\n         */\n        clear: function () {\n            this._clips = [];\n        },\n        /**\n         * 对一个目标创建一个animator对象，可以指定目标中的属性使用动画\n         * @param  {Object} target\n         * @param  {Object} options\n         * @param  {boolean} [options.loop=false] 是否循环播放动画\n         * @param  {Function} [options.getter=null]\n         *         如果指定getter函数，会通过getter函数取属性值\n         * @param  {Function} [options.setter=null]\n         *         如果指定setter函数，会通过setter函数设置属性值\n         * @return {module:zrender/animation/Animation~Animator}\n         */\n        // TODO Gap\n        animate: function (target, options) {\n            options = options || {};\n            var animator = new Animator(\n                target,\n                options.loop,\n                options.getter,\n                options.setter\n            );\n\n            return animator;\n        }\n    };\n\n    util.mixin(Animation, Dispatcher);\n\n    module.exports = Animation;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animation.js\n// module id = 1115\n// module chunks = 0","/**\n * 动画主控制器\n * @config target 动画对象，可以是数组，如果是数组的话会批量分发onframe等事件\n * @config life(1000) 动画时长\n * @config delay(0) 动画延迟时间\n * @config loop(true)\n * @config gap(0) 循环的间隔时间\n * @config onframe\n * @config easing(optional)\n * @config ondestroy(optional)\n * @config onrestart(optional)\n *\n * TODO pause\n */\n\n\n    var easingFuncs = require('./easing');\n\n    function Clip(options) {\n\n        this._target = options.target;\n\n        // 生命周期\n        this._life = options.life || 1000;\n        // 延时\n        this._delay = options.delay || 0;\n        // 开始时间\n        // this._startTime = new Date().getTime() + this._delay;// 单位毫秒\n        this._initialized = false;\n\n        // 是否循环\n        this.loop = options.loop == null ? false : options.loop;\n\n        this.gap = options.gap || 0;\n\n        this.easing = options.easing || 'Linear';\n\n        this.onframe = options.onframe;\n        this.ondestroy = options.ondestroy;\n        this.onrestart = options.onrestart;\n    }\n\n    Clip.prototype = {\n\n        constructor: Clip,\n\n        step: function (globalTime) {\n            // Set startTime on first step, or _startTime may has milleseconds different between clips\n            // PENDING\n            if (!this._initialized) {\n                this._startTime = globalTime + this._delay;\n                this._initialized = true;\n            }\n\n            var percent = (globalTime - this._startTime) / this._life;\n\n            // 还没开始\n            if (percent < 0) {\n                return;\n            }\n\n            percent = Math.min(percent, 1);\n\n            var easing = this.easing;\n            var easingFunc = typeof easing == 'string' ? easingFuncs[easing] : easing;\n            var schedule = typeof easingFunc === 'function'\n                ? easingFunc(percent)\n                : percent;\n\n            this.fire('frame', schedule);\n\n            // 结束\n            if (percent == 1) {\n                if (this.loop) {\n                    this.restart (globalTime);\n                    // 重新开始周期\n                    // 抛出而不是直接调用事件直到 stage.update 后再统一调用这些事件\n                    return 'restart';\n                }\n\n                // 动画完成将这个控制器标识为待删除\n                // 在Animation.update中进行批量删除\n                this._needsRemove = true;\n                return 'destroy';\n            }\n\n            return null;\n        },\n\n        restart: function (globalTime) {\n            var remainder = (globalTime - this._startTime) % this._life;\n            this._startTime = globalTime - remainder + this.gap;\n\n            this._needsRemove = false;\n        },\n\n        fire: function(eventType, arg) {\n            eventType = 'on' + eventType;\n            if (this[eventType]) {\n                this[eventType](this._target, arg);\n            }\n        }\n    };\n\n    module.exports = Clip;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Clip.js\n// module id = 1116\n// module chunks = 0","/**\n * 缓动代码来自 https://github.com/sole/tween.js/blob/master/src/Tween.js\n * @see http://sole.github.io/tween.js/examples/03_graphs.html\n * @exports zrender/animation/easing\n */\n\n    var easing = {\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        linear: function (k) {\n            return k;\n        },\n\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticIn: function (k) {\n            return k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticOut: function (k) {\n            return k * (2 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quadraticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k;\n            }\n            return -0.5 * (--k * (k - 2) - 1);\n        },\n\n        // 三次方的缓动（t^3）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicIn: function (k) {\n            return k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicOut: function (k) {\n            return --k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        cubicInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k + 2);\n        },\n\n        // 四次方的缓动（t^4）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticIn: function (k) {\n            return k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticOut: function (k) {\n            return 1 - (--k * k * k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quarticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k;\n            }\n            return -0.5 * ((k -= 2) * k * k * k - 2);\n        },\n\n        // 五次方的缓动（t^5）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticIn: function (k) {\n            return k * k * k * k * k;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticOut: function (k) {\n            return --k * k * k * k * k + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        quinticInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return 0.5 * k * k * k * k * k;\n            }\n            return 0.5 * ((k -= 2) * k * k * k * k + 2);\n        },\n\n        // 正弦曲线的缓动（sin(t)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalIn: function (k) {\n            return 1 - Math.cos(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalOut: function (k) {\n            return Math.sin(k * Math.PI / 2);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        sinusoidalInOut: function (k) {\n            return 0.5 * (1 - Math.cos(Math.PI * k));\n        },\n\n        // 指数曲线的缓动（2^t）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialIn: function (k) {\n            return k === 0 ? 0 : Math.pow(1024, k - 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialOut: function (k) {\n            return k === 1 ? 1 : 1 - Math.pow(2, -10 * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        exponentialInOut: function (k) {\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if ((k *= 2) < 1) {\n                return 0.5 * Math.pow(1024, k - 1);\n            }\n            return 0.5 * (-Math.pow(2, -10 * (k - 1)) + 2);\n        },\n\n        // 圆形曲线的缓动（sqrt(1-t^2)）\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularIn: function (k) {\n            return 1 - Math.sqrt(1 - k * k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularOut: function (k) {\n            return Math.sqrt(1 - (--k * k));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        circularInOut: function (k) {\n            if ((k *= 2) < 1) {\n                return -0.5 * (Math.sqrt(1 - k * k) - 1);\n            }\n            return 0.5 * (Math.sqrt(1 - (k -= 2) * k) + 1);\n        },\n\n        // 创建类似于弹簧在停止前来回振荡的动画\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticIn: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return -(a * Math.pow(2, 10 * (k -= 1)) *\n                        Math.sin((k - s) * (2 * Math.PI) / p));\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            return (a * Math.pow(2, -10 * k) *\n                    Math.sin((k - s) * (2 * Math.PI) / p) + 1);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        elasticInOut: function (k) {\n            var s;\n            var a = 0.1;\n            var p = 0.4;\n            if (k === 0) {\n                return 0;\n            }\n            if (k === 1) {\n                return 1;\n            }\n            if (!a || a < 1) {\n                a = 1; s = p / 4;\n            }\n            else {\n                s = p * Math.asin(1 / a) / (2 * Math.PI);\n            }\n            if ((k *= 2) < 1) {\n                return -0.5 * (a * Math.pow(2, 10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p));\n            }\n            return a * Math.pow(2, -10 * (k -= 1))\n                    * Math.sin((k - s) * (2 * Math.PI) / p) * 0.5 + 1;\n\n        },\n\n        // 在某一动画开始沿指示的路径进行动画处理前稍稍收回该动画的移动\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backIn: function (k) {\n            var s = 1.70158;\n            return k * k * ((s + 1) * k - s);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backOut: function (k) {\n            var s = 1.70158;\n            return --k * k * ((s + 1) * k + s) + 1;\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        backInOut: function (k) {\n            var s = 1.70158 * 1.525;\n            if ((k *= 2) < 1) {\n                return 0.5 * (k * k * ((s + 1) * k - s));\n            }\n            return 0.5 * ((k -= 2) * k * ((s + 1) * k + s) + 2);\n        },\n\n        // 创建弹跳效果\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceIn: function (k) {\n            return 1 - easing.bounceOut(1 - k);\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceOut: function (k) {\n            if (k < (1 / 2.75)) {\n                return 7.5625 * k * k;\n            }\n            else if (k < (2 / 2.75)) {\n                return 7.5625 * (k -= (1.5 / 2.75)) * k + 0.75;\n            }\n            else if (k < (2.5 / 2.75)) {\n                return 7.5625 * (k -= (2.25 / 2.75)) * k + 0.9375;\n            }\n            else {\n                return 7.5625 * (k -= (2.625 / 2.75)) * k + 0.984375;\n            }\n        },\n        /**\n        * @param {number} k\n        * @return {number}\n        */\n        bounceInOut: function (k) {\n            if (k < 0.5) {\n                return easing.bounceIn(k * 2) * 0.5;\n            }\n            return easing.bounceOut(k * 2 - 1) * 0.5 + 0.5;\n        }\n    };\n\n    module.exports = easing;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/easing.js\n// module id = 1117\n// module chunks = 0","\n\n    var normalizeRadian = require('./util').normalizeRadian;\n    var PI2 = Math.PI * 2;\n\n    module.exports = {\n        /**\n         * 圆弧描边包含判断\n         * @param  {number}  cx\n         * @param  {number}  cy\n         * @param  {number}  r\n         * @param  {number}  startAngle\n         * @param  {number}  endAngle\n         * @param  {boolean}  anticlockwise\n         * @param  {number} lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {Boolean}\n         */\n        containStroke: function (\n            cx, cy, r, startAngle, endAngle, anticlockwise,\n            lineWidth, x, y\n        ) {\n\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n\n            x -= cx;\n            y -= cy;\n            var d = Math.sqrt(x * x + y * y);\n\n            if ((d - _l > r) || (d + _l < r)) {\n                return false;\n            }\n            if (Math.abs(startAngle - endAngle) % PI2 < 1e-4) {\n                // Is a circle\n                return true;\n            }\n            if (anticlockwise) {\n                var tmp = startAngle;\n                startAngle = normalizeRadian(endAngle);\n                endAngle = normalizeRadian(tmp);\n            } else {\n                startAngle = normalizeRadian(startAngle);\n                endAngle = normalizeRadian(endAngle);\n            }\n            if (startAngle > endAngle) {\n                endAngle += PI2;\n            }\n\n            var angle = Math.atan2(y, x);\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return (angle >= startAngle && angle <= endAngle)\n                || (angle + PI2 >= startAngle && angle + PI2 <= endAngle);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/arc.js\n// module id = 1118\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 三次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  x3\n         * @param  {number}  y3\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function(x0, y0, x1, y1, x2, y2, x3, y3, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l && y > y3 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l && y < y3 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l && x > x3 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l && x < x3 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.cubicProjectPoint(\n                x0, y0, x1, y1, x2, y2, x3, y3,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/cubic.js\n// module id = 1119\n// module chunks = 0","\n    module.exports = {\n        /**\n         * 线段包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            var _a = 0;\n            var _b = x0;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l)\n                || (y < y0 - _l && y < y1 - _l)\n                || (x > x0 + _l && x > x1 + _l)\n                || (x < x0 - _l && x < x1 - _l)\n            ) {\n                return false;\n            }\n\n            if (x0 !== x1) {\n                _a = (y0 - y1) / (x0 - x1);\n                _b = (x0 * y1 - x1 * y0) / (x0 - x1) ;\n            }\n            else {\n                return Math.abs(x - x0) <= _l / 2;\n            }\n            var tmp = _a * x - y + _b;\n            var _s = tmp * tmp / (_a * _a + 1);\n            return _s <= _l / 2 * _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/line.js\n// module id = 1120\n// module chunks = 0","'use strict';\n\n\n    var CMD = require('../core/PathProxy').CMD;\n    var line = require('./line');\n    var cubic = require('./cubic');\n    var quadratic = require('./quadratic');\n    var arc = require('./arc');\n    var normalizeRadian = require('./util').normalizeRadian;\n    var curve = require('../core/curve');\n\n    var windingLine = require('./windingLine');\n\n    var containStroke = line.containStroke;\n\n    var PI2 = Math.PI * 2;\n\n    var EPSILON = 1e-4;\n\n    function isAroundEqual(a, b) {\n        return Math.abs(a - b) < EPSILON;\n    }\n\n    // 临时数组\n    var roots = [-1, -1, -1];\n    var extrema = [-1, -1];\n\n    function swapExtrema() {\n        var tmp = extrema[0];\n        extrema[0] = extrema[1];\n        extrema[1] = tmp;\n    }\n\n    function windingCubic(x0, y0, x1, y1, x2, y2, x3, y3, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2 && y > y3)\n            || (y < y0 && y < y1 && y < y2 && y < y3)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.cubicRootAt(y0, y1, y2, y3, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var w = 0;\n            var nExtrema = -1;\n            var y0_, y1_;\n            for (var i = 0; i < nRoots; i++) {\n                var t = roots[i];\n\n                // Avoid winding error when intersection point is the connect point of two line of polygon\n                var unit = (t === 0 || t === 1) ? 0.5 : 1;\n\n                var x_ = curve.cubicAt(x0, x1, x2, x3, t);\n                if (x_ < x) { // Quick reject\n                    continue;\n                }\n                if (nExtrema < 0) {\n                    nExtrema = curve.cubicExtrema(y0, y1, y2, y3, extrema);\n                    if (extrema[1] < extrema[0] && nExtrema > 1) {\n                        swapExtrema();\n                    }\n                    y0_ = curve.cubicAt(y0, y1, y2, y3, extrema[0]);\n                    if (nExtrema > 1) {\n                        y1_ = curve.cubicAt(y0, y1, y2, y3, extrema[1]);\n                    }\n                }\n                if (nExtrema == 2) {\n                    // 分成三段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else if (t < extrema[1]) {\n                        w += y1_ < y0_ ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y1_ ? unit : -unit;\n                    }\n                }\n                else {\n                    // 分成两段单调函数\n                    if (t < extrema[0]) {\n                        w += y0_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y3 < y0_ ? unit : -unit;\n                    }\n                }\n            }\n            return w;\n        }\n    }\n\n    function windingQuadratic(x0, y0, x1, y1, x2, y2, x, y) {\n        // Quick reject\n        if (\n            (y > y0 && y > y1 && y > y2)\n            || (y < y0 && y < y1 && y < y2)\n        ) {\n            return 0;\n        }\n        var nRoots = curve.quadraticRootAt(y0, y1, y2, y, roots);\n        if (nRoots === 0) {\n            return 0;\n        }\n        else {\n            var t = curve.quadraticExtremum(y0, y1, y2);\n            if (t >= 0 && t <= 1) {\n                var w = 0;\n                var y_ = curve.quadraticAt(y0, y1, y2, t);\n                for (var i = 0; i < nRoots; i++) {\n                    // Remove one endpoint.\n                    var unit = (roots[i] === 0 || roots[i] === 1) ? 0.5 : 1;\n\n                    var x_ = curve.quadraticAt(x0, x1, x2, roots[i]);\n                    if (x_ < x) {   // Quick reject\n                        continue;\n                    }\n                    if (roots[i] < t) {\n                        w += y_ < y0 ? unit : -unit;\n                    }\n                    else {\n                        w += y2 < y_ ? unit : -unit;\n                    }\n                }\n                return w;\n            }\n            else {\n                // Remove one endpoint.\n                var unit = (roots[0] === 0 || roots[0] === 1) ? 0.5 : 1;\n\n                var x_ = curve.quadraticAt(x0, x1, x2, roots[0]);\n                if (x_ < x) {   // Quick reject\n                    return 0;\n                }\n                return y2 < y0 ? unit : -unit;\n            }\n        }\n    }\n\n    // TODO\n    // Arc 旋转\n    function windingArc(\n        cx, cy, r, startAngle, endAngle, anticlockwise, x, y\n    ) {\n        y -= cy;\n        if (y > r || y < -r) {\n            return 0;\n        }\n        var tmp = Math.sqrt(r * r - y * y);\n        roots[0] = -tmp;\n        roots[1] = tmp;\n\n        var diff = Math.abs(startAngle - endAngle);\n        if (diff < 1e-4) {\n            return 0;\n        }\n        if (diff % PI2 < 1e-4) {\n            // Is a circle\n            startAngle = 0;\n            endAngle = PI2;\n            var dir = anticlockwise ? 1 : -1;\n            if (x >= roots[0] + cx && x <= roots[1] + cx) {\n                return dir;\n            } else {\n                return 0;\n            }\n        }\n\n        if (anticlockwise) {\n            var tmp = startAngle;\n            startAngle = normalizeRadian(endAngle);\n            endAngle = normalizeRadian(tmp);\n        }\n        else {\n            startAngle = normalizeRadian(startAngle);\n            endAngle = normalizeRadian(endAngle);\n        }\n        if (startAngle > endAngle) {\n            endAngle += PI2;\n        }\n\n        var w = 0;\n        for (var i = 0; i < 2; i++) {\n            var x_ = roots[i];\n            if (x_ + cx > x) {\n                var angle = Math.atan2(y, x_);\n                var dir = anticlockwise ? 1 : -1;\n                if (angle < 0) {\n                    angle = PI2 + angle;\n                }\n                if (\n                    (angle >= startAngle && angle <= endAngle)\n                    || (angle + PI2 >= startAngle && angle + PI2 <= endAngle)\n                ) {\n                    if (angle > Math.PI / 2 && angle < Math.PI * 1.5) {\n                        dir = -dir;\n                    }\n                    w += dir;\n                }\n            }\n        }\n        return w;\n    }\n\n    function containPath(data, lineWidth, isStroke, x, y) {\n        var w = 0;\n        var xi = 0;\n        var yi = 0;\n        var x0 = 0;\n        var y0 = 0;\n\n        for (var i = 0; i < data.length;) {\n            var cmd = data[i++];\n            // Begin a new subpath\n            if (cmd === CMD.M && i > 1) {\n                // Close previous subpath\n                if (!isStroke) {\n                    w += windingLine(xi, yi, x0, y0, x, y);\n                }\n                // 如果被任何一个 subpath 包含\n                // if (w !== 0) {\n                //     return true;\n                // }\n            }\n\n            if (i == 1) {\n                // 如果第一个命令是 L, C, Q\n                // 则 previous point 同绘制命令的第一个 point\n                //\n                // 第一个命令为 Arc 的情况下会在后面特殊处理\n                xi = data[i];\n                yi = data[i + 1];\n\n                x0 = xi;\n                y0 = yi;\n            }\n\n            switch (cmd) {\n                case CMD.M:\n                    // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                    // 在 closePath 的时候使用\n                    x0 = data[i++];\n                    y0 = data[i++];\n                    xi = x0;\n                    yi = y0;\n                    break;\n                case CMD.L:\n                    if (isStroke) {\n                        if (containStroke(xi, yi, data[i], data[i + 1], lineWidth, x, y)) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // NOTE 在第一个命令为 L, C, Q 的时候会计算出 NaN\n                        w += windingLine(xi, yi, data[i], data[i + 1], x, y) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.C:\n                    if (isStroke) {\n                        if (cubic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingCubic(\n                            xi, yi,\n                            data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.Q:\n                    if (isStroke) {\n                        if (quadratic.containStroke(xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingQuadratic(\n                            xi, yi,\n                            data[i++], data[i++], data[i], data[i + 1],\n                            x, y\n                        ) || 0;\n                    }\n                    xi = data[i++];\n                    yi = data[i++];\n                    break;\n                case CMD.A:\n                    // TODO Arc 判断的开销比较大\n                    var cx = data[i++];\n                    var cy = data[i++];\n                    var rx = data[i++];\n                    var ry = data[i++];\n                    var theta = data[i++];\n                    var dTheta = data[i++];\n                    // TODO Arc 旋转\n                    var psi = data[i++];\n                    var anticlockwise = 1 - data[i++];\n                    var x1 = Math.cos(theta) * rx + cx;\n                    var y1 = Math.sin(theta) * ry + cy;\n                    // 不是直接使用 arc 命令\n                    if (i > 1) {\n                        w += windingLine(xi, yi, x1, y1, x, y);\n                    }\n                    else {\n                        // 第一个命令起点还未定义\n                        x0 = x1;\n                        y0 = y1;\n                    }\n                    // zr 使用scale来模拟椭圆, 这里也对x做一定的缩放\n                    var _x = (x - cx) * ry / rx + cx;\n                    if (isStroke) {\n                        if (arc.containStroke(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            lineWidth, _x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        w += windingArc(\n                            cx, cy, ry, theta, theta + dTheta, anticlockwise,\n                            _x, y\n                        );\n                    }\n                    xi = Math.cos(theta + dTheta) * rx + cx;\n                    yi = Math.sin(theta + dTheta) * ry + cy;\n                    break;\n                case CMD.R:\n                    x0 = xi = data[i++];\n                    y0 = yi = data[i++];\n                    var width = data[i++];\n                    var height = data[i++];\n                    var x1 = x0 + width;\n                    var y1 = y0 + height;\n                    if (isStroke) {\n                        if (containStroke(x0, y0, x1, y0, lineWidth, x, y)\n                          || containStroke(x1, y0, x1, y1, lineWidth, x, y)\n                          || containStroke(x1, y1, x0, y1, lineWidth, x, y)\n                          || containStroke(x0, y1, x0, y0, lineWidth, x, y)\n                        ) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // FIXME Clockwise ?\n                        w += windingLine(x1, y0, x1, y1, x, y);\n                        w += windingLine(x0, y1, x0, y0, x, y);\n                    }\n                    break;\n                case CMD.Z:\n                    if (isStroke) {\n                        if (containStroke(\n                            xi, yi, x0, y0, lineWidth, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                    else {\n                        // Close a subpath\n                        w += windingLine(xi, yi, x0, y0, x, y);\n                        // 如果被任何一个 subpath 包含\n                        // FIXME subpaths may overlap\n                        // if (w !== 0) {\n                        //     return true;\n                        // }\n                    }\n                    xi = x0;\n                    yi = y0;\n                    break;\n            }\n        }\n        if (!isStroke && !isAroundEqual(yi, y0)) {\n            w += windingLine(xi, yi, x0, y0, x, y) || 0;\n        }\n        return w !== 0;\n    }\n\n    module.exports = {\n        contain: function (pathData, x, y) {\n            return containPath(pathData, 0, false, x, y);\n        },\n\n        containStroke: function (pathData, lineWidth, x, y) {\n            return containPath(pathData, lineWidth, true, x, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/path.js\n// module id = 1121\n// module chunks = 0","\n\n    var curve = require('../core/curve');\n\n    module.exports = {\n        /**\n         * 二次贝塞尔曲线描边包含判断\n         * @param  {number}  x0\n         * @param  {number}  y0\n         * @param  {number}  x1\n         * @param  {number}  y1\n         * @param  {number}  x2\n         * @param  {number}  y2\n         * @param  {number}  lineWidth\n         * @param  {number}  x\n         * @param  {number}  y\n         * @return {boolean}\n         */\n        containStroke: function (x0, y0, x1, y1, x2, y2, lineWidth, x, y) {\n            if (lineWidth === 0) {\n                return false;\n            }\n            var _l = lineWidth;\n            // Quick reject\n            if (\n                (y > y0 + _l && y > y1 + _l && y > y2 + _l)\n                || (y < y0 - _l && y < y1 - _l && y < y2 - _l)\n                || (x > x0 + _l && x > x1 + _l && x > x2 + _l)\n                || (x < x0 - _l && x < x1 - _l && x < x2 - _l)\n            ) {\n                return false;\n            }\n            var d = curve.quadraticProjectPoint(\n                x0, y0, x1, y1, x2, y2,\n                x, y, null\n            );\n            return d <= _l / 2;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/quadratic.js\n// module id = 1122\n// module chunks = 0","\n    module.exports = function windingLine(x0, y0, x1, y1, x, y) {\n        if ((y > y0 && y > y1) || (y < y0 && y < y1)) {\n            return 0;\n        }\n        // Ignore horizontal line\n        if (y1 === y0) {\n            return 0;\n        }\n        var dir = y1 < y0 ? 1 : -1;\n        var t = (y - y0) / (y1 - y0);\n\n        // Avoid winding error when intersection point is the connect point of two line of polygon\n        if (t === 1 || t === 0) {\n            dir = y1 < y0 ? 0.5 : -0.5;\n        }\n\n        var x_ = t * (x1 - x0) + x0;\n\n        return x_ > x ? dir : 0;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/windingLine.js\n// module id = 1123\n// module chunks = 0","'use strict';\n/**\n * Only implements needed gestures for mobile.\n */\n\n\n    var eventUtil = require('./event');\n\n    var GestureMgr = function () {\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._track = [];\n    };\n\n    GestureMgr.prototype = {\n\n        constructor: GestureMgr,\n\n        recognize: function (event, target, root) {\n            this._doTrack(event, target, root);\n            return this._recognize(event);\n        },\n\n        clear: function () {\n            this._track.length = 0;\n            return this;\n        },\n\n        _doTrack: function (event, target, root) {\n            var touches = event.touches;\n\n            if (!touches) {\n                return;\n            }\n\n            var trackItem = {\n                points: [],\n                touches: [],\n                target: target,\n                event: event\n            };\n\n            for (var i = 0, len = touches.length; i < len; i++) {\n                var touch = touches[i];\n                var pos = eventUtil.clientToLocal(root, touch, {});\n                trackItem.points.push([pos.zrX, pos.zrY]);\n                trackItem.touches.push(touch);\n            }\n\n            this._track.push(trackItem);\n        },\n\n        _recognize: function (event) {\n            for (var eventName in recognizers) {\n                if (recognizers.hasOwnProperty(eventName)) {\n                    var gestureInfo = recognizers[eventName](this._track, event);\n                    if (gestureInfo) {\n                        return gestureInfo;\n                    }\n                }\n            }\n        }\n    };\n\n    function dist(pointPair) {\n        var dx = pointPair[1][0] - pointPair[0][0];\n        var dy = pointPair[1][1] - pointPair[0][1];\n\n        return Math.sqrt(dx * dx + dy * dy);\n    }\n\n    function center(pointPair) {\n        return [\n            (pointPair[0][0] + pointPair[1][0]) / 2,\n            (pointPair[0][1] + pointPair[1][1]) / 2\n        ];\n    }\n\n    var recognizers = {\n\n        pinch: function (track, event) {\n            var trackLen = track.length;\n\n            if (!trackLen) {\n                return;\n            }\n\n            var pinchEnd = (track[trackLen - 1] || {}).points;\n            var pinchPre = (track[trackLen - 2] || {}).points || pinchEnd;\n\n            if (pinchPre\n                && pinchPre.length > 1\n                && pinchEnd\n                && pinchEnd.length > 1\n            ) {\n                var pinchScale = dist(pinchEnd) / dist(pinchPre);\n                !isFinite(pinchScale) && (pinchScale = 1);\n\n                event.pinchScale = pinchScale;\n\n                var pinchCenter = center(pinchEnd);\n                event.pinchX = pinchCenter[0];\n                event.pinchY = pinchCenter[1];\n\n                return {\n                    type: 'pinch',\n                    target: track[0].target,\n                    event: event\n                };\n            }\n        }\n\n        // Only pinch currently.\n    };\n\n    module.exports = GestureMgr;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/GestureMgr.js\n// module id = 1124\n// module chunks = 0","// Simple LRU cache use doubly linked list\n// @module zrender/core/LRU\n\n\n    /**\n     * Simple double linked list. Compared with array, it has O(1) remove operation.\n     * @constructor\n     */\n    var LinkedList = function() {\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.head = null;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.tail = null;\n\n        this._len = 0;\n    };\n\n    var linkedListProto = LinkedList.prototype;\n    /**\n     * Insert a new value at the tail\n     * @param  {} val\n     * @return {module:zrender/core/LRU~Entry}\n     */\n    linkedListProto.insert = function(val) {\n        var entry = new Entry(val);\n        this.insertEntry(entry);\n        return entry;\n    };\n\n    /**\n     * Insert an entry at the tail\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.insertEntry = function(entry) {\n        if (!this.head) {\n            this.head = this.tail = entry;\n        }\n        else {\n            this.tail.next = entry;\n            entry.prev = this.tail;\n            this.tail = entry;\n        }\n        this._len++;\n    };\n\n    /**\n     * Remove entry.\n     * @param  {module:zrender/core/LRU~Entry} entry\n     */\n    linkedListProto.remove = function(entry) {\n        var prev = entry.prev;\n        var next = entry.next;\n        if (prev) {\n            prev.next = next;\n        }\n        else {\n            // Is head\n            this.head = next;\n        }\n        if (next) {\n            next.prev = prev;\n        }\n        else {\n            // Is tail\n            this.tail = prev;\n        }\n        entry.next = entry.prev = null;\n        this._len--;\n    };\n\n    /**\n     * @return {number}\n     */\n    linkedListProto.len = function() {\n        return this._len;\n    };\n\n    /**\n     * @constructor\n     * @param {} val\n     */\n    var Entry = function(val) {\n        /**\n         * @type {}\n         */\n        this.value = val;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.next;\n\n        /**\n         * @type {module:zrender/core/LRU~Entry}\n         */\n        this.prev;\n    };\n\n    /**\n     * LRU Cache\n     * @constructor\n     * @alias module:zrender/core/LRU\n     */\n    var LRU = function(maxSize) {\n\n        this._list = new LinkedList();\n\n        this._map = {};\n\n        this._maxSize = maxSize || 10;\n    };\n\n    var LRUProto = LRU.prototype;\n\n    /**\n     * @param  {string} key\n     * @param  {} value\n     */\n    LRUProto.put = function(key, value) {\n        var list = this._list;\n        var map = this._map;\n        if (map[key] == null) {\n            var len = list.len();\n            if (len >= this._maxSize && len > 0) {\n                // Remove the least recently used\n                var leastUsedEntry = list.head;\n                list.remove(leastUsedEntry);\n                delete map[leastUsedEntry.key];\n            }\n\n            var entry = list.insert(value);\n            entry.key = key;\n            map[key] = entry;\n        }\n    };\n\n    /**\n     * @param  {string} key\n     * @return {}\n     */\n    LRUProto.get = function(key) {\n        var entry = this._map[key];\n        var list = this._list;\n        if (entry != null) {\n            // Put the latest used entry in the tail\n            if (entry !== list.tail) {\n                list.remove(entry);\n                list.insertEntry(entry);\n            }\n\n            return entry.value;\n        }\n    };\n\n    /**\n     * Clear the cache\n     */\n    LRUProto.clear = function() {\n        this._list.clear();\n        this._map = {};\n    };\n\n    module.exports = LRU;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/LRU.js\n// module id = 1125\n// module chunks = 0","/**\n * @author Yi Shen(https://github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var curve = require('./curve');\n\n    var bbox = {};\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n\n    var start = vec2.create();\n    var end = vec2.create();\n    var extremity = vec2.create();\n\n    var PI2 = Math.PI * 2;\n    /**\n     * 从顶点数组中计算出最小包围盒，写入`min`和`max`中\n     * @module zrender/core/bbox\n     * @param {Array<Object>} points 顶点数组\n     * @param {number} min\n     * @param {number} max\n     */\n    bbox.fromPoints = function(points, min, max) {\n        if (points.length === 0) {\n            return;\n        }\n        var p = points[0];\n        var left = p[0];\n        var right = p[0];\n        var top = p[1];\n        var bottom = p[1];\n        var i;\n\n        for (i = 1; i < points.length; i++) {\n            p = points[i];\n            left = mathMin(left, p[0]);\n            right = mathMax(right, p[0]);\n            top = mathMin(top, p[1]);\n            bottom = mathMax(bottom, p[1]);\n        }\n\n        min[0] = left;\n        min[1] = top;\n        max[0] = right;\n        max[1] = bottom;\n    };\n\n    /**\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromLine = function (x0, y0, x1, y1, min, max) {\n        min[0] = mathMin(x0, x1);\n        min[1] = mathMin(y0, y1);\n        max[0] = mathMax(x0, x1);\n        max[1] = mathMax(y0, y1);\n    };\n\n    var xDim = [];\n    var yDim = [];\n    /**\n     * 从三阶贝塞尔曲线(p0, p1, p2, p3)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromCubic = function(\n        x0, y0, x1, y1, x2, y2, x3, y3, min, max\n    ) {\n        var cubicExtrema = curve.cubicExtrema;\n        var cubicAt = curve.cubicAt;\n        var i;\n        var n = cubicExtrema(x0, x1, x2, x3, xDim);\n        min[0] = Infinity;\n        min[1] = Infinity;\n        max[0] = -Infinity;\n        max[1] = -Infinity;\n\n        for (i = 0; i < n; i++) {\n            var x = cubicAt(x0, x1, x2, x3, xDim[i]);\n            min[0] = mathMin(x, min[0]);\n            max[0] = mathMax(x, max[0]);\n        }\n        n = cubicExtrema(y0, y1, y2, y3, yDim);\n        for (i = 0; i < n; i++) {\n            var y = cubicAt(y0, y1, y2, y3, yDim[i]);\n            min[1] = mathMin(y, min[1]);\n            max[1] = mathMax(y, max[1]);\n        }\n\n        min[0] = mathMin(x0, min[0]);\n        max[0] = mathMax(x0, max[0]);\n        min[0] = mathMin(x3, min[0]);\n        max[0] = mathMax(x3, max[0]);\n\n        min[1] = mathMin(y0, min[1]);\n        max[1] = mathMax(y0, max[1]);\n        min[1] = mathMin(y3, min[1]);\n        max[1] = mathMax(y3, max[1]);\n    };\n\n    /**\n     * 从二阶贝塞尔曲线(p0, p1, p2)中计算出最小包围盒，写入`min`和`max`中\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromQuadratic = function(x0, y0, x1, y1, x2, y2, min, max) {\n        var quadraticExtremum = curve.quadraticExtremum;\n        var quadraticAt = curve.quadraticAt;\n        // Find extremities, where derivative in x dim or y dim is zero\n        var tx =\n            mathMax(\n                mathMin(quadraticExtremum(x0, x1, x2), 1), 0\n            );\n        var ty =\n            mathMax(\n                mathMin(quadraticExtremum(y0, y1, y2), 1), 0\n            );\n\n        var x = quadraticAt(x0, x1, x2, tx);\n        var y = quadraticAt(y0, y1, y2, ty);\n\n        min[0] = mathMin(x0, x2, x);\n        min[1] = mathMin(y0, y2, y);\n        max[0] = mathMax(x0, x2, x);\n        max[1] = mathMax(y0, y2, y);\n    };\n\n    /**\n     * 从圆弧中计算出最小包围盒，写入`min`和`max`中\n     * @method\n     * @memberOf module:zrender/core/bbox\n     * @param {number} x\n     * @param {number} y\n     * @param {number} rx\n     * @param {number} ry\n     * @param {number} startAngle\n     * @param {number} endAngle\n     * @param {number} anticlockwise\n     * @param {Array.<number>} min\n     * @param {Array.<number>} max\n     */\n    bbox.fromArc = function (\n        x, y, rx, ry, startAngle, endAngle, anticlockwise, min, max\n    ) {\n        var vec2Min = vec2.min;\n        var vec2Max = vec2.max;\n\n        var diff = Math.abs(startAngle - endAngle);\n\n\n        if (diff % PI2 < 1e-4 && diff > 1e-4) {\n            // Is a circle\n            min[0] = x - rx;\n            min[1] = y - ry;\n            max[0] = x + rx;\n            max[1] = y + ry;\n            return;\n        }\n\n        start[0] = mathCos(startAngle) * rx + x;\n        start[1] = mathSin(startAngle) * ry + y;\n\n        end[0] = mathCos(endAngle) * rx + x;\n        end[1] = mathSin(endAngle) * ry + y;\n\n        vec2Min(min, start, end);\n        vec2Max(max, start, end);\n\n        // Thresh to [0, Math.PI * 2]\n        startAngle = startAngle % (PI2);\n        if (startAngle < 0) {\n            startAngle = startAngle + PI2;\n        }\n        endAngle = endAngle % (PI2);\n        if (endAngle < 0) {\n            endAngle = endAngle + PI2;\n        }\n\n        if (startAngle > endAngle && !anticlockwise) {\n            endAngle += PI2;\n        }\n        else if (startAngle < endAngle && anticlockwise) {\n            startAngle += PI2;\n        }\n        if (anticlockwise) {\n            var tmp = endAngle;\n            endAngle = startAngle;\n            startAngle = tmp;\n        }\n\n        // var number = 0;\n        // var step = (anticlockwise ? -Math.PI : Math.PI) / 2;\n        for (var angle = 0; angle < endAngle; angle += Math.PI / 2) {\n            if (angle > startAngle) {\n                extremity[0] = mathCos(angle) * rx + x;\n                extremity[1] = mathSin(angle) * ry + y;\n\n                vec2Min(min, extremity, min);\n                vec2Max(max, extremity, max);\n            }\n        }\n    };\n\n    module.exports = bbox;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/bbox.js\n// module id = 1126\n// module chunks = 0","\n\n    var eventTool = require('../core/event');\n    var zrUtil = require('../core/util');\n    var Eventful = require('../mixin/Eventful');\n    var env = require('../core/env');\n    var GestureMgr = require('../core/GestureMgr');\n\n    var addEventListener = eventTool.addEventListener;\n    var removeEventListener = eventTool.removeEventListener;\n    var normalizeEvent = eventTool.normalizeEvent;\n\n    var TOUCH_CLICK_DELAY = 300;\n\n    var mouseHandlerNames = [\n        'click', 'dblclick', 'mousewheel', 'mouseout',\n        'mouseup', 'mousedown', 'mousemove', 'contextmenu'\n    ];\n\n    var touchHandlerNames = [\n        'touchstart', 'touchend', 'touchmove'\n    ];\n\n    function eventNameFix(name) {\n        return (name === 'mousewheel' && env.browser.firefox) ? 'DOMMouseScroll' : name;\n    }\n\n    function processGesture(proxy, event, stage) {\n        var gestureMgr = proxy._gestureMgr;\n\n        stage === 'start' && gestureMgr.clear();\n\n        var gestureInfo = gestureMgr.recognize(\n            event,\n            proxy.handler.findHover(event.zrX, event.zrY, null),\n            proxy.dom\n        );\n\n        stage === 'end' && gestureMgr.clear();\n\n        if (gestureInfo) {\n            // eventTool.stop(event);\n            var type = gestureInfo.type;\n            event.gestureEvent = type;\n\n            proxy.handler.dispatchToElement(gestureInfo.target, type, gestureInfo.event);\n        }\n    }\n\n    /**\n     * Prevent mouse event from being dispatched after Touch Events action\n     * @see <https://github.com/deltakosh/handjs/blob/master/src/hand.base.js>\n     * 1. Mobile browsers dispatch mouse events 300ms after touchend.\n     * 2. Chrome for Android dispatch mousedown for long-touch about 650ms\n     * Result: Blocking Mouse Events for 700ms.\n     */\n    function setTouchTimer(instance) {\n        instance._touching = true;\n        clearTimeout(instance._touchTimer);\n        instance._touchTimer = setTimeout(function () {\n            instance._touching = false;\n        }, 700);\n    }\n\n    function useTouchEvent() {\n        return env.touchEventsSupported;\n    }\n\n    var domHandlers = {\n        /**\n         * Mouse move handler\n         * @inner\n         * @param {Event} event\n         */\n        mousemove: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            this.trigger('mousemove', event);\n        },\n\n        /**\n         * Mouse out handler\n         * @inner\n         * @param {Event} event\n         */\n        mouseout: function (event) {\n            event = normalizeEvent(this.dom, event);\n\n            var element = event.toElement || event.relatedTarget;\n            if (element != this.dom) {\n                while (element && element.nodeType != 9) {\n                    // 忽略包含在root中的dom引起的mouseOut\n                    if (element === this.dom) {\n                        return;\n                    }\n\n                    element = element.parentNode;\n                }\n            }\n\n            this.trigger('mouseout', event);\n        },\n\n        /**\n         * Touch开始响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchstart: function (event) {\n            // Default mouse behaviour should not be disabled here.\n            // For example, page may needs to be slided.\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            this._lastTouchMoment = new Date();\n\n            processGesture(this, event, 'start');\n\n            // In touch device, trigger `mousemove`(`mouseover`) should\n            // be triggered.\n            domHandlers.mousemove.call(this, event);\n\n            domHandlers.mousedown.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch移动响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchmove: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'change');\n\n            // Mouse move should always be triggered no matter whether\n            // there is gestrue event, because mouse move and pinch may\n            // be used at the same time.\n            domHandlers.mousemove.call(this, event);\n\n            setTouchTimer(this);\n        },\n\n        /**\n         * Touch结束响应函数\n         * @inner\n         * @param {Event} event\n         */\n        touchend: function (event) {\n\n            event = normalizeEvent(this.dom, event);\n\n            // Mark touch, which is useful in distinguish touch and\n            // mouse event in upper applicatoin.\n            event.zrByTouch = true;\n\n            processGesture(this, event, 'end');\n\n            domHandlers.mouseup.call(this, event);\n\n            // Do not trigger `mouseout` here, in spite of `mousemove`(`mouseover`) is\n            // triggered in `touchstart`. This seems to be illogical, but by this mechanism,\n            // we can conveniently implement \"hover style\" in both PC and touch device just\n            // by listening to `mouseover` to add \"hover style\" and listening to `mouseout`\n            // to remove \"hover style\" on an element, without any additional code for\n            // compatibility. (`mouseout` will not be triggered in `touchend`, so \"hover\n            // style\" will remain for user view)\n\n            // click event should always be triggered no matter whether\n            // there is gestrue event. System click can not be prevented.\n            if (+new Date() - this._lastTouchMoment < TOUCH_CLICK_DELAY) {\n                domHandlers.click.call(this, event);\n            }\n\n            setTouchTimer(this);\n        }\n    };\n\n    // Common handlers\n    zrUtil.each(['click', 'mousedown', 'mouseup', 'mousewheel', 'dblclick', 'contextmenu'], function (name) {\n        domHandlers[name] = function (event) {\n            event = normalizeEvent(this.dom, event);\n            this.trigger(name, event);\n        };\n    });\n\n    /**\n     * 为控制类实例初始化dom 事件处理函数\n     *\n     * @inner\n     * @param {module:zrender/Handler} instance 控制类实例\n     */\n    function initDomHandler(instance) {\n        for (var i = 0; i < touchHandlerNames.length; i++) {\n            var name = touchHandlerNames[i];\n            instance._handlers[name] = zrUtil.bind(domHandlers[name], instance);\n        }\n\n        for (var i = 0; i < mouseHandlerNames.length; i++) {\n            var name = mouseHandlerNames[i];\n            instance._handlers[name] = makeMouseHandler(domHandlers[name], instance);\n        }\n\n        function makeMouseHandler(fn, instance) {\n            return function () {\n                if (instance._touching) {\n                    return;\n                }\n                return fn.apply(instance, arguments);\n            };\n        }\n    }\n\n\n    function HandlerDomProxy(dom) {\n        Eventful.call(this);\n\n        this.dom = dom;\n\n        /**\n         * @private\n         * @type {boolean}\n         */\n        this._touching = false;\n\n        /**\n         * @private\n         * @type {number}\n         */\n        this._touchTimer;\n\n        /**\n         * @private\n         * @type {module:zrender/core/GestureMgr}\n         */\n        this._gestureMgr = new GestureMgr();\n\n        this._handlers = {};\n\n        initDomHandler(this);\n\n        if (useTouchEvent()) {\n            mountHandlers(touchHandlerNames, this);\n\n            // Handler of 'mouseout' event is needed in touch mode, which will be mounted below.\n            // addEventListener(root, 'mouseout', this._mouseoutHandler);\n        }\n\n        // Considering some devices that both enable touch and mouse event (like MS Surface\n        // and lenovo X240, @see #2350), we make mouse event be always listened, otherwise\n        // mouse event can not be handle in those devices.\n        mountHandlers(mouseHandlerNames, this);\n\n        function mountHandlers(handlerNames, instance) {\n            zrUtil.each(handlerNames, function (name) {\n                addEventListener(dom, eventNameFix(name), instance._handlers[name]);\n            }, instance);\n        }\n    }\n\n    var handlerDomProxyProto = HandlerDomProxy.prototype;\n    handlerDomProxyProto.dispose = function () {\n        var handlerNames = mouseHandlerNames.concat(touchHandlerNames);\n\n        for (var i = 0; i < handlerNames.length; i++) {\n            var name = handlerNames[i];\n            removeEventListener(this.dom, eventNameFix(name), this._handlers[name]);\n        }\n    };\n\n    handlerDomProxyProto.setCursor = function (cursorStyle) {\n        this.dom.style.cursor = cursorStyle || 'default';\n    };\n\n    zrUtil.mixin(HandlerDomProxy, Eventful);\n\n    module.exports = HandlerDomProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/dom/HandlerProxy.js\n// module id = 1127\n// module chunks = 0","// CompoundPath to improve performance\n\n\n    var Path = require('./Path');\n    module.exports = Path.extend({\n\n        type: 'compound',\n\n        shape: {\n\n            paths: null\n        },\n\n        _updatePathDirty: function () {\n            var dirtyPath = this.__dirtyPath;\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                // Mark as dirty if any subpath is dirty\n                dirtyPath = dirtyPath || paths[i].__dirtyPath;\n            }\n            this.__dirtyPath = dirtyPath;\n            this.__dirty = this.__dirty || dirtyPath;\n        },\n\n        beforeBrush: function () {\n            this._updatePathDirty();\n            var paths = this.shape.paths || [];\n            var scale = this.getGlobalScale();\n            // Update path scale\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].path.setScale(scale[0], scale[1]);\n            }\n        },\n\n        buildPath: function (ctx, shape) {\n            var paths = shape.paths || [];\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].buildPath(ctx, paths[i].shape, true);\n            }\n        },\n\n        afterBrush: function () {\n            var paths = this.shape.paths;\n            for (var i = 0; i < paths.length; i++) {\n                paths[i].__dirtyPath = false;\n            }\n        },\n\n        getBoundingRect: function () {\n            this._updatePathDirty();\n            return Path.prototype.getBoundingRect.call(this);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/CompoundPath.js\n// module id = 1128\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, x2, y2 are all percent from 0 to 1\n     * @param {number} [x=0]\n     * @param {number} [y=0]\n     * @param {number} [x2=1]\n     * @param {number} [y2=0]\n     * @param {Array.<Object>} colorStops\n     * @param {boolean} [globalCoord=false]\n     */\n    var LinearGradient = function (x, y, x2, y2, colorStops, globalCoord) {\n        this.x = x == null ? 0 : x;\n\n        this.y = y == null ? 0 : y;\n\n        this.x2 = x2 == null ? 1 : x2;\n\n        this.y2 = y2 == null ? 0 : y2;\n\n        // Can be cloned\n        this.type = 'linear';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    LinearGradient.prototype = {\n\n        constructor: LinearGradient\n    };\n\n    zrUtil.inherits(LinearGradient, Gradient);\n\n    module.exports = LinearGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/LinearGradient.js\n// module id = 1129\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('../core/util');\n\n    var Gradient = require('./Gradient');\n\n    /**\n     * x, y, r are all percent from 0 to 1\n     * @param {number} [x=0.5]\n     * @param {number} [y=0.5]\n     * @param {number} [r=0.5]\n     * @param {Array.<Object>} [colorStops]\n     * @param {boolean} [globalCoord=false]\n     */\n    var RadialGradient = function (x, y, r, colorStops, globalCoord) {\n        this.x = x == null ? 0.5 : x;\n\n        this.y = y == null ? 0.5 : y;\n\n        this.r = r == null ? 0.5 : r;\n\n        // Can be cloned\n        this.type = 'radial';\n\n        // If use global coord\n        this.global = globalCoord || false;\n\n        Gradient.call(this, colorStops);\n    };\n\n    RadialGradient.prototype = {\n\n        constructor: RadialGradient\n    };\n\n    zrUtil.inherits(RadialGradient, Gradient);\n\n    module.exports = RadialGradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/RadialGradient.js\n// module id = 1130\n// module chunks = 0","/**\n * Text element\n * @module zrender/graphic/Text\n *\n * TODO Wrapping\n *\n * Text not support gradient\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var textContain = require('../contain/text');\n\n    /**\n     * @alias zrender/graphic/Text\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    var Text = function (opts) {\n        Displayable.call(this, opts);\n    };\n\n    Text.prototype = {\n\n        constructor: Text,\n\n        type: 'text',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var x = style.x || 0;\n            var y = style.y || 0;\n            // Convert to string\n            var text = style.text;\n\n            // Convert to string\n            text != null && (text += '');\n\n            // Always bind style\n            style.bind(ctx, this, prevEl);\n\n            if (text) {\n\n                this.setTransform(ctx);\n\n                var textBaseline;\n                var textAlign = style.textAlign;\n                var font = style.textFont || style.font;\n                if (style.textVerticalAlign) {\n                    var rect = textContain.getBoundingRect(\n                        text, font, style.textAlign, 'top'\n                    );\n                    // Ignore textBaseline\n                    textBaseline = 'middle';\n                    switch (style.textVerticalAlign) {\n                        case 'middle':\n                            y -= rect.height / 2 - rect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= rect.height - rect.lineHeight / 2;\n                            break;\n                        default:\n                            y += rect.lineHeight / 2;\n                    }\n                }\n                else {\n                    textBaseline = style.textBaseline;\n                }\n\n                // TODO Invalid font\n                ctx.font = font || '12px sans-serif';\n                ctx.textAlign = textAlign || 'left';\n                // Use canvas default left textAlign. Giving invalid value will cause state not change\n                if (ctx.textAlign !== textAlign) {\n                    ctx.textAlign = 'left';\n                }\n                ctx.textBaseline = textBaseline || 'alphabetic';\n                // Use canvas default alphabetic baseline\n                if (ctx.textBaseline !== textBaseline) {\n                    ctx.textBaseline = 'alphabetic';\n                }\n\n                var lineHeight = textContain.measureText('国', ctx.font).width;\n\n                var textLines = text.split('\\n');\n                for (var i = 0; i < textLines.length; i++) {\n                    style.hasFill() && ctx.fillText(textLines[i], x, y);\n                    style.hasStroke() && ctx.strokeText(textLines[i], x, y);\n                    y += lineHeight;\n                }\n\n                this.restoreTransform(ctx);\n            }\n        },\n\n        getBoundingRect: function () {\n            if (!this._rect) {\n                var style = this.style;\n                var textVerticalAlign = style.textVerticalAlign;\n                var rect = textContain.getBoundingRect(\n                    style.text + '', style.textFont || style.font, style.textAlign,\n                    textVerticalAlign ? 'top' : style.textBaseline\n                );\n                switch (textVerticalAlign) {\n                    case 'middle':\n                        rect.y -= rect.height / 2;\n                        break;\n                    case 'bottom':\n                        rect.y -= rect.height;\n                        break;\n                }\n                rect.x += style.x || 0;\n                rect.y += style.y || 0;\n                this._rect = rect;\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(Text, Displayable);\n\n    module.exports = Text;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Text.js\n// module id = 1131\n// module chunks = 0","\n\n    module.exports = {\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            var r = shape.r;\n            var r1;\n            var r2;\n            var r3;\n            var r4;\n\n            // Convert width and height to positive for better borderRadius\n            if (width < 0) {\n                x = x + width;\n                width = -width;\n            }\n            if (height < 0) {\n                y = y + height;\n                height = -height;\n            }\n\n            if (typeof r === 'number') {\n                r1 = r2 = r3 = r4 = r;\n            }\n            else if (r instanceof Array) {\n                if (r.length === 1) {\n                    r1 = r2 = r3 = r4 = r[0];\n                }\n                else if (r.length === 2) {\n                    r1 = r3 = r[0];\n                    r2 = r4 = r[1];\n                }\n                else if (r.length === 3) {\n                    r1 = r[0];\n                    r2 = r4 = r[1];\n                    r3 = r[2];\n                }\n                else {\n                    r1 = r[0];\n                    r2 = r[1];\n                    r3 = r[2];\n                    r4 = r[3];\n                }\n            }\n            else {\n                r1 = r2 = r3 = r4 = 0;\n            }\n\n            var total;\n            if (r1 + r2 > width) {\n                total = r1 + r2;\n                r1 *= width / total;\n                r2 *= width / total;\n            }\n            if (r3 + r4 > width) {\n                total = r3 + r4;\n                r3 *= width / total;\n                r4 *= width / total;\n            }\n            if (r2 + r3 > height) {\n                total = r2 + r3;\n                r2 *= height / total;\n                r3 *= height / total;\n            }\n            if (r1 + r4 > height) {\n                total = r1 + r4;\n                r1 *= height / total;\n                r4 *= height / total;\n            }\n            ctx.moveTo(x + r1, y);\n            ctx.lineTo(x + width - r2, y);\n            r2 !== 0 && ctx.quadraticCurveTo(\n                x + width, y, x + width, y + r2\n            );\n            ctx.lineTo(x + width, y + height - r3);\n            r3 !== 0 && ctx.quadraticCurveTo(\n                x + width, y + height, x + width - r3, y + height\n            );\n            ctx.lineTo(x + r4, y + height);\n            r4 !== 0 && ctx.quadraticCurveTo(\n                x, y + height, x, y + height - r4\n            );\n            ctx.lineTo(x, y + r1);\n            r1 !== 0 && ctx.quadraticCurveTo(x, y, x + r1, y);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/roundRect.js\n// module id = 1132\n// module chunks = 0","/**\n * 贝塞尔平滑曲线\n * @module zrender/shape/util/smoothBezier\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n\n    var vec2 = require('../../core/vector');\n    var v2Min = vec2.min;\n    var v2Max = vec2.max;\n    var v2Scale = vec2.scale;\n    var v2Distance = vec2.distance;\n    var v2Add = vec2.add;\n\n    /**\n     * 贝塞尔平滑曲线\n     * @alias module:zrender/shape/util/smoothBezier\n     * @param {Array} points 线段顶点数组\n     * @param {number} smooth 平滑等级, 0-1\n     * @param {boolean} isLoop\n     * @param {Array} constraint 将计算出来的控制点约束在一个包围盒内\n     *                           比如 [[0, 0], [100, 100]], 这个包围盒会与\n     *                           整个折线的包围盒做一个并集用来约束控制点。\n     * @param {Array} 计算出来的控制点数组\n     */\n    module.exports = function (points, smooth, isLoop, constraint) {\n        var cps = [];\n\n        var v = [];\n        var v1 = [];\n        var v2 = [];\n        var prevPoint;\n        var nextPoint;\n\n        var min, max;\n        if (constraint) {\n            min = [Infinity, Infinity];\n            max = [-Infinity, -Infinity];\n            for (var i = 0, len = points.length; i < len; i++) {\n                v2Min(min, min, points[i]);\n                v2Max(max, max, points[i]);\n            }\n            // 与指定的包围盒做并集\n            v2Min(min, min, constraint[0]);\n            v2Max(max, max, constraint[1]);\n        }\n\n        for (var i = 0, len = points.length; i < len; i++) {\n            var point = points[i];\n\n            if (isLoop) {\n                prevPoint = points[i ? i - 1 : len - 1];\n                nextPoint = points[(i + 1) % len];\n            }\n            else {\n                if (i === 0 || i === len - 1) {\n                    cps.push(vec2.clone(points[i]));\n                    continue;\n                }\n                else {\n                    prevPoint = points[i - 1];\n                    nextPoint = points[i + 1];\n                }\n            }\n\n            vec2.sub(v, nextPoint, prevPoint);\n\n            // use degree to scale the handle length\n            v2Scale(v, v, smooth);\n\n            var d0 = v2Distance(point, prevPoint);\n            var d1 = v2Distance(point, nextPoint);\n            var sum = d0 + d1;\n            if (sum !== 0) {\n                d0 /= sum;\n                d1 /= sum;\n            }\n\n            v2Scale(v1, v, -d0);\n            v2Scale(v2, v, d1);\n            var cp0 = v2Add([], point, v1);\n            var cp1 = v2Add([], point, v2);\n            if (constraint) {\n                v2Max(cp0, cp0, min);\n                v2Min(cp0, cp0, max);\n                v2Max(cp1, cp1, min);\n                v2Min(cp1, cp1, max);\n            }\n            cps.push(cp0);\n            cps.push(cp1);\n        }\n\n        if (isLoop) {\n            cps.push(cps.shift());\n        }\n\n        return cps;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothBezier.js\n// module id = 1133\n// module chunks = 0","/**\n * Catmull-Rom spline 插值折线\n * @module zrender/shape/util/smoothSpline\n * @author pissang (https://www.github.com/pissang)\n *         Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         errorrik (errorrik@gmail.com)\n */\n\n    var vec2 = require('../../core/vector');\n\n    /**\n     * @inner\n     */\n    function interpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    /**\n     * @alias module:zrender/shape/util/smoothSpline\n     * @param {Array} points 线段顶点数组\n     * @param {boolean} isLoop\n     * @return {Array}\n     */\n    module.exports = function (points, isLoop) {\n        var len = points.length;\n        var ret = [];\n\n        var distance = 0;\n        for (var i = 1; i < len; i++) {\n            distance += vec2.distance(points[i - 1], points[i]);\n        }\n\n        var segs = distance / 2;\n        segs = segs < len ? len : segs;\n        for (var i = 0; i < segs; i++) {\n            var pos = i / (segs - 1) * (isLoop ? len : len - 1);\n            var idx = Math.floor(pos);\n\n            var w = pos - idx;\n\n            var p0;\n            var p1 = points[idx % len];\n            var p2;\n            var p3;\n            if (!isLoop) {\n                p0 = points[idx === 0 ? idx : idx - 1];\n                p2 = points[idx > len - 2 ? len - 1 : idx + 1];\n                p3 = points[idx > len - 3 ? len - 1 : idx + 2];\n            }\n            else {\n                p0 = points[(idx - 1 + len) % len];\n                p2 = points[(idx + 1) % len];\n                p3 = points[(idx + 2) % len];\n            }\n\n            var w2 = w * w;\n            var w3 = w * w2;\n\n            ret.push([\n                interpolate(p0[0], p1[0], p2[0], p3[0], w, w2, w3),\n                interpolate(p0[1], p1[1], p2[1], p3[1], w, w2, w3)\n            ]);\n        }\n        return ret;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/smoothSpline.js\n// module id = 1134\n// module chunks = 0","/**\n * Mixin for drawing text in a element bounding rect\n * @module zrender/mixin/RectText\n */\n\n\n\n    var textContain = require('../../contain/text');\n    var BoundingRect = require('../../core/BoundingRect');\n\n    var tmpRect = new BoundingRect();\n\n    var RectText = function () {};\n\n    function parsePercent(value, maxValue) {\n        if (typeof value === 'string') {\n            if (value.lastIndexOf('%') >= 0) {\n                return parseFloat(value) / 100 * maxValue;\n            }\n            return parseFloat(value);\n        }\n        return value;\n    }\n\n    RectText.prototype = {\n\n        constructor: RectText,\n\n        /**\n         * Draw text in a rect with specified position.\n         * @param  {CanvasRenderingContext} ctx\n         * @param  {Object} rect Displayable rect\n         * @return {Object} textRect Alternative precalculated text bounding rect\n         */\n        drawRectText: function (ctx, rect, textRect) {\n            var style = this.style;\n            var text = style.text;\n            // Convert to string\n            text != null && (text += '');\n            if (!text) {\n                return;\n            }\n\n            // FIXME\n            ctx.save();\n\n            var x;\n            var y;\n            var textPosition = style.textPosition;\n            var distance = style.textDistance;\n            var align = style.textAlign;\n            var font = style.textFont || style.font;\n            var baseline = style.textBaseline;\n            var verticalAlign = style.textVerticalAlign;\n\n            textRect = textRect || textContain.getBoundingRect(text, font, align, baseline);\n\n            // Transform rect to view space\n            var transform = this.transform;\n            if (!style.textTransform) {\n                if (transform) {\n                    tmpRect.copy(rect);\n                    tmpRect.applyTransform(transform);\n                    rect = tmpRect;\n                }\n            }\n            else {\n                this.setTransform(ctx);\n            }\n\n            // Text position represented by coord\n            if (textPosition instanceof Array) {\n                // Percent\n                x = rect.x + parsePercent(textPosition[0], rect.width);\n                y = rect.y + parsePercent(textPosition[1], rect.height);\n                align = align || 'left';\n                baseline = baseline || 'top';\n\n                if (verticalAlign) {\n                    switch (verticalAlign) {\n                        case 'middle':\n                            y -= textRect.height / 2 - textRect.lineHeight / 2;\n                            break;\n                        case 'bottom':\n                            y -= textRect.height - textRect.lineHeight / 2;\n                            break;\n                        default:\n                            y += textRect.lineHeight / 2;\n                    }\n                    // Force bseline to be middle\n                    baseline = 'middle';\n                }\n            }\n            else {\n                var res = textContain.adjustTextPositionOnRect(\n                    textPosition, rect, textRect, distance\n                );\n                x = res.x;\n                y = res.y;\n                // Default align and baseline when has textPosition\n                align = align || res.textAlign;\n                baseline = baseline || res.textBaseline;\n            }\n\n            // Use canvas default left textAlign. Giving invalid value will cause state not change\n            ctx.textAlign = align || 'left';\n            // Use canvas default alphabetic baseline\n            ctx.textBaseline = baseline || 'alphabetic';\n\n            var textFill = style.textFill;\n            var textStroke = style.textStroke;\n            textFill && (ctx.fillStyle = textFill);\n            textStroke && (ctx.strokeStyle = textStroke);\n\n            // TODO Invalid font\n            ctx.font = font || '12px sans-serif';\n\n            // Text shadow\n            // Always set shadowBlur and shadowOffset to avoid leak from displayable\n            ctx.shadowBlur = style.textShadowBlur;\n            ctx.shadowColor = style.textShadowColor || 'transparent';\n            ctx.shadowOffsetX = style.textShadowOffsetX;\n            ctx.shadowOffsetY = style.textShadowOffsetY;\n\n            var textLines = text.split('\\n');\n\n            if (style.textRotation) {\n                transform && ctx.translate(transform[4], transform[5]);\n                ctx.rotate(style.textRotation);\n                transform && ctx.translate(-transform[4], -transform[5]);\n            }\n\n            for (var i = 0; i < textLines.length; i++) {\n                textFill && ctx.fillText(textLines[i], x, y);\n                textStroke && ctx.strokeText(textLines[i], x, y);\n                y += textRect.lineHeight;\n            }\n\n            ctx.restore();\n        }\n    };\n\n    module.exports = RectText;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/mixin/RectText.js\n// module id = 1135\n// module chunks = 0","/**\n * 圆弧\n * @module zrender/graphic/shape/Arc\n */\n \n\n    module.exports = require('../Path').extend({\n\n        type: 'arc',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        style: {\n\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r + x, unitY * r + y);\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Arc.js\n// module id = 1136\n// module chunks = 0","'use strict';\n/**\n * 贝塞尔曲线\n * @module zrender/shape/BezierCurve\n */\n\n\n    var curveTool = require('../../core/curve');\n    var vec2 = require('../../core/vector');\n    var quadraticSubdivide = curveTool.quadraticSubdivide;\n    var cubicSubdivide = curveTool.cubicSubdivide;\n    var quadraticAt = curveTool.quadraticAt;\n    var cubicAt = curveTool.cubicAt;\n    var quadraticDerivativeAt = curveTool.quadraticDerivativeAt;\n    var cubicDerivativeAt = curveTool.cubicDerivativeAt;\n\n    var out = [];\n\n    function someVectorAt(shape, t, isTangent) {\n        var cpx2 = shape.cpx2;\n        var cpy2 = shape.cpy2;\n        if (cpx2 === null || cpy2 === null) {\n            return [\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.x1, shape.cpx1, shape.cpx2, shape.x2, t),\n                (isTangent ? cubicDerivativeAt : cubicAt)(shape.y1, shape.cpy1, shape.cpy2, shape.y2, t)\n            ];\n        }\n        else {\n            return [\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.x1, shape.cpx1, shape.x2, t),\n                (isTangent ? quadraticDerivativeAt : quadraticAt)(shape.y1, shape.cpy1, shape.y2, t)\n            ];\n        }\n    }\n    module.exports = require('../Path').extend({\n\n        type: 'bezier-curve',\n\n        shape: {\n            x1: 0,\n            y1: 0,\n            x2: 0,\n            y2: 0,\n            cpx1: 0,\n            cpy1: 0,\n            // cpx2: 0,\n            // cpy2: 0\n\n            // Curve show percent, for animating\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var cpx1 = shape.cpx1;\n            var cpy1 = shape.cpy1;\n            var cpx2 = shape.cpx2;\n            var cpy2 = shape.cpy2;\n            var percent = shape.percent;\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (cpx2 == null || cpy2 == null) {\n                if (percent < 1) {\n                    quadraticSubdivide(\n                        x1, cpx1, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    x2 = out[2];\n                    quadraticSubdivide(\n                        y1, cpy1, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    y2 = out[2];\n                }\n\n                ctx.quadraticCurveTo(\n                    cpx1, cpy1,\n                    x2, y2\n                );\n            }\n            else {\n                if (percent < 1) {\n                    cubicSubdivide(\n                        x1, cpx1, cpx2, x2, percent, out\n                    );\n                    cpx1 = out[1];\n                    cpx2 = out[2];\n                    x2 = out[3];\n                    cubicSubdivide(\n                        y1, cpy1, cpy2, y2, percent, out\n                    );\n                    cpy1 = out[1];\n                    cpy2 = out[2];\n                    y2 = out[3];\n                }\n                ctx.bezierCurveTo(\n                    cpx1, cpy1,\n                    cpx2, cpy2,\n                    x2, y2\n                );\n            }\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        pointAt: function (t) {\n            return someVectorAt(this.shape, t, false);\n        },\n\n        /**\n         * Get tangent at percent\n         * @param  {number} t\n         * @return {Array.<number>}\n         */\n        tangentAt: function (t) {\n            var p = someVectorAt(this.shape, t, true);\n            return vec2.normalize(p, p);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/BezierCurve.js\n// module id = 1137\n// module chunks = 0","'use strict';\n/**\n * 圆形\n * @module zrender/shape/Circle\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'circle',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0\n        },\n\n\n        buildPath : function (ctx, shape, inBundle) {\n            // Better stroking in ShapeBundle\n            // Always do it may have performence issue ( fill may be 2x more cost)\n            if (inBundle) {\n                ctx.moveTo(shape.cx + shape.r, shape.cy);\n            }\n            // Better stroking in ShapeBundle\n            // ctx.moveTo(shape.cx + shape.r, shape.cy);\n            ctx.arc(shape.cx, shape.cy, shape.r, 0, Math.PI * 2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Circle.js\n// module id = 1138\n// module chunks = 0","/**\n * 直线\n * @module zrender/graphic/shape/Line\n */\n\n    module.exports = require('../Path').extend({\n\n        type: 'line',\n\n        shape: {\n            // Start point\n            x1: 0,\n            y1: 0,\n            // End point\n            x2: 0,\n            y2: 0,\n\n            percent: 1\n        },\n\n        style: {\n            stroke: '#000',\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            var x1 = shape.x1;\n            var y1 = shape.y1;\n            var x2 = shape.x2;\n            var y2 = shape.y2;\n            var percent = shape.percent;\n\n            if (percent === 0) {\n                return;\n            }\n\n            ctx.moveTo(x1, y1);\n\n            if (percent < 1) {\n                x2 = x1 * (1 - percent) + x2 * percent;\n                y2 = y1 * (1 - percent) + y2 * percent;\n            }\n            ctx.lineTo(x2, y2);\n        },\n\n        /**\n         * Get point at percent\n         * @param  {number} percent\n         * @return {Array.<number>}\n         */\n        pointAt: function (p) {\n            var shape = this.shape;\n            return [\n                shape.x1 * (1 - p) + shape.x2 * p,\n                shape.y1 * (1 - p) + shape.y2 * p\n            ];\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Line.js\n// module id = 1139\n// module chunks = 0","/**\n * 多边形\n * @module zrender/shape/Polygon\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polygon',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, true);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polygon.js\n// module id = 1140\n// module chunks = 0","/**\n * @module zrender/graphic/shape/Polyline\n */\n\n\n    var polyHelper = require('../helper/poly');\n\n    module.exports = require('../Path').extend({\n        \n        type: 'polyline',\n\n        shape: {\n            points: null,\n\n            smooth: false,\n\n            smoothConstraint: null\n        },\n\n        style: {\n            stroke: '#000',\n\n            fill: null\n        },\n\n        buildPath: function (ctx, shape) {\n            polyHelper.buildPath(ctx, shape, false);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Polyline.js\n// module id = 1141\n// module chunks = 0","/**\n * 矩形\n * @module zrender/graphic/shape/Rect\n */\n\n\n    var roundRectHelper = require('../helper/roundRect');\n\n    module.exports = require('../Path').extend({\n\n        type: 'rect',\n\n        shape: {\n            // 左上、右上、右下、左下角的半径依次为r1、r2、r3、r4\n            // r缩写为1         相当于 [1, 1, 1, 1]\n            // r缩写为[1]       相当于 [1, 1, 1, 1]\n            // r缩写为[1, 2]    相当于 [1, 2, 1, 2]\n            // r缩写为[1, 2, 3] 相当于 [1, 2, 3, 2]\n            r: 0,\n\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var width = shape.width;\n            var height = shape.height;\n            if (!shape.r) {\n                ctx.rect(x, y, width, height);\n            }\n            else {\n                roundRectHelper.buildPath(ctx, shape);\n            }\n            ctx.closePath();\n            return;\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Rect.js\n// module id = 1142\n// module chunks = 0","/**\n * 圆环\n * @module zrender/graphic/shape/Ring\n */\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'ring',\n\n        shape: {\n            cx: 0,\n            cy: 0,\n            r: 0,\n            r0: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var x = shape.cx;\n            var y = shape.cy;\n            var PI2 = Math.PI * 2;\n            ctx.moveTo(x + shape.r, y);\n            ctx.arc(x, y, shape.r, 0, PI2, false);\n            ctx.moveTo(x + shape.r0, y);\n            ctx.arc(x, y, shape.r0, 0, PI2, true);\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Ring.js\n// module id = 1143\n// module chunks = 0","/**\n * 扇形\n * @module zrender/graphic/shape/Sector\n */\n\n\n\n    module.exports = require('../Path').extend({\n\n        type: 'sector',\n\n        shape: {\n\n            cx: 0,\n\n            cy: 0,\n\n            r0: 0,\n\n            r: 0,\n\n            startAngle: 0,\n\n            endAngle: Math.PI * 2,\n\n            clockwise: true\n        },\n\n        buildPath: function (ctx, shape) {\n\n            var x = shape.cx;\n            var y = shape.cy;\n            var r0 = Math.max(shape.r0 || 0, 0);\n            var r = Math.max(shape.r, 0);\n            var startAngle = shape.startAngle;\n            var endAngle = shape.endAngle;\n            var clockwise = shape.clockwise;\n\n            var unitX = Math.cos(startAngle);\n            var unitY = Math.sin(startAngle);\n\n            ctx.moveTo(unitX * r0 + x, unitY * r0 + y);\n\n            ctx.lineTo(unitX * r + x, unitY * r + y);\n\n            ctx.arc(x, y, r, startAngle, endAngle, !clockwise);\n\n            ctx.lineTo(\n                Math.cos(endAngle) * r0 + x,\n                Math.sin(endAngle) * r0 + y\n            );\n\n            if (r0 !== 0) {\n                ctx.arc(x, y, r0, endAngle, startAngle, clockwise);\n            }\n\n            ctx.closePath();\n        }\n    });\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/shape/Sector.js\n// module id = 1144\n// module chunks = 0","'use strict';\n/**\n * @module zrender/mixin/Animatable\n */\n\n\n    var Animator = require('../animation/Animator');\n    var util = require('../core/util');\n    var isString = util.isString;\n    var isFunction = util.isFunction;\n    var isObject = util.isObject;\n    var log = require('../core/log');\n\n    /**\n     * @alias modue:zrender/mixin/Animatable\n     * @constructor\n     */\n    var Animatable = function () {\n\n        /**\n         * @type {Array.<module:zrender/animation/Animator>}\n         * @readOnly\n         */\n        this.animators = [];\n    };\n\n    Animatable.prototype = {\n\n        constructor: Animatable,\n\n        /**\n         * 动画\n         *\n         * @param {string} path 需要添加动画的属性获取路径，可以通过a.b.c来获取深层的属性\n         * @param {boolean} [loop] 动画是否循环\n         * @return {module:zrender/animation/Animator}\n         * @example:\n         *     el.animate('style', false)\n         *         .when(1000, {x: 10} )\n         *         .done(function(){ // Animation done })\n         *         .start()\n         */\n        animate: function (path, loop) {\n            var target;\n            var animatingShape = false;\n            var el = this;\n            var zr = this.__zr;\n            if (path) {\n                var pathSplitted = path.split('.');\n                var prop = el;\n                // If animating shape\n                animatingShape = pathSplitted[0] === 'shape';\n                for (var i = 0, l = pathSplitted.length; i < l; i++) {\n                    if (!prop) {\n                        continue;\n                    }\n                    prop = prop[pathSplitted[i]];\n                }\n                if (prop) {\n                    target = prop;\n                }\n            }\n            else {\n                target = el;\n            }\n\n            if (!target) {\n                log(\n                    'Property \"'\n                    + path\n                    + '\" is not existed in element '\n                    + el.id\n                );\n                return;\n            }\n\n            var animators = el.animators;\n\n            var animator = new Animator(target, loop);\n\n            animator.during(function (target) {\n                el.dirty(animatingShape);\n            })\n            .done(function () {\n                // FIXME Animator will not be removed if use `Animator#stop` to stop animation\n                animators.splice(util.indexOf(animators, animator), 1);\n            });\n\n            animators.push(animator);\n\n            // If animate after added to the zrender\n            if (zr) {\n                zr.animation.addAnimator(animator);\n            }\n\n            return animator;\n        },\n\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stopAnimation: function (forwardToLast) {\n            var animators = this.animators;\n            var len = animators.length;\n            for (var i = 0; i < len; i++) {\n                animators[i].stop(forwardToLast);\n            }\n            animators.length = 0;\n\n            return this;\n        },\n\n        /**\n         * @param {Object} target\n         * @param {number} [time=500] Time in ms\n         * @param {string} [easing='linear']\n         * @param {number} [delay=0]\n         * @param {Function} [callback]\n         *\n         * @example\n         *  // Animate position\n         *  el.animateTo({\n         *      position: [10, 10]\n         *  }, function () { // done })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms, with cubicOut easing\n         *  el.animateTo({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100, 'cubicOut', function () { // done })\n         */\n         // TODO Return animation key\n        animateTo: function (target, time, delay, easing, callback) {\n            // animateTo(target, time, easing, callback);\n            if (isString(delay)) {\n                callback = easing;\n                easing = delay;\n                delay = 0;\n            }\n            // animateTo(target, time, delay, callback);\n            else if (isFunction(easing)) {\n                callback = easing;\n                easing = 'linear';\n                delay = 0;\n            }\n            // animateTo(target, time, callback);\n            else if (isFunction(delay)) {\n                callback = delay;\n                delay = 0;\n            }\n            // animateTo(target, callback)\n            else if (isFunction(time)) {\n                callback = time;\n                time = 500;\n            }\n            // animateTo(target)\n            else if (!time) {\n                time = 500;\n            }\n            // Stop all previous animations\n            this.stopAnimation();\n            this._animateToShallow('', this, target, time, delay, easing, callback);\n\n            // Animators may be removed immediately after start\n            // if there is nothing to animate\n            var animators = this.animators.slice();\n            var count = animators.length;\n            function done() {\n                count--;\n                if (!count) {\n                    callback && callback();\n                }\n            }\n\n            // No animators. This should be checked before animators[i].start(),\n            // because 'done' may be executed immediately if no need to animate.\n            if (!count) {\n                callback && callback();\n            }\n            // Start after all animators created\n            // Incase any animator is done immediately when all animation properties are not changed\n            for (var i = 0; i < animators.length; i++) {\n                animators[i]\n                    .done(done)\n                    .start(easing);\n            }\n        },\n\n        /**\n         * @private\n         * @param {string} path=''\n         * @param {Object} source=this\n         * @param {Object} target\n         * @param {number} [time=500]\n         * @param {number} [delay=0]\n         *\n         * @example\n         *  // Animate position\n         *  el._animateToShallow({\n         *      position: [10, 10]\n         *  })\n         *\n         *  // Animate shape, style and position in 100ms, delayed 100ms\n         *  el._animateToShallow({\n         *      shape: {\n         *          width: 500\n         *      },\n         *      style: {\n         *          fill: 'red'\n         *      }\n         *      position: [10, 10]\n         *  }, 100, 100)\n         */\n        _animateToShallow: function (path, source, target, time, delay) {\n            var objShallow = {};\n            var propertyCount = 0;\n            for (var name in target) {\n                if (!target.hasOwnProperty(name)) {\n                    continue;\n                }\n\n                if (source[name] != null) {\n                    if (isObject(target[name]) && !util.isArrayLike(target[name])) {\n                        this._animateToShallow(\n                            path ? path + '.' + name : name,\n                            source[name],\n                            target[name],\n                            time,\n                            delay\n                        );\n                    }\n                    else {\n                        objShallow[name] = target[name];\n                        propertyCount++;\n                    }\n                }\n                else if (target[name] != null) {\n                    // Attr directly if not has property\n                    // FIXME, if some property not needed for element ?\n                    if (!path) {\n                        this.attr(name, target[name]);\n                    }\n                    else {  // Shape or style\n                        var props = {};\n                        props[path] = {};\n                        props[path][name] = target[name];\n                        this.attr(props);\n                    }\n                }\n            }\n\n            if (propertyCount > 0) {\n                this.animate(path, false)\n                    .when(time == null ? 500 : time, objShallow)\n                    .delay(delay || 0);\n            }\n\n            return this;\n        }\n    };\n\n    module.exports = Animatable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Animatable.js\n// module id = 1145\n// module chunks = 0","// TODO Draggable for group\n// FIXME Draggable on element which has parent rotation or scale\n\n    function Draggable() {\n\n        this.on('mousedown', this._dragStart, this);\n        this.on('mousemove', this._drag, this);\n        this.on('mouseup', this._dragEnd, this);\n        this.on('globalout', this._dragEnd, this);\n        // this._dropTarget = null;\n        // this._draggingTarget = null;\n\n        // this._x = 0;\n        // this._y = 0;\n    }\n\n    Draggable.prototype = {\n\n        constructor: Draggable,\n\n        _dragStart: function (e) {\n            var draggingTarget = e.target;\n            if (draggingTarget && draggingTarget.draggable) {\n                this._draggingTarget = draggingTarget;\n                draggingTarget.dragging = true;\n                this._x = e.offsetX;\n                this._y = e.offsetY;\n\n                this.dispatchToElement(draggingTarget, 'dragstart', e.event);\n            }\n        },\n\n        _drag: function (e) {\n            var draggingTarget = this._draggingTarget;\n            if (draggingTarget) {\n\n                var x = e.offsetX;\n                var y = e.offsetY;\n\n                var dx = x - this._x;\n                var dy = y - this._y;\n                this._x = x;\n                this._y = y;\n\n                draggingTarget.drift(dx, dy, e);\n                this.dispatchToElement(draggingTarget, 'drag', e.event);\n\n                var dropTarget = this.findHover(x, y, draggingTarget);\n                var lastDropTarget = this._dropTarget;\n                this._dropTarget = dropTarget;\n\n                if (draggingTarget !== dropTarget) {\n                    if (lastDropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(lastDropTarget, 'dragleave', e.event);\n                    }\n                    if (dropTarget && dropTarget !== lastDropTarget) {\n                        this.dispatchToElement(dropTarget, 'dragenter', e.event);\n                    }\n                }\n            }\n        },\n\n        _dragEnd: function (e) {\n            var draggingTarget = this._draggingTarget;\n\n            if (draggingTarget) {\n                draggingTarget.dragging = false;\n            }\n\n            this.dispatchToElement(draggingTarget, 'dragend', e.event);\n\n            if (this._dropTarget) {\n                this.dispatchToElement(this._dropTarget, 'drop', e.event);\n            }\n\n            this._draggingTarget = null;\n            this._dropTarget = null;\n        }\n\n    };\n\n    module.exports = Draggable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Draggable.js\n// module id = 1146\n// module chunks = 0","'use strict';\n/**\n * 提供变换扩展\n * @module zrender/mixin/Transformable\n * @author pissang (https://www.github.com/pissang)\n */\n\n\n    var matrix = require('../core/matrix');\n    var vector = require('../core/vector');\n    var mIdentity = matrix.identity;\n\n    var EPSILON = 5e-5;\n\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n\n    /**\n     * @alias module:zrender/mixin/Transformable\n     * @constructor\n     */\n    var Transformable = function (opts) {\n        opts = opts || {};\n        // If there are no given position, rotation, scale\n        if (!opts.position) {\n            /**\n             * 平移\n             * @type {Array.<number>}\n             * @default [0, 0]\n             */\n            this.position = [0, 0];\n        }\n        if (opts.rotation == null) {\n            /**\n             * 旋转\n             * @type {Array.<number>}\n             * @default 0\n             */\n            this.rotation = 0;\n        }\n        if (!opts.scale) {\n            /**\n             * 缩放\n             * @type {Array.<number>}\n             * @default [1, 1]\n             */\n            this.scale = [1, 1];\n        }\n        /**\n         * 旋转和缩放的原点\n         * @type {Array.<number>}\n         * @default null\n         */\n        this.origin = this.origin || null;\n    };\n\n    var transformableProto = Transformable.prototype;\n    transformableProto.transform = null;\n\n    /**\n     * 判断是否需要有坐标变换\n     * 如果有坐标变换, 则从position, rotation, scale以及父节点的transform计算出自身的transform矩阵\n     */\n    transformableProto.needLocalTransform = function () {\n        return isNotAroundZero(this.rotation)\n            || isNotAroundZero(this.position[0])\n            || isNotAroundZero(this.position[1])\n            || isNotAroundZero(this.scale[0] - 1)\n            || isNotAroundZero(this.scale[1] - 1);\n    };\n\n    transformableProto.updateTransform = function () {\n        var parent = this.parent;\n        var parentHasTransform = parent && parent.transform;\n        var needLocalTransform = this.needLocalTransform();\n\n        var m = this.transform;\n        if (!(needLocalTransform || parentHasTransform)) {\n            m && mIdentity(m);\n            return;\n        }\n\n        m = m || matrix.create();\n\n        if (needLocalTransform) {\n            this.getLocalTransform(m);\n        }\n        else {\n            mIdentity(m);\n        }\n\n        // 应用父节点变换\n        if (parentHasTransform) {\n            if (needLocalTransform) {\n                matrix.mul(m, parent.transform, m);\n            }\n            else {\n                matrix.copy(m, parent.transform);\n            }\n        }\n        // 保存这个变换矩阵\n        this.transform = m;\n\n        this.invTransform = this.invTransform || matrix.create();\n        matrix.invert(this.invTransform, m);\n    };\n\n    transformableProto.getLocalTransform = function (m) {\n        m = m || [];\n        mIdentity(m);\n\n        var origin = this.origin;\n\n        var scale = this.scale;\n        var rotation = this.rotation;\n        var position = this.position;\n        if (origin) {\n            // Translate to origin\n            m[4] -= origin[0];\n            m[5] -= origin[1];\n        }\n        matrix.scale(m, m, scale);\n        if (rotation) {\n            matrix.rotate(m, m, rotation);\n        }\n        if (origin) {\n            // Translate back from origin\n            m[4] += origin[0];\n            m[5] += origin[1];\n        }\n\n        m[4] += position[0];\n        m[5] += position[1];\n\n        return m;\n    };\n    /**\n     * 将自己的transform应用到context上\n     * @param {Context2D} ctx\n     */\n    transformableProto.setTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        if (m) {\n            ctx.setTransform(dpr * m[0], dpr * m[1], dpr * m[2], dpr * m[3], dpr * m[4], dpr * m[5]);\n        }\n        else {\n            ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n        }\n    };\n\n    transformableProto.restoreTransform = function (ctx) {\n        var m = this.transform;\n        var dpr = ctx.dpr || 1;\n        ctx.setTransform(dpr, 0, 0, dpr, 0, 0);\n    }\n\n    var tmpTransform = [];\n\n    /**\n     * 分解`transform`矩阵到`position`, `rotation`, `scale`\n     */\n    transformableProto.decomposeTransform = function () {\n        if (!this.transform) {\n            return;\n        }\n        var parent = this.parent;\n        var m = this.transform;\n        if (parent && parent.transform) {\n            // Get local transform and decompose them to position, scale, rotation\n            matrix.mul(tmpTransform, parent.invTransform, m);\n            m = tmpTransform;\n        }\n        var sx = m[0] * m[0] + m[1] * m[1];\n        var sy = m[2] * m[2] + m[3] * m[3];\n        var position = this.position;\n        var scale = this.scale;\n        if (isNotAroundZero(sx - 1)) {\n            sx = Math.sqrt(sx);\n        }\n        if (isNotAroundZero(sy - 1)) {\n            sy = Math.sqrt(sy);\n        }\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        position[0] = m[4];\n        position[1] = m[5];\n        scale[0] = sx;\n        scale[1] = sy;\n        this.rotation = Math.atan2(-m[1] / sy, m[0] / sx);\n    };\n\n    /**\n     * Get global scale\n     * @return {Array.<number>}\n     */\n    transformableProto.getGlobalScale = function () {\n        var m = this.transform;\n        if (!m) {\n            return [1, 1];\n        }\n        var sx = Math.sqrt(m[0] * m[0] + m[1] * m[1]);\n        var sy = Math.sqrt(m[2] * m[2] + m[3] * m[3]);\n        if (m[0] < 0) {\n            sx = -sx;\n        }\n        if (m[3] < 0) {\n            sy = -sy;\n        }\n        return [sx, sy];\n    };\n    /**\n     * 变换坐标位置到 shape 的局部坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToLocal = function (x, y) {\n        var v2 = [x, y];\n        var invTransform = this.invTransform;\n        if (invTransform) {\n            vector.applyTransform(v2, v2, invTransform);\n        }\n        return v2;\n    };\n\n    /**\n     * 变换局部坐标位置到全局坐标空间\n     * @method\n     * @param {number} x\n     * @param {number} y\n     * @return {Array.<number>}\n     */\n    transformableProto.transformCoordToGlobal = function (x, y) {\n        var v2 = [x, y];\n        var transform = this.transform;\n        if (transform) {\n            vector.applyTransform(v2, v2, transform);\n        }\n        return v2;\n    };\n\n    module.exports = Transformable;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Transformable.js\n// module id = 1147\n// module chunks = 0","\n\n    var Path = require('../graphic/Path');\n    var PathProxy = require('../core/PathProxy');\n    var transformPath = require('./transformPath');\n    var matrix = require('../core/matrix');\n\n    // command chars\n    var cc = [\n        'm', 'M', 'l', 'L', 'v', 'V', 'h', 'H', 'z', 'Z',\n        'c', 'C', 'q', 'Q', 't', 'T', 's', 'S', 'a', 'A'\n    ];\n\n    var mathSqrt = Math.sqrt;\n    var mathSin = Math.sin;\n    var mathCos = Math.cos;\n    var PI = Math.PI;\n\n    var vMag = function(v) {\n        return Math.sqrt(v[0] * v[0] + v[1] * v[1]);\n    };\n    var vRatio = function(u, v) {\n        return (u[0] * v[0] + u[1] * v[1]) / (vMag(u) * vMag(v));\n    };\n    var vAngle = function(u, v) {\n        return (u[0] * v[1] < u[1] * v[0] ? -1 : 1)\n                * Math.acos(vRatio(u, v));\n    };\n\n    function processArc(x1, y1, x2, y2, fa, fs, rx, ry, psiDeg, cmd, path) {\n        var psi = psiDeg * (PI / 180.0);\n        var xp = mathCos(psi) * (x1 - x2) / 2.0\n                 + mathSin(psi) * (y1 - y2) / 2.0;\n        var yp = -1 * mathSin(psi) * (x1 - x2) / 2.0\n                 + mathCos(psi) * (y1 - y2) / 2.0;\n\n        var lambda = (xp * xp) / (rx * rx) + (yp * yp) / (ry * ry);\n\n        if (lambda > 1) {\n            rx *= mathSqrt(lambda);\n            ry *= mathSqrt(lambda);\n        }\n\n        var f = (fa === fs ? -1 : 1)\n            * mathSqrt((((rx * rx) * (ry * ry))\n                    - ((rx * rx) * (yp * yp))\n                    - ((ry * ry) * (xp * xp))) / ((rx * rx) * (yp * yp)\n                    + (ry * ry) * (xp * xp))\n                ) || 0;\n\n        var cxp = f * rx * yp / ry;\n        var cyp = f * -ry * xp / rx;\n\n        var cx = (x1 + x2) / 2.0\n                 + mathCos(psi) * cxp\n                 - mathSin(psi) * cyp;\n        var cy = (y1 + y2) / 2.0\n                + mathSin(psi) * cxp\n                + mathCos(psi) * cyp;\n\n        var theta = vAngle([ 1, 0 ], [ (xp - cxp) / rx, (yp - cyp) / ry ]);\n        var u = [ (xp - cxp) / rx, (yp - cyp) / ry ];\n        var v = [ (-1 * xp - cxp) / rx, (-1 * yp - cyp) / ry ];\n        var dTheta = vAngle(u, v);\n\n        if (vRatio(u, v) <= -1) {\n            dTheta = PI;\n        }\n        if (vRatio(u, v) >= 1) {\n            dTheta = 0;\n        }\n        if (fs === 0 && dTheta > 0) {\n            dTheta = dTheta - 2 * PI;\n        }\n        if (fs === 1 && dTheta < 0) {\n            dTheta = dTheta + 2 * PI;\n        }\n\n        path.addData(cmd, cx, cy, rx, ry, theta, dTheta, psi, fs);\n    }\n\n    function createPathProxyFromString(data) {\n        if (!data) {\n            return [];\n        }\n\n        // command string\n        var cs = data.replace(/-/g, ' -')\n            .replace(/  /g, ' ')\n            .replace(/ /g, ',')\n            .replace(/,,/g, ',');\n\n        var n;\n        // create pipes so that we can split the data\n        for (n = 0; n < cc.length; n++) {\n            cs = cs.replace(new RegExp(cc[n], 'g'), '|' + cc[n]);\n        }\n\n        // create array\n        var arr = cs.split('|');\n        // init context point\n        var cpx = 0;\n        var cpy = 0;\n\n        var path = new PathProxy();\n        var CMD = PathProxy.CMD;\n\n        var prevCmd;\n        for (n = 1; n < arr.length; n++) {\n            var str = arr[n];\n            var c = str.charAt(0);\n            var off = 0;\n            var p = str.slice(1).replace(/e,-/g, 'e-').split(',');\n            var cmd;\n\n            if (p.length > 0 && p[0] === '') {\n                p.shift();\n            }\n\n            for (var i = 0; i < p.length; i++) {\n                p[i] = parseFloat(p[i]);\n            }\n            while (off < p.length && !isNaN(p[off])) {\n                if (isNaN(p[0])) {\n                    break;\n                }\n                var ctlPtx;\n                var ctlPty;\n\n                var rx;\n                var ry;\n                var psi;\n                var fa;\n                var fs;\n\n                var x1 = cpx;\n                var y1 = cpy;\n\n                // convert l, H, h, V, and v to L\n                switch (c) {\n                    case 'l':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'L':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'm':\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'l';\n                        break;\n                    case 'M':\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.M;\n                        path.addData(cmd, cpx, cpy);\n                        c = 'L';\n                        break;\n                    case 'h':\n                        cpx += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'H':\n                        cpx = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'v':\n                        cpy += p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'V':\n                        cpy = p[off++];\n                        cmd = CMD.L;\n                        path.addData(cmd, cpx, cpy);\n                        break;\n                    case 'C':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd, p[off++], p[off++], p[off++], p[off++], p[off++], p[off++]\n                        );\n                        cpx = p[off - 2];\n                        cpy = p[off - 1];\n                        break;\n                    case 'c':\n                        cmd = CMD.C;\n                        path.addData(\n                            cmd,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy,\n                            p[off++] + cpx, p[off++] + cpy\n                        );\n                        cpx += p[off - 2];\n                        cpy += p[off - 1];\n                        break;\n                    case 'S':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 's':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.C) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cmd = CMD.C;\n                        x1 = cpx + p[off++];\n                        y1 = cpy + p[off++];\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        path.addData(cmd, ctlPtx, ctlPty, x1, y1, cpx, cpy);\n                        break;\n                    case 'Q':\n                        x1 = p[off++];\n                        y1 = p[off++];\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'q':\n                        x1 = p[off++] + cpx;\n                        y1 = p[off++] + cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, x1, y1, cpx, cpy);\n                        break;\n                    case 'T':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 't':\n                        ctlPtx = cpx;\n                        ctlPty = cpy;\n                        var len = path.len();\n                        var pathData = path.data;\n                        if (prevCmd === CMD.Q) {\n                            ctlPtx += cpx - pathData[len - 4];\n                            ctlPty += cpy - pathData[len - 3];\n                        }\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.Q;\n                        path.addData(cmd, ctlPtx, ctlPty, cpx, cpy);\n                        break;\n                    case 'A':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx = p[off++];\n                        cpy = p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                    case 'a':\n                        rx = p[off++];\n                        ry = p[off++];\n                        psi = p[off++];\n                        fa = p[off++];\n                        fs = p[off++];\n\n                        x1 = cpx, y1 = cpy;\n                        cpx += p[off++];\n                        cpy += p[off++];\n                        cmd = CMD.A;\n                        processArc(\n                            x1, y1, cpx, cpy, fa, fs, rx, ry, psi, cmd, path\n                        );\n                        break;\n                }\n            }\n\n            if (c === 'z' || c === 'Z') {\n                cmd = CMD.Z;\n                path.addData(cmd);\n            }\n\n            prevCmd = cmd;\n        }\n\n        path.toStatic();\n\n        return path;\n    }\n\n    // TODO Optimize double memory cost problem\n    function createPathOptions(str, opts) {\n        var pathProxy = createPathProxyFromString(str);\n        var transform;\n        opts = opts || {};\n        opts.buildPath = function (path) {\n            path.setData(pathProxy.data);\n            transform && transformPath(path, transform);\n            // Svg and vml renderer don't have context\n            var ctx = path.getContext();\n            if (ctx) {\n                path.rebuildPath(ctx);\n            }\n        };\n\n        opts.applyTransform = function (m) {\n            if (!transform) {\n                transform = matrix.create();\n            }\n            matrix.mul(transform, m, transform);\n            this.dirty(true);\n        };\n\n        return opts;\n    }\n\n    module.exports = {\n        /**\n         * Create a Path object from path string data\n         * http://www.w3.org/TR/SVG/paths.html#PathData\n         * @param  {Object} opts Other options\n         */\n        createFromString: function (str, opts) {\n            return new Path(createPathOptions(str, opts));\n        },\n\n        /**\n         * Create a Path class from path string data\n         * @param  {string} str\n         * @param  {Object} opts Other options\n         */\n        extendFromString: function (str, opts) {\n            return Path.extend(createPathOptions(str, opts));\n        },\n\n        /**\n         * Merge multiple paths\n         */\n        // TODO Apply transform\n        // TODO stroke dash\n        // TODO Optimize double memory cost problem\n        mergePath: function (pathEls, opts) {\n            var pathList = [];\n            var len = pathEls.length;\n            for (var i = 0; i < len; i++) {\n                var pathEl = pathEls[i];\n                if (pathEl.__dirty) {\n                    pathEl.buildPath(pathEl.path, pathEl.shape, true);\n                }\n                pathList.push(pathEl.path);\n            }\n\n            var pathBundle = new Path(opts);\n            pathBundle.buildPath = function (path) {\n                path.appendPath(pathList);\n                // Svg and vml renderer don't have context\n                var ctx = path.getContext();\n                if (ctx) {\n                    path.rebuildPath(ctx);\n                }\n            };\n\n            return pathBundle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/path.js\n// module id = 1148\n// module chunks = 0","\n\n    var CMD = require('../core/PathProxy').CMD;\n    var vec2 = require('../core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n\n    var points = [[], [], []];\n    var mathSqrt = Math.sqrt;\n    var mathAtan2 = Math.atan2;\n    function transformPath(path, m) {\n        var data = path.data;\n        var cmd;\n        var nPoint;\n        var i;\n        var j;\n        var k;\n        var p;\n\n        var M = CMD.M;\n        var C = CMD.C;\n        var L = CMD.L;\n        var R = CMD.R;\n        var A = CMD.A;\n        var Q = CMD.Q;\n\n        for (i = 0, j = 0; i < data.length;) {\n            cmd = data[i++];\n            j = i;\n            nPoint = 0;\n\n            switch (cmd) {\n                case M:\n                    nPoint = 1;\n                    break;\n                case L:\n                    nPoint = 1;\n                    break;\n                case C:\n                    nPoint = 3;\n                    break;\n                case Q:\n                    nPoint = 2;\n                    break;\n                case A:\n                    var x = m[4];\n                    var y = m[5];\n                    var sx = mathSqrt(m[0] * m[0] + m[1] * m[1]);\n                    var sy = mathSqrt(m[2] * m[2] + m[3] * m[3]);\n                    var angle = mathAtan2(-m[1] / sy, m[0] / sx);\n                    // cx\n                    data[i++] += x;\n                    // cy\n                    data[i++] += y;\n                    // Scale rx and ry\n                    // FIXME Assume psi is 0 here\n                    data[i++] *= sx;\n                    data[i++] *= sy;\n\n                    // Start angle\n                    data[i++] += angle;\n                    // end angle\n                    data[i++] += angle;\n                    // FIXME psi\n                    i += 2;\n                    j = i;\n                    break;\n                case R:\n                    // x0, y0\n                    p[0] = data[i++];\n                    p[1] = data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n                    // x1, y1\n                    p[0] += data[i++];\n                    p[1] += data[i++];\n                    v2ApplyTransform(p, p, m);\n                    data[j++] = p[0];\n                    data[j++] = p[1];\n            }\n\n            for (k = 0; k < nPoint; k++) {\n                var p = points[k];\n                p[0] = data[i++];\n                p[1] = data[i++];\n\n                v2ApplyTransform(p, p, m);\n                // Write back\n                data[j++] = p[0];\n                data[j++] = p[1];\n            }\n        }\n    }\n\n    module.exports = transformPath;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/transformPath.js\n// module id = 1149\n// module chunks = 0","/*!\n * ZRender, a high performance 2d drawing library.\n *\n * Copyright (c) 2013, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/zrender/blob/master/LICENSE.txt\n */\n// Global defines\n\n    var guid = require('./core/guid');\n    var env = require('./core/env');\n    var zrUtil = require('./core/util');\n\n    var Handler = require('./Handler');\n    var Storage = require('./Storage');\n    var Animation = require('./animation/Animation');\n    var HandlerProxy = require('./dom/HandlerProxy');\n\n    var useVML = !env.canvasSupported;\n\n    var painterCtors = {\n        canvas: require('./Painter')\n    };\n\n    var instances = {};    // ZRender实例map索引\n\n    var zrender = {};\n\n    /**\n     * @type {string}\n     */\n    zrender.version = '3.2.2';\n\n    /**\n     * Initializing a zrender instance\n     * @param {HTMLElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n     * @return {module:zrender/ZRender}\n     */\n    zrender.init = function(dom, opts) {\n        var zr = new ZRender(guid(), dom, opts);\n        instances[zr.id] = zr;\n        return zr;\n    };\n\n    /**\n     * Dispose zrender instance\n     * @param {module:zrender/ZRender} zr\n     */\n    zrender.dispose = function (zr) {\n        if (zr) {\n            zr.dispose();\n        }\n        else {\n            for (var key in instances) {\n                if (instances.hasOwnProperty(key)) {\n                    instances[key].dispose();\n                }\n            }\n            instances = {};\n        }\n\n        return zrender;\n    };\n\n    /**\n     * Get zrender instance by id\n     * @param {string} id zrender instance id\n     * @return {module:zrender/ZRender}\n     */\n    zrender.getInstance = function (id) {\n        return instances[id];\n    };\n\n    zrender.registerPainter = function (name, Ctor) {\n        painterCtors[name] = Ctor;\n    };\n\n    function delInstance(id) {\n        delete instances[id];\n    }\n\n    /**\n     * @module zrender/ZRender\n     */\n    /**\n     * @constructor\n     * @alias module:zrender/ZRender\n     * @param {string} id\n     * @param {HTMLDomElement} dom\n     * @param {Object} opts\n     * @param {string} [opts.renderer='canvas'] 'canvas' or 'svg'\n     * @param {number} [opts.devicePixelRatio]\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    var ZRender = function(id, dom, opts) {\n\n        opts = opts || {};\n\n        /**\n         * @type {HTMLDomElement}\n         */\n        this.dom = dom;\n\n        /**\n         * @type {string}\n         */\n        this.id = id;\n\n        var self = this;\n        var storage = new Storage();\n\n        var rendererType = opts.renderer;\n        if (useVML) {\n            if (!painterCtors.vml) {\n                throw new Error('You need to require \\'zrender/vml/vml\\' to support IE8');\n            }\n            rendererType = 'vml';\n        }\n        else if (!rendererType || !painterCtors[rendererType]) {\n            rendererType = 'canvas';\n        }\n        var painter = new painterCtors[rendererType](dom, storage, opts);\n\n        this.storage = storage;\n        this.painter = painter;\n\n        var handerProxy = !env.node ? new HandlerProxy(painter.getViewportRoot()) : null;\n        this.handler = new Handler(storage, painter, handerProxy, painter.root);\n\n        /**\n         * @type {module:zrender/animation/Animation}\n         */\n        this.animation = new Animation({\n            stage: {\n                update: zrUtil.bind(this.flush, this)\n            }\n        });\n        this.animation.start();\n\n        /**\n         * @type {boolean}\n         * @private\n         */\n        this._needsRefresh;\n\n        // 修改 storage.delFromMap, 每次删除元素之前删除动画\n        // FIXME 有点ugly\n        var oldDelFromMap = storage.delFromMap;\n        var oldAddToMap = storage.addToMap;\n\n        storage.delFromMap = function (elId) {\n            var el = storage.get(elId);\n\n            oldDelFromMap.call(storage, elId);\n\n            el && el.removeSelfFromZr(self);\n        };\n\n        storage.addToMap = function (el) {\n            oldAddToMap.call(storage, el);\n\n            el.addSelfToZr(self);\n        };\n    };\n\n    ZRender.prototype = {\n\n        constructor: ZRender,\n        /**\n         * 获取实例唯一标识\n         * @return {string}\n         */\n        getId: function () {\n            return this.id;\n        },\n\n        /**\n         * 添加元素\n         * @param  {module:zrender/Element} el\n         */\n        add: function (el) {\n            this.storage.addRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * 删除元素\n         * @param  {module:zrender/Element} el\n         */\n        remove: function (el) {\n            this.storage.delRoot(el);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Change configuration of layer\n         * @param {string} zLevel\n         * @param {Object} config\n         * @param {string} [config.clearColor=0] Clear color\n         * @param {string} [config.motionBlur=false] If enable motion blur\n         * @param {number} [config.lastFrameAlpha=0.7] Motion blur factor. Larger value cause longer trailer\n        */\n        configLayer: function (zLevel, config) {\n            this.painter.configLayer(zLevel, config);\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Repaint the canvas immediately\n         */\n        refreshImmediately: function () {\n            // Clear needsRefresh ahead to avoid something wrong happens in refresh\n            // Or it will cause zrender refreshes again and again.\n            this._needsRefresh = false;\n            this.painter.refresh();\n            /**\n             * Avoid trigger zr.refresh in Element#beforeUpdate hook\n             */\n            this._needsRefresh = false;\n        },\n\n        /**\n         * Mark and repaint the canvas in the next frame of browser\n         */\n        refresh: function() {\n            this._needsRefresh = true;\n        },\n\n        /**\n         * Perform all refresh\n         */\n        flush: function () {\n            if (this._needsRefresh) {\n                this.refreshImmediately();\n            }\n            if (this._needsRefreshHover) {\n                this.refreshHoverImmediately();\n            }\n        },\n\n        /**\n         * Add element to hover layer\n         * @param  {module:zrender/Element} el\n         * @param {Object} style\n         */\n        addHover: function (el, style) {\n            if (this.painter.addHover) {\n                this.painter.addHover(el, style);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Add element from hover layer\n         * @param  {module:zrender/Element} el\n         */\n        removeHover: function (el) {\n            if (this.painter.removeHover) {\n                this.painter.removeHover(el);\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Clear all hover elements in hover layer\n         * @param  {module:zrender/Element} el\n         */\n        clearHover: function () {\n            if (this.painter.clearHover) {\n                this.painter.clearHover();\n                this.refreshHover();\n            }\n        },\n\n        /**\n         * Refresh hover in next frame\n         */\n        refreshHover: function () {\n            this._needsRefreshHover = true;\n        },\n\n        /**\n         * Refresh hover immediately\n         */\n        refreshHoverImmediately: function () {\n            this._needsRefreshHover = false;\n            this.painter.refreshHover && this.painter.refreshHover();\n        },\n\n        /**\n         * Resize the canvas.\n         * Should be invoked when container size is changed\n         * @param {Object} [opts]\n         * @param {number|string} [opts.width] Can be 'auto' (the same as null/undefined)\n         * @param {number|string} [opts.height] Can be 'auto' (the same as null/undefined)\n         */\n        resize: function(opts) {\n            opts = opts || {};\n            this.painter.resize(opts.width, opts.height);\n            this.handler.resize();\n        },\n\n        /**\n         * Stop and clear all animation immediately\n         */\n        clearAnimation: function () {\n            this.animation.clear();\n        },\n\n        /**\n         * Get container width\n         */\n        getWidth: function() {\n            return this.painter.getWidth();\n        },\n\n        /**\n         * Get container height\n         */\n        getHeight: function() {\n            return this.painter.getHeight();\n        },\n\n        /**\n         * Export the canvas as Base64 URL\n         * @param {string} type\n         * @param {string} [backgroundColor='#fff']\n         * @return {string} Base64 URL\n         */\n        // toDataURL: function(type, backgroundColor) {\n        //     return this.painter.getRenderedCanvas({\n        //         backgroundColor: backgroundColor\n        //     }).toDataURL(type);\n        // },\n\n        /**\n         * Converting a path to image.\n         * It has much better performance of drawing image rather than drawing a vector path.\n         * @param {module:zrender/graphic/Path} e\n         * @param {number} width\n         * @param {number} height\n         */\n        pathToImage: function(e, width, height) {\n            var id = guid();\n            return this.painter.pathToImage(id, e, width, height);\n        },\n\n        /**\n         * Set default cursor\n         * @param {string} [cursorStyle='default'] 例如 crosshair\n         */\n        setCursorStyle: function (cursorStyle) {\n            this.handler.setCursorStyle(cursorStyle);\n        },\n\n        /**\n         * Bind event\n         *\n         * @param {string} eventName Event name\n         * @param {Function} eventHandler Handler function\n         * @param {Object} [context] Context object\n         */\n        on: function(eventName, eventHandler, context) {\n            this.handler.on(eventName, eventHandler, context);\n        },\n\n        /**\n         * Unbind event\n         * @param {string} eventName Event name\n         * @param {Function} [eventHandler] Handler function\n         */\n        off: function(eventName, eventHandler) {\n            this.handler.off(eventName, eventHandler);\n        },\n\n        /**\n         * Trigger event manually\n         *\n         * @param {string} eventName Event name\n         * @param {event=} event Event object\n         */\n        trigger: function (eventName, event) {\n            this.handler.trigger(eventName, event);\n        },\n\n\n        /**\n         * Clear all objects and the canvas.\n         */\n        clear: function () {\n            this.storage.delRoot();\n            this.painter.clear();\n        },\n\n        /**\n         * Dispose self.\n         */\n        dispose: function () {\n            this.animation.stop();\n\n            this.clear();\n            this.storage.dispose();\n            this.painter.dispose();\n            this.handler.dispose();\n\n            this.animation =\n            this.storage =\n            this.painter =\n            this.handler = null;\n\n            delInstance(this.id);\n        }\n    };\n\n    module.exports = zrender;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/zrender.js\n// module id = 1150\n// module chunks = 0","import gaugechartComponent from './gaugechart.component.js';\nimport Charts from '../../../../lib/Charts/index.js';\n\nexport default angular.module('gaugeChart', [\n\tCharts.name\n])\n.component('gaugeChart', gaugechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/gaugechart/gaugechart.js","import linechartComponent from './linechart.component.js';\nimport Charts from '../../../../lib/Charts/index.js';\n\nexport default angular.module('lineChart', [\n\t\tCharts.name\n\t])\n.component('lineChart', linechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/linechart/linechart.js","import piechartComponent from './piechart.component.js';\nimport Charts from '../../../../lib/Charts/index.js';\n\nexport default angular.module('pieChart', [\n\tCharts.name\n])\n.component('pieChart', piechartComponent);\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/piechart/piechart.js","/**\n * @module zrender/core/util\n */\n\n\n    // 用于处理merge时无法遍历Date等对象的问题\n    var BUILTIN_OBJECT = {\n        '[object Function]': 1,\n        '[object RegExp]': 1,\n        '[object Date]': 1,\n        '[object Error]': 1,\n        '[object CanvasGradient]': 1,\n        '[object CanvasPattern]': 1,\n        // For node-canvas\n        '[object Image]': 1,\n        '[object Canvas]': 1\n    };\n\n    var TYPED_ARRAY = {\n        '[object Int8Array]': 1,\n        '[object Uint8Array]': 1,\n        '[object Uint8ClampedArray]': 1,\n        '[object Int16Array]': 1,\n        '[object Uint16Array]': 1,\n        '[object Int32Array]': 1,\n        '[object Uint32Array]': 1,\n        '[object Float32Array]': 1,\n        '[object Float64Array]': 1\n    };\n\n    var objToString = Object.prototype.toString;\n\n    var arrayProto = Array.prototype;\n    var nativeForEach = arrayProto.forEach;\n    var nativeFilter = arrayProto.filter;\n    var nativeSlice = arrayProto.slice;\n    var nativeMap = arrayProto.map;\n    var nativeReduce = arrayProto.reduce;\n\n    /**\n     * Those data types can be cloned:\n     *     Plain object, Array, TypedArray, number, string, null, undefined.\n     * Those data types will be assgined using the orginal data:\n     *     BUILTIN_OBJECT\n     * Instance of user defined class will be cloned to a plain object, without\n     * properties in prototype.\n     * Other data types is not supported (not sure what will happen).\n     *\n     * Caution: do not support clone Date, for performance consideration.\n     * (There might be a large number of date in `series.data`).\n     * So date should not be modified in and out of echarts.\n     *\n     * @param {*} source\n     * @return {*} new\n     */\n    function clone(source) {\n        if (source == null || typeof source != 'object') {\n            return source;\n        }\n\n        var result = source;\n        var typeStr = objToString.call(source);\n\n        if (typeStr === '[object Array]') {\n            result = [];\n            for (var i = 0, len = source.length; i < len; i++) {\n                result[i] = clone(source[i]);\n            }\n        }\n        else if (TYPED_ARRAY[typeStr]) {\n            result = source.constructor.from(source);\n        }\n        else if (!BUILTIN_OBJECT[typeStr] && !isDom(source)) {\n            result = {};\n            for (var key in source) {\n                if (source.hasOwnProperty(key)) {\n                    result[key] = clone(source[key]);\n                }\n            }\n        }\n\n        return result;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} target\n     * @param {*} source\n     * @param {boolean} [overwrite=false]\n     */\n    function merge(target, source, overwrite) {\n        // We should escapse that source is string\n        // and enter for ... in ...\n        if (!isObject(source) || !isObject(target)) {\n            return overwrite ? clone(source) : target;\n        }\n\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                var targetProp = target[key];\n                var sourceProp = source[key];\n\n                if (isObject(sourceProp)\n                    && isObject(targetProp)\n                    && !isArray(sourceProp)\n                    && !isArray(targetProp)\n                    && !isDom(sourceProp)\n                    && !isDom(targetProp)\n                    && !isBuildInObject(sourceProp)\n                    && !isBuildInObject(targetProp)\n                ) {\n                    // 如果需要递归覆盖，就递归调用merge\n                    merge(targetProp, sourceProp, overwrite);\n                }\n                else if (overwrite || !(key in target)) {\n                    // 否则只处理overwrite为true，或者在目标对象中没有此属性的情况\n                    // NOTE，在 target[key] 不存在的时候也是直接覆盖\n                    target[key] = clone(source[key], true);\n                }\n            }\n        }\n\n        return target;\n    }\n\n    /**\n     * @param {Array} targetAndSources The first item is target, and the rests are source.\n     * @param {boolean} [overwrite=false]\n     * @return {*} target\n     */\n    function mergeAll(targetAndSources, overwrite) {\n        var result = targetAndSources[0];\n        for (var i = 1, len = targetAndSources.length; i < len; i++) {\n            result = merge(result, targetAndSources[i], overwrite);\n        }\n        return result;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @memberOf module:zrender/core/util\n     */\n    function extend(target, source) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    /**\n     * @param {*} target\n     * @param {*} source\n     * @param {boolen} [overlay=false]\n     * @memberOf module:zrender/core/util\n     */\n    function defaults(target, source, overlay) {\n        for (var key in source) {\n            if (source.hasOwnProperty(key)\n                && (overlay ? source[key] != null : target[key] == null)\n            ) {\n                target[key] = source[key];\n            }\n        }\n        return target;\n    }\n\n    function createCanvas() {\n        return document.createElement('canvas');\n    }\n    // FIXME\n    var _ctx;\n    function getContext() {\n        if (!_ctx) {\n            // Use util.createCanvas instead of createCanvas\n            // because createCanvas may be overwritten in different environment\n            _ctx = util.createCanvas().getContext('2d');\n        }\n        return _ctx;\n    }\n\n    /**\n     * 查询数组中元素的index\n     * @memberOf module:zrender/core/util\n     */\n    function indexOf(array, value) {\n        if (array) {\n            if (array.indexOf) {\n                return array.indexOf(value);\n            }\n            for (var i = 0, len = array.length; i < len; i++) {\n                if (array[i] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    }\n\n    /**\n     * 构造类继承关系\n     *\n     * @memberOf module:zrender/core/util\n     * @param {Function} clazz 源类\n     * @param {Function} baseClazz 基类\n     */\n    function inherits(clazz, baseClazz) {\n        var clazzPrototype = clazz.prototype;\n        function F() {}\n        F.prototype = baseClazz.prototype;\n        clazz.prototype = new F();\n\n        for (var prop in clazzPrototype) {\n            clazz.prototype[prop] = clazzPrototype[prop];\n        }\n        clazz.prototype.constructor = clazz;\n        clazz.superClass = baseClazz;\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Object|Function} target\n     * @param {Object|Function} sorce\n     * @param {boolean} overlay\n     */\n    function mixin(target, source, overlay) {\n        target = 'prototype' in target ? target.prototype : target;\n        source = 'prototype' in source ? source.prototype : source;\n\n        defaults(target, source, overlay);\n    }\n\n    /**\n     * @param {Array|TypedArray} data\n     */\n    function isArrayLike(data) {\n        if (! data) {\n            return;\n        }\n        if (typeof data == 'string') {\n            return false;\n        }\n        return typeof data.length == 'number';\n    }\n\n    /**\n     * 数组或对象遍历\n     * @memberOf module:zrender/core/util\n     * @param {Object|Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     */\n    function each(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.forEach && obj.forEach === nativeForEach) {\n            obj.forEach(cb, context);\n        }\n        else if (obj.length === +obj.length) {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                cb.call(context, obj[i], i, obj);\n            }\n        }\n        else {\n            for (var key in obj) {\n                if (obj.hasOwnProperty(key)) {\n                    cb.call(context, obj[key], key, obj);\n                }\n            }\n        }\n    }\n\n    /**\n     * 数组映射\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function map(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.map && obj.map === nativeMap) {\n            return obj.map(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                result.push(cb.call(context, obj[i], i, obj));\n            }\n            return result;\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {Object} [memo]\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function reduce(obj, cb, memo, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.reduce && obj.reduce === nativeReduce) {\n            return obj.reduce(cb, memo, context);\n        }\n        else {\n            for (var i = 0, len = obj.length; i < len; i++) {\n                memo = cb.call(context, memo, obj[i], i, obj);\n            }\n            return memo;\n        }\n    }\n\n    /**\n     * 数组过滤\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function filter(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        if (obj.filter && obj.filter === nativeFilter) {\n            return obj.filter(cb, context);\n        }\n        else {\n            var result = [];\n            for (var i = 0, len = obj.length; i < len; i++) {\n                if (cb.call(context, obj[i], i, obj)) {\n                    result.push(obj[i]);\n                }\n            }\n            return result;\n        }\n    }\n\n    /**\n     * 数组项查找\n     * @memberOf module:zrender/core/util\n     * @param {Array} obj\n     * @param {Function} cb\n     * @param {*} [context]\n     * @return {Array}\n     */\n    function find(obj, cb, context) {\n        if (!(obj && cb)) {\n            return;\n        }\n        for (var i = 0, len = obj.length; i < len; i++) {\n            if (cb.call(context, obj[i], i, obj)) {\n                return obj[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @param {*} context\n     * @return {Function}\n     */\n    function bind(func, context) {\n        var args = nativeSlice.call(arguments, 2);\n        return function () {\n            return func.apply(context, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Function} func\n     * @return {Function}\n     */\n    function curry(func) {\n        var args = nativeSlice.call(arguments, 1);\n        return function () {\n            return func.apply(this, args.concat(nativeSlice.call(arguments)));\n        };\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isArray(value) {\n        return objToString.call(value) === '[object Array]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isFunction(value) {\n        return typeof value === 'function';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isString(value) {\n        return objToString.call(value) === '[object String]';\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isObject(value) {\n        // Avoid a V8 JIT bug in Chrome 19-20.\n        // See https://code.google.com/p/v8/issues/detail?id=2291 for more details.\n        var type = typeof value;\n        return type === 'function' || (!!value && type == 'object');\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isBuildInObject(value) {\n        return !!BUILTIN_OBJECT[objToString.call(value)];\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {*} value\n     * @return {boolean}\n     */\n    function isDom(value) {\n        return typeof value === 'object'\n            && typeof value.nodeType === 'number'\n            && typeof value.ownerDocument === 'object';\n    }\n\n    /**\n     * If value1 is not null, then return value1, otherwise judget rest of values.\n     * @memberOf module:zrender/core/util\n     * @return {*} Final value\n     */\n    function retrieve(values) {\n        for (var i = 0, len = arguments.length; i < len; i++) {\n            if (arguments[i] != null) {\n                return arguments[i];\n            }\n        }\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {Array} arr\n     * @param {number} startIndex\n     * @param {number} endIndex\n     * @return {Array}\n     */\n    function slice() {\n        return Function.call.apply(nativeSlice, arguments);\n    }\n\n    /**\n     * @memberOf module:zrender/core/util\n     * @param {boolean} condition\n     * @param {string} message\n     */\n    function assert(condition, message) {\n        if (!condition) {\n            throw new Error(message);\n        }\n    }\n\n    var util = {\n        inherits: inherits,\n        mixin: mixin,\n        clone: clone,\n        merge: merge,\n        mergeAll: mergeAll,\n        extend: extend,\n        defaults: defaults,\n        getContext: getContext,\n        createCanvas: createCanvas,\n        indexOf: indexOf,\n        slice: slice,\n        find: find,\n        isArrayLike: isArrayLike,\n        each: each,\n        map: map,\n        reduce: reduce,\n        filter: filter,\n        bind: bind,\n        curry: curry,\n        isArray: isArray,\n        isString: isString,\n        isObject: isObject,\n        isFunction: isFunction,\n        isBuildInObject: isBuildInObject,\n        isDom: isDom,\n        retrieve: retrieve,\n        assert: assert,\n        noop: function () {}\n    };\n    module.exports = util;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/util.js\n// module id = 412\n// module chunks = 0","// Enable DEV mode when using source code without build. which has no __DEV__ variable\n// In build process 'typeof __DEV__' will be replace with 'boolean'\n// So this code will be removed or disabled anyway after built.\nif (typeof __DEV__ === 'undefined') {\n    // In browser\n    if (typeof window !== 'undefined') {\n        window.__DEV__ = true;\n    }\n    // In node\n    else if (typeof global !== 'undefined') {\n        global.__DEV__ = true;\n    }\n}\n\n/*!\n * ECharts, a javascript interactive chart library.\n *\n * Copyright (c) 2015, Baidu Inc.\n * All rights reserved.\n *\n * LICENSE\n * https://github.com/ecomfe/echarts/blob/master/LICENSE.txt\n */\n\n/**\n * @module echarts\n */\n\n\n    var env = require('zrender/lib/core/env');\n\n    var GlobalModel = require('./model/Global');\n    var ExtensionAPI = require('./ExtensionAPI');\n    var CoordinateSystemManager = require('./CoordinateSystem');\n    var OptionManager = require('./model/OptionManager');\n\n    var ComponentModel = require('./model/Component');\n    var SeriesModel = require('./model/Series');\n\n    var ComponentView = require('./view/Component');\n    var ChartView = require('./view/Chart');\n    var graphic = require('./util/graphic');\n    var modelUtil = require('./util/model');\n    var throttle = require('./util/throttle');\n\n    var zrender = require('zrender');\n    var zrUtil = require('zrender/lib/core/util');\n    var colorTool = require('zrender/lib/tool/color');\n    var Eventful = require('zrender/lib/mixin/Eventful');\n    var timsort = require('zrender/lib/core/timsort');\n\n    var each = zrUtil.each;\n\n    var PRIORITY_PROCESSOR_FILTER = 1000;\n    var PRIORITY_PROCESSOR_STATISTIC = 5000;\n\n\n    var PRIORITY_VISUAL_LAYOUT = 1000;\n    var PRIORITY_VISUAL_GLOBAL = 2000;\n    var PRIORITY_VISUAL_CHART = 3000;\n    var PRIORITY_VISUAL_COMPONENT = 4000;\n    var PRIORITY_VISUAL_BRUSH = 5000;\n\n    // Main process have three entries: `setOption`, `dispatchAction` and `resize`,\n    // where they must not be invoked nestedly, except the only case: invoke\n    // dispatchAction with updateMethod \"none\" in main process.\n    // This flag is used to carry out this rule.\n    // All events will be triggered out side main process (i.e. when !this[IN_MAIN_PROCESS]).\n    var IN_MAIN_PROCESS = '__flagInMainProcess';\n    var HAS_GRADIENT_OR_PATTERN_BG = '__hasGradientOrPatternBg';\n    var OPTION_UPDATED = '__optionUpdated';\n\n    function createRegisterEventWithLowercaseName(method) {\n        return function (eventName, handler, context) {\n            // Event name is all lowercase\n            eventName = eventName && eventName.toLowerCase();\n            Eventful.prototype[method].call(this, eventName, handler, context);\n        };\n    }\n\n    /**\n     * @module echarts~MessageCenter\n     */\n    function MessageCenter() {\n        Eventful.call(this);\n    }\n    MessageCenter.prototype.on = createRegisterEventWithLowercaseName('on');\n    MessageCenter.prototype.off = createRegisterEventWithLowercaseName('off');\n    MessageCenter.prototype.one = createRegisterEventWithLowercaseName('one');\n    zrUtil.mixin(MessageCenter, Eventful);\n\n    /**\n     * @module echarts~ECharts\n     */\n    function ECharts (dom, theme, opts) {\n        opts = opts || {};\n\n        // Get theme by name\n        if (typeof theme === 'string') {\n            theme = themeStorage[theme];\n        }\n\n        /**\n         * @type {string}\n         */\n        this.id;\n        /**\n         * Group id\n         * @type {string}\n         */\n        this.group;\n        /**\n         * @type {HTMLDomElement}\n         * @private\n         */\n        this._dom = dom;\n        /**\n         * @type {module:zrender/ZRender}\n         * @private\n         */\n        var zr = this._zr = zrender.init(dom, {\n            renderer: opts.renderer || 'canvas',\n            devicePixelRatio: opts.devicePixelRatio,\n            width: opts.width,\n            height: opts.height\n        });\n\n        /**\n         * Expect 60 pfs.\n         * @type {Function}\n         * @private\n         */\n        this._throttledZrFlush = throttle.throttle(zrUtil.bind(zr.flush, zr), 17);\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._theme = zrUtil.clone(theme);\n\n        /**\n         * @type {Array.<module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Chart>}\n         * @private\n         */\n        this._chartsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsViews = [];\n\n        /**\n         * @type {Object.<string, module:echarts/view/Component>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * @type {module:echarts/ExtensionAPI}\n         * @private\n         */\n        this._api = new ExtensionAPI(this);\n\n        /**\n         * @type {module:echarts/CoordinateSystem}\n         * @private\n         */\n        this._coordSysMgr = new CoordinateSystemManager();\n\n        Eventful.call(this);\n\n        /**\n         * @type {module:echarts~MessageCenter}\n         * @private\n         */\n        this._messageCenter = new MessageCenter();\n\n        // Init mouse events\n        this._initEvents();\n\n        // In case some people write `window.onresize = chart.resize`\n        this.resize = zrUtil.bind(this.resize, this);\n\n        // Can't dispatch action during rendering procedure\n        this._pendingActions = [];\n        // Sort on demand\n        function prioritySortFunc(a, b) {\n            return a.prio - b.prio;\n        }\n        timsort(visualFuncs, prioritySortFunc);\n        timsort(dataProcessorFuncs, prioritySortFunc);\n\n        zr.animation.on('frame', this._onframe, this);\n    }\n\n    var echartsProto = ECharts.prototype;\n\n    echartsProto._onframe = function () {\n        // Lazy update\n        if (this[OPTION_UPDATED]) {\n\n            this[IN_MAIN_PROCESS] = true;\n\n            updateMethods.prepareAndUpdate.call(this);\n\n            this[IN_MAIN_PROCESS] = false;\n\n            this[OPTION_UPDATED] = false;\n        }\n    };\n    /**\n     * @return {HTMLDomElement}\n     */\n    echartsProto.getDom = function () {\n        return this._dom;\n    };\n\n    /**\n     * @return {module:zrender~ZRender}\n     */\n    echartsProto.getZr = function () {\n        return this._zr;\n    };\n\n    /**\n     * @param {Object} option\n     * @param {boolean} notMerge\n     * @param {boolean} [lazyUpdate=false] Useful when setOption frequently.\n     */\n    echartsProto.setOption = function (option, notMerge, lazyUpdate) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`setOption` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        if (!this._model || notMerge) {\n            var optionManager = new OptionManager(this._api);\n            var theme = this._theme;\n            var ecModel = this._model = new GlobalModel(null, null, theme, optionManager);\n            ecModel.init(null, null, theme, optionManager);\n        }\n\n        // FIXME\n        // ugly\n        this.__lastOnlyGraphic = !!(option && option.graphic);\n        zrUtil.each(option, function (o, mainType) {\n            mainType !== 'graphic' && (this.__lastOnlyGraphic = false);\n        }, this);\n\n        this._model.setOption(option, optionPreprocessorFuncs);\n\n        if (lazyUpdate) {\n            this[OPTION_UPDATED] = true;\n        }\n        else {\n            updateMethods.prepareAndUpdate.call(this);\n            // Ensure zr refresh sychronously, and then pixel in canvas can be\n            // fetched after `setOption`.\n            this._zr.flush();\n            this[OPTION_UPDATED] = false;\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this, false);\n    };\n\n    /**\n     * @DEPRECATED\n     */\n    echartsProto.setTheme = function () {\n        console.log('ECharts#setTheme() is DEPRECATED in ECharts 3.0');\n    };\n\n    /**\n     * @return {module:echarts/model/Global}\n     */\n    echartsProto.getModel = function () {\n        return this._model;\n    };\n\n    /**\n     * @return {Object}\n     */\n    echartsProto.getOption = function () {\n        return this._model && this._model.getOption();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getWidth = function () {\n        return this._zr.getWidth();\n    };\n\n    /**\n     * @return {number}\n     */\n    echartsProto.getHeight = function () {\n        return this._zr.getHeight();\n    };\n\n    /**\n     * Get canvas which has all thing rendered\n     * @param {Object} opts\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getRenderedCanvas = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        opts = opts || {};\n        opts.pixelRatio = opts.pixelRatio || 1;\n        opts.backgroundColor = opts.backgroundColor\n            || this._model.get('backgroundColor');\n        var zr = this._zr;\n        var list = zr.storage.getDisplayList();\n        // Stop animations\n        zrUtil.each(list, function (el) {\n            el.stopAnimation(true);\n        });\n        return zr.painter.getRenderedCanvas(opts);\n    };\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     * @param {string} [opts.excludeComponents]\n     */\n    echartsProto.getDataURL = function (opts) {\n        opts = opts || {};\n        var excludeComponents = opts.excludeComponents;\n        var ecModel = this._model;\n        var excludesComponentViews = [];\n        var self = this;\n\n        each(excludeComponents, function (componentType) {\n            ecModel.eachComponent({\n                mainType: componentType\n            }, function (component) {\n                var view = self._componentsMap[component.__viewId];\n                if (!view.group.ignore) {\n                    excludesComponentViews.push(view);\n                    view.group.ignore = true;\n                }\n            });\n        });\n\n        var url = this.getRenderedCanvas(opts).toDataURL(\n            'image/' + (opts && opts.type || 'png')\n        );\n\n        each(excludesComponentViews, function (view) {\n            view.group.ignore = false;\n        });\n        return url;\n    };\n\n\n    /**\n     * @return {string}\n     * @param {Object} opts\n     * @param {string} [opts.type='png']\n     * @param {string} [opts.pixelRatio=1]\n     * @param {string} [opts.backgroundColor]\n     */\n    echartsProto.getConnectedDataURL = function (opts) {\n        if (!env.canvasSupported) {\n            return;\n        }\n        var groupId = this.group;\n        var mathMin = Math.min;\n        var mathMax = Math.max;\n        var MAX_NUMBER = Infinity;\n        if (connectedGroups[groupId]) {\n            var left = MAX_NUMBER;\n            var top = MAX_NUMBER;\n            var right = -MAX_NUMBER;\n            var bottom = -MAX_NUMBER;\n            var canvasList = [];\n            var dpr = (opts && opts.pixelRatio) || 1;\n\n            zrUtil.each(instances, function (chart, id) {\n                if (chart.group === groupId) {\n                    var canvas = chart.getRenderedCanvas(\n                        zrUtil.clone(opts)\n                    );\n                    var boundingRect = chart.getDom().getBoundingClientRect();\n                    left = mathMin(boundingRect.left, left);\n                    top = mathMin(boundingRect.top, top);\n                    right = mathMax(boundingRect.right, right);\n                    bottom = mathMax(boundingRect.bottom, bottom);\n                    canvasList.push({\n                        dom: canvas,\n                        left: boundingRect.left,\n                        top: boundingRect.top\n                    });\n                }\n            });\n\n            left *= dpr;\n            top *= dpr;\n            right *= dpr;\n            bottom *= dpr;\n            var width = right - left;\n            var height = bottom - top;\n            var targetCanvas = zrUtil.createCanvas();\n            targetCanvas.width = width;\n            targetCanvas.height = height;\n            var zr = zrender.init(targetCanvas);\n\n            each(canvasList, function (item) {\n                var img = new graphic.Image({\n                    style: {\n                        x: item.left * dpr - left,\n                        y: item.top * dpr - top,\n                        image: item.dom\n                    }\n                });\n                zr.add(img);\n            });\n            zr.refreshImmediately();\n\n            return targetCanvas.toDataURL('image/' + (opts && opts.type || 'png'));\n        }\n        else {\n            return this.getDataURL(opts);\n        }\n    };\n\n    /**\n     * Convert from logical coordinate system to pixel coordinate system.\n     * See CoordinateSystem#convertToPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId, geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName,\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertToPixel = zrUtil.curry(doConvertPixel, 'convertToPixel');\n\n    /**\n     * Convert from pixel coordinate system to logical coordinate system.\n     * See CoordinateSystem#convertFromPixel.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {Array|number} result\n     */\n    echartsProto.convertFromPixel = zrUtil.curry(doConvertPixel, 'convertFromPixel');\n\n    function doConvertPixel(methodName, finder, value) {\n        var ecModel = this._model;\n        var coordSysList = this._coordSysMgr.getCoordinateSystems();\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        for (var i = 0; i < coordSysList.length; i++) {\n            var coordSys = coordSysList[i];\n            if (coordSys[methodName]\n                && (result = coordSys[methodName](ecModel, finder, value)) != null\n            ) {\n                return result;\n            }\n        }\n\n        if (__DEV__) {\n            console.warn(\n                'No coordinate system that supports ' + methodName + ' found by the given finder.'\n            );\n        }\n    }\n\n    /**\n     * Is the specified coordinate systems or components contain the given pixel point.\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            geoIndex / geoId / geoName,\n     *            bmapIndex / bmapId / bmapName,\n     *            xAxisIndex / xAxisId / xAxisName,\n     *            yAxisIndex / yAxisId / yAxisName\n     *            gridIndex / gridId / gridName,\n     *            ... (can be extended)\n     *        }\n     * @param {Array|number} value\n     * @return {boolean} result\n     */\n    echartsProto.containPixel = function (finder, value) {\n        var ecModel = this._model;\n        var result;\n\n        finder = modelUtil.parseFinder(ecModel, finder);\n\n        zrUtil.each(finder, function (models, key) {\n            key.indexOf('Models') >= 0 && zrUtil.each(models, function (model) {\n                var coordSys = model.coordinateSystem;\n                if (coordSys && coordSys.containPoint) {\n                    result |= !!coordSys.containPoint(value);\n                }\n                else if (key === 'seriesModels') {\n                    var view = this._chartsMap[model.__viewId];\n                    if (view && view.containPoint) {\n                        result |= view.containPoint(value, model);\n                    }\n                    else {\n                        if (__DEV__) {\n                            console.warn(key + ': ' + (view\n                                ? 'The found component do not support containPoint.'\n                                : 'No view mapping to the found component.'\n                            ));\n                        }\n                    }\n                }\n                else {\n                    if (__DEV__) {\n                        console.warn(key + ': containPoint is not supported');\n                    }\n                }\n            }, this);\n        }, this);\n\n        return !!result;\n    };\n\n    /**\n     * Get visual from series or data.\n     * @param {string|Object} finder\n     *        If string, e.g., 'series', means {seriesIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex / seriesId / seriesName,\n     *            dataIndex / dataIndexInside\n     *        }\n     *        If dataIndex is not specified, series visual will be fetched,\n     *        but not data item visual.\n     *        If all of seriesIndex, seriesId, seriesName are not specified,\n     *        visual will be fetched from first series.\n     * @param {string} visualType 'color', 'symbol', 'symbolSize'\n     */\n    echartsProto.getVisual = function (finder, visualType) {\n        var ecModel = this._model;\n\n        finder = modelUtil.parseFinder(ecModel, finder, {defaultMainType: 'series'});\n\n        var seriesModel = finder.seriesModel;\n\n        if (__DEV__) {\n            if (!seriesModel) {\n                console.warn('There is no specified seires model');\n            }\n        }\n\n        var data = seriesModel.getData();\n\n        var dataIndexInside = finder.hasOwnProperty('dataIndexInside')\n            ? finder.dataIndexInside\n            : finder.hasOwnProperty('dataIndex')\n            ? data.indexOfRawIndex(finder.dataIndex)\n            : null;\n\n        return dataIndexInside != null\n            ? data.getItemVisual(dataIndexInside, visualType)\n            : data.getVisual(visualType);\n    };\n\n\n    var updateMethods = {\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        update: function (payload) {\n            // console.time && console.time('update');\n\n            var ecModel = this._model;\n            var api = this._api;\n            var coordSysMgr = this._coordSysMgr;\n            var zr = this._zr;\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            // Fixme First time update ?\n            ecModel.restoreData();\n\n            // TODO\n            // Save total ecModel here for undo/redo (after restoring data and before processing data).\n            // Undo (restoration of total ecModel) can be carried out in 'action' or outside API call.\n\n            // Create new coordinate system each update\n            // In LineView may save the old coordinate system and use it to get the orignal point\n            coordSysMgr.create(this._model, this._api);\n\n            processData.call(this, ecModel, api);\n\n            stackSeriesData.call(this, ecModel);\n\n            coordSysMgr.update(ecModel, api);\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            doRender.call(this, ecModel, payload);\n\n            // Set background\n            var backgroundColor = ecModel.get('backgroundColor') || 'transparent';\n\n            var painter = zr.painter;\n            // TODO all use clearColor ?\n            if (painter.isSingleCanvas && painter.isSingleCanvas()) {\n                zr.configLayer(0, {\n                    clearColor: backgroundColor\n                });\n            }\n            else {\n                // In IE8\n                if (!env.canvasSupported) {\n                    var colorArr = colorTool.parse(backgroundColor);\n                    backgroundColor = colorTool.stringify(colorArr, 'rgb');\n                    if (colorArr[3] === 0) {\n                        backgroundColor = 'transparent';\n                    }\n                }\n                if (backgroundColor.colorStops || backgroundColor.image) {\n                    // Gradient background\n                    // FIXME Fixed layer？\n                    zr.configLayer(0, {\n                        clearColor: backgroundColor\n                    });\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = true;\n\n                    this._dom.style.background = 'transparent';\n                }\n                else {\n                    if (this[HAS_GRADIENT_OR_PATTERN_BG]) {\n                        zr.configLayer(0, {\n                            clearColor: null\n                        });\n                    }\n                    this[HAS_GRADIENT_OR_PATTERN_BG] = false;\n\n                    this._dom.style.background = backgroundColor;\n                }\n            }\n\n            // console.time && console.timeEnd('update');\n        },\n\n        // PENDING\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateView: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateView', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateVisual: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            ecModel.eachSeries(function (seriesModel) {\n                seriesModel.getData().clearAllVisual();\n            });\n\n            doVisualEncoding.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateVisual', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        updateLayout: function (payload) {\n            var ecModel = this._model;\n\n            // update before setOption\n            if (!ecModel) {\n                return;\n            }\n\n            doLayout.call(this, ecModel, payload);\n\n            invokeUpdateMethod.call(this, 'updateLayout', ecModel, payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        highlight: function (payload) {\n            toggleHighlight.call(this, 'highlight', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        downplay: function (payload) {\n            toggleHighlight.call(this, 'downplay', payload);\n        },\n\n        /**\n         * @param {Object} payload\n         * @private\n         */\n        prepareAndUpdate: function (payload) {\n            var ecModel = this._model;\n\n            prepareView.call(this, 'component', ecModel);\n\n            prepareView.call(this, 'chart', ecModel);\n\n            // FIXME\n            // ugly\n            if (this.__lastOnlyGraphic) {\n                each(this._componentsViews, function (componentView) {\n                    var componentModel = componentView.__model;\n                    if (componentModel && componentModel.mainType === 'graphic') {\n                        componentView.render(componentModel, ecModel, this._api, payload);\n                        updateZ(componentModel, componentView);\n                    }\n                }, this);\n                this.__lastOnlyGraphic = false;\n            }\n            else {\n                updateMethods.update.call(this, payload);\n            }\n        }\n    };\n\n    /**\n     * @param {Object} payload\n     * @private\n     */\n    function toggleHighlight(method, payload) {\n        var ecModel = this._model;\n\n        // dispatchAction before setOption\n        if (!ecModel) {\n            return;\n        }\n\n        ecModel.eachComponent(\n            {mainType: 'series', query: payload},\n            function (seriesModel, index) {\n                var chartView = this._chartsMap[seriesModel.__viewId];\n                if (chartView && chartView.__alive) {\n                    chartView[method](\n                        seriesModel, ecModel, this._api, payload\n                    );\n                }\n            },\n            this\n        );\n    }\n\n    /**\n     * Resize the chart\n     * @param {Object} opts\n     * @param {number} [opts.width] Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Can be 'auto' (the same as null/undefined)\n     */\n    echartsProto.resize = function (opts) {\n        if (__DEV__) {\n            zrUtil.assert(!this[IN_MAIN_PROCESS], '`resize` should not be called during main process.');\n        }\n\n        this[IN_MAIN_PROCESS] = true;\n\n        this._zr.resize(opts);\n\n        var optionChanged = this._model && this._model.resetOption('media');\n        updateMethods[optionChanged ? 'prepareAndUpdate' : 'update'].call(this);\n\n        // Resize loading effect\n        this._loadingFX && this._loadingFX.resize();\n\n        this[IN_MAIN_PROCESS] = false;\n\n        flushPendingActions.call(this);\n    };\n\n    /**\n     * Show loading effect\n     * @param  {string} [name='default']\n     * @param  {Object} [cfg]\n     */\n    echartsProto.showLoading = function (name, cfg) {\n        if (zrUtil.isObject(name)) {\n            cfg = name;\n            name = '';\n        }\n        name = name || 'default';\n\n        this.hideLoading();\n        if (!loadingEffects[name]) {\n            if (__DEV__) {\n                console.warn('Loading effects ' + name + ' not exists.');\n            }\n            return;\n        }\n        var el = loadingEffects[name](this._api, cfg);\n        var zr = this._zr;\n        this._loadingFX = el;\n\n        zr.add(el);\n    };\n\n    /**\n     * Hide loading effect\n     */\n    echartsProto.hideLoading = function () {\n        this._loadingFX && this._zr.remove(this._loadingFX);\n        this._loadingFX = null;\n    };\n\n    /**\n     * @param {Object} eventObj\n     * @return {Object}\n     */\n    echartsProto.makeActionFromEvent = function (eventObj) {\n        var payload = zrUtil.extend({}, eventObj);\n        payload.type = eventActionMap[eventObj.type];\n        return payload;\n    };\n\n    /**\n     * @pubilc\n     * @param {Object} payload\n     * @param {string} [payload.type] Action type\n     * @param {Object|boolean} [opt] If pass boolean, means opt.silent\n     * @param {boolean} [opt.silent=false] Whether trigger events.\n     * @param {boolean} [opt.flush=undefined]\n     *                  true: Flush immediately, and then pixel in canvas can be fetched\n     *                      immediately. Caution: it might affect performance.\n     *                  false: Not not flush.\n     *                  undefined: Auto decide whether perform flush.\n     */\n    echartsProto.dispatchAction = function (payload, opt) {\n        if (!zrUtil.isObject(opt)) {\n            opt = {silent: !!opt};\n        }\n\n        if (!actions[payload.type]) {\n            return;\n        }\n\n        // if (__DEV__) {\n        //     zrUtil.assert(\n        //         !this[IN_MAIN_PROCESS],\n        //         '`dispatchAction` should not be called during main process.'\n        //         + 'unless updateMathod is \"none\".'\n        //     );\n        // }\n\n        // May dispatchAction in rendering procedure\n        if (this[IN_MAIN_PROCESS]) {\n            this._pendingActions.push(payload);\n            return;\n        }\n\n        doDispatchAction.call(this, payload, opt.silent);\n\n        if (opt.flush) {\n            this._zr.flush(true);\n        }\n        else if (opt.flush !== false && env.browser.weChat) {\n            // In WeChat embeded browser, `requestAnimationFrame` and `setInterval`\n            // hang when sliding page (on touch event), which cause that zr does not\n            // refresh util user interaction finished, which is not expected.\n            // But `dispatchAction` may be called too frequently when pan on touch\n            // screen, which impacts performance if do not throttle them.\n            this._throttledZrFlush();\n        }\n\n        flushPendingActions.call(this, opt.silent);\n    };\n\n    function doDispatchAction(payload, silent) {\n        var actionWrap = actions[payload.type];\n        var actionInfo = actionWrap.actionInfo;\n        var updateMethod = actionInfo.update || 'update';\n\n        this[IN_MAIN_PROCESS] = true;\n\n        var payloads = [payload];\n        var batched = false;\n        // Batch action\n        if (payload.batch) {\n            batched = true;\n            payloads = zrUtil.map(payload.batch, function (item) {\n                item = zrUtil.defaults(zrUtil.extend({}, item), payload);\n                item.batch = null;\n                return item;\n            });\n        }\n\n        var eventObjBatch = [];\n        var eventObj;\n        var isHighlightOrDownplay = payload.type === 'highlight' || payload.type === 'downplay';\n        for (var i = 0; i < payloads.length; i++) {\n            var batchItem = payloads[i];\n            // Action can specify the event by return it.\n            eventObj = actionWrap.action(batchItem, this._model);\n            // Emit event outside\n            eventObj = eventObj || zrUtil.extend({}, batchItem);\n            // Convert type to eventType\n            eventObj.type = actionInfo.event || eventObj.type;\n            eventObjBatch.push(eventObj);\n\n            // Highlight and downplay are special.\n            isHighlightOrDownplay && updateMethods[updateMethod].call(this, batchItem);\n        }\n\n        if (updateMethod !== 'none' && !isHighlightOrDownplay) {\n            // Still dirty\n            if (this[OPTION_UPDATED]) {\n                // FIXME Pass payload ?\n                updateMethods.prepareAndUpdate.call(this, payload);\n                this[OPTION_UPDATED] = false;\n            }\n            else {\n                updateMethods[updateMethod].call(this, payload);\n            }\n        }\n\n        // Follow the rule of action batch\n        if (batched) {\n            eventObj = {\n                type: actionInfo.event || payload.type,\n                batch: eventObjBatch\n            };\n        }\n        else {\n            eventObj = eventObjBatch[0];\n        }\n\n        this[IN_MAIN_PROCESS] = false;\n\n        !silent && this._messageCenter.trigger(eventObj.type, eventObj);\n    }\n\n    function flushPendingActions(silent) {\n        var pendingActions = this._pendingActions;\n        while (pendingActions.length) {\n            var payload = pendingActions.shift();\n            doDispatchAction.call(this, payload, silent);\n        }\n    }\n\n    /**\n     * Register event\n     * @method\n     */\n    echartsProto.on = createRegisterEventWithLowercaseName('on');\n    echartsProto.off = createRegisterEventWithLowercaseName('off');\n    echartsProto.one = createRegisterEventWithLowercaseName('one');\n\n    /**\n     * @param {string} methodName\n     * @private\n     */\n    function invokeUpdateMethod(methodName, ecModel, payload) {\n        var api = this._api;\n\n        // Update all components\n        each(this._componentsViews, function (component) {\n            var componentModel = component.__model;\n            component[methodName](componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, component);\n        }, this);\n\n        // Upate all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chart = this._chartsMap[seriesModel.__viewId];\n            chart[methodName](seriesModel, ecModel, api, payload);\n\n            updateZ(seriesModel, chart);\n\n            updateProgressiveAndBlend(seriesModel, chart);\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n    }\n\n    /**\n     * Prepare view instances of charts and components\n     * @param  {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function prepareView(type, ecModel) {\n        var isComponent = type === 'component';\n        var viewList = isComponent ? this._componentsViews : this._chartsViews;\n        var viewMap = isComponent ? this._componentsMap : this._chartsMap;\n        var zr = this._zr;\n\n        for (var i = 0; i < viewList.length; i++) {\n            viewList[i].__alive = false;\n        }\n\n        ecModel[isComponent ? 'eachComponent' : 'eachSeries'](function (componentType, model) {\n            if (isComponent) {\n                if (componentType === 'series') {\n                    return;\n                }\n            }\n            else {\n                model = componentType;\n            }\n\n            // Consider: id same and type changed.\n            var viewId = model.id + '_' + model.type;\n            var view = viewMap[viewId];\n            if (!view) {\n                var classType = ComponentModel.parseClassType(model.type);\n                var Clazz = isComponent\n                    ? ComponentView.getClass(classType.main, classType.sub)\n                    : ChartView.getClass(classType.sub);\n                if (Clazz) {\n                    view = new Clazz();\n                    view.init(ecModel, this._api);\n                    viewMap[viewId] = view;\n                    viewList.push(view);\n                    zr.add(view.group);\n                }\n                else {\n                    // Error\n                    return;\n                }\n            }\n\n            model.__viewId = viewId;\n            view.__alive = true;\n            view.__id = viewId;\n            view.__model = model;\n        }, this);\n\n        for (var i = 0; i < viewList.length;) {\n            var view = viewList[i];\n            if (!view.__alive) {\n                zr.remove(view.group);\n                view.dispose(ecModel, this._api);\n                viewList.splice(i, 1);\n                delete viewMap[view.__id];\n            }\n            else {\n                i++;\n            }\n        }\n    }\n\n    /**\n     * Processor data in each series\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function processData(ecModel, api) {\n        each(dataProcessorFuncs, function (process) {\n            process.func(ecModel, api);\n        });\n    }\n\n    /**\n     * @private\n     */\n    function stackSeriesData(ecModel) {\n        var stackedDataMap = {};\n        ecModel.eachSeries(function (series) {\n            var stack = series.get('stack');\n            var data = series.getData();\n            if (stack && data.type === 'list') {\n                var previousStack = stackedDataMap[stack];\n                if (previousStack) {\n                    data.stackedOn = previousStack;\n                }\n                stackedDataMap[stack] = data;\n            }\n        });\n    }\n\n    /**\n     * Layout before each chart render there series, special visual encoding stage\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doLayout(ecModel, payload) {\n        var api = this._api;\n        each(visualFuncs, function (visual) {\n            if (visual.isLayout) {\n                visual.func(ecModel, api, payload);\n            }\n        });\n    }\n\n    /**\n     * Encode visual infomation from data after data processing\n     *\n     * @param {module:echarts/model/Global} ecModel\n     * @private\n     */\n    function doVisualEncoding(ecModel, payload) {\n        var api = this._api;\n        ecModel.clearColorPalette();\n        ecModel.eachSeries(function (seriesModel) {\n            seriesModel.clearColorPalette();\n        });\n        each(visualFuncs, function (visual) {\n            visual.func(ecModel, api, payload);\n        });\n    }\n\n    /**\n     * Render each chart and component\n     * @private\n     */\n    function doRender(ecModel, payload) {\n        var api = this._api;\n        // Render all components\n        each(this._componentsViews, function (componentView) {\n            var componentModel = componentView.__model;\n            componentView.render(componentModel, ecModel, api, payload);\n\n            updateZ(componentModel, componentView);\n        }, this);\n\n        each(this._chartsViews, function (chart) {\n            chart.__alive = false;\n        }, this);\n\n        // Render all charts\n        ecModel.eachSeries(function (seriesModel, idx) {\n            var chartView = this._chartsMap[seriesModel.__viewId];\n            chartView.__alive = true;\n            chartView.render(seriesModel, ecModel, api, payload);\n\n            chartView.group.silent = !!seriesModel.get('silent');\n\n            updateZ(seriesModel, chartView);\n\n            updateProgressiveAndBlend(seriesModel, chartView);\n\n        }, this);\n\n        // If use hover layer\n        updateHoverLayerStatus(this._zr, ecModel);\n\n        // Remove groups of unrendered charts\n        each(this._chartsViews, function (chart) {\n            if (!chart.__alive) {\n                chart.remove(ecModel, api);\n            }\n        }, this);\n    }\n\n    var MOUSE_EVENT_NAMES = [\n        'click', 'dblclick', 'mouseover', 'mouseout', 'mousemove',\n        'mousedown', 'mouseup', 'globalout', 'contextmenu'\n    ];\n    /**\n     * @private\n     */\n    echartsProto._initEvents = function () {\n        each(MOUSE_EVENT_NAMES, function (eveName) {\n            this._zr.on(eveName, function (e) {\n                var ecModel = this.getModel();\n                var el = e.target;\n                var params;\n\n                // no e.target when 'globalout'.\n                if (eveName === 'globalout') {\n                    params = {};\n                }\n                else if (el && el.dataIndex != null) {\n                    var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                    params = dataModel && dataModel.getDataParams(el.dataIndex, el.dataType) || {};\n                }\n                // If element has custom eventData of components\n                else if (el && el.eventData) {\n                    params = zrUtil.extend({}, el.eventData);\n                }\n\n                if (params) {\n                    params.event = e;\n                    params.type = eveName;\n                    this.trigger(eveName, params);\n                }\n\n            }, this);\n        }, this);\n\n        each(eventActionMap, function (actionType, eventType) {\n            this._messageCenter.on(eventType, function (event) {\n                this.trigger(eventType, event);\n            }, this);\n        }, this);\n    };\n\n    /**\n     * @return {boolean}\n     */\n    echartsProto.isDisposed = function () {\n        return this._disposed;\n    };\n\n    /**\n     * Clear\n     */\n    echartsProto.clear = function () {\n        this.setOption({ series: [] }, true);\n    };\n    /**\n     * Dispose instance\n     */\n    echartsProto.dispose = function () {\n        if (this._disposed) {\n            if (__DEV__) {\n                console.warn('Instance ' + this.id + ' has been disposed');\n            }\n            return;\n        }\n        this._disposed = true;\n\n        var api = this._api;\n        var ecModel = this._model;\n\n        each(this._componentsViews, function (component) {\n            component.dispose(ecModel, api);\n        });\n        each(this._chartsViews, function (chart) {\n            chart.dispose(ecModel, api);\n        });\n\n        // Dispose after all views disposed\n        this._zr.dispose();\n\n        delete instances[this.id];\n    };\n\n    zrUtil.mixin(ECharts, Eventful);\n\n    function updateHoverLayerStatus(zr, ecModel) {\n        var storage = zr.storage;\n        var elCount = 0;\n        storage.traverse(function (el) {\n            if (!el.isGroup) {\n                elCount++;\n            }\n        });\n        if (elCount > ecModel.get('hoverLayerThreshold') && !env.node) {\n            storage.traverse(function (el) {\n                if (!el.isGroup) {\n                    el.useHoverLayer = true;\n                }\n            });\n        }\n    }\n    /**\n     * Update chart progressive and blend.\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateProgressiveAndBlend(seriesModel, chartView) {\n        // Progressive configuration\n        var elCount = 0;\n        chartView.group.traverse(function (el) {\n            if (el.type !== 'group' && !el.ignore) {\n                elCount++;\n            }\n        });\n        var frameDrawNum = +seriesModel.get('progressive');\n        var needProgressive = elCount > seriesModel.get('progressiveThreshold') && frameDrawNum && !env.node;\n        if (needProgressive) {\n            chartView.group.traverse(function (el) {\n                // FIXME marker and other components\n                if (!el.isGroup) {\n                    el.progressive = needProgressive ?\n                        Math.floor(elCount++ / frameDrawNum) : -1;\n                    if (needProgressive) {\n                        el.stopAnimation(true);\n                    }\n                }\n            });\n        }\n\n        // Blend configration\n        var blendMode = seriesModel.get('blendMode') || null;\n        if (__DEV__) {\n            if (!env.canvasSupported && blendMode && blendMode !== 'source-over') {\n                console.warn('Only canvas support blendMode');\n            }\n        }\n        chartView.group.traverse(function (el) {\n            // FIXME marker and other components\n            if (!el.isGroup) {\n                el.setStyle('blend', blendMode);\n            }\n        });\n    }\n    /**\n     * @param {module:echarts/model/Series|module:echarts/model/Component} model\n     * @param {module:echarts/view/Component|module:echarts/view/Chart} view\n     */\n    function updateZ(model, view) {\n        var z = model.get('z');\n        var zlevel = model.get('zlevel');\n        // Set z and zlevel\n        view.group.traverse(function (el) {\n            if (el.type !== 'group') {\n                z != null && (el.z = z);\n                zlevel != null && (el.zlevel = zlevel);\n            }\n        });\n    }\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var actions = [];\n\n    /**\n     * Map eventType to actionType\n     * @type {Object}\n     */\n    var eventActionMap = {};\n\n    /**\n     * Data processor functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var dataProcessorFuncs = [];\n\n    /**\n     * @type {Array.<Function>}\n     * @inner\n     */\n    var optionPreprocessorFuncs = [];\n\n    /**\n     * Visual encoding functions of each stage\n     * @type {Array.<Object.<string, Function>>}\n     * @inner\n     */\n    var visualFuncs = [];\n    /**\n     * Theme storage\n     * @type {Object.<key, Object>}\n     */\n    var themeStorage = {};\n    /**\n     * Loading effects\n     */\n    var loadingEffects = {};\n\n\n    var instances = {};\n    var connectedGroups = {};\n\n    var idBase = new Date() - 0;\n    var groupIdBase = new Date() - 0;\n    var DOM_ATTRIBUTE_KEY = '_echarts_instance_';\n    /**\n     * @alias module:echarts\n     */\n    var echarts = {\n        /**\n         * @type {number}\n         */\n        version: '3.3.2',\n        dependencies: {\n            zrender: '3.2.2'\n        }\n    };\n\n    function enableConnect(chart) {\n\n        var STATUS_PENDING = 0;\n        var STATUS_UPDATING = 1;\n        var STATUS_UPDATED = 2;\n        var STATUS_KEY = '__connectUpdateStatus';\n        function updateConnectedChartsStatus(charts, status) {\n            for (var i = 0; i < charts.length; i++) {\n                var otherChart = charts[i];\n                otherChart[STATUS_KEY] = status;\n            }\n        }\n        zrUtil.each(eventActionMap, function (actionType, eventType) {\n            chart._messageCenter.on(eventType, function (event) {\n                if (connectedGroups[chart.group] && chart[STATUS_KEY] !== STATUS_PENDING) {\n                    var action = chart.makeActionFromEvent(event);\n                    var otherCharts = [];\n\n                    zrUtil.each(instances, function (otherChart) {\n                        if (otherChart !== chart && otherChart.group === chart.group) {\n                            otherCharts.push(otherChart);\n                        }\n                    });\n\n                    updateConnectedChartsStatus(otherCharts, STATUS_PENDING);\n                    each(otherCharts, function (otherChart) {\n                        if (otherChart[STATUS_KEY] !== STATUS_UPDATING) {\n                            otherChart.dispatchAction(action);\n                        }\n                    });\n                    updateConnectedChartsStatus(otherCharts, STATUS_UPDATED);\n                }\n            });\n        });\n\n    }\n    /**\n     * @param {HTMLDomElement} dom\n     * @param {Object} [theme]\n     * @param {Object} opts\n     * @param {number} [opts.devicePixelRatio] Use window.devicePixelRatio by default\n     * @param {string} [opts.renderer] Currently only 'canvas' is supported.\n     * @param {number} [opts.width] Use clientWidth of the input `dom` by default.\n     *                              Can be 'auto' (the same as null/undefined)\n     * @param {number} [opts.height] Use clientHeight of the input `dom` by default.\n     *                               Can be 'auto' (the same as null/undefined)\n     */\n    echarts.init = function (dom, theme, opts) {\n        if (__DEV__) {\n            // Check version\n            if ((zrender.version.replace('.', '') - 0) < (echarts.dependencies.zrender.replace('.', '') - 0)) {\n                throw new Error(\n                    'ZRender ' + zrender.version\n                    + ' is too old for ECharts ' + echarts.version\n                    + '. Current version need ZRender '\n                    + echarts.dependencies.zrender + '+'\n                );\n            }\n            if (!dom) {\n                throw new Error('Initialize failed: invalid dom.');\n            }\n            if (zrUtil.isDom(dom) && dom.nodeName.toUpperCase() !== 'CANVAS' && (!dom.clientWidth || !dom.clientHeight)) {\n                console.warn('Can\\'t get dom width or height');\n            }\n        }\n\n        var chart = new ECharts(dom, theme, opts);\n        chart.id = 'ec_' + idBase++;\n        instances[chart.id] = chart;\n\n        dom.setAttribute &&\n            dom.setAttribute(DOM_ATTRIBUTE_KEY, chart.id);\n\n        enableConnect(chart);\n\n        return chart;\n    };\n\n    /**\n     * @return {string|Array.<module:echarts~ECharts>} groupId\n     */\n    echarts.connect = function (groupId) {\n        // Is array of charts\n        if (zrUtil.isArray(groupId)) {\n            var charts = groupId;\n            groupId = null;\n            // If any chart has group\n            zrUtil.each(charts, function (chart) {\n                if (chart.group != null) {\n                    groupId = chart.group;\n                }\n            });\n            groupId = groupId || ('g_' + groupIdBase++);\n            zrUtil.each(charts, function (chart) {\n                chart.group = groupId;\n            });\n        }\n        connectedGroups[groupId] = true;\n        return groupId;\n    };\n\n    /**\n     * @return {string} groupId\n     */\n    echarts.disConnect = function (groupId) {\n        connectedGroups[groupId] = false;\n    };\n\n    /**\n     * Dispose a chart instance\n     * @param  {module:echarts~ECharts|HTMLDomElement|string} chart\n     */\n    echarts.dispose = function (chart) {\n        if (zrUtil.isDom(chart)) {\n            chart = echarts.getInstanceByDom(chart);\n        }\n        else if (typeof chart === 'string') {\n            chart = instances[chart];\n        }\n        if ((chart instanceof ECharts) && !chart.isDisposed()) {\n            chart.dispose();\n        }\n    };\n\n    /**\n     * @param  {HTMLDomElement} dom\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceByDom = function (dom) {\n        var key = dom.getAttribute(DOM_ATTRIBUTE_KEY);\n        return instances[key];\n    };\n    /**\n     * @param {string} key\n     * @return {echarts~ECharts}\n     */\n    echarts.getInstanceById = function (key) {\n        return instances[key];\n    };\n\n    /**\n     * Register theme\n     */\n    echarts.registerTheme = function (name, theme) {\n        themeStorage[name] = theme;\n    };\n\n    /**\n     * Register option preprocessor\n     * @param {Function} preprocessorFunc\n     */\n    echarts.registerPreprocessor = function (preprocessorFunc) {\n        optionPreprocessorFuncs.push(preprocessorFunc);\n    };\n\n    /**\n     * @param {number} [priority=1000]\n     * @param {Function} processorFunc\n     */\n    echarts.registerProcessor = function (priority, processorFunc) {\n        if (typeof priority === 'function') {\n            processorFunc = priority;\n            priority = PRIORITY_PROCESSOR_FILTER;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown processor priority');\n            }\n        }\n        dataProcessorFuncs.push({\n            prio: priority,\n            func: processorFunc\n        });\n    };\n\n    /**\n     * Usage:\n     * registerAction('someAction', 'someEvent', function () { ... });\n     * registerAction('someAction', function () { ... });\n     * registerAction(\n     *     {type: 'someAction', event: 'someEvent', update: 'updateView'},\n     *     function () { ... }\n     * );\n     *\n     * @param {(string|Object)} actionInfo\n     * @param {string} actionInfo.type\n     * @param {string} [actionInfo.event]\n     * @param {string} [actionInfo.update]\n     * @param {string} [eventName]\n     * @param {Function} action\n     */\n    echarts.registerAction = function (actionInfo, eventName, action) {\n        if (typeof eventName === 'function') {\n            action = eventName;\n            eventName = '';\n        }\n        var actionType = zrUtil.isObject(actionInfo)\n            ? actionInfo.type\n            : ([actionInfo, actionInfo = {\n                event: eventName\n            }][0]);\n\n        // Event name is all lowercase\n        actionInfo.event = (actionInfo.event || actionType).toLowerCase();\n        eventName = actionInfo.event;\n\n        if (!actions[actionType]) {\n            actions[actionType] = {action: action, actionInfo: actionInfo};\n        }\n        eventActionMap[eventName] = actionType;\n    };\n\n    /**\n     * @param {string} type\n     * @param {*} CoordinateSystem\n     */\n    echarts.registerCoordinateSystem = function (type, CoordinateSystem) {\n        CoordinateSystemManager.register(type, CoordinateSystem);\n    };\n\n    /**\n     * Layout is a special stage of visual encoding\n     * Most visual encoding like color are common for different chart\n     * But each chart has it's own layout algorithm\n     *\n     * @param {number} [priority=1000]\n     * @param {Function} layoutFunc\n     */\n    echarts.registerLayout = function (priority, layoutFunc) {\n        if (typeof priority === 'function') {\n            layoutFunc = priority;\n            priority = PRIORITY_VISUAL_LAYOUT;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown layout priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: layoutFunc,\n            isLayout: true\n        });\n    };\n\n    /**\n     * @param {number} [priority=3000]\n     * @param {Function} visualFunc\n     */\n    echarts.registerVisual = function (priority, visualFunc) {\n        if (typeof priority === 'function') {\n            visualFunc = priority;\n            priority = PRIORITY_VISUAL_CHART;\n        }\n        if (__DEV__) {\n            if (isNaN(priority)) {\n                throw new Error('Unkown visual priority');\n            }\n        }\n        visualFuncs.push({\n            prio: priority,\n            func: visualFunc\n        });\n    };\n\n    /**\n     * @param {string} name\n     */\n    echarts.registerLoading = function (name, loadingFx) {\n        loadingEffects[name] = loadingFx;\n    };\n\n\n    var parseClassType = ComponentModel.parseClassType;\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentModel = function (opts, superClass) {\n        var Clazz = ComponentModel;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendComponentView = function (opts, superClass) {\n        var Clazz = ComponentView;\n        if (superClass) {\n            var classType = parseClassType(superClass);\n            Clazz = ComponentView.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendSeriesModel = function (opts, superClass) {\n        var Clazz = SeriesModel;\n        if (superClass) {\n            superClass = 'series.' + superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ComponentModel.getClass(classType.main, classType.sub, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * @param {Object} opts\n     * @param {string} [superClass]\n     */\n    echarts.extendChartView = function (opts, superClass) {\n        var Clazz = ChartView;\n        if (superClass) {\n            superClass.replace('series.', '');\n            var classType = parseClassType(superClass);\n            Clazz = ChartView.getClass(classType.main, true);\n        }\n        return Clazz.extend(opts);\n    };\n\n    /**\n     * ZRender need a canvas context to do measureText.\n     * But in node environment canvas may be created by node-canvas.\n     * So we need to specify how to create a canvas instead of using document.createElement('canvas')\n     *\n     * Be careful of using it in the browser.\n     *\n     * @param {Function} creator\n     * @example\n     *     var Canvas = require('canvas');\n     *     var echarts = require('echarts');\n     *     echarts.setCanvasCreator(function () {\n     *         // Small size is enough.\n     *         return new Canvas(32, 32);\n     *     });\n     */\n    echarts.setCanvasCreator = function (creator) {\n        zrUtil.createCanvas = creator;\n    };\n\n    echarts.registerVisual(PRIORITY_VISUAL_GLOBAL, require('./visual/seriesColor'));\n    echarts.registerPreprocessor(require('./preprocessor/backwardCompat'));\n    echarts.registerLoading('default', require('./loading/default'));\n\n    // Default action\n    echarts.registerAction({\n        type: 'highlight',\n        event: 'highlight',\n        update: 'highlight'\n    }, zrUtil.noop);\n    echarts.registerAction({\n        type: 'downplay',\n        event: 'downplay',\n        update: 'downplay'\n    }, zrUtil.noop);\n\n\n    // --------\n    // Exports\n    // --------\n    //\n    echarts.List = require('./data/List');\n    echarts.Model = require('./model/Model');\n\n    echarts.graphic = require('./util/graphic');\n    echarts.number = require('./util/number');\n    echarts.format = require('./util/format');\n    echarts.matrix = require('zrender/lib/core/matrix');\n    echarts.vector = require('zrender/lib/core/vector');\n    echarts.color = require('zrender/lib/tool/color');\n\n    echarts.util = {};\n    each([\n            'map', 'each', 'filter', 'indexOf', 'inherits', 'reduce', 'filter',\n            'bind', 'curry', 'isArray', 'isString', 'isObject', 'isFunction',\n            'extend', 'defaults', 'clone'\n        ],\n        function (name) {\n            echarts.util[name] = zrUtil[name];\n        }\n    );\n\n    // PRIORITY\n    echarts.PRIORITY = {\n        PROCESSOR: {\n            FILTER: PRIORITY_PROCESSOR_FILTER,\n            STATISTIC: PRIORITY_PROCESSOR_STATISTIC\n        },\n        VISUAL: {\n            LAYOUT: PRIORITY_VISUAL_LAYOUT,\n            GLOBAL: PRIORITY_VISUAL_GLOBAL,\n            CHART: PRIORITY_VISUAL_CHART,\n            COMPONENT: PRIORITY_VISUAL_COMPONENT,\n            BRUSH: PRIORITY_VISUAL_BRUSH\n        }\n    };\n\n    module.exports = echarts;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/echarts.js\n// module id = 421\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var pathTool = require('zrender/lib/tool/path');\n    var round = Math.round;\n    var Path = require('zrender/lib/graphic/Path');\n    var colorTool = require('zrender/lib/tool/color');\n    var matrix = require('zrender/lib/core/matrix');\n    var vector = require('zrender/lib/core/vector');\n\n    var graphic = {};\n\n    graphic.Group = require('zrender/lib/container/Group');\n\n    graphic.Image = require('zrender/lib/graphic/Image');\n\n    graphic.Text = require('zrender/lib/graphic/Text');\n\n    graphic.Circle = require('zrender/lib/graphic/shape/Circle');\n\n    graphic.Sector = require('zrender/lib/graphic/shape/Sector');\n\n    graphic.Ring = require('zrender/lib/graphic/shape/Ring');\n\n    graphic.Polygon = require('zrender/lib/graphic/shape/Polygon');\n\n    graphic.Polyline = require('zrender/lib/graphic/shape/Polyline');\n\n    graphic.Rect = require('zrender/lib/graphic/shape/Rect');\n\n    graphic.Line = require('zrender/lib/graphic/shape/Line');\n\n    graphic.BezierCurve = require('zrender/lib/graphic/shape/BezierCurve');\n\n    graphic.Arc = require('zrender/lib/graphic/shape/Arc');\n\n    graphic.CompoundPath = require('zrender/lib/graphic/CompoundPath');\n\n    graphic.LinearGradient = require('zrender/lib/graphic/LinearGradient');\n\n    graphic.RadialGradient = require('zrender/lib/graphic/RadialGradient');\n\n    graphic.BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Extend shape with parameters\n     */\n    graphic.extendShape = function (opts) {\n        return Path.extend(opts);\n    };\n\n    /**\n     * Extend path\n     */\n    graphic.extendPath = function (pathData, opts) {\n        return pathTool.extendFromString(pathData, opts);\n    };\n\n    /**\n     * Create a path element from path data string\n     * @param {string} pathData\n     * @param {Object} opts\n     * @param {module:zrender/core/BoundingRect} rect\n     * @param {string} [layout=cover] 'center' or 'cover'\n     */\n    graphic.makePath = function (pathData, opts, rect, layout) {\n        var path = pathTool.createFromString(pathData, opts);\n        var boundingRect = path.getBoundingRect();\n        if (rect) {\n            var aspect = boundingRect.width / boundingRect.height;\n\n            if (layout === 'center') {\n                // Set rect to center, keep width / height ratio.\n                var width = rect.height * aspect;\n                var height;\n                if (width <= rect.width) {\n                    height = rect.height;\n                }\n                else {\n                    width = rect.width;\n                    height = width / aspect;\n                }\n                var cx = rect.x + rect.width / 2;\n                var cy = rect.y + rect.height / 2;\n\n                rect.x = cx - width / 2;\n                rect.y = cy - height / 2;\n                rect.width = width;\n                rect.height = height;\n            }\n\n            this.resizePath(path, rect);\n        }\n        return path;\n    };\n\n    graphic.mergePath = pathTool.mergePath,\n\n    /**\n     * Resize a path to fit the rect\n     * @param {module:zrender/graphic/Path} path\n     * @param {Object} rect\n     */\n    graphic.resizePath = function (path, rect) {\n        if (!path.applyTransform) {\n            return;\n        }\n\n        var pathRect = path.getBoundingRect();\n\n        var m = pathRect.calculateTransform(rect);\n\n        path.applyTransform(m);\n    };\n\n    /**\n     * Sub pixel optimize line for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x1]\n     * @param {number} [param.shape.y1]\n     * @param {number} [param.shape.x2]\n     * @param {number} [param.shape.y2]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeLine = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n\n        if (round(shape.x1 * 2) === round(shape.x2 * 2)) {\n            shape.x1 = shape.x2 = subPixelOptimize(shape.x1, lineWidth, true);\n        }\n        if (round(shape.y1 * 2) === round(shape.y2 * 2)) {\n            shape.y1 = shape.y2 = subPixelOptimize(shape.y1, lineWidth, true);\n        }\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize rect for canvas\n     *\n     * @param {Object} param\n     * @param {Object} [param.shape]\n     * @param {number} [param.shape.x]\n     * @param {number} [param.shape.y]\n     * @param {number} [param.shape.width]\n     * @param {number} [param.shape.height]\n     * @param {Object} [param.style]\n     * @param {number} [param.style.lineWidth]\n     * @return {Object} Modified param\n     */\n    graphic.subPixelOptimizeRect = function (param) {\n        var subPixelOptimize = graphic.subPixelOptimize;\n        var shape = param.shape;\n        var lineWidth = param.style.lineWidth;\n        var originX = shape.x;\n        var originY = shape.y;\n        var originWidth = shape.width;\n        var originHeight = shape.height;\n        shape.x = subPixelOptimize(shape.x, lineWidth, true);\n        shape.y = subPixelOptimize(shape.y, lineWidth, true);\n        shape.width = Math.max(\n            subPixelOptimize(originX + originWidth, lineWidth, false) - shape.x,\n            originWidth === 0 ? 0 : 1\n        );\n        shape.height = Math.max(\n            subPixelOptimize(originY + originHeight, lineWidth, false) - shape.y,\n            originHeight === 0 ? 0 : 1\n        );\n        return param;\n    };\n\n    /**\n     * Sub pixel optimize for canvas\n     *\n     * @param {number} position Coordinate, such as x, y\n     * @param {number} lineWidth Should be nonnegative integer.\n     * @param {boolean=} positiveOrNegative Default false (negative).\n     * @return {number} Optimized position.\n     */\n    graphic.subPixelOptimize = function (position, lineWidth, positiveOrNegative) {\n        // Assure that (position + lineWidth / 2) is near integer edge,\n        // otherwise line will be fuzzy in canvas.\n        var doubledPosition = round(position * 2);\n        return (doubledPosition + round(lineWidth)) % 2 === 0\n            ? doubledPosition / 2\n            : (doubledPosition + (positiveOrNegative ? 1 : -1)) / 2;\n    };\n\n    function hasFillOrStroke(fillOrStroke) {\n        return fillOrStroke != null && fillOrStroke != 'none';\n    }\n\n    function liftColor(color) {\n        return typeof color === 'string' ? colorTool.lift(color, -0.1) : color;\n    }\n\n    /**\n     * @private\n     */\n    function cacheElementStl(el) {\n        if (el.__hoverStlDirty) {\n            var stroke = el.style.stroke;\n            var fill = el.style.fill;\n\n            // Create hoverStyle on mouseover\n            var hoverStyle = el.__hoverStl;\n            hoverStyle.fill = hoverStyle.fill\n                || (hasFillOrStroke(fill) ? liftColor(fill) : null);\n            hoverStyle.stroke = hoverStyle.stroke\n                || (hasFillOrStroke(stroke) ? liftColor(stroke) : null);\n\n            var normalStyle = {};\n            for (var name in hoverStyle) {\n                if (hoverStyle.hasOwnProperty(name)) {\n                    normalStyle[name] = el.style[name];\n                }\n            }\n\n            el.__normalStl = normalStyle;\n\n            el.__hoverStlDirty = false;\n        }\n    }\n\n    /**\n     * @private\n     */\n    function doSingleEnterHover(el) {\n        if (el.__isHover) {\n            return;\n        }\n\n        cacheElementStl(el);\n\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.addHover(el, el.__hoverStl);\n        }\n        else {\n            el.setStyle(el.__hoverStl);\n            el.z2 += 1;\n        }\n\n        el.__isHover = true;\n    }\n\n    /**\n     * @inner\n     */\n    function doSingleLeaveHover(el) {\n        if (!el.__isHover) {\n            return;\n        }\n\n        var normalStl = el.__normalStl;\n        if (el.useHoverLayer) {\n            el.__zr && el.__zr.removeHover(el);\n        }\n        else {\n            normalStl && el.setStyle(normalStl);\n            el.z2 -= 1;\n        }\n\n        el.__isHover = false;\n    }\n\n    /**\n     * @inner\n     */\n    function doEnterHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleEnterHover(child);\n                }\n            })\n            : doSingleEnterHover(el);\n    }\n\n    function doLeaveHover(el) {\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    doSingleLeaveHover(child);\n                }\n            })\n            : doSingleLeaveHover(el);\n    }\n\n    /**\n     * @inner\n     */\n    function setElementHoverStl(el, hoverStl) {\n        // If element has sepcified hoverStyle, then use it instead of given hoverStyle\n        // Often used when item group has a label element and it's hoverStyle is different\n        el.__hoverStl = el.hoverStyle || hoverStl || {};\n        el.__hoverStlDirty = true;\n\n        if (el.__isHover) {\n            cacheElementStl(el);\n        }\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOver(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function onElementMouseOut(e) {\n        if (this.__hoverSilentOnTouch && e.zrByTouch) {\n            return;\n        }\n\n        // Only if element is not in emphasis status\n        !this.__isEmphasis && doLeaveHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function enterEmphasis() {\n        this.__isEmphasis = true;\n        doEnterHover(this);\n    }\n\n    /**\n     * @inner\n     */\n    function leaveEmphasis() {\n        this.__isEmphasis = false;\n        doLeaveHover(this);\n    }\n\n    /**\n     * Set hover style of element\n     * @param {module:zrender/Element} el\n     * @param {Object} [hoverStyle]\n     * @param {Object} [opt]\n     * @param {boolean} [opt.hoverSilentOnTouch=false]\n     *        In touch device, mouseover event will be trigger on touchstart event\n     *        (see module:zrender/dom/HandlerProxy). By this mechanism, we can\n     *        conviniently use hoverStyle when tap on touch screen without additional\n     *        code for compatibility.\n     *        But if the chart/component has select feature, which usually also use\n     *        hoverStyle, there might be conflict between 'select-highlight' and\n     *        'hover-highlight' especially when roam is enabled (see geo for example).\n     *        In this case, hoverSilentOnTouch should be used to disable hover-highlight\n     *        on touch device.\n     */\n    graphic.setHoverStyle = function (el, hoverStyle, opt) {\n        el.__hoverSilentOnTouch = opt && opt.hoverSilentOnTouch;\n\n        el.type === 'group'\n            ? el.traverse(function (child) {\n                if (child.type !== 'group') {\n                    setElementHoverStl(child, hoverStyle);\n                }\n            })\n            : setElementHoverStl(el, hoverStyle);\n\n        // Duplicated function will be auto-ignored, see Eventful.js.\n        el.on('mouseover', onElementMouseOver)\n          .on('mouseout', onElementMouseOut);\n\n        // Emphasis, normal can be triggered manually\n        el.on('emphasis', enterEmphasis)\n          .on('normal', leaveEmphasis);\n    };\n\n    /**\n     * Set text option in the style\n     * @param {Object} textStyle\n     * @param {module:echarts/model/Model} labelModel\n     * @param {string} color\n     */\n    graphic.setText = function (textStyle, labelModel, color) {\n        var labelPosition = labelModel.getShallow('position') || 'inside';\n        var labelColor = labelPosition.indexOf('inside') >= 0 ? 'white' : color;\n        var textStyleModel = labelModel.getModel('textStyle');\n        zrUtil.extend(textStyle, {\n            textDistance: labelModel.getShallow('distance') || 5,\n            textFont: textStyleModel.getFont(),\n            textPosition: labelPosition,\n            textFill: textStyleModel.getTextColor() || labelColor\n        });\n    };\n\n    function animateOrSetProps(isUpdate, el, props, animatableModel, dataIndex, cb) {\n        if (typeof dataIndex === 'function') {\n            cb = dataIndex;\n            dataIndex = null;\n        }\n        var animationEnabled = animatableModel\n            && (\n                animatableModel.ifEnableAnimation\n                ? animatableModel.ifEnableAnimation()\n                // Directly use animation property\n                : animatableModel.getShallow('animation')\n            );\n\n        if (animationEnabled) {\n            var postfix = isUpdate ? 'Update' : '';\n            var duration = animatableModel\n                && animatableModel.getShallow('animationDuration' + postfix);\n            var animationEasing = animatableModel\n                && animatableModel.getShallow('animationEasing' + postfix);\n            var animationDelay = animatableModel\n                && animatableModel.getShallow('animationDelay' + postfix);\n            if (typeof animationDelay === 'function') {\n                animationDelay = animationDelay(dataIndex);\n            }\n            duration > 0\n                ? el.animateTo(props, duration, animationDelay || 0, animationEasing, cb)\n                : (el.attr(props), cb && cb());\n        }\n        else {\n            el.attr(props);\n            cb && cb();\n        }\n    }\n    /**\n     * Update graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} [cb]\n     * @example\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, dataIndex, function () { console.log('Animation done!'); });\n     *     // Or\n     *     graphic.updateProps(el, {\n     *         position: [100, 100]\n     *     }, seriesModel, function () { console.log('Animation done!'); });\n     */\n    graphic.updateProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(true, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Init graphic element properties with or without animation according to the configuration in series\n     * @param {module:zrender/Element} el\n     * @param {Object} props\n     * @param {module:echarts/model/Model} [animatableModel]\n     * @param {number} [dataIndex]\n     * @param {Function} cb\n     */\n    graphic.initProps = function (el, props, animatableModel, dataIndex, cb) {\n        animateOrSetProps(false, el, props, animatableModel, dataIndex, cb);\n    };\n\n    /**\n     * Get transform matrix of target (param target),\n     * in coordinate of its ancestor (param ancestor)\n     *\n     * @param {module:zrender/mixin/Transformable} target\n     * @param {module:zrender/mixin/Transformable} [ancestor]\n     */\n    graphic.getTransform = function (target, ancestor) {\n        var mat = matrix.identity([]);\n\n        while (target && target !== ancestor) {\n            matrix.mul(mat, target.getLocalTransform(), mat);\n            target = target.parent;\n        }\n\n        return mat;\n    };\n\n    /**\n     * Apply transform to an vertex.\n     * @param {Array.<number>} vertex [x, y]\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {Array.<number>} [x, y]\n     */\n    graphic.applyTransform = function (vertex, transform, invert) {\n        if (invert) {\n            transform = matrix.invert([], transform);\n        }\n        return vector.applyTransform([], vertex, transform);\n    };\n\n    /**\n     * @param {string} direction 'left' 'right' 'top' 'bottom'\n     * @param {Array.<number>} transform Transform matrix: like [1, 0, 0, 1, 0, 0]\n     * @param {boolean=} invert Whether use invert matrix.\n     * @return {string} Transformed direction. 'left' 'right' 'top' 'bottom'\n     */\n    graphic.transformDirection = function (direction, transform, invert) {\n\n        // Pick a base, ensure that transform result will not be (0, 0).\n        var hBase = (transform[4] === 0 || transform[5] === 0 || transform[0] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[0]);\n        var vBase = (transform[4] === 0 || transform[5] === 0 || transform[2] === 0)\n            ? 1 : Math.abs(2 * transform[4] / transform[2]);\n\n        var vertex = [\n            direction === 'left' ? -hBase : direction === 'right' ? hBase : 0,\n            direction === 'top' ? -vBase : direction === 'bottom' ? vBase : 0\n        ];\n\n        vertex = graphic.applyTransform(vertex, transform, invert);\n\n        return Math.abs(vertex[0]) > Math.abs(vertex[1])\n            ? (vertex[0] > 0 ? 'right' : 'left')\n            : (vertex[1] > 0 ? 'bottom' : 'top');\n    };\n\n    /**\n     * Apply group transition animation from g1 to g2\n     */\n    graphic.groupTransition = function (g1, g2, animatableModel, cb) {\n        if (!g1 || !g2) {\n            return;\n        }\n\n        function getElMap(g) {\n            var elMap = {};\n            g.traverse(function (el) {\n                if (!el.isGroup && el.anid) {\n                    elMap[el.anid] = el;\n                }\n            });\n            return elMap;\n        }\n        function getAnimatableProps(el) {\n            var obj = {\n                position: vector.clone(el.position),\n                rotation: el.rotation\n            };\n            if (el.shape) {\n                obj.shape = zrUtil.extend({}, el.shape);\n            }\n            return obj;\n        }\n        var elMap1 = getElMap(g1);\n\n        g2.traverse(function (el) {\n            if (!el.isGroup && el.anid) {\n                var oldEl = elMap1[el.anid];\n                if (oldEl) {\n                    var newProp = getAnimatableProps(el);\n                    el.attr(getAnimatableProps(oldEl));\n                    graphic.updateProps(el, newProp, animatableModel, el.dataIndex);\n                }\n                // else {\n                //     if (el.previousProps) {\n                //         graphic.updateProps\n                //     }\n                // }\n            }\n        });\n    };\n\n    module.exports = graphic;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/graphic.js\n// module id = 422\n// module chunks = 0","/**\n * 数值处理模块\n * @module echarts/util/number\n */\n\n\n\n    var number = {};\n\n    var RADIAN_EPSILON = 1e-4;\n\n    function _trim(str) {\n        return str.replace(/^\\s+/, '').replace(/\\s+$/, '');\n    }\n\n    /**\n     * Linear mapping a value from domain to range\n     * @memberOf module:echarts/util/number\n     * @param  {(number|Array.<number>)} val\n     * @param  {Array.<number>} domain Domain extent domain[0] can be bigger than domain[1]\n     * @param  {Array.<number>} range  Range extent range[0] can be bigger than range[1]\n     * @param  {boolean} clamp\n     * @return {(number|Array.<number>}\n     */\n    number.linearMap = function (val, domain, range, clamp) {\n        var subDomain = domain[1] - domain[0];\n        var subRange = range[1] - range[0];\n\n        if (subDomain === 0) {\n            return subRange === 0\n                ? range[0]\n                : (range[0] + range[1]) / 2;\n        }\n\n        // Avoid accuracy problem in edge, such as\n        // 146.39 - 62.83 === 83.55999999999999.\n        // See echarts/test/ut/spec/util/number.js#linearMap#accuracyError\n        // It is a little verbose for efficiency considering this method\n        // is a hotspot.\n        if (clamp) {\n            if (subDomain > 0) {\n                if (val <= domain[0]) {\n                    return range[0];\n                }\n                else if (val >= domain[1]) {\n                    return range[1];\n                }\n            }\n            else {\n                if (val >= domain[0]) {\n                    return range[0];\n                }\n                else if (val <= domain[1]) {\n                    return range[1];\n                }\n            }\n        }\n        else {\n            if (val === domain[0]) {\n                return range[0];\n            }\n            if (val === domain[1]) {\n                return range[1];\n            }\n        }\n\n        return (val - domain[0]) / subDomain * subRange + range[0];\n    };\n\n    /**\n     * Convert a percent string to absolute number.\n     * Returns NaN if percent is not a valid string or number\n     * @memberOf module:echarts/util/number\n     * @param {string|number} percent\n     * @param {number} all\n     * @return {number}\n     */\n    number.parsePercent = function(percent, all) {\n        switch (percent) {\n            case 'center':\n            case 'middle':\n                percent = '50%';\n                break;\n            case 'left':\n            case 'top':\n                percent = '0%';\n                break;\n            case 'right':\n            case 'bottom':\n                percent = '100%';\n                break;\n        }\n        if (typeof percent === 'string') {\n            if (_trim(percent).match(/%$/)) {\n                return parseFloat(percent) / 100 * all;\n            }\n\n            return parseFloat(percent);\n        }\n\n        return percent == null ? NaN : +percent;\n    };\n\n    /**\n     * Fix rounding error of float numbers\n     * @param {number} x\n     * @return {number}\n     */\n    number.round = function (x, precision) {\n        if (precision == null) {\n            precision = 10;\n        }\n        // Avoid range error\n        precision = Math.min(Math.max(0, precision), 20);\n        return +(+x).toFixed(precision);\n    };\n\n    number.asc = function (arr) {\n        arr.sort(function (a, b) {\n            return a - b;\n        });\n        return arr;\n    };\n\n    /**\n     * Get precision\n     * @param {number} val\n     */\n    number.getPrecision = function (val) {\n        val = +val;\n        if (isNaN(val)) {\n            return 0;\n        }\n        // It is much faster than methods converting number to string as follows\n        //      var tmp = val.toString();\n        //      return tmp.length - 1 - tmp.indexOf('.');\n        // especially when precision is low\n        var e = 1;\n        var count = 0;\n        while (Math.round(val * e) / e !== val) {\n            e *= 10;\n            count++;\n        }\n        return count;\n    };\n\n    number.getPrecisionSafe = function (val) {\n        var str = val.toString();\n        var dotIndex = str.indexOf('.');\n        if (dotIndex < 0) {\n            return 0;\n        }\n        return str.length - 1 - dotIndex;\n    };\n\n    /**\n     * @param {Array.<number>} dataExtent\n     * @param {Array.<number>} pixelExtent\n     * @return {number}  precision\n     */\n    number.getPixelPrecision = function (dataExtent, pixelExtent) {\n        var log = Math.log;\n        var LN10 = Math.LN10;\n        var dataQuantity = Math.floor(log(dataExtent[1] - dataExtent[0]) / LN10);\n        var sizeQuantity = Math.round(log(Math.abs(pixelExtent[1] - pixelExtent[0])) / LN10);\n        return Math.max(\n            -dataQuantity + sizeQuantity,\n            0\n        );\n    };\n\n    // Number.MAX_SAFE_INTEGER, ie do not support.\n    number.MAX_SAFE_INTEGER = 9007199254740991;\n\n    /**\n     * To 0 - 2 * PI, considering negative radian.\n     * @param {number} radian\n     * @return {number}\n     */\n    number.remRadian = function (radian) {\n        var pi2 = Math.PI * 2;\n        return (radian % pi2 + pi2) % pi2;\n    };\n\n    /**\n     * @param {type} radian\n     * @return {boolean}\n     */\n    number.isRadianAroundZero = function (val) {\n        return val > -RADIAN_EPSILON && val < RADIAN_EPSILON;\n    };\n\n    /**\n     * @param {string|Date|number} value\n     * @return {Date} date\n     */\n    number.parseDate = function (value) {\n        if (value instanceof Date) {\n            return value;\n        }\n        else if (typeof value === 'string') {\n            // Treat as ISO format. See issue #3623\n            var ret = new Date(value);\n            if (isNaN(+ret)) {\n                // FIXME new Date('1970-01-01') is UTC, new Date('1970/01/01') is local\n                ret = new Date(new Date(value.replace(/-/g, '/')) - new Date('1970/01/01'));\n            }\n            return ret;\n        }\n\n        return new Date(Math.round(value));\n    };\n\n    /**\n     * Quantity of a number. e.g. 0.1, 1, 10, 100\n     * @param  {number} val\n     * @return {number}\n     */\n    number.quantity = function (val) {\n        return Math.pow(10, Math.floor(Math.log(val) / Math.LN10));\n    };\n\n    // \"Nice Numbers for Graph Labels\" of Graphic Gems\n    /**\n     * find a “nice” number approximately equal to x. Round the number if round = true, take ceiling if round = false\n     * The primary observation is that the “nicest” numbers in decimal are 1, 2, and 5, and all power-of-ten multiples of these numbers.\n     * @param  {number} val\n     * @param  {boolean} round\n     * @return {number}\n     */\n    number.nice = function (val, round) {\n        var exp10 = number.quantity(val);\n        var f = val / exp10; // between 1 and 10\n        var nf;\n        if (round) {\n            if (f < 1.5) { nf = 1; }\n            else if (f < 2.5) { nf = 2; }\n            else if (f < 4) { nf = 3; }\n            else if (f < 7) { nf = 5; }\n            else { nf = 10; }\n        }\n        else {\n            if (f < 1) { nf = 1; }\n            else if (f < 2) { nf = 2; }\n            else if (f < 3) { nf = 3; }\n            else if (f < 5) { nf = 5; }\n            else { nf = 10; }\n        }\n        return nf * exp10;\n    };\n\n    /**\n     * Order intervals asc, and split them when overlap.\n     * expect(numberUtil.reformIntervals([\n     *     {interval: [18, 62], close: [1, 1]},\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [1, 1]},\n     *     {interval: [62, 150], close: [1, 1]},\n     *     {interval: [106, 150], close: [1, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ])).toEqual([\n     *     {interval: [-Infinity, -70], close: [0, 0]},\n     *     {interval: [-70, -26], close: [1, 1]},\n     *     {interval: [-26, 18], close: [0, 1]},\n     *     {interval: [18, 62], close: [0, 1]},\n     *     {interval: [62, 150], close: [0, 1]},\n     *     {interval: [150, Infinity], close: [0, 0]}\n     * ]);\n     * @param {Array.<Object>} list, where `close` mean open or close\n     *        of the interval, and Infinity can be used.\n     * @return {Array.<Object>} The origin list, which has been reformed.\n     */\n    number.reformIntervals = function (list) {\n        list.sort(function (a, b) {\n            return littleThan(a, b, 0) ? -1 : 1;\n        });\n\n        var curr = -Infinity;\n        var currClose = 1;\n        for (var i = 0; i < list.length;) {\n            var interval = list[i].interval;\n            var close = list[i].close;\n\n            for (var lg = 0; lg < 2; lg++) {\n                if (interval[lg] <= curr) {\n                    interval[lg] = curr;\n                    close[lg] = !lg ? 1 - currClose : 1;\n                }\n                curr = interval[lg];\n                currClose = close[lg];\n            }\n\n            if (interval[0] === interval[1] && close[0] * close[1] !== 1) {\n                list.splice(i, 1);\n            }\n            else {\n                i++;\n            }\n        }\n\n        return list;\n\n        function littleThan(a, b, lg) {\n            return a.interval[lg] < b.interval[lg]\n                || (\n                    a.interval[lg] === b.interval[lg]\n                    && (\n                        (a.close[lg] - b.close[lg] === (!lg ? 1 : -1))\n                        || (!lg && littleThan(a, b, 1))\n                    )\n                );\n        }\n    };\n\n    module.exports = number;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/number.js\n// module id = 444\n// module chunks = 0","/**\n * Path element\n * @module zrender/graphic/Path\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var zrUtil = require('../core/util');\n    var PathProxy = require('../core/PathProxy');\n    var pathContain = require('../contain/path');\n\n    var Pattern = require('./Pattern');\n    var getCanvasPattern = Pattern.prototype.getCanvasPattern;\n\n    var abs = Math.abs;\n\n    /**\n     * @alias module:zrender/graphic/Path\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function Path(opts) {\n        Displayable.call(this, opts);\n\n        /**\n         * @type {module:zrender/core/PathProxy}\n         * @readOnly\n         */\n        this.path = new PathProxy();\n    }\n\n    Path.prototype = {\n\n        constructor: Path,\n\n        type: 'path',\n\n        __dirtyPath: true,\n\n        strokeContainThreshold: 5,\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var path = this.path;\n            var hasStroke = style.hasStroke();\n            var hasFill = style.hasFill();\n            var fill = style.fill;\n            var stroke = style.stroke;\n            var hasFillGradient = hasFill && !!(fill.colorStops);\n            var hasStrokeGradient = hasStroke && !!(stroke.colorStops);\n            var hasFillPattern = hasFill && !!(fill.image);\n            var hasStrokePattern = hasStroke && !!(stroke.image);\n\n            style.bind(ctx, this, prevEl);\n            this.setTransform(ctx);\n\n            if (this.__dirty) {\n                var rect = this.getBoundingRect();\n                // Update gradient because bounding rect may changed\n                if (hasFillGradient) {\n                    this._fillGradient = style.getGradient(ctx, fill, rect);\n                }\n                if (hasStrokeGradient) {\n                    this._strokeGradient = style.getGradient(ctx, stroke, rect);\n                }\n            }\n            // Use the gradient or pattern\n            if (hasFillGradient) {\n                // PENDING If may have affect the state\n                ctx.fillStyle = this._fillGradient;\n            }\n            else if (hasFillPattern) {\n                ctx.fillStyle = getCanvasPattern.call(fill, ctx);\n            }\n            if (hasStrokeGradient) {\n                ctx.strokeStyle = this._strokeGradient;\n            }\n            else if (hasStrokePattern) {\n                ctx.strokeStyle = getCanvasPattern.call(stroke, ctx);\n            }\n\n            var lineDash = style.lineDash;\n            var lineDashOffset = style.lineDashOffset;\n\n            var ctxLineDash = !!ctx.setLineDash;\n\n            // Update path sx, sy\n            var scale = this.getGlobalScale();\n            path.setScale(scale[0], scale[1]);\n\n            // Proxy context\n            // Rebuild path in following 2 cases\n            // 1. Path is dirty\n            // 2. Path needs javascript implemented lineDash stroking.\n            //    In this case, lineDash information will not be saved in PathProxy\n            if (this.__dirtyPath || (\n                lineDash && !ctxLineDash && hasStroke\n            )) {\n                path = this.path.beginPath(ctx);\n\n                // Setting line dash before build path\n                if (lineDash && !ctxLineDash) {\n                    path.setLineDash(lineDash);\n                    path.setLineDashOffset(lineDashOffset);\n                }\n\n                this.buildPath(path, this.shape, false);\n\n                // Clear path dirty flag\n                this.__dirtyPath = false;\n            }\n            else {\n                // Replay path building\n                ctx.beginPath();\n                this.path.rebuildPath(ctx);\n            }\n\n            hasFill && path.fill(ctx);\n\n            if (lineDash && ctxLineDash) {\n                ctx.setLineDash(lineDash);\n                ctx.lineDashOffset = lineDashOffset;\n            }\n\n            hasStroke && path.stroke(ctx);\n\n            if (lineDash && ctxLineDash) {\n                // PENDING\n                // Remove lineDash\n                ctx.setLineDash([]);\n            }\n\n\n            this.restoreTransform(ctx);\n\n            // Draw rect text\n            if (style.text != null) {\n                // var rect = this.getBoundingRect();\n                this.drawRectText(ctx, this.getBoundingRect());\n            }\n        },\n\n        // When bundling path, some shape may decide if use moveTo to begin a new subpath or closePath\n        // Like in circle\n        buildPath: function (ctx, shapeCfg, inBundle) {},\n\n        getBoundingRect: function () {\n            var rect = this._rect;\n            var style = this.style;\n            var needsUpdateRect = !rect;\n            if (needsUpdateRect) {\n                var path = this.path;\n                if (this.__dirtyPath) {\n                    path.beginPath();\n                    this.buildPath(path, this.shape, false);\n                }\n                rect = path.getBoundingRect();\n            }\n            this._rect = rect;\n\n            if (style.hasStroke()) {\n                // Needs update rect with stroke lineWidth when\n                // 1. Element changes scale or lineWidth\n                // 2. Shape is changed\n                var rectWithStroke = this._rectWithStroke || (this._rectWithStroke = rect.clone());\n                if (this.__dirty || needsUpdateRect) {\n                    rectWithStroke.copy(rect);\n                    // FIXME Must after updateTransform\n                    var w = style.lineWidth;\n                    // PENDING, Min line width is needed when line is horizontal or vertical\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n\n                    // Only add extra hover lineWidth when there are no fill\n                    if (!style.hasFill()) {\n                        w = Math.max(w, this.strokeContainThreshold || 4);\n                    }\n                    // Consider line width\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        rectWithStroke.width += w / lineScale;\n                        rectWithStroke.height += w / lineScale;\n                        rectWithStroke.x -= w / lineScale / 2;\n                        rectWithStroke.y -= w / lineScale / 2;\n                    }\n                }\n\n                // Return rect with stroke\n                return rectWithStroke;\n            }\n\n            return rect;\n        },\n\n        contain: function (x, y) {\n            var localPos = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            var style = this.style;\n            x = localPos[0];\n            y = localPos[1];\n\n            if (rect.contain(x, y)) {\n                var pathData = this.path.data;\n                if (style.hasStroke()) {\n                    var lineWidth = style.lineWidth;\n                    var lineScale = style.strokeNoScale ? this.getLineScale() : 1;\n                    // Line scale can't be 0;\n                    if (lineScale > 1e-10) {\n                        // Only add extra hover lineWidth when there are no fill\n                        if (!style.hasFill()) {\n                            lineWidth = Math.max(lineWidth, this.strokeContainThreshold);\n                        }\n                        if (pathContain.containStroke(\n                            pathData, lineWidth / lineScale, x, y\n                        )) {\n                            return true;\n                        }\n                    }\n                }\n                if (style.hasFill()) {\n                    return pathContain.contain(pathData, x, y);\n                }\n            }\n            return false;\n        },\n\n        /**\n         * @param  {boolean} dirtyPath\n         */\n        dirty: function (dirtyPath) {\n            if (dirtyPath == null) {\n                dirtyPath = true;\n            }\n            // Only mark dirty, not mark clean\n            if (dirtyPath) {\n                this.__dirtyPath = dirtyPath;\n                this._rect = null;\n            }\n\n            this.__dirty = true;\n\n            this.__zr && this.__zr.refresh();\n\n            // Used as a clipping path\n            if (this.__clipTarget) {\n                this.__clipTarget.dirty();\n            }\n        },\n\n        /**\n         * Alias for animate('shape')\n         * @param {boolean} loop\n         */\n        animateShape: function (loop) {\n            return this.animate('shape', loop);\n        },\n\n        // Overwrite attrKV\n        attrKV: function (key, value) {\n            // FIXME\n            if (key === 'shape') {\n                this.setShape(value);\n                this.__dirtyPath = true;\n                this._rect = null;\n            }\n            else {\n                Displayable.prototype.attrKV.call(this, key, value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setShape: function (key, value) {\n            var shape = this.shape;\n            // Path from string may not have shape\n            if (shape) {\n                if (zrUtil.isObject(key)) {\n                    for (var name in key) {\n                        if (key.hasOwnProperty(name)) {\n                            shape[name] = key[name];\n                        }\n                    }\n                }\n                else {\n                    shape[key] = value;\n                }\n                this.dirty(true);\n            }\n            return this;\n        },\n\n        getLineScale: function () {\n            var m = this.transform;\n            // Get the line scale.\n            // Determinant of `m` means how much the area is enlarged by the\n            // transformation. So its square root can be used as a scale factor\n            // for width.\n            return m && abs(m[0] - 1) > 1e-10 && abs(m[3] - 1) > 1e-10\n                ? Math.sqrt(abs(m[0] * m[3] - m[2] * m[1]))\n                : 1;\n        }\n    };\n\n    /**\n     * 扩展一个 Path element, 比如星形，圆等。\n     * Extend a path element\n     * @param {Object} props\n     * @param {string} props.type Path type\n     * @param {Function} props.init Initialize\n     * @param {Function} props.buildPath Overwrite buildPath method\n     * @param {Object} [props.style] Extended default style config\n     * @param {Object} [props.shape] Extended default shape config\n     */\n    Path.extend = function (defaults) {\n        var Sub = function (opts) {\n            Path.call(this, opts);\n\n            if (defaults.style) {\n                // Extend default style\n                this.style.extendFrom(defaults.style, false);\n            }\n\n            // Extend default shape\n            var defaultShape = defaults.shape;\n            if (defaultShape) {\n                this.shape = this.shape || {};\n                var thisShape = this.shape;\n                for (var name in defaultShape) {\n                    if (\n                        ! thisShape.hasOwnProperty(name)\n                        && defaultShape.hasOwnProperty(name)\n                    ) {\n                        thisShape[name] = defaultShape[name];\n                    }\n                }\n            }\n\n            defaults.init && defaults.init.call(this, opts);\n        };\n\n        zrUtil.inherits(Sub, Path);\n\n        // FIXME 不能 extend position, rotation 等引用对象\n        for (var name in defaults) {\n            // Extending prototype values and methods\n            if (name !== 'style' && name !== 'shape') {\n                Sub.prototype[name] = defaults[name];\n            }\n        }\n\n        return Sub;\n    };\n\n    zrUtil.inherits(Path, Displayable);\n\n    module.exports = Path;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Path.js\n// module id = 553\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n\n    /**\n     * @typedef {Float32Array|Array.<number>} Vector2\n     */\n    /**\n     * 二维向量类\n     * @exports zrender/tool/vector\n     */\n    var vector = {\n        /**\n         * 创建一个向量\n         * @param {number} [x=0]\n         * @param {number} [y=0]\n         * @return {Vector2}\n         */\n        create: function (x, y) {\n            var out = new ArrayCtor(2);\n            if (x == null) {\n                x = 0;\n            }\n            if (y == null) {\n                y = 0;\n            }\n            out[0] = x;\n            out[1] = y;\n            return out;\n        },\n\n        /**\n         * 复制向量数据\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        copy: function (out, v) {\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 克隆一个向量\n         * @param {Vector2} v\n         * @return {Vector2}\n         */\n        clone: function (v) {\n            var out = new ArrayCtor(2);\n            out[0] = v[0];\n            out[1] = v[1];\n            return out;\n        },\n\n        /**\n         * 设置向量的两个项\n         * @param {Vector2} out\n         * @param {number} a\n         * @param {number} b\n         * @return {Vector2} 结果\n         */\n        set: function (out, a, b) {\n            out[0] = a;\n            out[1] = b;\n            return out;\n        },\n\n        /**\n         * 向量相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        add: function (out, v1, v2) {\n            out[0] = v1[0] + v2[0];\n            out[1] = v1[1] + v2[1];\n            return out;\n        },\n\n        /**\n         * 向量缩放后相加\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} a\n         */\n        scaleAndAdd: function (out, v1, v2, a) {\n            out[0] = v1[0] + v2[0] * a;\n            out[1] = v1[1] + v2[1] * a;\n            return out;\n        },\n\n        /**\n         * 向量相减\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        sub: function (out, v1, v2) {\n            out[0] = v1[0] - v2[0];\n            out[1] = v1[1] - v2[1];\n            return out;\n        },\n\n        /**\n         * 向量长度\n         * @param {Vector2} v\n         * @return {number}\n         */\n        len: function (v) {\n            return Math.sqrt(this.lenSquare(v));\n        },\n\n        /**\n         * 向量长度平方\n         * @param {Vector2} v\n         * @return {number}\n         */\n        lenSquare: function (v) {\n            return v[0] * v[0] + v[1] * v[1];\n        },\n\n        /**\n         * 向量乘法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        mul: function (out, v1, v2) {\n            out[0] = v1[0] * v2[0];\n            out[1] = v1[1] * v2[1];\n            return out;\n        },\n\n        /**\n         * 向量除法\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         */\n        div: function (out, v1, v2) {\n            out[0] = v1[0] / v2[0];\n            out[1] = v1[1] / v2[1];\n            return out;\n        },\n\n        /**\n         * 向量点乘\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        dot: function (v1, v2) {\n            return v1[0] * v2[0] + v1[1] * v2[1];\n        },\n\n        /**\n         * 向量缩放\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {number} s\n         */\n        scale: function (out, v, s) {\n            out[0] = v[0] * s;\n            out[1] = v[1] * s;\n            return out;\n        },\n\n        /**\n         * 向量归一化\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        normalize: function (out, v) {\n            var d = vector.len(v);\n            if (d === 0) {\n                out[0] = 0;\n                out[1] = 0;\n            }\n            else {\n                out[0] = v[0] / d;\n                out[1] = v[1] / d;\n            }\n            return out;\n        },\n\n        /**\n         * 计算向量间距离\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distance: function (v1, v2) {\n            return Math.sqrt(\n                (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1])\n            );\n        },\n\n        /**\n         * 向量距离平方\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @return {number}\n         */\n        distanceSquare: function (v1, v2) {\n            return (v1[0] - v2[0]) * (v1[0] - v2[0])\n                + (v1[1] - v2[1]) * (v1[1] - v2[1]);\n        },\n\n        /**\n         * 求负向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         */\n        negate: function (out, v) {\n            out[0] = -v[0];\n            out[1] = -v[1];\n            return out;\n        },\n\n        /**\n         * 插值两个点\n         * @param {Vector2} out\n         * @param {Vector2} v1\n         * @param {Vector2} v2\n         * @param {number} t\n         */\n        lerp: function (out, v1, v2, t) {\n            out[0] = v1[0] + t * (v2[0] - v1[0]);\n            out[1] = v1[1] + t * (v2[1] - v1[1]);\n            return out;\n        },\n\n        /**\n         * 矩阵左乘向量\n         * @param {Vector2} out\n         * @param {Vector2} v\n         * @param {Vector2} m\n         */\n        applyTransform: function (out, v, m) {\n            var x = v[0];\n            var y = v[1];\n            out[0] = m[0] * x + m[2] * y + m[4];\n            out[1] = m[1] * x + m[3] * y + m[5];\n            return out;\n        },\n        /**\n         * 求两个向量最小值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        min: function (out, v1, v2) {\n            out[0] = Math.min(v1[0], v2[0]);\n            out[1] = Math.min(v1[1], v2[1]);\n            return out;\n        },\n        /**\n         * 求两个向量最大值\n         * @param  {Vector2} out\n         * @param  {Vector2} v1\n         * @param  {Vector2} v2\n         */\n        max: function (out, v1, v2) {\n            out[0] = Math.max(v1[0], v2[0]);\n            out[1] = Math.max(v1[1], v2[1]);\n            return out;\n        }\n    };\n\n    vector.length = vector.len;\n    vector.lengthSquare = vector.lenSquare;\n    vector.dist = vector.distance;\n    vector.distSquare = vector.distanceSquare;\n\n    module.exports = vector;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/vector.js\n// module id = 555\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('./number');\n    var textContain = require('zrender/lib/contain/text');\n\n    var formatUtil = {};\n    /**\n     * 每三位默认加,格式化\n     * @type {string|number} x\n     */\n    formatUtil.addCommas = function (x) {\n        if (isNaN(x)) {\n            return '-';\n        }\n        x = (x + '').split('.');\n        return x[0].replace(/(\\d{1,3})(?=(?:\\d{3})+(?!\\d))/g,'$1,')\n               + (x.length > 1 ? ('.' + x[1]) : '');\n    };\n\n    /**\n     * @param {string} str\n     * @param {boolean} [upperCaseFirst=false]\n     * @return {string} str\n     */\n    formatUtil.toCamelCase = function (str, upperCaseFirst) {\n        str = (str || '').toLowerCase().replace(/-(.)/g, function(match, group1) {\n            return group1.toUpperCase();\n        });\n\n        if (upperCaseFirst && str) {\n            str = str.charAt(0).toUpperCase() + str.slice(1);\n        }\n\n        return str;\n    };\n\n    /**\n     * Normalize css liked array configuration\n     * e.g.\n     *  3 => [3, 3, 3, 3]\n     *  [4, 2] => [4, 2, 4, 2]\n     *  [4, 3, 2] => [4, 3, 2, 3]\n     * @param {number|Array.<number>} val\n     */\n    formatUtil.normalizeCssArray = function (val) {\n        var len = val.length;\n        if (typeof (val) === 'number') {\n            return [val, val, val, val];\n        }\n        else if (len === 2) {\n            // vertical | horizontal\n            return [val[0], val[1], val[0], val[1]];\n        }\n        else if (len === 3) {\n            // top | horizontal | bottom\n            return [val[0], val[1], val[2], val[1]];\n        }\n        return val;\n    };\n\n    formatUtil.encodeHTML = function (source) {\n        return String(source)\n            .replace(/&/g, '&amp;')\n            .replace(/</g, '&lt;')\n            .replace(/>/g, '&gt;')\n            .replace(/\"/g, '&quot;')\n            .replace(/'/g, '&#39;');\n    };\n\n    var TPL_VAR_ALIAS = ['a', 'b', 'c', 'd', 'e', 'f', 'g'];\n\n    var wrapVar = function (varName, seriesIdx) {\n        return '{' + varName + (seriesIdx == null ? '' : seriesIdx) + '}';\n    };\n\n    /**\n     * Template formatter\n     * @param  {string} tpl\n     * @param  {Array.<Object>|Object} paramsList\n     * @return {string}\n     */\n    formatUtil.formatTpl = function (tpl, paramsList) {\n        if (!zrUtil.isArray(paramsList)) {\n            paramsList = [paramsList];\n        }\n        var seriesLen = paramsList.length;\n        if (!seriesLen) {\n            return '';\n        }\n\n        var $vars = paramsList[0].$vars || [];\n        for (var i = 0; i < $vars.length; i++) {\n            var alias = TPL_VAR_ALIAS[i];\n            tpl = tpl.replace(wrapVar(alias),  wrapVar(alias, 0));\n        }\n        for (var seriesIdx = 0; seriesIdx < seriesLen; seriesIdx++) {\n            for (var k = 0; k < $vars.length; k++) {\n                tpl = tpl.replace(\n                    wrapVar(TPL_VAR_ALIAS[k], seriesIdx),\n                    paramsList[seriesIdx][$vars[k]]\n                );\n            }\n        }\n\n        return tpl;\n    };\n\n\n    /**\n     * @param {string} str\n     * @return {string}\n     * @inner\n     */\n    var s2d = function (str) {\n        return str < 10 ? ('0' + str) : str;\n    };\n\n    /**\n     * ISO Date format\n     * @param {string} tpl\n     * @param {number} value\n     * @inner\n     */\n    formatUtil.formatTime = function (tpl, value) {\n        if (tpl === 'week'\n            || tpl === 'month'\n            || tpl === 'quarter'\n            || tpl === 'half-year'\n            || tpl === 'year'\n        ) {\n            tpl = 'MM-dd\\nyyyy';\n        }\n\n        var date = numberUtil.parseDate(value);\n        var y = date.getFullYear();\n        var M = date.getMonth() + 1;\n        var d = date.getDate();\n        var h = date.getHours();\n        var m = date.getMinutes();\n        var s = date.getSeconds();\n\n        tpl = tpl.replace('MM', s2d(M))\n            .toLowerCase()\n            .replace('yyyy', y)\n            .replace('yy', y % 100)\n            .replace('dd', s2d(d))\n            .replace('d', d)\n            .replace('hh', s2d(h))\n            .replace('h', h)\n            .replace('mm', s2d(m))\n            .replace('m', m)\n            .replace('ss', s2d(s))\n            .replace('s', s);\n\n        return tpl;\n    };\n\n    /**\n     * Capital first\n     * @param {string} str\n     * @return {string}\n     */\n    formatUtil.capitalFirst = function (str) {\n        return str ? str.charAt(0).toUpperCase() + str.substr(1) : str;\n    };\n\n    formatUtil.truncateText = textContain.truncateText;\n\n    module.exports = formatUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/format.js\n// module id = 557\n// module chunks = 0","\n\n    var formatUtil = require('./format');\n    var nubmerUtil = require('./number');\n    var Model = require('../model/Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var each = zrUtil.each;\n    var isObject = zrUtil.isObject;\n\n    var modelUtil = {};\n\n    /**\n     * If value is not array, then translate it to array.\n     * @param  {*} value\n     * @return {Array} [value] or value\n     */\n    modelUtil.normalizeToArray = function (value) {\n        return value instanceof Array\n            ? value\n            : value == null\n            ? []\n            : [value];\n    };\n\n    /**\n     * Sync default option between normal and emphasis like `position` and `show`\n     * In case some one will write code like\n     *     label: {\n     *         normal: {\n     *             show: false,\n     *             position: 'outside',\n     *             textStyle: {\n     *                 fontSize: 18\n     *             }\n     *         },\n     *         emphasis: {\n     *             show: true\n     *         }\n     *     }\n     * @param {Object} opt\n     * @param {Array.<string>} subOpts\n     */\n     modelUtil.defaultEmphasis = function (opt, subOpts) {\n        if (opt) {\n            var emphasisOpt = opt.emphasis = opt.emphasis || {};\n            var normalOpt = opt.normal = opt.normal || {};\n\n            // Default emphasis option from normal\n            each(subOpts, function (subOptName) {\n                var val = zrUtil.retrieve(emphasisOpt[subOptName], normalOpt[subOptName]);\n                if (val != null) {\n                    emphasisOpt[subOptName] = val;\n                }\n            });\n        }\n    };\n\n    modelUtil.LABEL_OPTIONS = ['position', 'show', 'textStyle', 'distance', 'formatter'];\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method retieves value from data.\n     * @param {string|number|Date|Array|Object} dataItem\n     * @return {number|string|Date|Array.<number|string|Date>}\n     */\n    modelUtil.getDataItemValue = function (dataItem) {\n        // Performance sensitive.\n        return dataItem && (dataItem.value == null ? dataItem : dataItem.value);\n    };\n\n    /**\n     * data could be [12, 2323, {value: 223}, [1221, 23], {value: [2, 23]}]\n     * This helper method determine if dataItem has extra option besides value\n     * @param {string|number|Date|Array|Object} dataItem\n     */\n    modelUtil.isDataItemOption = function (dataItem) {\n        return isObject(dataItem)\n            && !(dataItem instanceof Array);\n            // // markLine data can be array\n            // && !(dataItem[0] && isObject(dataItem[0]) && !(dataItem[0] instanceof Array));\n    };\n\n    /**\n     * This helper method convert value in data.\n     * @param {string|number|Date} value\n     * @param {Object|string} [dimInfo] If string (like 'x'), dimType defaults 'number'.\n     */\n    modelUtil.converDataValue = function (value, dimInfo) {\n        // Performance sensitive.\n        var dimType = dimInfo && dimInfo.type;\n        if (dimType === 'ordinal') {\n            return value;\n        }\n\n        if (dimType === 'time' && !isFinite(value) && value != null && value !== '-') {\n            value = +nubmerUtil.parseDate(value);\n        }\n\n        // dimType defaults 'number'.\n        // If dimType is not ordinal and value is null or undefined or NaN or '-',\n        // parse to NaN.\n        return (value == null || value === '')\n            ? NaN : +value; // If string (like '-'), using '+' parse to NaN\n    };\n\n    /**\n     * Create a model proxy to be used in tooltip for edge data, markLine data, markPoint data.\n     * @param {module:echarts/data/List} data\n     * @param {Object} opt\n     * @param {string} [opt.seriesIndex]\n     * @param {Object} [opt.name]\n     * @param {Object} [opt.mainType]\n     * @param {Object} [opt.subType]\n     */\n    modelUtil.createDataFormatModel = function (data, opt) {\n        var model = new Model();\n        zrUtil.mixin(model, modelUtil.dataFormatMixin);\n        model.seriesIndex = opt.seriesIndex;\n        model.name = opt.name || '';\n        model.mainType = opt.mainType;\n        model.subType = opt.subType;\n\n        model.getData = function () {\n            return data;\n        };\n        return model;\n    };\n\n    // PENDING A little ugly\n    modelUtil.dataFormatMixin = {\n        /**\n         * Get params for formatter\n         * @param {number} dataIndex\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getDataParams: function (dataIndex, dataType) {\n            var data = this.getData(dataType);\n\n            var seriesIndex = this.seriesIndex;\n            var seriesName = this.name;\n\n            var rawValue = this.getRawValue(dataIndex, dataType);\n            var rawDataIndex = data.getRawIndex(dataIndex);\n            var name = data.getName(dataIndex, true);\n            var itemOpt = data.getRawDataItem(dataIndex);\n\n            return {\n                componentType: this.mainType,\n                componentSubType: this.subType,\n                seriesType: this.mainType === 'series' ? this.subType : null,\n                seriesIndex: seriesIndex,\n                seriesName: seriesName,\n                name: name,\n                dataIndex: rawDataIndex,\n                data: itemOpt,\n                dataType: dataType,\n                value: rawValue,\n                color: data.getItemVisual(dataIndex, 'color'),\n\n                // Param name list for mapping `a`, `b`, `c`, `d`, `e`\n                $vars: ['seriesName', 'name', 'value']\n            };\n        },\n\n        /**\n         * Format label\n         * @param {number} dataIndex\n         * @param {string} [status='normal'] 'normal' or 'emphasis'\n         * @param {string} [dataType]\n         * @param {number} [dimIndex]\n         * @return {string}\n         */\n        getFormattedLabel: function (dataIndex, status, dataType, dimIndex) {\n            status = status || 'normal';\n            var data = this.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var params = this.getDataParams(dataIndex, dataType);\n            if (dimIndex != null && (params.value instanceof Array)) {\n                params.value = params.value[dimIndex];\n            }\n\n            var formatter = itemModel.get(['label', status, 'formatter']);\n\n            if (typeof formatter === 'function') {\n                params.status = status;\n                return formatter(params);\n            }\n            else if (typeof formatter === 'string') {\n                return formatUtil.formatTpl(formatter, params);\n            }\n        },\n\n        /**\n         * Get raw value in option\n         * @param {number} idx\n         * @param {string} [dataType]\n         * @return {Object}\n         */\n        getRawValue: function (idx, dataType) {\n            var data = this.getData(dataType);\n            var dataItem = data.getRawDataItem(idx);\n            if (dataItem != null) {\n                return (isObject(dataItem) && !(dataItem instanceof Array))\n                    ? dataItem.value : dataItem;\n            }\n        },\n\n        /**\n         * Should be implemented.\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         * @return {string} tooltip string\n         */\n        formatTooltip: zrUtil.noop\n    };\n\n    /**\n     * Mapping to exists for merge.\n     *\n     * @public\n     * @param {Array.<Object>|Array.<module:echarts/model/Component>} exists\n     * @param {Object|Array.<Object>} newCptOptions\n     * @return {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          index of which is the same as exists.\n     */\n    modelUtil.mappingToExists = function (exists, newCptOptions) {\n        // Mapping by the order by original option (but not order of\n        // new option) in merge mode. Because we should ensure\n        // some specified index (like xAxisIndex) is consistent with\n        // original option, which is easy to understand, espatially in\n        // media query. And in most case, merge option is used to\n        // update partial option but not be expected to change order.\n        newCptOptions = (newCptOptions || []).slice();\n\n        var result = zrUtil.map(exists || [], function (obj, index) {\n            return {exist: obj};\n        });\n\n        // Mapping by id or name if specified.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            // id has highest priority.\n            for (var i = 0; i < result.length; i++) {\n                if (!result[i].option // Consider name: two map to one.\n                    && cptOption.id != null\n                    && result[i].exist.id === cptOption.id + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n\n            for (var i = 0; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option // Consider name: two map to one.\n                    // Can not match when both ids exist but different.\n                    && (exist.id == null || cptOption.id == null)\n                    && cptOption.name != null\n                    && !modelUtil.isIdInner(cptOption)\n                    && !modelUtil.isIdInner(exist)\n                    && exist.name === cptOption.name + ''\n                ) {\n                    result[i].option = cptOption;\n                    newCptOptions[index] = null;\n                    return;\n                }\n            }\n        });\n\n        // Otherwise mapping by index.\n        each(newCptOptions, function (cptOption, index) {\n            if (!isObject(cptOption)) {\n                return;\n            }\n\n            var i = 0;\n            for (; i < result.length; i++) {\n                var exist = result[i].exist;\n                if (!result[i].option\n                    // Existing model that already has id should be able to\n                    // mapped to (because after mapping performed model may\n                    // be assigned with a id, whish should not affect next\n                    // mapping), except those has inner id.\n                    && !modelUtil.isIdInner(exist)\n                    // Caution:\n                    // Do not overwrite id. But name can be overwritten,\n                    // because axis use name as 'show label text'.\n                    // 'exist' always has id and name and we dont\n                    // need to check it.\n                    && cptOption.id == null\n                ) {\n                    result[i].option = cptOption;\n                    break;\n                }\n            }\n\n            if (i >= result.length) {\n                result.push({option: cptOption});\n            }\n        });\n\n        return result;\n    };\n\n    /**\n     * Make id and name for mapping result (result of mappingToExists)\n     * into `keyInfo` field.\n     *\n     * @public\n     * @param {Array.<Object>} Result, like [{exist: ..., option: ...}, {}],\n     *                          which order is the same as exists.\n     * @return {Array.<Object>} The input.\n     */\n    modelUtil.makeIdAndName = function (mapResult) {\n        // We use this id to hash component models and view instances\n        // in echarts. id can be specified by user, or auto generated.\n\n        // The id generation rule ensures new view instance are able\n        // to mapped to old instance when setOption are called in\n        // no-merge mode. So we generate model id by name and plus\n        // type in view id.\n\n        // name can be duplicated among components, which is convenient\n        // to specify multi components (like series) by one name.\n\n        // Ensure that each id is distinct.\n        var idMap = {};\n\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            existCpt && (idMap[existCpt.id] = item);\n        });\n\n        each(mapResult, function (item, index) {\n            var opt = item.option;\n\n            zrUtil.assert(\n                !opt || opt.id == null || !idMap[opt.id] || idMap[opt.id] === item,\n                'id duplicates: ' + (opt && opt.id)\n            );\n\n            opt && opt.id != null && (idMap[opt.id] = item);\n            !item.keyInfo && (item.keyInfo = {});\n        });\n\n        // Make name and id.\n        each(mapResult, function (item, index) {\n            var existCpt = item.exist;\n            var opt = item.option;\n            var keyInfo = item.keyInfo;\n\n            if (!isObject(opt)) {\n                return;\n            }\n\n            // name can be overwitten. Consider case: axis.name = '20km'.\n            // But id generated by name will not be changed, which affect\n            // only in that case: setOption with 'not merge mode' and view\n            // instance will be recreated, which can be accepted.\n            keyInfo.name = opt.name != null\n                ? opt.name + ''\n                : existCpt\n                ? existCpt.name\n                : '\\0-';\n\n            if (existCpt) {\n                keyInfo.id = existCpt.id;\n            }\n            else if (opt.id != null) {\n                keyInfo.id = opt.id + '';\n            }\n            else {\n                // Consider this situatoin:\n                //  optionA: [{name: 'a'}, {name: 'a'}, {..}]\n                //  optionB [{..}, {name: 'a'}, {name: 'a'}]\n                // Series with the same name between optionA and optionB\n                // should be mapped.\n                var idNum = 0;\n                do {\n                    keyInfo.id = '\\0' + keyInfo.name + '\\0' + idNum++;\n                }\n                while (idMap[keyInfo.id]);\n            }\n\n            idMap[keyInfo.id] = item;\n        });\n    };\n\n    /**\n     * @public\n     * @param {Object} cptOption\n     * @return {boolean}\n     */\n    modelUtil.isIdInner = function (cptOption) {\n        return isObject(cptOption)\n            && cptOption.id\n            && (cptOption.id + '').indexOf('\\0_ec_\\0') === 0;\n    };\n\n    /**\n     * A helper for removing duplicate items between batchA and batchB,\n     * and in themselves, and categorize by series.\n     *\n     * @param {Array.<Object>} batchA Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @param {Array.<Object>} batchB Like: [{seriesId: 2, dataIndex: [32, 4, 5]}, ...]\n     * @return {Array.<Array.<Object>, Array.<Object>>} result: [resultBatchA, resultBatchB]\n     */\n    modelUtil.compressBatches = function (batchA, batchB) {\n        var mapA = {};\n        var mapB = {};\n\n        makeMap(batchA || [], mapA);\n        makeMap(batchB || [], mapB, mapA);\n\n        return [mapToArray(mapA), mapToArray(mapB)];\n\n        function makeMap(sourceBatch, map, otherMap) {\n            for (var i = 0, len = sourceBatch.length; i < len; i++) {\n                var seriesId = sourceBatch[i].seriesId;\n                var dataIndices = modelUtil.normalizeToArray(sourceBatch[i].dataIndex);\n                var otherDataIndices = otherMap && otherMap[seriesId];\n\n                for (var j = 0, lenj = dataIndices.length; j < lenj; j++) {\n                    var dataIndex = dataIndices[j];\n\n                    if (otherDataIndices && otherDataIndices[dataIndex]) {\n                        otherDataIndices[dataIndex] = null;\n                    }\n                    else {\n                        (map[seriesId] || (map[seriesId] = {}))[dataIndex] = 1;\n                    }\n                }\n            }\n        }\n\n        function mapToArray(map, isData) {\n            var result = [];\n            for (var i in map) {\n                if (map.hasOwnProperty(i) && map[i] != null) {\n                    if (isData) {\n                        result.push(+i);\n                    }\n                    else {\n                        var dataIndices = mapToArray(map[i], true);\n                        dataIndices.length && result.push({seriesId: i, dataIndex: dataIndices});\n                    }\n                }\n            }\n            return result;\n        }\n    };\n\n    /**\n     * @param {module:echarts/data/List} data\n     * @param {Object} payload Contains dataIndex (means rawIndex) / dataIndexInside / name\n     *                         each of which can be Array or primary type.\n     * @return {number|Array.<number>} dataIndex If not found, return undefined/null.\n     */\n    modelUtil.queryDataIndex = function (data, payload) {\n        if (payload.dataIndexInside != null) {\n            return payload.dataIndexInside;\n        }\n        else if (payload.dataIndex != null) {\n            return zrUtil.isArray(payload.dataIndex)\n                ? zrUtil.map(payload.dataIndex, function (value) {\n                    return data.indexOfRawIndex(value);\n                })\n                : data.indexOfRawIndex(payload.dataIndex);\n        }\n        else if (payload.name != null) {\n            return zrUtil.isArray(payload.name)\n                ? zrUtil.map(payload.name, function (value) {\n                    return data.indexOfName(value);\n                })\n                : data.indexOfName(payload.name);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Global} ecModel\n     * @param {string|Object} finder\n     *        If string, e.g., 'geo', means {geoIndex: 0}.\n     *        If Object, could contain some of these properties below:\n     *        {\n     *            seriesIndex, seriesId, seriesName,\n     *            geoIndex, geoId, goeName,\n     *            bmapIndex, bmapId, bmapName,\n     *            xAxisIndex, xAxisId, xAxisName,\n     *            yAxisIndex, yAxisId, yAxisName,\n     *            gridIndex, gridId, gridName,\n     *            ... (can be extended)\n     *        }\n     *        Each properties can be number|string|Array.<number>|Array.<string>\n     *        For example, a finder could be\n     *        {\n     *            seriesIndex: 3,\n     *            geoId: ['aa', 'cc'],\n     *            gridName: ['xx', 'rr']\n     *        }\n     * @param {Object} [opt]\n     * @param {string} [opt.defaultMainType]\n     * @return {Object} result like:\n     *        {\n     *            seriesModels: [seriesModel1, seriesModel2],\n     *            seriesModel: seriesModel1, // The first model\n     *            geoModels: [geoModel1, geoModel2],\n     *            geoModel: geoModel1, // The first model\n     *            ...\n     *        }\n     */\n    modelUtil.parseFinder = function (ecModel, finder, opt) {\n        if (zrUtil.isString(finder)) {\n            var obj = {};\n            obj[finder + 'Index'] = 0;\n            finder = obj;\n        }\n\n        var defaultMainType = opt && opt.defaultMainType;\n        if (defaultMainType\n            && !has(finder, defaultMainType + 'Index')\n            && !has(finder, defaultMainType + 'Id')\n            && !has(finder, defaultMainType + 'Name')\n        ) {\n            finder[defaultMainType + 'Index'] = 0;\n        }\n\n        var result = {};\n\n        each(finder, function (value, key) {\n            var value = finder[key];\n\n            // Exclude 'dataIndex' and other illgal keys.\n            if (key === 'dataIndex' || key === 'dataIndexInside') {\n                result[key] = value;\n                return;\n            }\n\n            var parsedKey = key.match(/^(\\w+)(Index|Id|Name)$/) || [];\n            var mainType = parsedKey[1];\n            var queryType = parsedKey[2];\n\n            if (!mainType || !queryType) {\n                return;\n            }\n\n            var queryParam = {mainType: mainType};\n            queryParam[queryType.toLowerCase()] = value;\n            var models = ecModel.queryComponents(queryParam);\n            result[mainType + 'Models'] = models;\n            result[mainType + 'Model'] = models[0];\n        });\n\n        return result;\n    };\n\n    function has(obj, prop) {\n        return obj && obj.hasOwnProperty(prop);\n    }\n\n    module.exports = modelUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/model.js\n// module id = 558\n// module chunks = 0","'use strict';\n/**\n * @module echarts/core/BoundingRect\n */\n\n\n    var vec2 = require('./vector');\n    var matrix = require('./matrix');\n\n    var v2ApplyTransform = vec2.applyTransform;\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    /**\n     * @alias module:echarts/core/BoundingRect\n     */\n    function BoundingRect(x, y, width, height) {\n\n        if (width < 0) {\n            x = x + width;\n            width = -width;\n        }\n        if (height < 0) {\n            y = y + height;\n            height = -height;\n        }\n\n        /**\n         * @type {number}\n         */\n        this.x = x;\n        /**\n         * @type {number}\n         */\n        this.y = y;\n        /**\n         * @type {number}\n         */\n        this.width = width;\n        /**\n         * @type {number}\n         */\n        this.height = height;\n    }\n\n    BoundingRect.prototype = {\n\n        constructor: BoundingRect,\n\n        /**\n         * @param {module:echarts/core/BoundingRect} other\n         */\n        union: function (other) {\n            var x = mathMin(other.x, this.x);\n            var y = mathMin(other.y, this.y);\n\n            this.width = mathMax(\n                    other.x + other.width,\n                    this.x + this.width\n                ) - x;\n            this.height = mathMax(\n                    other.y + other.height,\n                    this.y + this.height\n                ) - y;\n            this.x = x;\n            this.y = y;\n        },\n\n        /**\n         * @param {Array.<number>} m\n         * @methods\n         */\n        applyTransform: (function () {\n            var lt = [];\n            var rb = [];\n            var lb = [];\n            var rt = [];\n            return function (m) {\n                // In case usage like this\n                // el.getBoundingRect().applyTransform(el.transform)\n                // And element has no transform\n                if (!m) {\n                    return;\n                }\n                lt[0] = lb[0] = this.x;\n                lt[1] = rt[1] = this.y;\n                rb[0] = rt[0] = this.x + this.width;\n                rb[1] = lb[1] = this.y + this.height;\n\n                v2ApplyTransform(lt, lt, m);\n                v2ApplyTransform(rb, rb, m);\n                v2ApplyTransform(lb, lb, m);\n                v2ApplyTransform(rt, rt, m);\n\n                this.x = mathMin(lt[0], rb[0], lb[0], rt[0]);\n                this.y = mathMin(lt[1], rb[1], lb[1], rt[1]);\n                var maxX = mathMax(lt[0], rb[0], lb[0], rt[0]);\n                var maxY = mathMax(lt[1], rb[1], lb[1], rt[1]);\n                this.width = maxX - this.x;\n                this.height = maxY - this.y;\n            };\n        })(),\n\n        /**\n         * Calculate matrix of transforming from self to target rect\n         * @param  {module:zrender/core/BoundingRect} b\n         * @return {Array.<number>}\n         */\n        calculateTransform: function (b) {\n            var a = this;\n            var sx = b.width / a.width;\n            var sy = b.height / a.height;\n\n            var m = matrix.create();\n\n            // 矩阵右乘\n            matrix.translate(m, m, [-a.x, -a.y]);\n            matrix.scale(m, m, [sx, sy]);\n            matrix.translate(m, m, [b.x, b.y]);\n\n            return m;\n        },\n\n        /**\n         * @param {(module:echarts/core/BoundingRect|Object)} b\n         * @return {boolean}\n         */\n        intersect: function (b) {\n            if (!b) {\n                return false;\n            }\n\n            if (!(b instanceof BoundingRect)) {\n                // Normalize negative width/height.\n                b = BoundingRect.create(b);\n            }\n\n            var a = this;\n            var ax0 = a.x;\n            var ax1 = a.x + a.width;\n            var ay0 = a.y;\n            var ay1 = a.y + a.height;\n\n            var bx0 = b.x;\n            var bx1 = b.x + b.width;\n            var by0 = b.y;\n            var by1 = b.y + b.height;\n\n            return ! (ax1 < bx0 || bx1 < ax0 || ay1 < by0 || by1 < ay0);\n        },\n\n        contain: function (x, y) {\n            var rect = this;\n            return x >= rect.x\n                && x <= (rect.x + rect.width)\n                && y >= rect.y\n                && y <= (rect.y + rect.height);\n        },\n\n        /**\n         * @return {module:echarts/core/BoundingRect}\n         */\n        clone: function () {\n            return new BoundingRect(this.x, this.y, this.width, this.height);\n        },\n\n        /**\n         * Copy from another rect\n         */\n        copy: function (other) {\n            this.x = other.x;\n            this.y = other.y;\n            this.width = other.width;\n            this.height = other.height;\n        },\n\n        plain: function () {\n            return {\n                x: this.x,\n                y: this.y,\n                width: this.width,\n                height: this.height\n            };\n        }\n    };\n\n    /**\n     * @param {Object|module:zrender/core/BoundingRect} rect\n     * @param {number} rect.x\n     * @param {number} rect.y\n     * @param {number} rect.width\n     * @param {number} rect.height\n     * @return {module:zrender/core/BoundingRect}\n     */\n    BoundingRect.create = function (rect) {\n        return new BoundingRect(rect.x, rect.y, rect.width, rect.height);\n    };\n\n    module.exports = BoundingRect;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/BoundingRect.js\n// module id = 574\n// module chunks = 0","/**\n * @module echarts/model/Model\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazzUtil = require('../util/clazz');\n\n    /**\n     * @alias module:echarts/model/Model\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} [parentModel]\n     * @param {module:echarts/model/Global} [ecModel]\n     */\n    function Model(option, parentModel, ecModel) {\n        /**\n         * @type {module:echarts/model/Model}\n         * @readOnly\n         */\n        this.parentModel = parentModel;\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        this.ecModel = ecModel;\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        this.option = option;\n\n        // Simple optimization\n        // if (this.init) {\n        //     if (arguments.length <= 4) {\n        //         this.init(option, parentModel, ecModel, extraOpt);\n        //     }\n        //     else {\n        //         this.init.apply(this, arguments);\n        //     }\n        // }\n    }\n\n    Model.prototype = {\n\n        constructor: Model,\n\n        /**\n         * Model 的初始化函数\n         * @param {Object} option\n         */\n        init: null,\n\n        /**\n         * 从新的 Option merge\n         */\n        mergeOption: function (option) {\n            zrUtil.merge(this.option, option, true);\n        },\n\n        /**\n         * @param {string} path\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        get: function (path, ignoreParent) {\n            if (!path) {\n                return this.option;\n            }\n\n            if (typeof path === 'string') {\n                path = path.split('.');\n            }\n\n            var obj = this.option;\n            var parentModel = this.parentModel;\n            for (var i = 0; i < path.length; i++) {\n                // Ignore empty\n                if (!path[i]) {\n                    continue;\n                }\n                // obj could be number/string/... (like 0)\n                obj = (obj && typeof obj === 'object') ? obj[path[i]] : null;\n                if (obj == null) {\n                    break;\n                }\n            }\n            if (obj == null && parentModel && !ignoreParent) {\n                obj = parentModel.get(path);\n            }\n            return obj;\n        },\n\n        /**\n         * @param {string} key\n         * @param {boolean} [ignoreParent=false]\n         * @return {*}\n         */\n        getShallow: function (key, ignoreParent) {\n            var option = this.option;\n\n            var val = option == null ? option : option[key];\n            var parentModel = this.parentModel;\n            if (val == null && parentModel && !ignoreParent) {\n                val = parentModel.getShallow(key);\n            }\n            return val;\n        },\n\n        /**\n         * @param {string} path\n         * @param {module:echarts/model/Model} [parentModel]\n         * @return {module:echarts/model/Model}\n         */\n        getModel: function (path, parentModel) {\n            var obj = this.get(path, true);\n            var thisParentModel = this.parentModel;\n            var model = new Model(\n                obj, parentModel || (thisParentModel && thisParentModel.getModel(path)),\n                this.ecModel\n            );\n            return model;\n        },\n\n        /**\n         * If model has option\n         */\n        isEmpty: function () {\n            return this.option == null;\n        },\n\n        restoreData: function () {},\n\n        // Pending\n        clone: function () {\n            var Ctor = this.constructor;\n            return new Ctor(zrUtil.clone(this.option));\n        },\n\n        setReadOnly: function (properties) {\n            clazzUtil.setReadOnly(this, properties);\n        }\n    };\n\n    // Enable Model.extend.\n    clazzUtil.enableClassExtend(Model);\n\n    var mixin = zrUtil.mixin;\n    mixin(Model, require('./mixin/lineStyle'));\n    mixin(Model, require('./mixin/areaStyle'));\n    mixin(Model, require('./mixin/textStyle'));\n    mixin(Model, require('./mixin/itemStyle'));\n\n    module.exports = Model;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Model.js\n// module id = 575\n// module chunks = 0","/**\n * echarts设备环境识别\n *\n * @desc echarts基于Canvas，纯Javascript图表库，提供直观，生动，可交互，可个性化定制的数据统计图表。\n * @author firede[firede@firede.us]\n * @desc thanks zepto.\n */\n\n    var env = {};\n    if (typeof navigator === 'undefined') {\n        // In node\n        env = {\n            browser: {},\n            os: {},\n            node: true,\n            // Assume canvas is supported\n            canvasSupported: true\n        };\n    }\n    else {\n        env = detect(navigator.userAgent);\n    }\n\n    module.exports = env;\n\n    // Zepto.js\n    // (c) 2010-2013 Thomas Fuchs\n    // Zepto.js may be freely distributed under the MIT license.\n\n    function detect(ua) {\n        var os = {};\n        var browser = {};\n        // var webkit = ua.match(/Web[kK]it[\\/]{0,1}([\\d.]+)/);\n        // var android = ua.match(/(Android);?[\\s\\/]+([\\d.]+)?/);\n        // var ipad = ua.match(/(iPad).*OS\\s([\\d_]+)/);\n        // var ipod = ua.match(/(iPod)(.*OS\\s([\\d_]+))?/);\n        // var iphone = !ipad && ua.match(/(iPhone\\sOS)\\s([\\d_]+)/);\n        // var webos = ua.match(/(webOS|hpwOS)[\\s\\/]([\\d.]+)/);\n        // var touchpad = webos && ua.match(/TouchPad/);\n        // var kindle = ua.match(/Kindle\\/([\\d.]+)/);\n        // var silk = ua.match(/Silk\\/([\\d._]+)/);\n        // var blackberry = ua.match(/(BlackBerry).*Version\\/([\\d.]+)/);\n        // var bb10 = ua.match(/(BB10).*Version\\/([\\d.]+)/);\n        // var rimtabletos = ua.match(/(RIM\\sTablet\\sOS)\\s([\\d.]+)/);\n        // var playbook = ua.match(/PlayBook/);\n        // var chrome = ua.match(/Chrome\\/([\\d.]+)/) || ua.match(/CriOS\\/([\\d.]+)/);\n        var firefox = ua.match(/Firefox\\/([\\d.]+)/);\n        // var safari = webkit && ua.match(/Mobile\\//) && !chrome;\n        // var webview = ua.match(/(iPhone|iPod|iPad).*AppleWebKit(?!.*Safari)/) && !chrome;\n        var ie = ua.match(/MSIE\\s([\\d.]+)/)\n            // IE 11 Trident/7.0; rv:11.0\n            || ua.match(/Trident\\/.+?rv:(([\\d.]+))/);\n        var edge = ua.match(/Edge\\/([\\d.]+)/); // IE 12 and 12+\n\n        var weChat = (/micromessenger/i).test(ua);\n\n        // Todo: clean this up with a better OS/browser seperation:\n        // - discern (more) between multiple browsers on android\n        // - decide if kindle fire in silk mode is android or not\n        // - Firefox on Android doesn't specify the Android version\n        // - possibly devide in os, device and browser hashes\n\n        // if (browser.webkit = !!webkit) browser.version = webkit[1];\n\n        // if (android) os.android = true, os.version = android[2];\n        // if (iphone && !ipod) os.ios = os.iphone = true, os.version = iphone[2].replace(/_/g, '.');\n        // if (ipad) os.ios = os.ipad = true, os.version = ipad[2].replace(/_/g, '.');\n        // if (ipod) os.ios = os.ipod = true, os.version = ipod[3] ? ipod[3].replace(/_/g, '.') : null;\n        // if (webos) os.webos = true, os.version = webos[2];\n        // if (touchpad) os.touchpad = true;\n        // if (blackberry) os.blackberry = true, os.version = blackberry[2];\n        // if (bb10) os.bb10 = true, os.version = bb10[2];\n        // if (rimtabletos) os.rimtabletos = true, os.version = rimtabletos[2];\n        // if (playbook) browser.playbook = true;\n        // if (kindle) os.kindle = true, os.version = kindle[1];\n        // if (silk) browser.silk = true, browser.version = silk[1];\n        // if (!silk && os.android && ua.match(/Kindle Fire/)) browser.silk = true;\n        // if (chrome) browser.chrome = true, browser.version = chrome[1];\n        if (firefox) {\n            browser.firefox = true;\n            browser.version = firefox[1];\n        }\n        // if (safari && (ua.match(/Safari/) || !!os.ios)) browser.safari = true;\n        // if (webview) browser.webview = true;\n\n        if (ie) {\n            browser.ie = true;\n            browser.version = ie[1];\n        }\n\n        if (edge) {\n            browser.edge = true;\n            browser.version = edge[1];\n        }\n\n        // It is difficult to detect WeChat in Win Phone precisely, because ua can\n        // not be set on win phone. So we do not consider Win Phone.\n        if (weChat) {\n            browser.weChat = true;\n        }\n\n        // os.tablet = !!(ipad || playbook || (android && !ua.match(/Mobile/)) ||\n        //     (firefox && ua.match(/Tablet/)) || (ie && !ua.match(/Phone/) && ua.match(/Touch/)));\n        // os.phone  = !!(!os.tablet && !os.ipod && (android || iphone || webos ||\n        //     (chrome && ua.match(/Android/)) || (chrome && ua.match(/CriOS\\/([\\d.]+)/)) ||\n        //     (firefox && ua.match(/Mobile/)) || (ie && ua.match(/Touch/))));\n\n        return {\n            browser: browser,\n            os: os,\n            node: false,\n            // 原生canvas支持，改极端点了\n            // canvasSupported : !(browser.ie && parseFloat(browser.version) < 9)\n            canvasSupported : document.createElement('canvas').getContext ? true : false,\n            // @see <http://stackoverflow.com/questions/4817029/whats-the-best-way-to-detect-a-touch-screen-device-using-javascript>\n            // works on most browsers\n            // IE10/11 does not support touch event, and MS Edge supports them but not by\n            // default, so we dont check navigator.maxTouchPoints for them here.\n            touchEventsSupported: 'ontouchstart' in window && !browser.ie && !browser.edge,\n            // <http://caniuse.com/#search=pointer%20event>.\n            pointerEventsSupported: 'onpointerdown' in window\n                // Firefox supports pointer but not by default,\n                // only MS browsers are reliable on pointer events currently.\n                && (browser.edge || (browser.ie && browser.version >= 10))\n        };\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/env.js\n// module id = 576\n// module chunks = 0","/**\n * Component model\n *\n * @module echarts/model/Component\n */\n\n\n    var Model = require('./Model');\n    var zrUtil = require('zrender/lib/core/util');\n    var arrayPush = Array.prototype.push;\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var layout = require('../util/layout');\n\n    /**\n     * @alias module:echarts/model/Component\n     * @constructor\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {module:echarts/model/Model} ecModel\n     */\n    var ComponentModel = Model.extend({\n\n        type: 'component',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        id: '',\n\n        /**\n         * @readOnly\n         */\n        name: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        mainType: '',\n\n        /**\n         * @readOnly\n         * @type {string}\n         */\n        subType: '',\n\n        /**\n         * @readOnly\n         * @type {number}\n         */\n        componentIndex: 0,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * @type {module:echarts/model/Global}\n         * @readOnly\n         */\n        ecModel: null,\n\n        /**\n         * key: componentType\n         * value:  Component model list, can not be null.\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @readOnly\n         */\n        dependentModels: [],\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        uid: null,\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        $constructor: function (option, parentModel, ecModel, extraOpt) {\n            Model.call(this, option, parentModel, ecModel, extraOpt);\n\n            this.uid = componentUtil.getUID('componentModel');\n        },\n\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n            this.mergeDefaultAndTheme(option, ecModel);\n        },\n\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            var themeModel = ecModel.getTheme();\n            zrUtil.merge(option, themeModel.get(this.mainType));\n            zrUtil.merge(option, this.getDefaultOption());\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (option, extraOpt) {\n            zrUtil.merge(this.option, option, true);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, option, layoutMode);\n            }\n        },\n\n        // Hooker after init or mergeOption\n        optionUpdated: function (newCptOption, isInit) {},\n\n        getDefaultOption: function () {\n            if (!this.hasOwnProperty('__defaultOption')) {\n                var optList = [];\n                var Class = this.constructor;\n                while (Class) {\n                    var opt = Class.prototype.defaultOption;\n                    opt && optList.push(opt);\n                    Class = Class.superClass;\n                }\n\n                var defaultOption = {};\n                for (var i = optList.length - 1; i >= 0; i--) {\n                    defaultOption = zrUtil.merge(defaultOption, optList[i], true);\n                }\n                this.__defaultOption = defaultOption;\n            }\n            return this.__defaultOption;\n        },\n\n        getReferringComponents: function (mainType) {\n            return this.ecModel.queryComponents({\n                mainType: mainType,\n                index: this.get(mainType + 'Index', true),\n                id: this.get(mainType + 'Id', true)\n            });\n        }\n\n    });\n\n    // Reset ComponentModel.extend, add preConstruct.\n    // clazzUtil.enableClassExtend(\n    //     ComponentModel,\n    //     function (option, parentModel, ecModel, extraOpt) {\n    //         // Set dependentModels, componentIndex, name, id, mainType, subType.\n    //         zrUtil.extend(this, extraOpt);\n\n    //         this.uid = componentUtil.getUID('componentModel');\n\n    //         // this.setReadOnly([\n    //         //     'type', 'id', 'uid', 'name', 'mainType', 'subType',\n    //         //     'dependentModels', 'componentIndex'\n    //         // ]);\n    //     }\n    // );\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(\n        ComponentModel, {registerWhenExtend: true}\n    );\n    componentUtil.enableSubTypeDefaulter(ComponentModel);\n\n    // Add capability of ComponentModel.topologicalTravel.\n    componentUtil.enableTopologicalTravel(ComponentModel, getDependencies);\n\n    function getDependencies(componentType) {\n        var deps = [];\n        zrUtil.each(ComponentModel.getClassesByMainType(componentType), function (Clazz) {\n            arrayPush.apply(deps, Clazz.prototype.dependencies || []);\n        });\n        // Ensure main type\n        return zrUtil.map(deps, function (type) {\n            return clazzUtil.parseClassType(type).main;\n        });\n    }\n\n    zrUtil.mixin(ComponentModel, require('./mixin/boxLayout'));\n\n    module.exports = ComponentModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Component.js\n// module id = 578\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var clazz = {};\n\n    var TYPE_DELIMITER = '.';\n    var IS_CONTAINER = '___EC__COMPONENT__CONTAINER___';\n    /**\n     * @public\n     */\n    var parseClassType = clazz.parseClassType = function (componentType) {\n        var ret = {main: '', sub: ''};\n        if (componentType) {\n            componentType = componentType.split(TYPE_DELIMITER);\n            ret.main = componentType[0] || '';\n            ret.sub = componentType[1] || '';\n        }\n        return ret;\n    };\n    /**\n     * @public\n     */\n    clazz.enableClassExtend = function (RootClass, mandatoryMethods) {\n\n        RootClass.$constructor = RootClass;\n        RootClass.extend = function (proto) {\n\n            if (__DEV__) {\n                zrUtil.each(mandatoryMethods, function (method) {\n                    if (!proto[method]) {\n                        console.warn(\n                            'Method `' + method + '` should be implemented'\n                            + (proto.type ? ' in ' + proto.type : '') + '.'\n                        );\n                    }\n                });\n            }\n\n            var superClass = this;\n            var ExtendedClass = function () {\n                if (!proto.$constructor) {\n                    superClass.apply(this, arguments);\n                }\n                else {\n                    proto.$constructor.apply(this, arguments);\n                }\n            };\n\n            zrUtil.extend(ExtendedClass.prototype, proto);\n\n            ExtendedClass.extend = this.extend;\n            ExtendedClass.superCall = superCall;\n            ExtendedClass.superApply = superApply;\n            zrUtil.inherits(ExtendedClass, this);\n            ExtendedClass.superClass = superClass;\n\n            return ExtendedClass;\n        };\n    };\n\n    // superCall should have class info, which can not be fetch from 'this'.\n    // Consider this case:\n    // class A has method f,\n    // class B inherits class A, overrides method f, f call superApply('f'),\n    // class C inherits class B, do not overrides method f,\n    // then when method of class C is called, dead loop occured.\n    function superCall(context, methodName) {\n        var args = zrUtil.slice(arguments, 2);\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    function superApply(context, methodName, args) {\n        return this.superClass.prototype[methodName].apply(context, args);\n    }\n\n    /**\n     * @param {Object} entity\n     * @param {Object} options\n     * @param {boolean} [options.registerWhenExtend]\n     * @public\n     */\n    clazz.enableClassManagement = function (entity, options) {\n        options = options || {};\n\n        /**\n         * Component model classes\n         * key: componentType,\n         * value:\n         *     componentClass, when componentType is 'xxx'\n         *     or Object.<subKey, componentClass>, when componentType is 'xxx.yy'\n         * @type {Object}\n         */\n        var storage = {};\n\n        entity.registerClass = function (Clazz, componentType) {\n            if (componentType) {\n                componentType = parseClassType(componentType);\n\n                if (!componentType.sub) {\n                    if (__DEV__) {\n                        if (storage[componentType.main]) {\n                            console.warn(componentType.main + ' exists.');\n                        }\n                    }\n                    storage[componentType.main] = Clazz;\n                }\n                else if (componentType.sub !== IS_CONTAINER) {\n                    var container = makeContainer(componentType);\n                    container[componentType.sub] = Clazz;\n                }\n            }\n            return Clazz;\n        };\n\n        entity.getClass = function (componentTypeMain, subType, throwWhenNotFound) {\n            var Clazz = storage[componentTypeMain];\n\n            if (Clazz && Clazz[IS_CONTAINER]) {\n                Clazz = subType ? Clazz[subType] : null;\n            }\n\n            if (throwWhenNotFound && !Clazz) {\n                throw new Error(\n                    'Component ' + componentTypeMain + '.' + (subType || '') + ' not exists. Load it first.'\n                );\n            }\n\n            return Clazz;\n        };\n\n        entity.getClassesByMainType = function (componentType) {\n            componentType = parseClassType(componentType);\n\n            var result = [];\n            var obj = storage[componentType.main];\n\n            if (obj && obj[IS_CONTAINER]) {\n                zrUtil.each(obj, function (o, type) {\n                    type !== IS_CONTAINER && result.push(o);\n                });\n            }\n            else {\n                result.push(obj);\n            }\n\n            return result;\n        };\n\n        entity.hasClass = function (componentType) {\n            // Just consider componentType.main.\n            componentType = parseClassType(componentType);\n            return !!storage[componentType.main];\n        };\n\n        /**\n         * @return {Array.<string>} Like ['aa', 'bb'], but can not be ['aa.xx']\n         */\n        entity.getAllClassMainTypes = function () {\n            var types = [];\n            zrUtil.each(storage, function (obj, type) {\n                types.push(type);\n            });\n            return types;\n        };\n\n        /**\n         * If a main type is container and has sub types\n         * @param  {string}  mainType\n         * @return {boolean}\n         */\n        entity.hasSubTypes = function (componentType) {\n            componentType = parseClassType(componentType);\n            var obj = storage[componentType.main];\n            return obj && obj[IS_CONTAINER];\n        };\n\n        entity.parseClassType = parseClassType;\n\n        function makeContainer(componentType) {\n            var container = storage[componentType.main];\n            if (!container || !container[IS_CONTAINER]) {\n                container = storage[componentType.main] = {};\n                container[IS_CONTAINER] = true;\n            }\n            return container;\n        }\n\n        if (options.registerWhenExtend) {\n            var originalExtend = entity.extend;\n            if (originalExtend) {\n                entity.extend = function (proto) {\n                    var ExtendedClass = originalExtend.call(this, proto);\n                    return entity.registerClass(ExtendedClass, proto.type);\n                };\n            }\n        }\n\n        return entity;\n    };\n\n    /**\n     * @param {string|Array.<string>} properties\n     */\n    clazz.setReadOnly = function (obj, properties) {\n        // FIXME It seems broken in IE8 simulation of IE11\n        // if (!zrUtil.isArray(properties)) {\n        //     properties = properties != null ? [properties] : [];\n        // }\n        // zrUtil.each(properties, function (prop) {\n        //     var value = obj[prop];\n\n        //     Object.defineProperty\n        //         && Object.defineProperty(obj, prop, {\n        //             value: value, writable: false\n        //         });\n        //     zrUtil.isArray(obj[prop])\n        //         && Object.freeze\n        //         && Object.freeze(obj[prop]);\n        // });\n    };\n\n    module.exports = clazz;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/clazz.js\n// module id = 602\n// module chunks = 0","'use strict';\n// Layout helpers for each component positioning\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n    var numberUtil = require('./number');\n    var formatUtil = require('./format');\n    var parsePercent = numberUtil.parsePercent;\n    var each = zrUtil.each;\n\n    var layout = {};\n\n    var LOCATION_PARAMS = layout.LOCATION_PARAMS = [\n        'left', 'right', 'top', 'bottom', 'width', 'height'\n    ];\n\n    function boxLayout(orient, group, gap, maxWidth, maxHeight) {\n        var x = 0;\n        var y = 0;\n        if (maxWidth == null) {\n            maxWidth = Infinity;\n        }\n        if (maxHeight == null) {\n            maxHeight = Infinity;\n        }\n        var currentLineMaxSize = 0;\n        group.eachChild(function (child, idx) {\n            var position = child.position;\n            var rect = child.getBoundingRect();\n            var nextChild = group.childAt(idx + 1);\n            var nextChildRect = nextChild && nextChild.getBoundingRect();\n            var nextX;\n            var nextY;\n            if (orient === 'horizontal') {\n                var moveX = rect.width + (nextChildRect ? (-nextChildRect.x + rect.x) : 0);\n                nextX = x + moveX;\n                // Wrap when width exceeds maxWidth or meet a `newline` group\n                if (nextX > maxWidth || child.newline) {\n                    x = 0;\n                    nextX = moveX;\n                    y += currentLineMaxSize + gap;\n                    currentLineMaxSize = rect.height;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.height);\n                }\n            }\n            else {\n                var moveY = rect.height + (nextChildRect ? (-nextChildRect.y + rect.y) : 0);\n                nextY = y + moveY;\n                // Wrap when width exceeds maxHeight or meet a `newline` group\n                if (nextY > maxHeight || child.newline) {\n                    x += currentLineMaxSize + gap;\n                    y = 0;\n                    nextY = moveY;\n                    currentLineMaxSize = rect.width;\n                }\n                else {\n                    currentLineMaxSize = Math.max(currentLineMaxSize, rect.width);\n                }\n            }\n\n            if (child.newline) {\n                return;\n            }\n\n            position[0] = x;\n            position[1] = y;\n\n            orient === 'horizontal'\n                ? (x = nextX + gap)\n                : (y = nextY + gap);\n        });\n    }\n\n    /**\n     * VBox or HBox layouting\n     * @param {string} orient\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.box = boxLayout;\n\n    /**\n     * VBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.vbox = zrUtil.curry(boxLayout, 'vertical');\n\n    /**\n     * HBox layouting\n     * @param {module:zrender/container/Group} group\n     * @param {number} gap\n     * @param {number} [width=Infinity]\n     * @param {number} [height=Infinity]\n     */\n    layout.hbox = zrUtil.curry(boxLayout, 'horizontal');\n\n    /**\n     * If x or x2 is not specified or 'center' 'left' 'right',\n     * the width would be as long as possible.\n     * If y or y2 is not specified or 'middle' 'top' 'bottom',\n     * the height would be as long as possible.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.x]\n     * @param {number|string} [positionInfo.y]\n     * @param {number|string} [positionInfo.x2]\n     * @param {number|string} [positionInfo.y2]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @return {Object} {width, height}\n     */\n    layout.getAvailableSize = function (positionInfo, containerRect, margin) {\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var x = parsePercent(positionInfo.x, containerWidth);\n        var y = parsePercent(positionInfo.y, containerHeight);\n        var x2 = parsePercent(positionInfo.x2, containerWidth);\n        var y2 = parsePercent(positionInfo.y2, containerHeight);\n\n        (isNaN(x) || isNaN(parseFloat(positionInfo.x))) && (x = 0);\n        (isNaN(x2) || isNaN(parseFloat(positionInfo.x2))) && (x2 = containerWidth);\n        (isNaN(y) || isNaN(parseFloat(positionInfo.y))) && (y = 0);\n        (isNaN(y2) || isNaN(parseFloat(positionInfo.y2))) && (y2 = containerHeight);\n\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        return {\n            width: Math.max(x2 - x - margin[1] - margin[3], 0),\n            height: Math.max(y2 - y - margin[0] - margin[2], 0)\n        };\n    };\n\n    /**\n     * Parse position info.\n     *\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {number|string} [positionInfo.width]\n     * @param {number|string} [positionInfo.height]\n     * @param {number|string} [positionInfo.aspect] Aspect is width / height\n     * @param {Object} containerRect\n     * @param {string|number} [margin]\n     *\n     * @return {module:zrender/core/BoundingRect}\n     */\n    layout.getLayoutRect = function (\n        positionInfo, containerRect, margin\n    ) {\n        margin = formatUtil.normalizeCssArray(margin || 0);\n\n        var containerWidth = containerRect.width;\n        var containerHeight = containerRect.height;\n\n        var left = parsePercent(positionInfo.left, containerWidth);\n        var top = parsePercent(positionInfo.top, containerHeight);\n        var right = parsePercent(positionInfo.right, containerWidth);\n        var bottom = parsePercent(positionInfo.bottom, containerHeight);\n        var width = parsePercent(positionInfo.width, containerWidth);\n        var height = parsePercent(positionInfo.height, containerHeight);\n\n        var verticalMargin = margin[2] + margin[0];\n        var horizontalMargin = margin[1] + margin[3];\n        var aspect = positionInfo.aspect;\n\n        // If width is not specified, calculate width from left and right\n        if (isNaN(width)) {\n            width = containerWidth - right - horizontalMargin - left;\n        }\n        if (isNaN(height)) {\n            height = containerHeight - bottom - verticalMargin - top;\n        }\n\n        // If width and height are not given\n        // 1. Graph should not exceeds the container\n        // 2. Aspect must be keeped\n        // 3. Graph should take the space as more as possible\n        if (isNaN(width) && isNaN(height)) {\n            if (aspect > containerWidth / containerHeight) {\n                width = containerWidth * 0.8;\n            }\n            else {\n                height = containerHeight * 0.8;\n            }\n        }\n\n        if (aspect != null) {\n            // Calculate width or height with given aspect\n            if (isNaN(width)) {\n                width = aspect * height;\n            }\n            if (isNaN(height)) {\n                height = width / aspect;\n            }\n        }\n\n        // If left is not specified, calculate left from right and width\n        if (isNaN(left)) {\n            left = containerWidth - right - width - horizontalMargin;\n        }\n        if (isNaN(top)) {\n            top = containerHeight - bottom - height - verticalMargin;\n        }\n\n        // Align left and top\n        switch (positionInfo.left || positionInfo.right) {\n            case 'center':\n                left = containerWidth / 2 - width / 2 - margin[3];\n                break;\n            case 'right':\n                left = containerWidth - width - horizontalMargin;\n                break;\n        }\n        switch (positionInfo.top || positionInfo.bottom) {\n            case 'middle':\n            case 'center':\n                top = containerHeight / 2 - height / 2 - margin[0];\n                break;\n            case 'bottom':\n                top = containerHeight - height - verticalMargin;\n                break;\n        }\n        // If something is wrong and left, top, width, height are calculated as NaN\n        left = left || 0;\n        top = top || 0;\n        if (isNaN(width)) {\n            // Width may be NaN if only one value is given except width\n            width = containerWidth - left - (right || 0);\n        }\n        if (isNaN(height)) {\n            // Height may be NaN if only one value is given except height\n            height = containerHeight - top - (bottom || 0);\n        }\n\n        var rect = new BoundingRect(left + margin[3], top + margin[0], width, height);\n        rect.margin = margin;\n        return rect;\n    };\n\n\n    /**\n     * Position a zr element in viewport\n     *  Group position is specified by either\n     *  {left, top}, {right, bottom}\n     *  If all properties exists, right and bottom will be igonred.\n     *\n     * Logic:\n     *     1. Scale (against origin point in parent coord)\n     *     2. Rotate (against origin point in parent coord)\n     *     3. Traslate (with el.position by this method)\n     * So this method only fixes the last step 'Traslate', which does not affect\n     * scaling and rotating.\n     *\n     * If be called repeatly with the same input el, the same result will be gotten.\n     *\n     * @param {module:zrender/Element} el Should have `getBoundingRect` method.\n     * @param {Object} positionInfo\n     * @param {number|string} [positionInfo.left]\n     * @param {number|string} [positionInfo.top]\n     * @param {number|string} [positionInfo.right]\n     * @param {number|string} [positionInfo.bottom]\n     * @param {Object} containerRect\n     * @param {string|number} margin\n     * @param {Object} [opt]\n     * @param {Array.<number>} [opt.hv=[1,1]] Only horizontal or only vertical.\n     * @param {Array.<number>} [opt.boundingMode='all']\n     *        Specify how to calculate boundingRect when locating.\n     *        'all': Position the boundingRect that is transformed and uioned\n     *               both itself and its descendants.\n     *               This mode simplies confine the elements in the bounding\n     *               of their container (e.g., using 'right: 0').\n     *        'raw': Position the boundingRect that is not transformed and only itself.\n     *               This mode is useful when you want a element can overflow its\n     *               container. (Consider a rotated circle needs to be located in a corner.)\n     *               In this mode positionInfo.width/height can only be number.\n     */\n    layout.positionElement = function (el, positionInfo, containerRect, margin, opt) {\n        var h = !opt || !opt.hv || opt.hv[0];\n        var v = !opt || !opt.hv || opt.hv[1];\n        var boundingMode = opt && opt.boundingMode || 'all';\n\n        if (!h && !v) {\n            return;\n        }\n\n        var rect;\n        if (boundingMode === 'raw') {\n            rect = el.type === 'group'\n                ? new BoundingRect(0, 0, +positionInfo.width || 0, +positionInfo.height || 0)\n                : el.getBoundingRect();\n        }\n        else {\n            rect = el.getBoundingRect();\n            if (el.needLocalTransform()) {\n                var transform = el.getLocalTransform();\n                // Notice: raw rect may be inner object of el,\n                // which should not be modified.\n                rect = rect.clone();\n                rect.applyTransform(transform);\n            }\n        }\n\n        positionInfo = layout.getLayoutRect(\n            zrUtil.defaults(\n                {width: rect.width, height: rect.height},\n                positionInfo\n            ),\n            containerRect,\n            margin\n        );\n\n        // Because 'tranlate' is the last step in transform\n        // (see zrender/core/Transformable#getLocalTransfrom),\n        // we can just only modify el.position to get final result.\n        var elPos = el.position;\n        var dx = h ? positionInfo.x - rect.x : 0;\n        var dy = v ? positionInfo.y - rect.y : 0;\n\n        el.attr('position', boundingMode === 'raw' ? [dx, dy] : [elPos[0] + dx, elPos[1] + dy]);\n    };\n\n    /**\n     * Consider Case:\n     * When defulat option has {left: 0, width: 100}, and we set {right: 0}\n     * through setOption or media query, using normal zrUtil.merge will cause\n     * {right: 0} does not take effect.\n     *\n     * @example\n     * ComponentModel.extend({\n     *     init: function () {\n     *         ...\n     *         var inputPositionParams = layout.getLayoutParams(option);\n     *         this.mergeOption(inputPositionParams);\n     *     },\n     *     mergeOption: function (newOption) {\n     *         newOption && zrUtil.merge(thisOption, newOption, true);\n     *         layout.mergeLayoutParam(thisOption, newOption);\n     *     }\n     * });\n     *\n     * @param {Object} targetOption\n     * @param {Object} newOption\n     * @param {Object|string} [opt]\n     * @param {boolean} [opt.ignoreSize=false] Some component must has width and height.\n     */\n    layout.mergeLayoutParam = function (targetOption, newOption, opt) {\n        !zrUtil.isObject(opt) && (opt = {});\n        var hNames = ['width', 'left', 'right']; // Order by priority.\n        var vNames = ['height', 'top', 'bottom']; // Order by priority.\n        var hResult = merge(hNames);\n        var vResult = merge(vNames);\n\n        copy(hNames, targetOption, hResult);\n        copy(vNames, targetOption, vResult);\n\n        function merge(names) {\n            var newParams = {};\n            var newValueCount = 0;\n            var merged = {};\n            var mergedValueCount = 0;\n            var enoughParamNumber = opt.ignoreSize ? 1 : 2;\n\n            each(names, function (name) {\n                merged[name] = targetOption[name];\n            });\n            each(names, function (name) {\n                // Consider case: newOption.width is null, which is\n                // set by user for removing width setting.\n                hasProp(newOption, name) && (newParams[name] = merged[name] = newOption[name]);\n                hasValue(newParams, name) && newValueCount++;\n                hasValue(merged, name) && mergedValueCount++;\n            });\n\n            // Case: newOption: {width: ..., right: ...},\n            // or targetOption: {right: ...} and newOption: {width: ...},\n            // There is no conflict when merged only has params count\n            // little than enoughParamNumber.\n            if (mergedValueCount === enoughParamNumber || !newValueCount) {\n                return merged;\n            }\n            // Case: newOption: {width: ..., right: ...},\n            // Than we can make sure user only want those two, and ignore\n            // all origin params in targetOption.\n            else if (newValueCount >= enoughParamNumber) {\n                return newParams;\n            }\n            else {\n                // Chose another param from targetOption by priority.\n                // When 'ignoreSize', enoughParamNumber is 1 and those will not happen.\n                for (var i = 0; i < names.length; i++) {\n                    var name = names[i];\n                    if (!hasProp(newParams, name) && hasProp(targetOption, name)) {\n                        newParams[name] = targetOption[name];\n                        break;\n                    }\n                }\n                return newParams;\n            }\n        }\n\n        function hasProp(obj, name) {\n            return obj.hasOwnProperty(name);\n        }\n\n        function hasValue(obj, name) {\n            return obj[name] != null && obj[name] !== 'auto';\n        }\n\n        function copy(names, target, source) {\n            each(names, function (name) {\n                target[name] = source[name];\n            });\n        }\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.getLayoutParams = function (source) {\n        return layout.copyLayoutParams({}, source);\n    };\n\n    /**\n     * Retrieve 'left', 'right', 'top', 'bottom', 'width', 'height' from object.\n     * @param {Object} source\n     * @return {Object} Result contains those props.\n     */\n    layout.copyLayoutParams = function (target, source) {\n        source && target && each(LOCATION_PARAMS, function (name) {\n            source.hasOwnProperty(name) && (target[name] = source[name]);\n        });\n        return target;\n    };\n\n    module.exports = layout;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/layout.js\n// module id = 603\n// module chunks = 0","\n\n    var textWidthCache = {};\n    var textWidthCacheCounter = 0;\n    var TEXT_CACHE_MAX = 5000;\n\n    var util = require('../core/util');\n    var BoundingRect = require('../core/BoundingRect');\n    var retrieve = util.retrieve;\n\n    function getTextWidth(text, textFont) {\n        var key = text + ':' + textFont;\n        if (textWidthCache[key]) {\n            return textWidthCache[key];\n        }\n\n        var textLines = (text + '').split('\\n');\n        var width = 0;\n\n        for (var i = 0, l = textLines.length; i < l; i++) {\n            // measureText 可以被覆盖以兼容不支持 Canvas 的环境\n            width = Math.max(textContain.measureText(textLines[i], textFont).width, width);\n        }\n\n        if (textWidthCacheCounter > TEXT_CACHE_MAX) {\n            textWidthCacheCounter = 0;\n            textWidthCache = {};\n        }\n        textWidthCacheCounter++;\n        textWidthCache[key] = width;\n\n        return width;\n    }\n\n    function getTextRect(text, textFont, textAlign, textBaseline) {\n        var textLineLen = ((text || '') + '').split('\\n').length;\n\n        var width = getTextWidth(text, textFont);\n        // FIXME 高度计算比较粗暴\n        var lineHeight = getTextWidth('国', textFont);\n        var height = textLineLen * lineHeight;\n\n        var rect = new BoundingRect(0, 0, width, height);\n        // Text has a special line height property\n        rect.lineHeight = lineHeight;\n\n        switch (textBaseline) {\n            case 'bottom':\n            case 'alphabetic':\n                rect.y -= lineHeight;\n                break;\n            case 'middle':\n                rect.y -= lineHeight / 2;\n                break;\n            // case 'hanging':\n            // case 'top':\n        }\n\n        // FIXME Right to left language\n        switch (textAlign) {\n            case 'end':\n            case 'right':\n                rect.x -= rect.width;\n                break;\n            case 'center':\n                rect.x -= rect.width / 2;\n                break;\n            // case 'start':\n            // case 'left':\n        }\n\n        return rect;\n    }\n\n    function adjustTextPositionOnRect(textPosition, rect, textRect, distance) {\n\n        var x = rect.x;\n        var y = rect.y;\n\n        var height = rect.height;\n        var width = rect.width;\n\n        var textHeight = textRect.height;\n\n        var halfHeight = height / 2 - textHeight / 2;\n\n        var textAlign = 'left';\n\n        switch (textPosition) {\n            case 'left':\n                x -= distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'right':\n                x += distance + width;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'top':\n                x += width / 2;\n                y -= distance + textHeight;\n                textAlign = 'center';\n                break;\n            case 'bottom':\n                x += width / 2;\n                y += height + distance;\n                textAlign = 'center';\n                break;\n            case 'inside':\n                x += width / 2;\n                y += halfHeight;\n                textAlign = 'center';\n                break;\n            case 'insideLeft':\n                x += distance;\n                y += halfHeight;\n                textAlign = 'left';\n                break;\n            case 'insideRight':\n                x += width - distance;\n                y += halfHeight;\n                textAlign = 'right';\n                break;\n            case 'insideTop':\n                x += width / 2;\n                y += distance;\n                textAlign = 'center';\n                break;\n            case 'insideBottom':\n                x += width / 2;\n                y += height - textHeight - distance;\n                textAlign = 'center';\n                break;\n            case 'insideTopLeft':\n                x += distance;\n                y += distance;\n                textAlign = 'left';\n                break;\n            case 'insideTopRight':\n                x += width - distance;\n                y += distance;\n                textAlign = 'right';\n                break;\n            case 'insideBottomLeft':\n                x += distance;\n                y += height - textHeight - distance;\n                break;\n            case 'insideBottomRight':\n                x += width - distance;\n                y += height - textHeight - distance;\n                textAlign = 'right';\n                break;\n        }\n\n        return {\n            x: x,\n            y: y,\n            textAlign: textAlign,\n            textBaseline: 'top'\n        };\n    }\n\n    /**\n     * Show ellipsis if overflow.\n     *\n     * @param  {string} text\n     * @param  {string} containerWidth\n     * @param  {string} textFont\n     * @param  {number} [ellipsis='...']\n     * @param  {Object} [options]\n     * @param  {number} [options.maxIterations=3]\n     * @param  {number} [options.minChar=0] If truncate result are less\n     *                  then minChar, ellipsis will not show, which is\n     *                  better for user hint in some cases.\n     * @param  {number} [options.placeholder=''] When all truncated, use the placeholder.\n     * @return {string}\n     */\n    function truncateText(text, containerWidth, textFont, ellipsis, options) {\n        if (!containerWidth) {\n            return '';\n        }\n\n        options = options || {};\n\n        ellipsis = retrieve(ellipsis, '...');\n        var maxIterations = retrieve(options.maxIterations, 2);\n        var minChar = retrieve(options.minChar, 0);\n        // FIXME\n        // Other languages?\n        var cnCharWidth = getTextWidth('国', textFont);\n        // FIXME\n        // Consider proportional font?\n        var ascCharWidth = getTextWidth('a', textFont);\n        var placeholder = retrieve(options.placeholder, '');\n\n        // Example 1: minChar: 3, text: 'asdfzxcv', truncate result: 'asdf', but not: 'a...'.\n        // Example 2: minChar: 3, text: '维度', truncate result: '维', but not: '...'.\n        var contentWidth = containerWidth = Math.max(0, containerWidth - 1); // Reserve some gap.\n        for (var i = 0; i < minChar && contentWidth >= ascCharWidth; i++) {\n            contentWidth -= ascCharWidth;\n        }\n\n        var ellipsisWidth = getTextWidth(ellipsis);\n        if (ellipsisWidth > contentWidth) {\n            ellipsis = '';\n            ellipsisWidth = 0;\n        }\n\n        contentWidth = containerWidth - ellipsisWidth;\n\n        var textLines = (text + '').split('\\n');\n\n        for (var i = 0, len = textLines.length; i < len; i++) {\n            var textLine = textLines[i];\n            var lineWidth = getTextWidth(textLine, textFont);\n\n            if (lineWidth <= containerWidth) {\n                continue;\n            }\n\n            for (var j = 0;; j++) {\n                if (lineWidth <= contentWidth || j >= maxIterations) {\n                    textLine += ellipsis;\n                    break;\n                }\n\n                var subLength = j === 0\n                    ? estimateLength(textLine, contentWidth, ascCharWidth, cnCharWidth)\n                    : lineWidth > 0\n                    ? Math.floor(textLine.length * contentWidth / lineWidth)\n                    : 0;\n\n                textLine = textLine.substr(0, subLength);\n                lineWidth = getTextWidth(textLine, textFont);\n            }\n\n            if (textLine === '') {\n                textLine = placeholder;\n            }\n\n            textLines[i] = textLine;\n        }\n\n        return textLines.join('\\n');\n    }\n\n    function estimateLength(text, contentWidth, ascCharWidth, cnCharWidth) {\n        var width = 0;\n        var i = 0;\n        for (var len = text.length; i < len && width < contentWidth; i++) {\n            var charCode = text.charCodeAt(i);\n            width += (0 <= charCode && charCode <= 127) ? ascCharWidth : cnCharWidth;\n        }\n        return i;\n    }\n\n    var textContain = {\n\n        getWidth: getTextWidth,\n\n        getBoundingRect: getTextRect,\n\n        adjustTextPositionOnRect: adjustTextPositionOnRect,\n\n        truncateText: truncateText,\n\n        measureText: function (text, textFont) {\n            var ctx = util.getContext();\n            ctx.font = textFont || '12px sans-serif';\n            return ctx.measureText(text);\n        }\n    };\n\n    module.exports = textContain;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/text.js\n// module id = 604\n// module chunks = 0","'use strict';\n/**\n * 曲线辅助模块\n * @module zrender/core/curve\n * @author pissang(https://www.github.com/pissang)\n */\n\n\n    var vec2 = require('./vector');\n    var v2Create = vec2.create;\n    var v2DistSquare = vec2.distSquare;\n    var mathPow = Math.pow;\n    var mathSqrt = Math.sqrt;\n\n    var EPSILON = 1e-8;\n    var EPSILON_NUMERIC = 1e-4;\n\n    var THREE_SQRT = mathSqrt(3);\n    var ONE_THIRD = 1 / 3;\n\n    // 临时变量\n    var _v0 = v2Create();\n    var _v1 = v2Create();\n    var _v2 = v2Create();\n    // var _v3 = vec2.create();\n\n    function isAroundZero(val) {\n        return val > -EPSILON && val < EPSILON;\n    }\n    function isNotAroundZero(val) {\n        return val > EPSILON || val < -EPSILON;\n    }\n    /**\n     * 计算三次贝塞尔值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return onet * onet * (onet * p0 + 3 * t * p1)\n             + t * t * (t * p3 + 3 * onet * p2);\n    }\n\n    /**\n     * 计算三次贝塞尔导数值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @return {number}\n     */\n    function cubicDerivativeAt(p0, p1, p2, p3, t) {\n        var onet = 1 - t;\n        return 3 * (\n            ((p1 - p0) * onet + 2 * (p2 - p1) * t) * onet\n            + (p3 - p2) * t * t\n        );\n    }\n\n    /**\n     * 计算三次贝塞尔方程根，使用盛金公式\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} val\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function cubicRootAt(p0, p1, p2, p3, val, roots) {\n        // Evaluate roots of cubic functions\n        var a = p3 + 3 * (p1 - p2) - p0;\n        var b = 3 * (p2 - p1 * 2 + p0);\n        var c = 3 * (p1  - p0);\n        var d = p0 - val;\n\n        var A = b * b - 3 * a * c;\n        var B = b * c - 9 * a * d;\n        var C = c * c - 3 * b * d;\n\n        var n = 0;\n\n        if (isAroundZero(A) && isAroundZero(B)) {\n            if (isAroundZero(b)) {\n                roots[0] = 0;\n            }\n            else {\n                var t1 = -c / b;  //t1, t2, t3, b is not zero\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = B * B - 4 * A * C;\n\n            if (isAroundZero(disc)) {\n                var K = B / A;\n                var t1 = -b / a + K;  // t1, a is not zero\n                var t2 = -K / 2;  // t2, t3\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var Y1 = A * b + 1.5 * a * (-B + discSqrt);\n                var Y2 = A * b + 1.5 * a * (-B - discSqrt);\n                if (Y1 < 0) {\n                    Y1 = -mathPow(-Y1, ONE_THIRD);\n                }\n                else {\n                    Y1 = mathPow(Y1, ONE_THIRD);\n                }\n                if (Y2 < 0) {\n                    Y2 = -mathPow(-Y2, ONE_THIRD);\n                }\n                else {\n                    Y2 = mathPow(Y2, ONE_THIRD);\n                }\n                var t1 = (-b - (Y1 + Y2)) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else {\n                var T = (2 * A * b - 3 * a * B) / (2 * mathSqrt(A * A * A));\n                var theta = Math.acos(T) / 3;\n                var ASqrt = mathSqrt(A);\n                var tmp = Math.cos(theta);\n\n                var t1 = (-b - 2 * ASqrt * tmp) / (3 * a);\n                var t2 = (-b + ASqrt * (tmp + THREE_SQRT * Math.sin(theta))) / (3 * a);\n                var t3 = (-b + ASqrt * (tmp - THREE_SQRT * Math.sin(theta))) / (3 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n                if (t3 >= 0 && t3 <= 1) {\n                    roots[n++] = t3;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算三次贝塞尔方程极限值的位置\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {Array.<number>} extrema\n     * @return {number} 有效数目\n     */\n    function cubicExtrema(p0, p1, p2, p3, extrema) {\n        var b = 6 * p2 - 12 * p1 + 6 * p0;\n        var a = 9 * p1 + 3 * p3 - 3 * p0 - 9 * p2;\n        var c = 3 * p1 - 3 * p0;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <=1) {\n                    extrema[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                extrema[0] = -b / (2 * a);\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    extrema[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    extrema[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 细分三次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function cubicSubdivide(p0, p1, p2, p3, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p23 = (p3 - p2) * t + p2;\n\n        var p012 = (p12 - p01) * t + p01;\n        var p123 = (p23 - p12) * t + p12;\n\n        var p0123 = (p123 - p012) * t + p012;\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n        out[3] = p0123;\n        // Seg1\n        out[4] = p0123;\n        out[5] = p123;\n        out[6] = p23;\n        out[7] = p3;\n    }\n\n    /**\n     * 投射点到三次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x3\n     * @param {number} y3\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} [out] 投射点\n     * @return {number}\n     */\n    function cubicProjectPoint(\n        x0, y0, x1, y1, x2, y2, x3, y3,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n        var prev;\n        var next;\n        var d1;\n        var d2;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = cubicAt(x0, x1, x2, x3, _t);\n            _v1[1] = cubicAt(y0, y1, y2, y3, _t);\n            d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            prev = t - interval;\n            next = t + interval;\n            // t - interval\n            _v1[0] = cubicAt(x0, x1, x2, x3, prev);\n            _v1[1] = cubicAt(y0, y1, y2, y3, prev);\n\n            d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = cubicAt(x0, x1, x2, x3, next);\n                _v2[1] = cubicAt(y0, y1, y2, y3, next);\n                d2 = v2DistSquare(_v2, _v0);\n\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = cubicAt(x0, x1, x2, x3, t);\n            out[1] = cubicAt(y0, y1, y2, y3, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    /**\n     * 计算二次方贝塞尔值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticAt(p0, p1, p2, t) {\n        var onet = 1 - t;\n        return onet * (onet * p0 + 2 * t * p1) + t * t * p2;\n    }\n\n    /**\n     * 计算二次方贝塞尔导数值\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @return {number}\n     */\n    function quadraticDerivativeAt(p0, p1, p2, t) {\n        return 2 * ((1 - t) * (p1 - p0) + t * (p2 - p1));\n    }\n\n    /**\n     * 计算二次方贝塞尔方程根\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} roots\n     * @return {number} 有效根数目\n     */\n    function quadraticRootAt(p0, p1, p2, val, roots) {\n        var a = p0 - 2 * p1 + p2;\n        var b = 2 * (p1 - p0);\n        var c = p0 - val;\n\n        var n = 0;\n        if (isAroundZero(a)) {\n            if (isNotAroundZero(b)) {\n                var t1 = -c / b;\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n        }\n        else {\n            var disc = b * b - 4 * a * c;\n            if (isAroundZero(disc)) {\n                var t1 = -b / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n            }\n            else if (disc > 0) {\n                var discSqrt = mathSqrt(disc);\n                var t1 = (-b + discSqrt) / (2 * a);\n                var t2 = (-b - discSqrt) / (2 * a);\n                if (t1 >= 0 && t1 <= 1) {\n                    roots[n++] = t1;\n                }\n                if (t2 >= 0 && t2 <= 1) {\n                    roots[n++] = t2;\n                }\n            }\n        }\n        return n;\n    }\n\n    /**\n     * 计算二次贝塞尔方程极限值\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @return {number}\n     */\n    function quadraticExtremum(p0, p1, p2) {\n        var divider = p0 + p2 - 2 * p1;\n        if (divider === 0) {\n            // p1 is center of p0 and p2\n            return 0.5;\n        }\n        else {\n            return (p0 - p1) / divider;\n        }\n    }\n\n    /**\n     * 细分二次贝塞尔曲线\n     * @memberOf module:zrender/core/curve\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} t\n     * @param  {Array.<number>} out\n     */\n    function quadraticSubdivide(p0, p1, p2, t, out) {\n        var p01 = (p1 - p0) * t + p0;\n        var p12 = (p2 - p1) * t + p1;\n        var p012 = (p12 - p01) * t + p01;\n\n        // Seg0\n        out[0] = p0;\n        out[1] = p01;\n        out[2] = p012;\n\n        // Seg1\n        out[3] = p012;\n        out[4] = p12;\n        out[5] = p2;\n    }\n\n    /**\n     * 投射点到二次贝塞尔曲线上，返回投射距离。\n     * 投射点有可能会有一个或者多个，这里只返回其中距离最短的一个。\n     * @param {number} x0\n     * @param {number} y0\n     * @param {number} x1\n     * @param {number} y1\n     * @param {number} x2\n     * @param {number} y2\n     * @param {number} x\n     * @param {number} y\n     * @param {Array.<number>} out 投射点\n     * @return {number}\n     */\n    function quadraticProjectPoint(\n        x0, y0, x1, y1, x2, y2,\n        x, y, out\n    ) {\n        // http://pomax.github.io/bezierinfo/#projections\n        var t;\n        var interval = 0.005;\n        var d = Infinity;\n\n        _v0[0] = x;\n        _v0[1] = y;\n\n        // 先粗略估计一下可能的最小距离的 t 值\n        // PENDING\n        for (var _t = 0; _t < 1; _t += 0.05) {\n            _v1[0] = quadraticAt(x0, x1, x2, _t);\n            _v1[1] = quadraticAt(y0, y1, y2, _t);\n            var d1 = v2DistSquare(_v0, _v1);\n            if (d1 < d) {\n                t = _t;\n                d = d1;\n            }\n        }\n        d = Infinity;\n\n        // At most 32 iteration\n        for (var i = 0; i < 32; i++) {\n            if (interval < EPSILON_NUMERIC) {\n                break;\n            }\n            var prev = t - interval;\n            var next = t + interval;\n            // t - interval\n            _v1[0] = quadraticAt(x0, x1, x2, prev);\n            _v1[1] = quadraticAt(y0, y1, y2, prev);\n\n            var d1 = v2DistSquare(_v1, _v0);\n\n            if (prev >= 0 && d1 < d) {\n                t = prev;\n                d = d1;\n            }\n            else {\n                // t + interval\n                _v2[0] = quadraticAt(x0, x1, x2, next);\n                _v2[1] = quadraticAt(y0, y1, y2, next);\n                var d2 = v2DistSquare(_v2, _v0);\n                if (next <= 1 && d2 < d) {\n                    t = next;\n                    d = d2;\n                }\n                else {\n                    interval *= 0.5;\n                }\n            }\n        }\n        // t\n        if (out) {\n            out[0] = quadraticAt(x0, x1, x2, t);\n            out[1] = quadraticAt(y0, y1, y2, t);\n        }\n        // console.log(interval, i);\n        return mathSqrt(d);\n    }\n\n    module.exports = {\n\n        cubicAt: cubicAt,\n\n        cubicDerivativeAt: cubicDerivativeAt,\n\n        cubicRootAt: cubicRootAt,\n\n        cubicExtrema: cubicExtrema,\n\n        cubicSubdivide: cubicSubdivide,\n\n        cubicProjectPoint: cubicProjectPoint,\n\n        quadraticAt: quadraticAt,\n\n        quadraticDerivativeAt: quadraticDerivativeAt,\n\n        quadraticRootAt: quadraticRootAt,\n\n        quadraticExtremum: quadraticExtremum,\n\n        quadraticSubdivide: quadraticSubdivide,\n\n        quadraticProjectPoint: quadraticProjectPoint\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/curve.js\n// module id = 605\n// module chunks = 0","\n    var ArrayCtor = typeof Float32Array === 'undefined'\n        ? Array\n        : Float32Array;\n    /**\n     * 3x2矩阵操作类\n     * @exports zrender/tool/matrix\n     */\n    var matrix = {\n        /**\n         * 创建一个单位矩阵\n         * @return {Float32Array|Array.<number>}\n         */\n        create : function() {\n            var out = new ArrayCtor(6);\n            matrix.identity(out);\n\n            return out;\n        },\n        /**\n         * 设置矩阵为单位矩阵\n         * @param {Float32Array|Array.<number>} out\n         */\n        identity : function(out) {\n            out[0] = 1;\n            out[1] = 0;\n            out[2] = 0;\n            out[3] = 1;\n            out[4] = 0;\n            out[5] = 0;\n            return out;\n        },\n        /**\n         * 复制矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m\n         */\n        copy: function(out, m) {\n            out[0] = m[0];\n            out[1] = m[1];\n            out[2] = m[2];\n            out[3] = m[3];\n            out[4] = m[4];\n            out[5] = m[5];\n            return out;\n        },\n        /**\n         * 矩阵相乘\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} m1\n         * @param {Float32Array|Array.<number>} m2\n         */\n        mul : function (out, m1, m2) {\n            // Consider matrix.mul(m, m2, m);\n            // where out is the same as m2.\n            // So use temp variable to escape error.\n            var out0 = m1[0] * m2[0] + m1[2] * m2[1];\n            var out1 = m1[1] * m2[0] + m1[3] * m2[1];\n            var out2 = m1[0] * m2[2] + m1[2] * m2[3];\n            var out3 = m1[1] * m2[2] + m1[3] * m2[3];\n            var out4 = m1[0] * m2[4] + m1[2] * m2[5] + m1[4];\n            var out5 = m1[1] * m2[4] + m1[3] * m2[5] + m1[5];\n            out[0] = out0;\n            out[1] = out1;\n            out[2] = out2;\n            out[3] = out3;\n            out[4] = out4;\n            out[5] = out5;\n            return out;\n        },\n        /**\n         * 平移变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        translate : function(out, a, v) {\n            out[0] = a[0];\n            out[1] = a[1];\n            out[2] = a[2];\n            out[3] = a[3];\n            out[4] = a[4] + v[0];\n            out[5] = a[5] + v[1];\n            return out;\n        },\n        /**\n         * 旋转变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {number} rad\n         */\n        rotate : function(out, a, rad) {\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n            var st = Math.sin(rad);\n            var ct = Math.cos(rad);\n\n            out[0] = aa * ct + ab * st;\n            out[1] = -aa * st + ab * ct;\n            out[2] = ac * ct + ad * st;\n            out[3] = -ac * st + ct * ad;\n            out[4] = ct * atx + st * aty;\n            out[5] = ct * aty - st * atx;\n            return out;\n        },\n        /**\n         * 缩放变换\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         * @param {Float32Array|Array.<number>} v\n         */\n        scale : function(out, a, v) {\n            var vx = v[0];\n            var vy = v[1];\n            out[0] = a[0] * vx;\n            out[1] = a[1] * vy;\n            out[2] = a[2] * vx;\n            out[3] = a[3] * vy;\n            out[4] = a[4] * vx;\n            out[5] = a[5] * vy;\n            return out;\n        },\n        /**\n         * 求逆矩阵\n         * @param {Float32Array|Array.<number>} out\n         * @param {Float32Array|Array.<number>} a\n         */\n        invert : function(out, a) {\n\n            var aa = a[0];\n            var ac = a[2];\n            var atx = a[4];\n            var ab = a[1];\n            var ad = a[3];\n            var aty = a[5];\n\n            var det = aa * ad - ab * ac;\n            if (!det) {\n                return null;\n            }\n            det = 1.0 / det;\n\n            out[0] = ad * det;\n            out[1] = -ab * det;\n            out[2] = -ac * det;\n            out[3] = aa * det;\n            out[4] = (ac * aty - ad * atx) * det;\n            out[5] = (ab * atx - aa * aty) * det;\n            return out;\n        }\n    };\n\n    module.exports = matrix;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/matrix.js\n// module id = 612\n// module chunks = 0","/**\n * 事件扩展\n * @module zrender/mixin/Eventful\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n *         pissang (https://www.github.com/pissang)\n */\n\n\n    var arrySlice = Array.prototype.slice;\n\n    /**\n     * 事件分发器\n     * @alias module:zrender/mixin/Eventful\n     * @constructor\n     */\n    var Eventful = function () {\n        this._$handlers = {};\n    };\n\n    Eventful.prototype = {\n\n        constructor: Eventful,\n\n        /**\n         * 单次触发绑定，trigger后销毁\n         *\n         * @param {string} event 事件名\n         * @param {Function} handler 响应函数\n         * @param {Object} context\n         */\n        one: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: true,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 绑定事件\n         * @param {string} event 事件名\n         * @param {Function} handler 事件处理函数\n         * @param {Object} [context]\n         */\n        on: function (event, handler, context) {\n            var _h = this._$handlers;\n\n            if (!handler || !event) {\n                return this;\n            }\n\n            if (!_h[event]) {\n                _h[event] = [];\n            }\n\n            for (var i = 0; i < _h[event].length; i++) {\n                if (_h[event][i].h === handler) {\n                    return this;\n                }\n            }\n\n            _h[event].push({\n                h: handler,\n                one: false,\n                ctx: context || this\n            });\n\n            return this;\n        },\n\n        /**\n         * 是否绑定了事件\n         * @param  {string}  event\n         * @return {boolean}\n         */\n        isSilent: function (event) {\n            var _h = this._$handlers;\n            return _h[event] && _h[event].length;\n        },\n\n        /**\n         * 解绑事件\n         * @param {string} event 事件名\n         * @param {Function} [handler] 事件处理函数\n         */\n        off: function (event, handler) {\n            var _h = this._$handlers;\n\n            if (!event) {\n                this._$handlers = {};\n                return this;\n            }\n\n            if (handler) {\n                if (_h[event]) {\n                    var newList = [];\n                    for (var i = 0, l = _h[event].length; i < l; i++) {\n                        if (_h[event][i]['h'] != handler) {\n                            newList.push(_h[event][i]);\n                        }\n                    }\n                    _h[event] = newList;\n                }\n\n                if (_h[event] && _h[event].length === 0) {\n                    delete _h[event];\n                }\n            }\n            else {\n                delete _h[event];\n            }\n\n            return this;\n        },\n\n        /**\n         * 事件分发\n         *\n         * @param {string} type 事件类型\n         */\n        trigger: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 3) {\n                    args = arrySlice.call(args, 1);\n                }\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(_h[i]['ctx']);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(_h[i]['ctx'], args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(_h[i]['ctx'], args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        },\n\n        /**\n         * 带有context的事件分发, 最后一个参数是事件回调的context\n         * @param {string} type 事件类型\n         */\n        triggerWithContext: function (type) {\n            if (this._$handlers[type]) {\n                var args = arguments;\n                var argLen = args.length;\n\n                if (argLen > 4) {\n                    args = arrySlice.call(args, 1, args.length - 1);\n                }\n                var ctx = args[args.length - 1];\n\n                var _h = this._$handlers[type];\n                var len = _h.length;\n                for (var i = 0; i < len;) {\n                    // Optimize advise from backbone\n                    switch (argLen) {\n                        case 1:\n                            _h[i]['h'].call(ctx);\n                            break;\n                        case 2:\n                            _h[i]['h'].call(ctx, args[1]);\n                            break;\n                        case 3:\n                            _h[i]['h'].call(ctx, args[1], args[2]);\n                            break;\n                        default:\n                            // have more than 2 given arguments\n                            _h[i]['h'].apply(ctx, args);\n                            break;\n                    }\n\n                    if (_h[i]['one']) {\n                        _h.splice(i, 1);\n                        len--;\n                    }\n                    else {\n                        i++;\n                    }\n                }\n            }\n\n            return this;\n        }\n    };\n\n    // 对象可以通过 onxxxx 绑定事件\n    /**\n     * @event module:zrender/mixin/Eventful#onclick\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseout\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousemove\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousewheel\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmousedown\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#onmouseup\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrag\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragstart\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragend\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragenter\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragleave\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondragover\n     * @type {Function}\n     * @default null\n     */\n    /**\n     * @event module:zrender/mixin/Eventful#ondrop\n     * @type {Function}\n     * @default null\n     */\n\n    module.exports = Eventful;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/mixin/Eventful.js\n// module id = 613\n// module chunks = 0","/**\n * @module zrender/tool/color\n */\n\n\n    var kCSSColorTable = {\n        'transparent': [0,0,0,0], 'aliceblue': [240,248,255,1],\n        'antiquewhite': [250,235,215,1], 'aqua': [0,255,255,1],\n        'aquamarine': [127,255,212,1], 'azure': [240,255,255,1],\n        'beige': [245,245,220,1], 'bisque': [255,228,196,1],\n        'black': [0,0,0,1], 'blanchedalmond': [255,235,205,1],\n        'blue': [0,0,255,1], 'blueviolet': [138,43,226,1],\n        'brown': [165,42,42,1], 'burlywood': [222,184,135,1],\n        'cadetblue': [95,158,160,1], 'chartreuse': [127,255,0,1],\n        'chocolate': [210,105,30,1], 'coral': [255,127,80,1],\n        'cornflowerblue': [100,149,237,1], 'cornsilk': [255,248,220,1],\n        'crimson': [220,20,60,1], 'cyan': [0,255,255,1],\n        'darkblue': [0,0,139,1], 'darkcyan': [0,139,139,1],\n        'darkgoldenrod': [184,134,11,1], 'darkgray': [169,169,169,1],\n        'darkgreen': [0,100,0,1], 'darkgrey': [169,169,169,1],\n        'darkkhaki': [189,183,107,1], 'darkmagenta': [139,0,139,1],\n        'darkolivegreen': [85,107,47,1], 'darkorange': [255,140,0,1],\n        'darkorchid': [153,50,204,1], 'darkred': [139,0,0,1],\n        'darksalmon': [233,150,122,1], 'darkseagreen': [143,188,143,1],\n        'darkslateblue': [72,61,139,1], 'darkslategray': [47,79,79,1],\n        'darkslategrey': [47,79,79,1], 'darkturquoise': [0,206,209,1],\n        'darkviolet': [148,0,211,1], 'deeppink': [255,20,147,1],\n        'deepskyblue': [0,191,255,1], 'dimgray': [105,105,105,1],\n        'dimgrey': [105,105,105,1], 'dodgerblue': [30,144,255,1],\n        'firebrick': [178,34,34,1], 'floralwhite': [255,250,240,1],\n        'forestgreen': [34,139,34,1], 'fuchsia': [255,0,255,1],\n        'gainsboro': [220,220,220,1], 'ghostwhite': [248,248,255,1],\n        'gold': [255,215,0,1], 'goldenrod': [218,165,32,1],\n        'gray': [128,128,128,1], 'green': [0,128,0,1],\n        'greenyellow': [173,255,47,1], 'grey': [128,128,128,1],\n        'honeydew': [240,255,240,1], 'hotpink': [255,105,180,1],\n        'indianred': [205,92,92,1], 'indigo': [75,0,130,1],\n        'ivory': [255,255,240,1], 'khaki': [240,230,140,1],\n        'lavender': [230,230,250,1], 'lavenderblush': [255,240,245,1],\n        'lawngreen': [124,252,0,1], 'lemonchiffon': [255,250,205,1],\n        'lightblue': [173,216,230,1], 'lightcoral': [240,128,128,1],\n        'lightcyan': [224,255,255,1], 'lightgoldenrodyellow': [250,250,210,1],\n        'lightgray': [211,211,211,1], 'lightgreen': [144,238,144,1],\n        'lightgrey': [211,211,211,1], 'lightpink': [255,182,193,1],\n        'lightsalmon': [255,160,122,1], 'lightseagreen': [32,178,170,1],\n        'lightskyblue': [135,206,250,1], 'lightslategray': [119,136,153,1],\n        'lightslategrey': [119,136,153,1], 'lightsteelblue': [176,196,222,1],\n        'lightyellow': [255,255,224,1], 'lime': [0,255,0,1],\n        'limegreen': [50,205,50,1], 'linen': [250,240,230,1],\n        'magenta': [255,0,255,1], 'maroon': [128,0,0,1],\n        'mediumaquamarine': [102,205,170,1], 'mediumblue': [0,0,205,1],\n        'mediumorchid': [186,85,211,1], 'mediumpurple': [147,112,219,1],\n        'mediumseagreen': [60,179,113,1], 'mediumslateblue': [123,104,238,1],\n        'mediumspringgreen': [0,250,154,1], 'mediumturquoise': [72,209,204,1],\n        'mediumvioletred': [199,21,133,1], 'midnightblue': [25,25,112,1],\n        'mintcream': [245,255,250,1], 'mistyrose': [255,228,225,1],\n        'moccasin': [255,228,181,1], 'navajowhite': [255,222,173,1],\n        'navy': [0,0,128,1], 'oldlace': [253,245,230,1],\n        'olive': [128,128,0,1], 'olivedrab': [107,142,35,1],\n        'orange': [255,165,0,1], 'orangered': [255,69,0,1],\n        'orchid': [218,112,214,1], 'palegoldenrod': [238,232,170,1],\n        'palegreen': [152,251,152,1], 'paleturquoise': [175,238,238,1],\n        'palevioletred': [219,112,147,1], 'papayawhip': [255,239,213,1],\n        'peachpuff': [255,218,185,1], 'peru': [205,133,63,1],\n        'pink': [255,192,203,1], 'plum': [221,160,221,1],\n        'powderblue': [176,224,230,1], 'purple': [128,0,128,1],\n        'red': [255,0,0,1], 'rosybrown': [188,143,143,1],\n        'royalblue': [65,105,225,1], 'saddlebrown': [139,69,19,1],\n        'salmon': [250,128,114,1], 'sandybrown': [244,164,96,1],\n        'seagreen': [46,139,87,1], 'seashell': [255,245,238,1],\n        'sienna': [160,82,45,1], 'silver': [192,192,192,1],\n        'skyblue': [135,206,235,1], 'slateblue': [106,90,205,1],\n        'slategray': [112,128,144,1], 'slategrey': [112,128,144,1],\n        'snow': [255,250,250,1], 'springgreen': [0,255,127,1],\n        'steelblue': [70,130,180,1], 'tan': [210,180,140,1],\n        'teal': [0,128,128,1], 'thistle': [216,191,216,1],\n        'tomato': [255,99,71,1], 'turquoise': [64,224,208,1],\n        'violet': [238,130,238,1], 'wheat': [245,222,179,1],\n        'white': [255,255,255,1], 'whitesmoke': [245,245,245,1],\n        'yellow': [255,255,0,1], 'yellowgreen': [154,205,50,1]\n    };\n\n    function clampCssByte(i) {  // Clamp to integer 0 .. 255.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 255 ? 255 : i;\n    }\n\n    function clampCssAngle(i) {  // Clamp to integer 0 .. 360.\n        i = Math.round(i);  // Seems to be what Chrome does (vs truncation).\n        return i < 0 ? 0 : i > 360 ? 360 : i;\n    }\n\n    function clampCssFloat(f) {  // Clamp to float 0.0 .. 1.0.\n        return f < 0 ? 0 : f > 1 ? 1 : f;\n    }\n\n    function parseCssInt(str) {  // int or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssByte(parseFloat(str) / 100 * 255);\n        }\n        return clampCssByte(parseInt(str, 10));\n    }\n\n    function parseCssFloat(str) {  // float or percentage.\n        if (str.length && str.charAt(str.length - 1) === '%') {\n            return clampCssFloat(parseFloat(str) / 100);\n        }\n        return clampCssFloat(parseFloat(str));\n    }\n\n    function cssHueToRgb(m1, m2, h) {\n        if (h < 0) {\n            h += 1;\n        }\n        else if (h > 1) {\n            h -= 1;\n        }\n\n        if (h * 6 < 1) {\n            return m1 + (m2 - m1) * h * 6;\n        }\n        if (h * 2 < 1) {\n            return m2;\n        }\n        if (h * 3 < 2) {\n            return m1 + (m2 - m1) * (2/3 - h) * 6;\n        }\n        return m1;\n    }\n\n    function lerp(a, b, p) {\n        return a + (b - a) * p;\n    }\n\n    /**\n     * @param {string} colorStr\n     * @return {Array.<number>}\n     * @memberOf module:zrender/util/color\n     */\n    function parse(colorStr) {\n        if (!colorStr) {\n            return;\n        }\n        // colorStr may be not string\n        colorStr = colorStr + '';\n        // Remove all whitespace, not compliant, but should just be more accepting.\n        var str = colorStr.replace(/ /g, '').toLowerCase();\n\n        // Color keywords (and transparent) lookup.\n        if (str in kCSSColorTable) {\n            return kCSSColorTable[str].slice();  // dup.\n        }\n\n        // #abc and #abc123 syntax.\n        if (str.charAt(0) === '#') {\n            if (str.length === 4) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xfff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    ((iv & 0xf00) >> 4) | ((iv & 0xf00) >> 8),\n                    (iv & 0xf0) | ((iv & 0xf0) >> 4),\n                    (iv & 0xf) | ((iv & 0xf) << 4),\n                    1\n                ];\n            }\n            else if (str.length === 7) {\n                var iv = parseInt(str.substr(1), 16);  // TODO(deanm): Stricter parsing.\n                if (!(iv >= 0 && iv <= 0xffffff)) {\n                    return;  // Covers NaN.\n                }\n                return [\n                    (iv & 0xff0000) >> 16,\n                    (iv & 0xff00) >> 8,\n                    iv & 0xff,\n                    1\n                ];\n            }\n\n            return;\n        }\n        var op = str.indexOf('('), ep = str.indexOf(')');\n        if (op !== -1 && ep + 1 === str.length) {\n            var fname = str.substr(0, op);\n            var params = str.substr(op + 1, ep - (op + 1)).split(',');\n            var alpha = 1;  // To allow case fallthrough.\n            switch (fname) {\n                case 'rgba':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    alpha = parseCssFloat(params.pop()); // jshint ignore:line\n                // Fall through.\n                case 'rgb':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return [\n                        parseCssInt(params[0]),\n                        parseCssInt(params[1]),\n                        parseCssInt(params[2]),\n                        alpha\n                    ];\n                case 'hsla':\n                    if (params.length !== 4) {\n                        return;\n                    }\n                    params[3] = parseCssFloat(params[3]);\n                    return hsla2rgba(params);\n                case 'hsl':\n                    if (params.length !== 3) {\n                        return;\n                    }\n                    return hsla2rgba(params);\n                default:\n                    return;\n            }\n        }\n\n        return;\n    }\n\n    /**\n     * @param {Array.<number>} hsla\n     * @return {Array.<number>} rgba\n     */\n    function hsla2rgba(hsla) {\n        var h = (((parseFloat(hsla[0]) % 360) + 360) % 360) / 360;  // 0 .. 1\n        // NOTE(deanm): According to the CSS spec s/l should only be\n        // percentages, but we don't bother and let float or percentage.\n        var s = parseCssFloat(hsla[1]);\n        var l = parseCssFloat(hsla[2]);\n        var m2 = l <= 0.5 ? l * (s + 1) : l + s - l * s;\n        var m1 = l * 2 - m2;\n\n        var rgba = [\n            clampCssByte(cssHueToRgb(m1, m2, h + 1 / 3) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h) * 255),\n            clampCssByte(cssHueToRgb(m1, m2, h - 1 / 3) * 255)\n        ];\n\n        if (hsla.length === 4) {\n            rgba[3] = hsla[3];\n        }\n\n        return rgba;\n    }\n\n    /**\n     * @param {Array.<number>} rgba\n     * @return {Array.<number>} hsla\n     */\n    function rgba2hsla(rgba) {\n        if (!rgba) {\n            return;\n        }\n\n        // RGB from 0 to 255\n        var R = rgba[0] / 255;\n        var G = rgba[1] / 255;\n        var B = rgba[2] / 255;\n\n        var vMin = Math.min(R, G, B); // Min. value of RGB\n        var vMax = Math.max(R, G, B); // Max. value of RGB\n        var delta = vMax - vMin; // Delta RGB value\n\n        var L = (vMax + vMin) / 2;\n        var H;\n        var S;\n        // HSL results from 0 to 1\n        if (delta === 0) {\n            H = 0;\n            S = 0;\n        }\n        else {\n            if (L < 0.5) {\n                S = delta / (vMax + vMin);\n            }\n            else {\n                S = delta / (2 - vMax - vMin);\n            }\n\n            var deltaR = (((vMax - R) / 6) + (delta / 2)) / delta;\n            var deltaG = (((vMax - G) / 6) + (delta / 2)) / delta;\n            var deltaB = (((vMax - B) / 6) + (delta / 2)) / delta;\n\n            if (R === vMax) {\n                H = deltaB - deltaG;\n            }\n            else if (G === vMax) {\n                H = (1 / 3) + deltaR - deltaB;\n            }\n            else if (B === vMax) {\n                H = (2 / 3) + deltaG - deltaR;\n            }\n\n            if (H < 0) {\n                H += 1;\n            }\n\n            if (H > 1) {\n                H -= 1;\n            }\n        }\n\n        var hsla = [H * 360, S, L];\n\n        if (rgba[3] != null) {\n            hsla.push(rgba[3]);\n        }\n\n        return hsla;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number} level\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function lift(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            for (var i = 0; i < 3; i++) {\n                if (level < 0) {\n                    colorArr[i] = colorArr[i] * (1 - level) | 0;\n                }\n                else {\n                    colorArr[i] = ((255 - colorArr[i]) * level + colorArr[i]) | 0;\n                }\n            }\n            return stringify(colorArr, colorArr.length === 4 ? 'rgba' : 'rgb');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @return {string}\n     * @memberOf module:zrender/util/color\n     */\n    function toHex(color, level) {\n        var colorArr = parse(color);\n        if (colorArr) {\n            return ((1 << 24) + (colorArr[0] << 16) + (colorArr[1] << 8) + (+colorArr[2])).toString(16).slice(1);\n        }\n    }\n\n    /**\n     * Map value to color. Faster than mapToColor methods because color is represented by rgba array\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<Array.<number>>} colors List of rgba color array\n     * @param {Array.<number>} [out] Mapped gba color array\n     * @return {Array.<number>}\n     */\n    function fastMapToColor(normalizedValue, colors, out) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n        out = out || [0, 0, 0, 0];\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = colors[leftIndex];\n        var rightColor = colors[rightIndex];\n        var dv = value - leftIndex;\n        out[0] = clampCssByte(lerp(leftColor[0], rightColor[0], dv));\n        out[1] = clampCssByte(lerp(leftColor[1], rightColor[1], dv));\n        out[2] = clampCssByte(lerp(leftColor[2], rightColor[2], dv));\n        out[3] = clampCssByte(lerp(leftColor[3], rightColor[3], dv));\n        return out;\n    }\n    /**\n     * @param {number} normalizedValue A float between 0 and 1.\n     * @param {Array.<string>} colors Color list.\n     * @param {boolean=} fullOutput Default false.\n     * @return {(string|Object)} Result color. If fullOutput,\n     *                           return {color: ..., leftIndex: ..., rightIndex: ..., value: ...},\n     * @memberOf module:zrender/util/color\n     */\n    function mapToColor(normalizedValue, colors, fullOutput) {\n        if (!(colors && colors.length)\n            || !(normalizedValue >= 0 && normalizedValue <= 1)\n        ) {\n            return;\n        }\n\n        var value = normalizedValue * (colors.length - 1);\n        var leftIndex = Math.floor(value);\n        var rightIndex = Math.ceil(value);\n        var leftColor = parse(colors[leftIndex]);\n        var rightColor = parse(colors[rightIndex]);\n        var dv = value - leftIndex;\n\n        var color = stringify(\n            [\n                clampCssByte(lerp(leftColor[0], rightColor[0], dv)),\n                clampCssByte(lerp(leftColor[1], rightColor[1], dv)),\n                clampCssByte(lerp(leftColor[2], rightColor[2], dv)),\n                clampCssFloat(lerp(leftColor[3], rightColor[3], dv))\n            ],\n            'rgba'\n        );\n\n        return fullOutput\n            ? {\n                color: color,\n                leftIndex: leftIndex,\n                rightIndex: rightIndex,\n                value: value\n            }\n            : color;\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} h 0 ~ 360, ignore when null.\n     * @param {number=} s 0 ~ 1, ignore when null.\n     * @param {number=} l 0 ~ 1, ignore when null.\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyHSL(color, h, s, l) {\n        color = parse(color);\n\n        if (color) {\n            color = rgba2hsla(color);\n            h != null && (color[0] = clampCssAngle(h));\n            s != null && (color[1] = parseCssFloat(s));\n            l != null && (color[2] = parseCssFloat(l));\n\n            return stringify(hsla2rgba(color), 'rgba');\n        }\n    }\n\n    /**\n     * @param {string} color\n     * @param {number=} alpha 0 ~ 1\n     * @return {string} Color string in rgba format.\n     * @memberOf module:zrender/util/color\n     */\n    function modifyAlpha(color, alpha) {\n        color = parse(color);\n\n        if (color && alpha != null) {\n            color[3] = clampCssFloat(alpha);\n            return stringify(color, 'rgba');\n        }\n    }\n\n    /**\n     * @param {Array.<string>} colors Color list.\n     * @param {string} type 'rgba', 'hsva', ...\n     * @return {string} Result color.\n     */\n    function stringify(arrColor, type) {\n        var colorStr = arrColor[0] + ',' + arrColor[1] + ',' + arrColor[2];\n        if (type === 'rgba' || type === 'hsva' || type === 'hsla') {\n            colorStr += ',' + arrColor[3];\n        }\n        return type + '(' + colorStr + ')';\n    }\n\n    module.exports = {\n        parse: parse,\n        lift: lift,\n        toHex: toHex,\n        fastMapToColor: fastMapToColor,\n        mapToColor: mapToColor,\n        modifyHSL: modifyHSL,\n        modifyAlpha: modifyAlpha,\n        stringify: stringify\n    };\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/tool/color.js\n// module id = 614\n// module chunks = 0","/**\n * List for data storage\n * @module echarts/data/List\n */\n\n\n    var UNDEFINED = 'undefined';\n    var globalObj = typeof window === 'undefined' ? global : window;\n    var Float64Array = typeof globalObj.Float64Array === UNDEFINED\n        ? Array : globalObj.Float64Array;\n    var Int32Array = typeof globalObj.Int32Array === UNDEFINED\n        ? Array : globalObj.Int32Array;\n\n    var dataCtors = {\n        'float': Float64Array,\n        'int': Int32Array,\n        // Ordinal data type can be string or int\n        'ordinal': Array,\n        'number': Array,\n        'time': Array\n    };\n\n    var Model = require('../model/Model');\n    var DataDiffer = require('./DataDiffer');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var isObject = zrUtil.isObject;\n\n    var TRANSFERABLE_PROPERTIES = [\n        'stackedOn', 'hasItemOption', '_nameList', '_idList', '_rawData'\n    ];\n\n    var transferProperties = function (a, b) {\n        zrUtil.each(TRANSFERABLE_PROPERTIES.concat(b.__wrappedMethods || []), function (propName) {\n            if (b.hasOwnProperty(propName)) {\n                a[propName] = b[propName];\n            }\n        });\n\n        a.__wrappedMethods = b.__wrappedMethods;\n    };\n\n    /**\n     * @constructor\n     * @alias module:echarts/data/List\n     *\n     * @param {Array.<string>} dimensions\n     *        Dimensions should be concrete names like x, y, z, lng, lat, angle, radius\n     * @param {module:echarts/model/Model} hostModel\n     */\n    var List = function (dimensions, hostModel) {\n\n        dimensions = dimensions || ['x', 'y'];\n\n        var dimensionInfos = {};\n        var dimensionNames = [];\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimensionName;\n            var dimensionInfo = {};\n            if (typeof dimensions[i] === 'string') {\n                dimensionName = dimensions[i];\n                dimensionInfo = {\n                    name: dimensionName,\n                    stackable: false,\n                    // Type can be 'float', 'int', 'number'\n                    // Default is number, Precision of float may not enough\n                    type: 'number'\n                };\n            }\n            else {\n                dimensionInfo = dimensions[i];\n                dimensionName = dimensionInfo.name;\n                dimensionInfo.type = dimensionInfo.type || 'number';\n            }\n            dimensionNames.push(dimensionName);\n            dimensionInfos[dimensionName] = dimensionInfo;\n        }\n        /**\n         * @readOnly\n         * @type {Array.<string>}\n         */\n        this.dimensions = dimensionNames;\n\n        /**\n         * Infomation of each data dimension, like data type.\n         * @type {Object}\n         */\n        this._dimensionInfos = dimensionInfos;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.hostModel = hostModel;\n\n        /**\n         * @type {module:echarts/model/Model}\n         */\n        this.dataType;\n\n        /**\n         * Indices stores the indices of data subset after filtered.\n         * This data subset will be used in chart.\n         * @type {Array.<number>}\n         * @readOnly\n         */\n        this.indices = [];\n\n        /**\n         * Data storage\n         * @type {Object.<key, TypedArray|Array>}\n         * @private\n         */\n        this._storage = {};\n\n        /**\n         * @type {Array.<string>}\n         */\n        this._nameList = [];\n        /**\n         * @type {Array.<string>}\n         */\n        this._idList = [];\n        /**\n         * Models of data option is stored sparse for optimizing memory cost\n         * @type {Array.<module:echarts/model/Model>}\n         * @private\n         */\n        this._optionModels = [];\n\n        /**\n         * @param {module:echarts/data/List}\n         */\n        this.stackedOn = null;\n\n        /**\n         * Global visual properties after visual coding\n         * @type {Object}\n         * @private\n         */\n        this._visual = {};\n\n        /**\n         * Globel layout properties.\n         * @type {Object}\n         * @private\n         */\n        this._layout = {};\n\n        /**\n         * Item visual properties after visual coding\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemVisuals = [];\n\n        /**\n         * Item layout properties after layout\n         * @type {Array.<Object>}\n         * @private\n         */\n        this._itemLayouts = [];\n\n        /**\n         * Graphic elemnents\n         * @type {Array.<module:zrender/Element>}\n         * @private\n         */\n        this._graphicEls = [];\n\n        /**\n         * @type {Array.<Array|Object>}\n         * @private\n         */\n        this._rawData;\n\n        /**\n         * @type {Object}\n         * @private\n         */\n        this._extent;\n    };\n\n    var listProto = List.prototype;\n\n    listProto.type = 'list';\n    /**\n     * If each data item has it's own option\n     * @type {boolean}\n     */\n    listProto.hasItemOption = true;\n\n    /**\n     * Get dimension name\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     * @return {string} Concrete dim name.\n     */\n    listProto.getDimension = function (dim) {\n        if (!isNaN(dim)) {\n            dim = this.dimensions[dim] || dim;\n        }\n        return dim;\n    };\n    /**\n     * Get type and stackable info of particular dimension\n     * @param {string|number} dim\n     *        Dimension can be concrete names like x, y, z, lng, lat, angle, radius\n     *        Or a ordinal number. For example getDimensionInfo(0) will return 'x' or 'lng' or 'radius'\n     */\n    listProto.getDimensionInfo = function (dim) {\n        return zrUtil.clone(this._dimensionInfos[this.getDimension(dim)]);\n    };\n\n    /**\n     * Initialize from data\n     * @param {Array.<Object|number|Array>} data\n     * @param {Array.<string>} [nameList]\n     * @param {Function} [dimValueGetter] (dataItem, dimName, dataIndex, dimIndex) => number\n     */\n    listProto.initData = function (data, nameList, dimValueGetter) {\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        this._rawData = data;\n\n        // Clear\n        var storage = this._storage = {};\n        var indices = this.indices = [];\n\n        var dimensions = this.dimensions;\n        var size = data.length;\n        var dimensionInfoMap = this._dimensionInfos;\n\n        var idList = [];\n        var nameRepeatCount = {};\n\n        nameList = nameList || [];\n\n        // Init storage\n        for (var i = 0; i < dimensions.length; i++) {\n            var dimInfo = dimensionInfoMap[dimensions[i]];\n            var DataCtor = dataCtors[dimInfo.type];\n            storage[dimensions[i]] = new DataCtor(size);\n        }\n\n        var self = this;\n        if (!dimValueGetter) {\n            self.hasItemOption = false;\n        }\n        // Default dim value getter\n        dimValueGetter = dimValueGetter || function (dataItem, dimName, dataIndex, dimIndex) {\n            var value = modelUtil.getDataItemValue(dataItem);\n            // If any dataItem is like { value: 10 }\n            if (modelUtil.isDataItemOption(dataItem)) {\n                self.hasItemOption = true;\n            }\n            return modelUtil.converDataValue(\n                (value instanceof Array)\n                    ? value[dimIndex]\n                    // If value is a single number or something else not array.\n                    : value,\n                dimensionInfoMap[dimName]\n            );\n        };\n\n        for (var idx = 0; idx < data.length; idx++) {\n            var dataItem = data[idx];\n            // Each data item is value\n            // [1, 2]\n            // 2\n            // Bar chart, line chart which uses category axis\n            // only gives the 'y' value. 'x' value is the indices of cateogry\n            // Use a tempValue to normalize the value to be a (x, y) value\n\n            // Store the data by dimensions\n            for (var k = 0; k < dimensions.length; k++) {\n                var dim = dimensions[k];\n                var dimStorage = storage[dim];\n                // PENDING NULL is empty or zero\n                dimStorage[idx] = dimValueGetter(dataItem, dim, idx, k);\n            }\n\n            indices.push(idx);\n        }\n\n        // Use the name in option and create id\n        for (var i = 0; i < data.length; i++) {\n            if (!nameList[i]) {\n                if (data[i] && data[i].name != null) {\n                    nameList[i] = data[i].name;\n                }\n            }\n            var name = nameList[i] || '';\n            // Try using the id in option\n            var id = data[i] && data[i].id;\n\n            if (!id && name) {\n                // Use name as id and add counter to avoid same name\n                nameRepeatCount[name] = nameRepeatCount[name] || 0;\n                id = name;\n                if (nameRepeatCount[name] > 0) {\n                    id += '__ec__' + nameRepeatCount[name];\n                }\n                nameRepeatCount[name]++;\n            }\n            id && (idList[i] = id);\n        }\n\n        this._nameList = nameList;\n        this._idList = idList;\n    };\n\n    /**\n     * @return {number}\n     */\n    listProto.count = function () {\n        return this.indices.length;\n    };\n\n    /**\n     * Get value. Return NaN if idx is out of range.\n     * @param {string} dim Dim must be concrete name.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.get = function (dim, idx, stack) {\n        var storage = this._storage;\n        var dataIndex = this.indices[idx];\n\n        // If value not exists\n        if (dataIndex == null) {\n            return NaN;\n        }\n\n        var value = storage[dim] && storage[dim][dataIndex];\n        // FIXME ordinal data type is not stackable\n        if (stack) {\n            var dimensionInfo = this._dimensionInfos[dim];\n            if (dimensionInfo && dimensionInfo.stackable) {\n                var stackedOn = this.stackedOn;\n                while (stackedOn) {\n                    // Get no stacked data of stacked on\n                    var stackedValue = stackedOn.get(dim, idx);\n                    // Considering positive stack, negative stack and empty data\n                    if ((value >= 0 && stackedValue > 0)  // Positive stack\n                        || (value <= 0 && stackedValue < 0) // Negative stack\n                    ) {\n                        value += stackedValue;\n                    }\n                    stackedOn = stackedOn.stackedOn;\n                }\n            }\n        }\n        return value;\n    };\n\n    /**\n     * Get value for multi dimensions.\n     * @param {Array.<string>} [dimensions] If ignored, using all dimensions.\n     * @param {number} idx\n     * @param {boolean} stack\n     * @return {number}\n     */\n    listProto.getValues = function (dimensions, idx, stack) {\n        var values = [];\n\n        if (!zrUtil.isArray(dimensions)) {\n            stack = idx;\n            idx = dimensions;\n            dimensions = this.dimensions;\n        }\n\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            values.push(this.get(dimensions[i], idx, stack));\n        }\n\n        return values;\n    };\n\n    /**\n     * If value is NaN. Inlcuding '-'\n     * @param {string} dim\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.hasValue = function (idx) {\n        var dimensions = this.dimensions;\n        var dimensionInfos = this._dimensionInfos;\n        for (var i = 0, len = dimensions.length; i < len; i++) {\n            if (\n                // Ordinal type can be string or number\n                dimensionInfos[dimensions[i]].type !== 'ordinal'\n                && isNaN(this.get(dimensions[i], idx))\n            ) {\n                return false;\n            }\n        }\n        return true;\n    };\n\n    /**\n     * Get extent of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getDataExtent = function (dim, stack) {\n        dim = this.getDimension(dim);\n        var dimData = this._storage[dim];\n        var dimInfo = this.getDimensionInfo(dim);\n        stack = (dimInfo && dimInfo.stackable) && stack;\n        var dimExtent = (this._extent || (this._extent = {}))[dim + (!!stack)];\n        var value;\n        if (dimExtent) {\n            return dimExtent;\n        }\n        // var dimInfo = this._dimensionInfos[dim];\n        if (dimData) {\n            var min = Infinity;\n            var max = -Infinity;\n            // var isOrdinal = dimInfo.type === 'ordinal';\n            for (var i = 0, len = this.count(); i < len; i++) {\n                value = this.get(dim, i, stack);\n                // FIXME\n                // if (isOrdinal && typeof value === 'string') {\n                //     value = zrUtil.indexOf(dimData, value);\n                // }\n                value < min && (min = value);\n                value > max && (max = value);\n            }\n            return (this._extent[dim + !!stack] = [min, max]);\n        }\n        else {\n            return [Infinity, -Infinity];\n        }\n    };\n\n    /**\n     * Get sum of data in one dimension\n     * @param {string} dim\n     * @param {boolean} stack\n     */\n    listProto.getSum = function (dim, stack) {\n        var dimData = this._storage[dim];\n        var sum = 0;\n        if (dimData) {\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var value = this.get(dim, i, stack);\n                if (!isNaN(value)) {\n                    sum += value;\n                }\n            }\n        }\n        return sum;\n    };\n\n    /**\n     * Retreive the index with given value\n     * @param {number} idx\n     * @param {number} value\n     * @return {number}\n     */\n    // FIXME Precision of float value\n    listProto.indexOf = function (dim, value) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n        var indices = this.indices;\n\n        if (dimData) {\n            for (var i = 0, len = indices.length; i < len; i++) {\n                var rawIndex = indices[i];\n                if (dimData[rawIndex] === value) {\n                    return i;\n                }\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given name\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfName = function (name) {\n        var indices = this.indices;\n        var nameList = this._nameList;\n\n        for (var i = 0, len = indices.length; i < len; i++) {\n            var rawIndex = indices[i];\n            if (nameList[rawIndex] === name) {\n                return i;\n            }\n        }\n\n        return -1;\n    };\n\n    /**\n     * Retreive the index with given raw data index\n     * @param {number} idx\n     * @param {number} name\n     * @return {number}\n     */\n    listProto.indexOfRawIndex = function (rawIndex) {\n        // Indices are ascending\n        var indices = this.indices;\n\n        // If rawIndex === dataIndex\n        var rawDataIndex = indices[rawIndex];\n        if (rawDataIndex != null && rawDataIndex === rawIndex) {\n            return rawIndex;\n        }\n\n        var left = 0;\n        var right = indices.length - 1;\n        while (left <= right) {\n            var mid = (left + right) / 2 | 0;\n            if (indices[mid] < rawIndex) {\n                left = mid + 1;\n            }\n            else if (indices[mid] > rawIndex) {\n                right = mid - 1;\n            }\n            else {\n                return mid;\n            }\n        }\n        return -1;\n    };\n\n    /**\n     * Retreive the index of nearest value\n     * @param {string} dim\n     * @param {number} value\n     * @param {boolean} stack If given value is after stacked\n     * @param {number} [maxDistance=Infinity]\n     * @return {number}\n     */\n    listProto.indexOfNearest = function (dim, value, stack, maxDistance) {\n        var storage = this._storage;\n        var dimData = storage[dim];\n\n        if (maxDistance == null) {\n            maxDistance = Infinity;\n        }\n\n        var nearestIdx = -1;\n        if (dimData) {\n            var minDist = Number.MAX_VALUE;\n            for (var i = 0, len = this.count(); i < len; i++) {\n                var diff = value - this.get(dim, i, stack);\n                var dist = Math.abs(diff);\n                if (\n                    diff <= maxDistance\n                    && (dist < minDist\n                        // For the case of two data are same on xAxis, which has sequence data.\n                        // Show the nearest index\n                        // https://github.com/ecomfe/echarts/issues/2869\n                        || (dist === minDist && diff > 0)\n                    )\n                ) {\n                    minDist = dist;\n                    nearestIdx = i;\n                }\n            }\n        }\n        return nearestIdx;\n    };\n\n    /**\n     * Get raw data index\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawIndex = function (idx) {\n        var rawIdx = this.indices[idx];\n        return rawIdx == null ? -1 : rawIdx;\n    };\n\n    /**\n     * Get raw data item\n     * @param {number} idx\n     * @return {number}\n     */\n    listProto.getRawDataItem = function (idx) {\n        return this._rawData[this.getRawIndex(idx)];\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getName = function (idx) {\n        return this._nameList[this.indices[idx]] || '';\n    };\n\n    /**\n     * @param {number} idx\n     * @param {boolean} [notDefaultIdx=false]\n     * @return {string}\n     */\n    listProto.getId = function (idx) {\n        return this._idList[this.indices[idx]] || (this.getRawIndex(idx) + '');\n    };\n\n\n    function normalizeDimensions(dimensions) {\n        if (!zrUtil.isArray(dimensions)) {\n            dimensions = [dimensions];\n        }\n        return dimensions;\n    }\n\n    /**\n     * Data iteration\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     *\n     * @example\n     *  list.each('x', function (x, idx) {});\n     *  list.each(['x', 'y'], function (x, y, idx) {});\n     *  list.each(function (idx) {})\n     */\n    listProto.each = function (dims, cb, stack, context) {\n        if (typeof dims === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dims;\n            dims = [];\n        }\n\n        dims = zrUtil.map(normalizeDimensions(dims), this.getDimension, this);\n\n        var value = [];\n        var dimSize = dims.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            // Simple optimization\n            switch (dimSize) {\n                case 0:\n                    cb.call(context, i);\n                    break;\n                case 1:\n                    cb.call(context, this.get(dims[0], i, stack), i);\n                    break;\n                case 2:\n                    cb.call(context, this.get(dims[0], i, stack), this.get(dims[1], i, stack), i);\n                    break;\n                default:\n                    for (var k = 0; k < dimSize; k++) {\n                        value[k] = this.get(dims[k], i, stack);\n                    }\n                    // Index\n                    value[k] = i;\n                    cb.apply(context, value);\n            }\n        }\n    };\n\n    /**\n     * Data filter\n     * @param {string|Array.<string>}\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     */\n    listProto.filterSelf = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var newIndices = [];\n        var value = [];\n        var dimSize = dimensions.length;\n        var indices = this.indices;\n\n        context = context || this;\n\n        for (var i = 0; i < indices.length; i++) {\n            var keep;\n            // Simple optimization\n            if (dimSize === 1) {\n                keep = cb.call(\n                    context, this.get(dimensions[0], i, stack), i\n                );\n            }\n            else {\n                for (var k = 0; k < dimSize; k++) {\n                    value[k] = this.get(dimensions[k], i, stack);\n                }\n                value[k] = i;\n                keep = cb.apply(context, value);\n            }\n            if (keep) {\n                newIndices.push(indices[i]);\n            }\n        }\n\n        this.indices = newIndices;\n\n        // Reset data extent\n        this._extent = {};\n\n        return this;\n    };\n\n    /**\n     * Data mapping to a plain array\n     * @param {string|Array.<string>} [dimensions]\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.mapArray = function (dimensions, cb, stack, context) {\n        if (typeof dimensions === 'function') {\n            context = stack;\n            stack = cb;\n            cb = dimensions;\n            dimensions = [];\n        }\n\n        var result = [];\n        this.each(dimensions, function () {\n            result.push(cb && cb.apply(this, arguments));\n        }, stack, context);\n        return result;\n    };\n\n    function cloneListForMapAndSample(original, excludeDimensions) {\n        var allDimensions = original.dimensions;\n        var list = new List(\n            zrUtil.map(allDimensions, original.getDimensionInfo, original),\n            original.hostModel\n        );\n        // FIXME If needs stackedOn, value may already been stacked\n        transferProperties(list, original);\n\n        var storage = list._storage = {};\n        var originalStorage = original._storage;\n        // Init storage\n        for (var i = 0; i < allDimensions.length; i++) {\n            var dim = allDimensions[i];\n            var dimStore = originalStorage[dim];\n            if (zrUtil.indexOf(excludeDimensions, dim) >= 0) {\n                storage[dim] = new dimStore.constructor(\n                    originalStorage[dim].length\n                );\n            }\n            else {\n                // Direct reference for other dimensions\n                storage[dim] = originalStorage[dim];\n            }\n        }\n        return list;\n    }\n\n    /**\n     * Data mapping to a new List with given dimensions\n     * @param {string|Array.<string>} dimensions\n     * @param {Function} cb\n     * @param {boolean} [stack=false]\n     * @param {*} [context=this]\n     * @return {Array}\n     */\n    listProto.map = function (dimensions, cb, stack, context) {\n        dimensions = zrUtil.map(\n            normalizeDimensions(dimensions), this.getDimension, this\n        );\n\n        var list = cloneListForMapAndSample(this, dimensions);\n        // Following properties are all immutable.\n        // So we can reference to the same value\n        var indices = list.indices = this.indices;\n\n        var storage = list._storage;\n\n        var tmpRetValue = [];\n        this.each(dimensions, function () {\n            var idx = arguments[arguments.length - 1];\n            var retValue = cb && cb.apply(this, arguments);\n            if (retValue != null) {\n                // a number\n                if (typeof retValue === 'number') {\n                    tmpRetValue[0] = retValue;\n                    retValue = tmpRetValue;\n                }\n                for (var i = 0; i < retValue.length; i++) {\n                    var dim = dimensions[i];\n                    var dimStore = storage[dim];\n                    var rawIdx = indices[idx];\n                    if (dimStore) {\n                        dimStore[rawIdx] = retValue[i];\n                    }\n                }\n            }\n        }, stack, context);\n\n        return list;\n    };\n\n    /**\n     * Large data down sampling on given dimension\n     * @param {string} dimension\n     * @param {number} rate\n     * @param {Function} sampleValue\n     * @param {Function} sampleIndex Sample index for name and id\n     */\n    listProto.downSample = function (dimension, rate, sampleValue, sampleIndex) {\n        var list = cloneListForMapAndSample(this, [dimension]);\n        var storage = this._storage;\n        var targetStorage = list._storage;\n\n        var originalIndices = this.indices;\n        var indices = list.indices = [];\n\n        var frameValues = [];\n        var frameIndices = [];\n        var frameSize = Math.floor(1 / rate);\n\n        var dimStore = targetStorage[dimension];\n        var len = this.count();\n        // Copy data from original data\n        for (var i = 0; i < storage[dimension].length; i++) {\n            targetStorage[dimension][i] = storage[dimension][i];\n        }\n        for (var i = 0; i < len; i += frameSize) {\n            // Last frame\n            if (frameSize > len - i) {\n                frameSize = len - i;\n                frameValues.length = frameSize;\n            }\n            for (var k = 0; k < frameSize; k++) {\n                var idx = originalIndices[i + k];\n                frameValues[k] = dimStore[idx];\n                frameIndices[k] = idx;\n            }\n            var value = sampleValue(frameValues);\n            var idx = frameIndices[sampleIndex(frameValues, value) || 0];\n            // Only write value on the filtered data\n            dimStore[idx] = value;\n            indices.push(idx);\n        }\n\n        return list;\n    };\n\n    /**\n     * Get model of one data item.\n     *\n     * @param {number} idx\n     */\n    // FIXME Model proxy ?\n    listProto.getItemModel = function (idx) {\n        var hostModel = this.hostModel;\n        idx = this.indices[idx];\n        return new Model(this._rawData[idx], hostModel, hostModel && hostModel.ecModel);\n    };\n\n    /**\n     * Create a data differ\n     * @param {module:echarts/data/List} otherList\n     * @return {module:echarts/data/DataDiffer}\n     */\n    listProto.diff = function (otherList) {\n        var idList = this._idList;\n        var otherIdList = otherList && otherList._idList;\n        var val;\n        // Use prefix to avoid index to be the same as otherIdList[idx],\n        // which will cause weird udpate animation.\n        var prefix = 'e\\0\\0';\n\n        return new DataDiffer(\n            otherList ? otherList.indices : [],\n            this.indices,\n            function (idx) {\n                return (val = otherIdList[idx]) != null ? val : prefix + idx;\n            },\n            function (idx) {\n                return (val = idList[idx]) != null ? val : prefix + idx;\n            }\n        );\n    };\n    /**\n     * Get visual property.\n     * @param {string} key\n     */\n    listProto.getVisual = function (key) {\n        var visual = this._visual;\n        return visual && visual[key];\n    };\n\n    /**\n     * Set visual property\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setVisual('color', color);\n     *  setVisual({\n     *      'color': color\n     *  });\n     */\n    listProto.setVisual = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setVisual(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._visual = this._visual || {};\n        this._visual[key] = val;\n    };\n\n    /**\n     * Set layout property.\n     * @param {string} key\n     * @param {*} [val]\n     */\n    listProto.setLayout = function (key, val) {\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    this.setLayout(name, key[name]);\n                }\n            }\n            return;\n        }\n        this._layout[key] = val;\n    };\n\n    /**\n     * Get layout property.\n     * @param  {string} key.\n     * @return {*}\n     */\n    listProto.getLayout = function (key) {\n        return this._layout[key];\n    };\n\n    /**\n     * Get layout of single data item\n     * @param {number} idx\n     */\n    listProto.getItemLayout = function (idx) {\n        return this._itemLayouts[idx];\n    };\n\n    /**\n     * Set layout of single data item\n     * @param {number} idx\n     * @param {Object} layout\n     * @param {boolean=} [merge=false]\n     */\n    listProto.setItemLayout = function (idx, layout, merge) {\n        this._itemLayouts[idx] = merge\n            ? zrUtil.extend(this._itemLayouts[idx] || {}, layout)\n            : layout;\n    };\n\n    /**\n     * Clear all layout of single data item\n     */\n    listProto.clearItemLayouts = function () {\n        this._itemLayouts.length = 0;\n    };\n\n    /**\n     * Get visual property of single data item\n     * @param {number} idx\n     * @param {string} key\n     * @param {boolean} ignoreParent\n     */\n    listProto.getItemVisual = function (idx, key, ignoreParent) {\n        var itemVisual = this._itemVisuals[idx];\n        var val = itemVisual && itemVisual[key];\n        if (val == null && !ignoreParent) {\n            // Use global visual property\n            return this.getVisual(key);\n        }\n        return val;\n    };\n\n    /**\n     * Set visual property of single data item\n     *\n     * @param {number} idx\n     * @param {string|Object} key\n     * @param {*} [value]\n     *\n     * @example\n     *  setItemVisual(0, 'color', color);\n     *  setItemVisual(0, {\n     *      'color': color\n     *  });\n     */\n    listProto.setItemVisual = function (idx, key, value) {\n        var itemVisual = this._itemVisuals[idx] || {};\n        this._itemVisuals[idx] = itemVisual;\n\n        if (isObject(key)) {\n            for (var name in key) {\n                if (key.hasOwnProperty(name)) {\n                    itemVisual[name] = key[name];\n                }\n            }\n            return;\n        }\n        itemVisual[key] = value;\n    };\n\n    /**\n     * Clear itemVisuals and list visual.\n     */\n    listProto.clearAllVisual = function () {\n        this._visual = {};\n        this._itemVisuals = [];\n    };\n\n    var setItemDataAndSeriesIndex = function (child) {\n        child.seriesIndex = this.seriesIndex;\n        child.dataIndex = this.dataIndex;\n        child.dataType = this.dataType;\n    };\n    /**\n     * Set graphic element relative to data. It can be set as null\n     * @param {number} idx\n     * @param {module:zrender/Element} [el]\n     */\n    listProto.setItemGraphicEl = function (idx, el) {\n        var hostModel = this.hostModel;\n\n        if (el) {\n            // Add data index and series index for indexing the data by element\n            // Useful in tooltip\n            el.dataIndex = idx;\n            el.dataType = this.dataType;\n            el.seriesIndex = hostModel && hostModel.seriesIndex;\n            if (el.type === 'group') {\n                el.traverse(setItemDataAndSeriesIndex, el);\n            }\n        }\n\n        this._graphicEls[idx] = el;\n    };\n\n    /**\n     * @param {number} idx\n     * @return {module:zrender/Element}\n     */\n    listProto.getItemGraphicEl = function (idx) {\n        return this._graphicEls[idx];\n    };\n\n    /**\n     * @param {Function} cb\n     * @param {*} context\n     */\n    listProto.eachItemGraphicEl = function (cb, context) {\n        zrUtil.each(this._graphicEls, function (el, idx) {\n            if (el) {\n                cb && cb.call(context, el, idx);\n            }\n        });\n    };\n\n    /**\n     * Shallow clone a new list except visual and layout properties, and graph elements.\n     * New list only change the indices.\n     */\n    listProto.cloneShallow = function () {\n        var dimensionInfoList = zrUtil.map(this.dimensions, this.getDimensionInfo, this);\n        var list = new List(dimensionInfoList, this.hostModel);\n\n        // FIXME\n        list._storage = this._storage;\n\n        transferProperties(list, this);\n\n\n        // Clone will not change the data extent and indices\n        list.indices = this.indices.slice();\n\n        if (this._extent) {\n            list._extent = zrUtil.extend({}, this._extent);\n        }\n\n        return list;\n    };\n\n    /**\n     * Wrap some method to add more feature\n     * @param {string} methodName\n     * @param {Function} injectFunction\n     */\n    listProto.wrapMethod = function (methodName, injectFunction) {\n        var originalMethod = this[methodName];\n        if (typeof originalMethod !== 'function') {\n            return;\n        }\n        this.__wrappedMethods = this.__wrappedMethods || [];\n        this.__wrappedMethods.push(methodName);\n        this[methodName] = function () {\n            var res = originalMethod.apply(this, arguments);\n            return injectFunction.apply(this, [res].concat(zrUtil.slice(arguments)));\n        };\n    };\n\n    // Methods that create a new list based on this list should be listed here.\n    // Notice that those method should `RETURN` the new list.\n    listProto.TRANSFERABLE_METHODS = ['cloneShallow', 'downSample', 'map'];\n    // Methods that change indices of this list should be listed here.\n    listProto.CHANGABLE_METHODS = ['filterSelf'];\n\n    module.exports = List;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/List.js\n// module id = 615\n// module chunks = 0","/**\n * // Scale class management\n * @module echarts/scale/Scale\n */\n\n\n    var clazzUtil = require('../util/clazz');\n\n    function Scale() {\n        /**\n         * Extent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._extent = [Infinity, -Infinity];\n\n        /**\n         * Step is calculated in adjustExtent\n         * @type {Array.<number>}\n         * @protected\n         */\n        this._interval = 0;\n\n        this.init && this.init.apply(this, arguments);\n    }\n\n    var scaleProto = Scale.prototype;\n\n    /**\n     * Parse input val to valid inner number.\n     * @param {*} val\n     * @return {number}\n     */\n    scaleProto.parse = function (val) {\n        // Notice: This would be a trap here, If the implementation\n        // of this method depends on extent, and this method is used\n        // before extent set (like in dataZoom), it would be wrong.\n        // Nevertheless, parse does not depend on extent generally.\n        return val;\n    };\n\n    scaleProto.contain = function (val) {\n        var extent = this._extent;\n        return val >= extent[0] && val <= extent[1];\n    };\n\n    /**\n     * Normalize value to linear [0, 1], return 0.5 if extent span is 0\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.normalize = function (val) {\n        var extent = this._extent;\n        if (extent[1] === extent[0]) {\n            return 0.5;\n        }\n        return (val - extent[0]) / (extent[1] - extent[0]);\n    };\n\n    /**\n     * Scale normalized value\n     * @param {number} val\n     * @return {number}\n     */\n    scaleProto.scale = function (val) {\n        var extent = this._extent;\n        return val * (extent[1] - extent[0]) + extent[0];\n    };\n\n    /**\n     * Set extent from data\n     * @param {Array.<number>} other\n     */\n    scaleProto.unionExtent = function (other) {\n        var extent = this._extent;\n        other[0] < extent[0] && (extent[0] = other[0]);\n        other[1] > extent[1] && (extent[1] = other[1]);\n        // not setExtent because in log axis it may transformed to power\n        // this.setExtent(extent[0], extent[1]);\n    };\n\n    /**\n     * Get extent\n     * @return {Array.<number>}\n     */\n    scaleProto.getExtent = function () {\n        return this._extent.slice();\n    };\n\n    /**\n     * Set extent\n     * @param {number} start\n     * @param {number} end\n     */\n    scaleProto.setExtent = function (start, end) {\n        var thisExtent = this._extent;\n        if (!isNaN(start)) {\n            thisExtent[0] = start;\n        }\n        if (!isNaN(end)) {\n            thisExtent[1] = end;\n        }\n    };\n\n    /**\n     * @return {Array.<string>}\n     */\n    scaleProto.getTicksLabels = function () {\n        var labels = [];\n        var ticks = this.getTicks();\n        for (var i = 0; i < ticks.length; i++) {\n            labels.push(this.getLabel(ticks[i]));\n        }\n        return labels;\n    };\n\n    clazzUtil.enableClassExtend(Scale);\n    clazzUtil.enableClassManagement(Scale, {\n        registerWhenExtend: true\n    });\n\n    module.exports = Scale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Scale.js\n// module id = 616\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n    var modelUtil = require('../util/model');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function Chart() {\n\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewChart');\n    }\n\n    Chart.prototype = {\n\n        type: 'chart',\n\n        /**\n         * Init the chart\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        init: function (ecModel, api) {},\n\n        /**\n         * Render the chart\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        render: function (seriesModel, ecModel, api, payload) {},\n\n        /**\n         * Highlight series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        highlight: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'emphasis');\n        },\n\n        /**\n         * Downplay series or specified data item\n         * @param  {module:echarts/model/Series} seriesModel\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         * @param  {Object} payload\n         */\n        downplay: function (seriesModel, ecModel, api, payload) {\n            toggleHighlight(seriesModel.getData(), payload, 'normal');\n        },\n\n        /**\n         * Remove self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        remove: function (ecModel, api) {\n            this.group.removeAll();\n        },\n\n        /**\n         * Dispose self\n         * @param  {module:echarts/model/Global} ecModel\n         * @param  {module:echarts/ExtensionAPI} api\n         */\n        dispose: function () {}\n\n        /**\n         * The view contains the given point.\n         * @interface\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        // containPoint: function () {}\n\n    };\n\n    var chartProto = Chart.prototype;\n    chartProto.updateView\n        = chartProto.updateLayout\n        = chartProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            this.render(seriesModel, ecModel, api, payload);\n        };\n\n    /**\n     * Set state of single element\n     * @param  {module:zrender/Element} el\n     * @param  {string} state\n     */\n    function elSetState(el, state) {\n        if (el) {\n            el.trigger(state);\n            if (el.type === 'group') {\n                for (var i = 0; i < el.childCount(); i++) {\n                    elSetState(el.childAt(i), state);\n                }\n            }\n        }\n    }\n    /**\n     * @param  {module:echarts/data/List} data\n     * @param  {Object} payload\n     * @param  {string} state 'normal'|'emphasis'\n     * @inner\n     */\n    function toggleHighlight(data, payload, state) {\n        var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n        if (dataIndex != null) {\n            zrUtil.each(modelUtil.normalizeToArray(dataIndex), function (dataIdx) {\n                elSetState(data.getItemGraphicEl(dataIdx), state);\n            });\n        }\n        else {\n            data.eachItemGraphicEl(function (el) {\n                elSetState(el, state);\n            });\n        }\n    }\n\n    // Enable Chart.extend.\n    clazzUtil.enableClassExtend(Chart, ['dispose']);\n\n    // Add capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Chart, {registerWhenExtend: true});\n\n    module.exports = Chart;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Chart.js\n// module id = 617\n// module chunks = 0","\n    var dpr = 1;\n    // If in browser environment\n    if (typeof window !== 'undefined') {\n        dpr = Math.max(window.devicePixelRatio || 1, 1);\n    }\n    /**\n     * config默认配置项\n     * @exports zrender/config\n     * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n     */\n    var config = {\n        /**\n         * debug日志选项：catchBrushException为true下有效\n         * 0 : 不生成debug数据，发布用\n         * 1 : 异常抛出，调试用\n         * 2 : 控制台输出，调试用\n         */\n        debugMode: 0,\n\n        // retina 屏幕优化\n        devicePixelRatio: dpr\n    };\n    module.exports = config;\n\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/config.js\n// module id = 624\n// module chunks = 0","/**\n * Group是一个容器，可以插入子节点，Group的变换也会被应用到子节点上\n * @module zrender/graphic/Group\n * @example\n *     var Group = require('zrender/lib/container/Group');\n *     var Circle = require('zrender/lib/graphic/shape/Circle');\n *     var g = new Group();\n *     g.position[0] = 100;\n *     g.position[1] = 100;\n *     g.add(new Circle({\n *         style: {\n *             x: 100,\n *             y: 100,\n *             r: 20,\n *         }\n *     }));\n *     zr.add(g);\n */\n\n\n    var zrUtil = require('../core/util');\n    var Element = require('../Element');\n    var BoundingRect = require('../core/BoundingRect');\n\n    /**\n     * @alias module:zrender/graphic/Group\n     * @constructor\n     * @extends module:zrender/mixin/Transformable\n     * @extends module:zrender/mixin/Eventful\n     */\n    var Group = function (opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        for (var key in opts) {\n            if (opts.hasOwnProperty(key)) {\n                this[key] = opts[key];\n            }\n        }\n\n        this._children = [];\n\n        this.__storage = null;\n\n        this.__dirty = true;\n    };\n\n    Group.prototype = {\n\n        constructor: Group,\n\n        isGroup: true,\n\n        /**\n         * @type {string}\n         */\n        type: 'group',\n\n        /**\n         * 所有子孙元素是否响应鼠标事件\n         * @name module:/zrender/container/Group#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * @return {Array.<module:zrender/Element>}\n         */\n        children: function () {\n            return this._children.slice();\n        },\n\n        /**\n         * 获取指定 index 的儿子节点\n         * @param  {number} idx\n         * @return {module:zrender/Element}\n         */\n        childAt: function (idx) {\n            return this._children[idx];\n        },\n\n        /**\n         * 获取指定名字的儿子节点\n         * @param  {string} name\n         * @return {module:zrender/Element}\n         */\n        childOfName: function (name) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                if (children[i].name === name) {\n                    return children[i];\n                }\n             }\n        },\n\n        /**\n         * @return {number}\n         */\n        childCount: function () {\n            return this._children.length;\n        },\n\n        /**\n         * 添加子节点到最后\n         * @param {module:zrender/Element} child\n         */\n        add: function (child) {\n            if (child && child !== this && child.parent !== this) {\n\n                this._children.push(child);\n\n                this._doAdd(child);\n            }\n\n            return this;\n        },\n\n        /**\n         * 添加子节点在 nextSibling 之前\n         * @param {module:zrender/Element} child\n         * @param {module:zrender/Element} nextSibling\n         */\n        addBefore: function (child, nextSibling) {\n            if (child && child !== this && child.parent !== this\n                && nextSibling && nextSibling.parent === this) {\n\n                var children = this._children;\n                var idx = children.indexOf(nextSibling);\n\n                if (idx >= 0) {\n                    children.splice(idx, 0, child);\n                    this._doAdd(child);\n                }\n            }\n\n            return this;\n        },\n\n        _doAdd: function (child) {\n            if (child.parent) {\n                child.parent.remove(child);\n            }\n\n            child.parent = this;\n\n            var storage = this.__storage;\n            var zr = this.__zr;\n            if (storage && storage !== child.__storage) {\n\n                storage.addToMap(child);\n\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n        },\n\n        /**\n         * 移除子节点\n         * @param {module:zrender/Element} child\n         */\n        remove: function (child) {\n            var zr = this.__zr;\n            var storage = this.__storage;\n            var children = this._children;\n\n            var idx = zrUtil.indexOf(children, child);\n            if (idx < 0) {\n                return this;\n            }\n            children.splice(idx, 1);\n\n            child.parent = null;\n\n            if (storage) {\n\n                storage.delFromMap(child.id);\n\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n\n            zr && zr.refresh();\n\n            return this;\n        },\n\n        /**\n         * 移除所有子节点\n         */\n        removeAll: function () {\n            var children = this._children;\n            var storage = this.__storage;\n            var child;\n            var i;\n            for (i = 0; i < children.length; i++) {\n                child = children[i];\n                if (storage) {\n                    storage.delFromMap(child.id);\n                    if (child instanceof Group) {\n                        child.delChildrenFromStorage(storage);\n                    }\n                }\n                child.parent = null;\n            }\n            children.length = 0;\n\n            return this;\n        },\n\n        /**\n         * 遍历所有子节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        eachChild: function (cb, context) {\n            var children = this._children;\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                cb.call(context, child, i);\n            }\n            return this;\n        },\n\n        /**\n         * 深度优先遍历所有子孙节点\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                cb.call(context, child);\n\n                if (child.type === 'group') {\n                    child.traverse(cb, context);\n                }\n            }\n            return this;\n        },\n\n        addChildrenToStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.addToMap(child);\n                if (child instanceof Group) {\n                    child.addChildrenToStorage(storage);\n                }\n            }\n        },\n\n        delChildrenFromStorage: function (storage) {\n            for (var i = 0; i < this._children.length; i++) {\n                var child = this._children[i];\n                storage.delFromMap(child.id);\n                if (child instanceof Group) {\n                    child.delChildrenFromStorage(storage);\n                }\n            }\n        },\n\n        dirty: function () {\n            this.__dirty = true;\n            this.__zr && this.__zr.refresh();\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function (includeChildren) {\n            // TODO Caching\n            var rect = null;\n            var tmpRect = new BoundingRect(0, 0, 0, 0);\n            var children = includeChildren || this._children;\n            var tmpMat = [];\n\n            for (var i = 0; i < children.length; i++) {\n                var child = children[i];\n                if (child.ignore || child.invisible) {\n                    continue;\n                }\n\n                var childRect = child.getBoundingRect();\n                var transform = child.getLocalTransform(tmpMat);\n                // TODO\n                // The boundingRect cacluated by transforming original\n                // rect may be bigger than the actual bundingRect when rotation\n                // is used. (Consider a circle rotated aginst its center, where\n                // the actual boundingRect should be the same as that not be\n                // rotated.) But we can not find better approach to calculate\n                // actual boundingRect yet, considering performance.\n                if (transform) {\n                    tmpRect.copy(childRect);\n                    tmpRect.applyTransform(transform);\n                    rect = rect || tmpRect.clone();\n                    rect.union(tmpRect);\n                }\n                else {\n                    rect = rect || childRect.clone();\n                    rect.union(childRect);\n                }\n            }\n            return rect || tmpRect;\n        }\n    };\n\n    zrUtil.inherits(Group, Element);\n\n    module.exports = Group;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/container/Group.js\n// module id = 625\n// module chunks = 0","'use strict';\n/**\n * Path 代理，可以在`buildPath`中用于替代`ctx`, 会保存每个path操作的命令到pathCommands属性中\n * 可以用于 isInsidePath 判断以及获取boundingRect\n *\n * @module zrender/core/PathProxy\n * @author Yi Shen (http://www.github.com/pissang)\n */\n\n // TODO getTotalLength, getPointAtLength\n\n\n    var curve = require('./curve');\n    var vec2 = require('./vector');\n    var bbox = require('./bbox');\n    var BoundingRect = require('./BoundingRect');\n    var dpr = require('../config').devicePixelRatio;\n\n    var CMD = {\n        M: 1,\n        L: 2,\n        C: 3,\n        Q: 4,\n        A: 5,\n        Z: 6,\n        // Rect\n        R: 7\n    };\n\n    var min = [];\n    var max = [];\n    var min2 = [];\n    var max2 = [];\n    var mathMin = Math.min;\n    var mathMax = Math.max;\n    var mathCos = Math.cos;\n    var mathSin = Math.sin;\n    var mathSqrt = Math.sqrt;\n    var mathAbs = Math.abs;\n\n    var hasTypedArray = typeof Float32Array != 'undefined';\n\n    /**\n     * @alias module:zrender/core/PathProxy\n     * @constructor\n     */\n    var PathProxy = function () {\n\n        /**\n         * Path data. Stored as flat array\n         * @type {Array.<Object>}\n         */\n        this.data = [];\n\n        this._len = 0;\n\n        this._ctx = null;\n\n        this._xi = 0;\n        this._yi = 0;\n\n        this._x0 = 0;\n        this._y0 = 0;\n\n        // Unit x, Unit y. Provide for avoiding drawing that too short line segment\n        this._ux = 0;\n        this._uy = 0;\n    };\n\n    /**\n     * 快速计算Path包围盒（并不是最小包围盒）\n     * @return {Object}\n     */\n    PathProxy.prototype = {\n\n        constructor: PathProxy,\n\n        _lineDash: null,\n\n        _dashOffset: 0,\n\n        _dashIdx: 0,\n\n        _dashSum: 0,\n\n        /**\n         * @readOnly\n         */\n        setScale: function (sx, sy) {\n            this._ux = mathAbs(1 / dpr / sx) || 0;\n            this._uy = mathAbs(1 / dpr / sy) || 0;\n        },\n\n        getContext: function () {\n            return this._ctx;\n        },\n\n        /**\n         * @param  {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        beginPath: function (ctx) {\n\n            this._ctx = ctx;\n\n            ctx && ctx.beginPath();\n\n            ctx && (this.dpr = ctx.dpr);\n\n            // Reset\n            this._len = 0;\n\n            if (this._lineDash) {\n                this._lineDash = null;\n\n                this._dashOffset = 0;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        moveTo: function (x, y) {\n            this.addData(CMD.M, x, y);\n            this._ctx && this._ctx.moveTo(x, y);\n\n            // x0, y0, xi, yi 是记录在 _dashedXXXXTo 方法中使用\n            // xi, yi 记录当前点, x0, y0 在 closePath 的时候回到起始点。\n            // 有可能在 beginPath 之后直接调用 lineTo，这时候 x0, y0 需要\n            // 在 lineTo 方法中记录，这里先不考虑这种情况，dashed line 也只在 IE10- 中不支持\n            this._x0 = x;\n            this._y0 = y;\n\n            this._xi = x;\n            this._yi = y;\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x\n         * @param  {number} y\n         * @return {module:zrender/core/PathProxy}\n         */\n        lineTo: function (x, y) {\n            var exceedUnit = mathAbs(x - this._xi) > this._ux\n                || mathAbs(y - this._yi) > this._uy\n                // Force draw the first segment\n                || this._len < 5;\n\n            this.addData(CMD.L, x, y);\n\n            if (this._ctx && exceedUnit) {\n                this._needsDash() ? this._dashedLineTo(x, y)\n                    : this._ctx.lineTo(x, y);\n            }\n            if (exceedUnit) {\n                this._xi = x;\n                this._yi = y;\n            }\n\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @param  {number} x3\n         * @param  {number} y3\n         * @return {module:zrender/core/PathProxy}\n         */\n        bezierCurveTo: function (x1, y1, x2, y2, x3, y3) {\n            this.addData(CMD.C, x1, y1, x2, y2, x3, y3);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedBezierTo(x1, y1, x2, y2, x3, y3)\n                    : this._ctx.bezierCurveTo(x1, y1, x2, y2, x3, y3);\n            }\n            this._xi = x3;\n            this._yi = y3;\n            return this;\n        },\n\n        /**\n         * @param  {number} x1\n         * @param  {number} y1\n         * @param  {number} x2\n         * @param  {number} y2\n         * @return {module:zrender/core/PathProxy}\n         */\n        quadraticCurveTo: function (x1, y1, x2, y2) {\n            this.addData(CMD.Q, x1, y1, x2, y2);\n            if (this._ctx) {\n                this._needsDash() ? this._dashedQuadraticTo(x1, y1, x2, y2)\n                    : this._ctx.quadraticCurveTo(x1, y1, x2, y2);\n            }\n            this._xi = x2;\n            this._yi = y2;\n            return this;\n        },\n\n        /**\n         * @param  {number} cx\n         * @param  {number} cy\n         * @param  {number} r\n         * @param  {number} startAngle\n         * @param  {number} endAngle\n         * @param  {boolean} anticlockwise\n         * @return {module:zrender/core/PathProxy}\n         */\n        arc: function (cx, cy, r, startAngle, endAngle, anticlockwise) {\n            this.addData(\n                CMD.A, cx, cy, r, r, startAngle, endAngle - startAngle, 0, anticlockwise ? 0 : 1\n            );\n            this._ctx && this._ctx.arc(cx, cy, r, startAngle, endAngle, anticlockwise);\n\n            this._xi = mathCos(endAngle) * r + cx;\n            this._xi = mathSin(endAngle) * r + cx;\n            return this;\n        },\n\n        // TODO\n        arcTo: function (x1, y1, x2, y2, radius) {\n            if (this._ctx) {\n                this._ctx.arcTo(x1, y1, x2, y2, radius);\n            }\n            return this;\n        },\n\n        // TODO\n        rect: function (x, y, w, h) {\n            this._ctx && this._ctx.rect(x, y, w, h);\n            this.addData(CMD.R, x, y, w, h);\n            return this;\n        },\n\n        /**\n         * @return {module:zrender/core/PathProxy}\n         */\n        closePath: function () {\n            this.addData(CMD.Z);\n\n            var ctx = this._ctx;\n            var x0 = this._x0;\n            var y0 = this._y0;\n            if (ctx) {\n                this._needsDash() && this._dashedLineTo(x0, y0);\n                ctx.closePath();\n            }\n\n            this._xi = x0;\n            this._yi = y0;\n            return this;\n        },\n\n        /**\n         * Context 从外部传入，因为有可能是 rebuildPath 完之后再 fill。\n         * stroke 同样\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        fill: function (ctx) {\n            ctx && ctx.fill();\n            this.toStatic();\n        },\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         * @return {module:zrender/core/PathProxy}\n         */\n        stroke: function (ctx) {\n            ctx && ctx.stroke();\n            this.toStatic();\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDash: function (lineDash) {\n            if (lineDash instanceof Array) {\n                this._lineDash = lineDash;\n\n                this._dashIdx = 0;\n\n                var lineDashSum = 0;\n                for (var i = 0; i < lineDash.length; i++) {\n                    lineDashSum += lineDash[i];\n                }\n                this._dashSum = lineDashSum;\n            }\n            return this;\n        },\n\n        /**\n         * 必须在其它绘制命令前调用\n         * Must be invoked before all other path drawing methods\n         * @return {module:zrender/core/PathProxy}\n         */\n        setLineDashOffset: function (offset) {\n            this._dashOffset = offset;\n            return this;\n        },\n\n        /**\n         *\n         * @return {boolean}\n         */\n        len: function () {\n            return this._len;\n        },\n\n        /**\n         * 直接设置 Path 数据\n         */\n        setData: function (data) {\n\n            var len = data.length;\n\n            if (! (this.data && this.data.length == len) && hasTypedArray) {\n                this.data = new Float32Array(len);\n            }\n\n            for (var i = 0; i < len; i++) {\n                this.data[i] = data[i];\n            }\n\n            this._len = len;\n        },\n\n        /**\n         * 添加子路径\n         * @param {module:zrender/core/PathProxy|Array.<module:zrender/core/PathProxy>} path\n         */\n        appendPath: function (path) {\n            if (!(path instanceof Array)) {\n                path = [path];\n            }\n            var len = path.length;\n            var appendSize = 0;\n            var offset = this._len;\n            for (var i = 0; i < len; i++) {\n                appendSize += path[i].len();\n            }\n            if (hasTypedArray && (this.data instanceof Float32Array)) {\n                this.data = new Float32Array(offset + appendSize);\n            }\n            for (var i = 0; i < len; i++) {\n                var appendPathData = path[i].data;\n                for (var k = 0; k < appendPathData.length; k++) {\n                    this.data[offset++] = appendPathData[k];\n                }\n            }\n            this._len = offset;\n        },\n\n        /**\n         * 填充 Path 数据。\n         * 尽量复用而不申明新的数组。大部分图形重绘的指令数据长度都是不变的。\n         */\n        addData: function (cmd) {\n            var data = this.data;\n            if (this._len + arguments.length > data.length) {\n                // 因为之前的数组已经转换成静态的 Float32Array\n                // 所以不够用时需要扩展一个新的动态数组\n                this._expandData();\n                data = this.data;\n            }\n            for (var i = 0; i < arguments.length; i++) {\n                data[this._len++] = arguments[i];\n            }\n\n            this._prevCmd = cmd;\n        },\n\n        _expandData: function () {\n            // Only if data is Float32Array\n            if (!(this.data instanceof Array)) {\n                var newData = [];\n                for (var i = 0; i < this._len; i++) {\n                    newData[i] = this.data[i];\n                }\n                this.data = newData;\n            }\n        },\n\n        /**\n         * If needs js implemented dashed line\n         * @return {boolean}\n         * @private\n         */\n        _needsDash: function () {\n            return this._lineDash;\n        },\n\n        _dashedLineTo: function (x1, y1) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var dx = x1 - x0;\n            var dy = y1 - y0;\n            var dist = mathSqrt(dx * dx + dy * dy);\n            var x = x0;\n            var y = y0;\n            var dash;\n            var nDash = lineDash.length;\n            var idx;\n            dx /= dist;\n            dy /= dist;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            x -= offset * dx;\n            y -= offset * dy;\n\n            while ((dx > 0 && x <= x1) || (dx < 0 && x >= x1)\n            || (dx == 0 && ((dy > 0 && y <= y1) || (dy < 0 && y >= y1)))) {\n                idx = this._dashIdx;\n                dash = lineDash[idx];\n                x += dx * dash;\n                y += dy * dash;\n                this._dashIdx = (idx + 1) % nDash;\n                // Skip positive offset\n                if ((dx > 0 && x < x0) || (dx < 0 && x > x0) || (dy > 0 && y < y0) || (dy < 0 && y > y0)) {\n                    continue;\n                }\n                ctx[idx % 2 ? 'moveTo' : 'lineTo'](\n                    dx >= 0 ? mathMin(x, x1) : mathMax(x, x1),\n                    dy >= 0 ? mathMin(y, y1) : mathMax(y, y1)\n                );\n            }\n            // Offset for next lineTo\n            dx = x - x1;\n            dy = y - y1;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        // Not accurate dashed line to\n        _dashedBezierTo: function (x1, y1, x2, y2, x3, y3) {\n            var dashSum = this._dashSum;\n            var offset = this._dashOffset;\n            var lineDash = this._lineDash;\n            var ctx = this._ctx;\n\n            var x0 = this._xi;\n            var y0 = this._yi;\n            var t;\n            var dx;\n            var dy;\n            var cubicAt = curve.cubicAt;\n            var bezierLen = 0;\n            var idx = this._dashIdx;\n            var nDash = lineDash.length;\n\n            var x;\n            var y;\n\n            var tmpLen = 0;\n\n            if (offset < 0) {\n                // Convert to positive offset\n                offset = dashSum + offset;\n            }\n            offset %= dashSum;\n            // Bezier approx length\n            for (t = 0; t < 1; t += 0.1) {\n                dx = cubicAt(x0, x1, x2, x3, t + 0.1)\n                    - cubicAt(x0, x1, x2, x3, t);\n                dy = cubicAt(y0, y1, y2, y3, t + 0.1)\n                    - cubicAt(y0, y1, y2, y3, t);\n                bezierLen += mathSqrt(dx * dx + dy * dy);\n            }\n\n            // Find idx after add offset\n            for (; idx < nDash; idx++) {\n                tmpLen += lineDash[idx];\n                if (tmpLen > offset) {\n                    break;\n                }\n            }\n            t = (tmpLen - offset) / bezierLen;\n\n            while (t <= 1) {\n\n                x = cubicAt(x0, x1, x2, x3, t);\n                y = cubicAt(y0, y1, y2, y3, t);\n\n                // Use line to approximate dashed bezier\n                // Bad result if dash is long\n                idx % 2 ? ctx.moveTo(x, y)\n                    : ctx.lineTo(x, y);\n\n                t += lineDash[idx] / bezierLen;\n\n                idx = (idx + 1) % nDash;\n            }\n\n            // Finish the last segment and calculate the new offset\n            (idx % 2 !== 0) && ctx.lineTo(x3, y3);\n            dx = x3 - x;\n            dy = y3 - y;\n            this._dashOffset = -mathSqrt(dx * dx + dy * dy);\n        },\n\n        _dashedQuadraticTo: function (x1, y1, x2, y2) {\n            // Convert quadratic to cubic using degree elevation\n            var x3 = x2;\n            var y3 = y2;\n            x2 = (x2 + 2 * x1) / 3;\n            y2 = (y2 + 2 * y1) / 3;\n            x1 = (this._xi + 2 * x1) / 3;\n            y1 = (this._yi + 2 * y1) / 3;\n\n            this._dashedBezierTo(x1, y1, x2, y2, x3, y3);\n        },\n\n        /**\n         * 转成静态的 Float32Array 减少堆内存占用\n         * Convert dynamic array to static Float32Array\n         */\n        toStatic: function () {\n            var data = this.data;\n            if (data instanceof Array) {\n                data.length = this._len;\n                if (hasTypedArray) {\n                    this.data = new Float32Array(data);\n                }\n            }\n        },\n\n        /**\n         * @return {module:zrender/core/BoundingRect}\n         */\n        getBoundingRect: function () {\n            min[0] = min[1] = min2[0] = min2[1] = Number.MAX_VALUE;\n            max[0] = max[1] = max2[0] = max2[1] = -Number.MAX_VALUE;\n\n            var data = this.data;\n            var xi = 0;\n            var yi = 0;\n            var x0 = 0;\n            var y0 = 0;\n\n            for (var i = 0; i < data.length;) {\n                var cmd = data[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = data[i];\n                    yi = data[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n\n                switch (cmd) {\n                    case CMD.M:\n                        // moveTo 命令重新创建一个新的 subpath, 并且更新新的起点\n                        // 在 closePath 的时候使用\n                        x0 = data[i++];\n                        y0 = data[i++];\n                        xi = x0;\n                        yi = y0;\n                        min2[0] = x0;\n                        min2[1] = y0;\n                        max2[0] = x0;\n                        max2[1] = y0;\n                        break;\n                    case CMD.L:\n                        bbox.fromLine(xi, yi, data[i], data[i + 1], min2, max2);\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.C:\n                        bbox.fromCubic(\n                            xi, yi, data[i++], data[i++], data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.Q:\n                        bbox.fromQuadratic(\n                            xi, yi, data[i++], data[i++], data[i], data[i + 1],\n                            min2, max2\n                        );\n                        xi = data[i++];\n                        yi = data[i++];\n                        break;\n                    case CMD.A:\n                        // TODO Arc 判断的开销比较大\n                        var cx = data[i++];\n                        var cy = data[i++];\n                        var rx = data[i++];\n                        var ry = data[i++];\n                        var startAngle = data[i++];\n                        var endAngle = data[i++] + startAngle;\n                        // TODO Arc 旋转\n                        var psi = data[i++];\n                        var anticlockwise = 1 - data[i++];\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(startAngle) * rx + cx;\n                            y0 = mathSin(startAngle) * ry + cy;\n                        }\n\n                        bbox.fromArc(\n                            cx, cy, rx, ry, startAngle, endAngle,\n                            anticlockwise, min2, max2\n                        );\n\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = data[i++];\n                        y0 = yi = data[i++];\n                        var width = data[i++];\n                        var height = data[i++];\n                        // Use fromLine\n                        bbox.fromLine(x0, y0, x0 + width, y0 + height, min2, max2);\n                        break;\n                    case CMD.Z:\n                        xi = x0;\n                        yi = y0;\n                        break;\n                }\n\n                // Union\n                vec2.min(min, min, min2);\n                vec2.max(max, max, max2);\n            }\n\n            // No data\n            if (i === 0) {\n                min[0] = min[1] = max[0] = max[1] = 0;\n            }\n\n            return new BoundingRect(\n                min[0], min[1], max[0] - min[0], max[1] - min[1]\n            );\n        },\n\n        /**\n         * Rebuild path from current data\n         * Rebuild path will not consider javascript implemented line dash.\n         * @param {CanvasRenderingContext} ctx\n         */\n        rebuildPath: function (ctx) {\n            var d = this.data;\n            var x0, y0;\n            var xi, yi;\n            var x, y;\n            var ux = this._ux;\n            var uy = this._uy;\n            var len = this._len;\n            for (var i = 0; i < len;) {\n                var cmd = d[i++];\n\n                if (i == 1) {\n                    // 如果第一个命令是 L, C, Q\n                    // 则 previous point 同绘制命令的第一个 point\n                    //\n                    // 第一个命令为 Arc 的情况下会在后面特殊处理\n                    xi = d[i];\n                    yi = d[i + 1];\n\n                    x0 = xi;\n                    y0 = yi;\n                }\n                switch (cmd) {\n                    case CMD.M:\n                        x0 = xi = d[i++];\n                        y0 = yi = d[i++];\n                        ctx.moveTo(xi, yi);\n                        break;\n                    case CMD.L:\n                        x = d[i++];\n                        y = d[i++];\n                        // Not draw too small seg between\n                        if (mathAbs(x - xi) > ux || mathAbs(y - yi) > uy || i === len - 1) {\n                            ctx.lineTo(x, y);\n                            xi = x;\n                            yi = y;\n                        }\n                        break;\n                    case CMD.C:\n                        ctx.bezierCurveTo(\n                            d[i++], d[i++], d[i++], d[i++], d[i++], d[i++]\n                        );\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.Q:\n                        ctx.quadraticCurveTo(d[i++], d[i++], d[i++], d[i++]);\n                        xi = d[i - 2];\n                        yi = d[i - 1];\n                        break;\n                    case CMD.A:\n                        var cx = d[i++];\n                        var cy = d[i++];\n                        var rx = d[i++];\n                        var ry = d[i++];\n                        var theta = d[i++];\n                        var dTheta = d[i++];\n                        var psi = d[i++];\n                        var fs = d[i++];\n                        var r = (rx > ry) ? rx : ry;\n                        var scaleX = (rx > ry) ? 1 : rx / ry;\n                        var scaleY = (rx > ry) ? ry / rx : 1;\n                        var isEllipse = Math.abs(rx - ry) > 1e-3;\n                        var endAngle = theta + dTheta;\n                        if (isEllipse) {\n                            ctx.translate(cx, cy);\n                            ctx.rotate(psi);\n                            ctx.scale(scaleX, scaleY);\n                            ctx.arc(0, 0, r, theta, endAngle, 1 - fs);\n                            ctx.scale(1 / scaleX, 1 / scaleY);\n                            ctx.rotate(-psi);\n                            ctx.translate(-cx, -cy);\n                        }\n                        else {\n                            ctx.arc(cx, cy, r, theta, endAngle, 1 - fs);\n                        }\n\n                        if (i == 1) {\n                            // 直接使用 arc 命令\n                            // 第一个命令起点还未定义\n                            x0 = mathCos(theta) * rx + cx;\n                            y0 = mathSin(theta) * ry + cy;\n                        }\n                        xi = mathCos(endAngle) * rx + cx;\n                        yi = mathSin(endAngle) * ry + cy;\n                        break;\n                    case CMD.R:\n                        x0 = xi = d[i];\n                        y0 = yi = d[i + 1];\n                        ctx.rect(d[i++], d[i++], d[i++], d[i++]);\n                        break;\n                    case CMD.Z:\n                        ctx.closePath();\n                        xi = x0;\n                        yi = y0;\n                }\n            }\n        }\n    };\n\n    PathProxy.CMD = CMD;\n\n    module.exports = PathProxy;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/PathProxy.js\n// module id = 626\n// module chunks = 0","'use strict';\n/**\n * 事件辅助类\n * @module zrender/core/event\n * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n */\n\n\n    var Eventful = require('../mixin/Eventful');\n    var env = require('./env');\n\n    var isDomLevel2 = (typeof window !== 'undefined') && !!window.addEventListener;\n\n    function getBoundingClientRect(el) {\n        // BlackBerry 5, iOS 3 (original iPhone) don't have getBoundingRect\n        return el.getBoundingClientRect ? el.getBoundingClientRect() : {left: 0, top: 0};\n    }\n\n    // `calculate` is optional, default false\n    function clientToLocal(el, e, out, calculate) {\n        out = out || {};\n\n        // According to the W3C Working Draft, offsetX and offsetY should be relative\n        // to the padding edge of the target element. The only browser using this convention\n        // is IE. Webkit uses the border edge, Opera uses the content edge, and FireFox does\n        // not support the properties.\n        // (see http://www.jacklmoore.com/notes/mouse-position/)\n        // In zr painter.dom, padding edge equals to border edge.\n\n        // FIXME\n        // When mousemove event triggered on ec tooltip, target is not zr painter.dom, and\n        // offsetX/Y is relative to e.target, where the calculation of zrX/Y via offsetX/Y\n        // is too complex. So css-transfrom dont support in this case temporarily.\n        if (calculate || !env.canvasSupported) {\n            defaultGetZrXY(el, e, out);\n        }\n        // Caution: In FireFox, layerX/layerY Mouse position relative to the closest positioned\n        // ancestor element, so we should make sure el is positioned (e.g., not position:static).\n        // BTW1, Webkit don't return the same results as FF in non-simple cases (like add\n        // zoom-factor, overflow / opacity layers, transforms ...)\n        // BTW2, (ev.offsetY || ev.pageY - $(ev.target).offset().top) is not correct in preserve-3d.\n        // <https://bugs.jquery.com/ticket/8523#comment:14>\n        // BTW3, In ff, offsetX/offsetY is always 0.\n        else if (env.browser.firefox && e.layerX != null && e.layerX !== e.offsetX) {\n            out.zrX = e.layerX;\n            out.zrY = e.layerY;\n        }\n        // For IE6+, chrome, safari, opera. (When will ff support offsetX?)\n        else if (e.offsetX != null) {\n            out.zrX = e.offsetX;\n            out.zrY = e.offsetY;\n        }\n        // For some other device, e.g., IOS safari.\n        else {\n            defaultGetZrXY(el, e, out);\n        }\n\n        return out;\n    }\n\n    function defaultGetZrXY(el, e, out) {\n        // This well-known method below does not support css transform.\n        var box = getBoundingClientRect(el);\n        out.zrX = e.clientX - box.left;\n        out.zrY = e.clientY - box.top;\n    }\n\n    /**\n     * 如果存在第三方嵌入的一些dom触发的事件，或touch事件，需要转换一下事件坐标.\n     * `calculate` is optional, default false.\n     */\n    function normalizeEvent(el, e, calculate) {\n\n        e = e || window.event;\n\n        if (e.zrX != null) {\n            return e;\n        }\n\n        var eventType = e.type;\n        var isTouch = eventType && eventType.indexOf('touch') >= 0;\n\n        if (!isTouch) {\n            clientToLocal(el, e, e, calculate);\n            e.zrDelta = (e.wheelDelta) ? e.wheelDelta / 120 : -(e.detail || 0) / 3;\n        }\n        else {\n            var touch = eventType != 'touchend'\n                ? e.targetTouches[0]\n                : e.changedTouches[0];\n            touch && clientToLocal(el, touch, e, calculate);\n        }\n\n        return e;\n    }\n\n    function addEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.addEventListener(name, handler);\n        }\n        else {\n            el.attachEvent('on' + name, handler);\n        }\n    }\n\n    function removeEventListener(el, name, handler) {\n        if (isDomLevel2) {\n            el.removeEventListener(name, handler);\n        }\n        else {\n            el.detachEvent('on' + name, handler);\n        }\n    }\n\n    /**\n     * 停止冒泡和阻止默认行为\n     * @memberOf module:zrender/core/event\n     * @method\n     * @param {Event} e : event对象\n     */\n    var stop = isDomLevel2\n        ? function (e) {\n            e.preventDefault();\n            e.stopPropagation();\n            e.cancelBubble = true;\n        }\n        : function (e) {\n            e.returnValue = false;\n            e.cancelBubble = true;\n        };\n\n    module.exports = {\n        clientToLocal: clientToLocal,\n        normalizeEvent: normalizeEvent,\n        addEventListener: addEventListener,\n        removeEventListener: removeEventListener,\n\n        stop: stop,\n        // 做向上兼容\n        Dispatcher: Eventful\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/event.js\n// module id = 627\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Interface of Coordinate System Class\n     *\n     * create:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *     @return {Object} coordinate system instance\n     *\n     * update:\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {module:echarts/ExtensionAPI} api\n     *\n     * convertToPixel:\n     * convertFromPixel:\n     *     These two methods is also responsible for determine whether this\n     *     coodinate system is applicable to the given `finder`.\n     *     Each coordinate system will be tried, util one returns none\n     *     null/undefined value.\n     *     @param {module:echarts/model/Global} ecModel\n     *     @param {Object} finder\n     *     @param {Array|number} value\n     *     @return {Array|number} convert result.\n     *\n     * containPoint:\n     *     @param {Array.<number>} point In pixel coordinate system.\n     *     @return {boolean}\n     */\n\n    var coordinateSystemCreators = {};\n\n    function CoordinateSystemManager() {\n\n        this._coordinateSystems = [];\n    }\n\n    CoordinateSystemManager.prototype = {\n\n        constructor: CoordinateSystemManager,\n\n        create: function (ecModel, api) {\n            var coordinateSystems = [];\n            zrUtil.each(coordinateSystemCreators, function (creater, type) {\n                var list = creater.create(ecModel, api);\n                coordinateSystems = coordinateSystems.concat(list || []);\n            });\n\n            this._coordinateSystems = coordinateSystems;\n        },\n\n        update: function (ecModel, api) {\n            zrUtil.each(this._coordinateSystems, function (coordSys) {\n                // FIXME MUST have\n                coordSys.update && coordSys.update(ecModel, api);\n            });\n        },\n\n        getCoordinateSystems: function () {\n            return this._coordinateSystems.slice();\n        }\n    };\n\n    CoordinateSystemManager.register = function (type, coordinateSystemCreator) {\n        coordinateSystemCreators[type] = coordinateSystemCreator;\n    };\n\n    CoordinateSystemManager.get = function (type) {\n        return coordinateSystemCreators[type];\n    };\n\n    module.exports = CoordinateSystemManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/CoordinateSystem.js\n// module id = 630\n// module chunks = 0","\n\n    var OrdinalScale = require('../scale/Ordinal');\n    var IntervalScale = require('../scale/Interval');\n    require('../scale/Time');\n    require('../scale/Log');\n    var Scale = require('../scale/Scale');\n\n    var numberUtil = require('../util/number');\n    var zrUtil = require('zrender/lib/core/util');\n    var textContain = require('zrender/lib/contain/text');\n    var axisHelper = {};\n\n    /**\n     * Get axis scale extent before niced.\n     */\n    axisHelper.getScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var originalExtent = scale.getExtent();\n        var span = originalExtent[1] - originalExtent[0];\n        if (scale.type === 'ordinal') {\n            // If series has no data, scale extent may be wrong\n            if (!isFinite(span)) {\n                return [0, 0];\n            }\n            else {\n                return originalExtent;\n            }\n        }\n        var min = model.getMin ? model.getMin() : model.get('min');\n        var max = model.getMax ? model.getMax() : model.get('max');\n        var crossZero = model.getNeedCrossZero\n            ? model.getNeedCrossZero() : !model.get('scale');\n        var boundaryGap = model.get('boundaryGap');\n        if (!zrUtil.isArray(boundaryGap)) {\n            boundaryGap = [boundaryGap || 0, boundaryGap || 0];\n        }\n        boundaryGap[0] = numberUtil.parsePercent(boundaryGap[0], 1);\n        boundaryGap[1] = numberUtil.parsePercent(boundaryGap[1], 1);\n        var fixMin = true;\n        var fixMax = true;\n        // Add boundary gap\n        if (min == null) {\n            min = originalExtent[0] - boundaryGap[0] * span;\n            fixMin = false;\n        }\n        if (max == null) {\n            max = originalExtent[1] + boundaryGap[1] * span;\n            fixMax = false;\n        }\n        if (min === 'dataMin') {\n            min = originalExtent[0];\n        }\n        if (max === 'dataMax') {\n            max = originalExtent[1];\n        }\n        // Evaluate if axis needs cross zero\n        if (crossZero) {\n            // Axis is over zero and min is not set\n            if (min > 0 && max > 0 && !fixMin) {\n                min = 0;\n            }\n            // Axis is under zero and max is not set\n            if (min < 0 && max < 0 && !fixMax) {\n                max = 0;\n            }\n        }\n        return [min, max];\n    };\n\n    axisHelper.niceScaleExtent = function (axis, model) {\n        var scale = axis.scale;\n        var extent = axisHelper.getScaleExtent(axis, model);\n        var fixMin = (model.getMin ? model.getMin() : model.get('min')) != null;\n        var fixMax = (model.getMax ? model.getMax() : model.get('max')) != null;\n        var splitNumber = model.get('splitNumber');\n\n        if (scale.type === 'log') {\n            scale.base = model.get('logBase');\n        }\n\n        scale.setExtent(extent[0], extent[1]);\n        scale.niceExtent(splitNumber, fixMin, fixMax);\n\n        // Use minInterval to constraint the calculated interval.\n        // If calculated interval is less than minInterval. increase the interval quantity until\n        // it is larger than minInterval.\n        // For example:\n        //  minInterval is 1, calculated interval is 0.2, so increase it to be 1. In this way we can get\n        //  an integer axis.\n        var minInterval = model.get('minInterval');\n        if (isFinite(minInterval) && !fixMin && !fixMax && scale.type === 'interval') {\n            var interval = scale.getInterval();\n            var intervalScale = Math.max(Math.abs(interval), minInterval) / interval;\n            // while (interval < minInterval) {\n            //     var quantity = numberUtil.quantity(interval);\n            //     interval = quantity * 10;\n            //     scaleQuantity *= 10;\n            // }\n            extent = scale.getExtent();\n            var origin = (extent[1] + extent[0]) / 2;\n            scale.setExtent(\n                intervalScale * (extent[0] - origin) + origin,\n                intervalScale * (extent[1] - origin) + origin\n            );\n            scale.niceExtent(splitNumber);\n        }\n\n        // If some one specified the min, max. And the default calculated interval\n        // is not good enough. He can specify the interval. It is often appeared\n        // in angle axis with angle 0 - 360. Interval calculated in interval scale is hard\n        // to be 60.\n        // FIXME\n        var interval = model.get('interval');\n        if (interval != null) {\n            scale.setInterval && scale.setInterval(interval);\n        }\n    };\n\n    /**\n     * @param {module:echarts/model/Model} model\n     * @param {string} [axisType] Default retrieve from model.type\n     * @return {module:echarts/scale/*}\n     */\n    axisHelper.createScaleByModel = function(model, axisType) {\n        axisType = axisType || model.get('type');\n        if (axisType) {\n            switch (axisType) {\n                // Buildin scale\n                case 'category':\n                    return new OrdinalScale(\n                        model.getCategories(), [Infinity, -Infinity]\n                    );\n                case 'value':\n                    return new IntervalScale();\n                // Extended scale, like time and log\n                default:\n                    return (Scale.getClass(axisType) || IntervalScale).create(model);\n            }\n        }\n    };\n\n    /**\n     * Check if the axis corss 0\n     */\n    axisHelper.ifAxisCrossZero = function (axis) {\n        var dataExtent = axis.scale.getExtent();\n        var min = dataExtent[0];\n        var max = dataExtent[1];\n        return !((min > 0 && max > 0) || (min < 0 && max < 0));\n    };\n\n    /**\n     * @param {Array.<number>} tickCoords In axis self coordinate.\n     * @param {Array.<string>} labels\n     * @param {string} font\n     * @param {boolean} isAxisHorizontal\n     * @return {number}\n     */\n    axisHelper.getAxisLabelInterval = function (tickCoords, labels, font, isAxisHorizontal) {\n        // FIXME\n        // 不同角的axis和label，不只是horizontal和vertical.\n\n        var textSpaceTakenRect;\n        var autoLabelInterval = 0;\n        var accumulatedLabelInterval = 0;\n\n        var step = 1;\n        if (labels.length > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.floor(labels.length / 40);\n        }\n\n        for (var i = 0; i < tickCoords.length; i += step) {\n            var tickCoord = tickCoords[i];\n            var rect = textContain.getBoundingRect(\n                labels[i], font, 'center', 'top'\n            );\n            rect[isAxisHorizontal ? 'x' : 'y'] += tickCoord;\n            // FIXME Magic number 1.5\n            rect[isAxisHorizontal ? 'width' : 'height'] *= 1.3;\n            if (!textSpaceTakenRect) {\n                textSpaceTakenRect = rect.clone();\n            }\n            // There is no space for current label;\n            else if (textSpaceTakenRect.intersect(rect)) {\n                accumulatedLabelInterval++;\n                autoLabelInterval = Math.max(autoLabelInterval, accumulatedLabelInterval);\n            }\n            else {\n                textSpaceTakenRect.union(rect);\n                // Reset\n                accumulatedLabelInterval = 0;\n            }\n        }\n        if (autoLabelInterval === 0 && step > 1) {\n            return step;\n        }\n        return (autoLabelInterval + 1) * step - 1;\n    };\n\n    /**\n     * @param {Object} axis\n     * @param {Function} labelFormatter\n     * @return {Array.<string>}\n     */\n    axisHelper.getFormattedLabels = function (axis, labelFormatter) {\n        var scale = axis.scale;\n        var labels = scale.getTicksLabels();\n        var ticks = scale.getTicks();\n        if (typeof labelFormatter === 'string') {\n            labelFormatter = (function (tpl) {\n                return function (val) {\n                    return tpl.replace('{value}', val != null ? val : '');\n                };\n            })(labelFormatter);\n            // Consider empty array\n            return zrUtil.map(labels, labelFormatter);\n        }\n        else if (typeof labelFormatter === 'function') {\n            return zrUtil.map(ticks, function (tick, idx) {\n                return labelFormatter(\n                    axis.type === 'category' ? scale.getLabel(tick) : tick,\n                    idx\n                );\n            }, this);\n        }\n        else {\n            return labels;\n        }\n    };\n\n    module.exports = axisHelper;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisHelper.js\n// module id = 631\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../util/format');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var colorPaletteMixin = require('./mixin/colorPalette');\n    var env = require('zrender/lib/core/env');\n    var layout = require('../util/layout');\n\n    var encodeHTML = formatUtil.encodeHTML;\n    var addCommas = formatUtil.addCommas;\n\n    var SeriesModel = ComponentModel.extend({\n\n        type: 'series.__base__',\n\n        /**\n         * @readOnly\n         */\n        seriesIndex: 0,\n\n        // coodinateSystem will be injected in the echarts/CoordinateSystem\n        coordinateSystem: null,\n\n        /**\n         * @type {Object}\n         * @protected\n         */\n        defaultOption: null,\n\n        /**\n         * Data provided for legend\n         * @type {Function}\n         */\n        // PENDING\n        legendDataProvider: null,\n\n        /**\n         * Access path of color for visual\n         */\n        visualColorAccessPath: 'itemStyle.normal.color',\n\n        /**\n         * Support merge layout params.\n         * Only support 'box' now (left/right/top/bottom/width/height).\n         * @type {string|Object} Object can be {ignoreSize: true}\n         * @readOnly\n         */\n        layoutMode: null,\n\n        init: function (option, parentModel, ecModel, extraOpt) {\n\n            /**\n             * @type {number}\n             * @readOnly\n             */\n            this.seriesIndex = this.componentIndex;\n\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            /**\n             * @type {module:echarts/data/List|module:echarts/data/Tree|module:echarts/data/Graph}\n             * @private\n             */\n            this._dataBeforeProcessed = this.getInitialData(option, ecModel);\n\n            // If we reverse the order (make this._data firstly, and then make\n            // this._dataBeforeProcessed by cloneShallow), cloneShallow will\n            // cause this._data.graph.data !== this._data when using\n            // module:echarts/data/Graph or module:echarts/data/Tree.\n            // See module:echarts/data/helper/linkList\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        /**\n         * Util for merge default and theme to option\n         * @param  {Object} option\n         * @param  {module:echarts/model/Global} ecModel\n         */\n        mergeDefaultAndTheme: function (option, ecModel) {\n            var layoutMode = this.layoutMode;\n            var inputPositionParams = layoutMode\n                ? layout.getLayoutParams(option) : {};\n\n            zrUtil.merge(\n                option,\n                ecModel.getTheme().get(this.subType)\n            );\n            zrUtil.merge(option, this.getDefaultOption());\n\n            // Default label emphasis `position` and `show`\n            // FIXME Set label in mergeOption\n            modelUtil.defaultEmphasis(option.label, modelUtil.LABEL_OPTIONS);\n\n            this.fillDataTextStyle(option.data);\n\n            if (layoutMode) {\n                layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n            }\n        },\n\n        mergeOption: function (newSeriesOption, ecModel) {\n            newSeriesOption = zrUtil.merge(this.option, newSeriesOption, true);\n            this.fillDataTextStyle(newSeriesOption.data);\n\n            var layoutMode = this.layoutMode;\n            if (layoutMode) {\n                layout.mergeLayoutParam(this.option, newSeriesOption, layoutMode);\n            }\n\n            var data = this.getInitialData(newSeriesOption, ecModel);\n            // TODO Merge data?\n            if (data) {\n                this._data = data;\n                this._dataBeforeProcessed = data.cloneShallow();\n            }\n        },\n\n        fillDataTextStyle: function (data) {\n            // Default data label emphasis `position` and `show`\n            // FIXME Tree structure data ?\n            // FIXME Performance ?\n            if (data) {\n                for (var i = 0; i < data.length; i++) {\n                    if (data[i] && data[i].label) {\n                        modelUtil.defaultEmphasis(data[i].label, modelUtil.LABEL_OPTIONS);\n                    }\n                }\n            }\n        },\n\n        /**\n         * Init a data structure from data related option in series\n         * Must be overwritten\n         */\n        getInitialData: function () {},\n\n        /**\n         * @param {string} [dataType]\n         * @return {module:echarts/data/List}\n         */\n        getData: function (dataType) {\n            return dataType == null ? this._data : this._data.getLinkedData(dataType);\n        },\n\n        /**\n         * @param {module:echarts/data/List} data\n         */\n        setData: function (data) {\n            this._data = data;\n        },\n\n        /**\n         * Get data before processed\n         * @return {module:echarts/data/List}\n         */\n        getRawData: function () {\n            return this._dataBeforeProcessed;\n        },\n\n        /**\n         * Coord dimension to data dimension.\n         *\n         * By default the result is the same as dimensions of series data.\n         * But in some series data dimensions are different from coord dimensions (i.e.\n         * candlestick and boxplot). Override this method to handle those cases.\n         *\n         * Coord dimension to data dimension can be one-to-many\n         *\n         * @param {string} coordDim\n         * @return {Array.<string>} dimensions on the axis.\n         */\n        coordDimToDataDim: function (coordDim) {\n            return [coordDim];\n        },\n\n        /**\n         * Convert data dimension to coord dimension.\n         *\n         * @param {string|number} dataDim\n         * @return {string}\n         */\n        dataDimToCoordDim: function (dataDim) {\n            return dataDim;\n        },\n\n        /**\n         * Get base axis if has coordinate system and has axis.\n         * By default use coordSys.getBaseAxis();\n         * Can be overrided for some chart.\n         * @return {type} description\n         */\n        getBaseAxis: function () {\n            var coordSys = this.coordinateSystem;\n            return coordSys && coordSys.getBaseAxis && coordSys.getBaseAxis();\n        },\n\n        // FIXME\n        /**\n         * Default tooltip formatter\n         *\n         * @param {number} dataIndex\n         * @param {boolean} [multipleSeries=false]\n         * @param {number} [dataType]\n         */\n        formatTooltip: function (dataIndex, multipleSeries, dataType) {\n            function formatArrayValue(value) {\n                var result = [];\n\n                zrUtil.each(value, function (val, idx) {\n                    var dimInfo = data.getDimensionInfo(idx);\n                    var dimType = dimInfo && dimInfo.type;\n                    var valStr;\n\n                    if (dimType === 'ordinal') {\n                        valStr = val + '';\n                    }\n                    else if (dimType === 'time') {\n                        valStr = multipleSeries ? '' : formatUtil.formatTime('yyyy/MM/dd hh:mm:ss', val);\n                    }\n                    else {\n                        valStr = addCommas(val);\n                    }\n\n                    valStr && result.push(valStr);\n                });\n\n                return result.join(', ');\n            }\n\n            var data = this._data;\n\n            var value = this.getRawValue(dataIndex);\n            var formattedValue = zrUtil.isArray(value)\n                ? formatArrayValue(value) : addCommas(value);\n            var name = data.getName(dataIndex);\n\n            var color = data.getItemVisual(dataIndex, 'color');\n            if (zrUtil.isObject(color) && color.colorStops) {\n                color = (color.colorStops[0] || {}).color;\n            }\n            color = color || 'transparent';\n\n            var colorEl = '<span style=\"display:inline-block;margin-right:5px;'\n                + 'border-radius:10px;width:9px;height:9px;background-color:' + color + '\"></span>';\n\n            var seriesName = this.name;\n            // FIXME\n            if (seriesName === '\\0-') {\n                // Not show '-'\n                seriesName = '';\n            }\n            return !multipleSeries\n                ? ((seriesName && encodeHTML(seriesName) + '<br />') + colorEl\n                    + (name\n                        ? encodeHTML(name) + ' : ' + formattedValue\n                        : formattedValue)\n                  )\n                : (colorEl + encodeHTML(this.name) + ' : ' + formattedValue);\n        },\n\n        /**\n         * @return {boolean}\n         */\n        ifEnableAnimation: function () {\n            if (env.node) {\n                return false;\n            }\n\n            var animationEnabled = this.getShallow('animation');\n            if (animationEnabled) {\n                if (this.getData().count() > this.getShallow('animationThreshold')) {\n                    animationEnabled = false;\n                }\n            }\n            return animationEnabled;\n        },\n\n        restoreData: function () {\n            this._data = this._dataBeforeProcessed.cloneShallow();\n        },\n\n        getColorFromPalette: function (name, scope) {\n            var ecModel = this.ecModel;\n            // PENDING\n            var color = colorPaletteMixin.getColorFromPalette.call(this, name, scope);\n            if (!color) {\n                color = ecModel.getColorFromPalette(name, scope);\n            }\n            return color;\n        },\n\n        /**\n         * Get data indices for show tooltip content. See tooltip.\n         * @abstract\n         * @param {Array.<string>|string} dim\n         * @param {Array.<number>} value\n         * @param {module:echarts/coord/single/SingleAxis} baseAxis\n         * @return {Array.<number>} data indices.\n         */\n        getAxisTooltipDataIndex: null,\n\n        /**\n         * See tooltip.\n         * @abstract\n         * @param {number} dataIndex\n         * @return {Array.<number>} Point of tooltip. null/undefined can be returned.\n         */\n        getTooltipPosition: null\n    });\n\n    zrUtil.mixin(SeriesModel, modelUtil.dataFormatMixin);\n    zrUtil.mixin(SeriesModel, colorPaletteMixin);\n\n    module.exports = SeriesModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Series.js\n// module id = 632\n// module chunks = 0","// TODO Parse shadow style\n// TODO Only shallow path support\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = function (properties) {\n        // Normalize\n        for (var i = 0; i < properties.length; i++) {\n            if (!properties[i][1]) {\n               properties[i][1] = properties[i][0];\n            }\n        }\n        return function (excludes) {\n            var style = {};\n            for (var i = 0; i < properties.length; i++) {\n                var propName = properties[i][1];\n                if (excludes && zrUtil.indexOf(excludes, propName) >= 0) {\n                    continue;\n                }\n                var val = this.getShallow(propName);\n                if (val != null) {\n                    style[properties[i][0]] = val;\n                }\n            }\n            return style;\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/makeStyleMapper.js\n// module id = 633\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/scale/Interval\n */\n\n\n\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n    var Scale = require('./Scale');\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n    /**\n     * @alias module:echarts/coord/scale/Interval\n     * @constructor\n     */\n    var IntervalScale = Scale.extend({\n\n        type: 'interval',\n\n        _interval: 0,\n\n        setExtent: function (start, end) {\n            var thisExtent = this._extent;\n            //start,end may be a Number like '25',so...\n            if (!isNaN(start)) {\n                thisExtent[0] = parseFloat(start);\n            }\n            if (!isNaN(end)) {\n                thisExtent[1] = parseFloat(end);\n            }\n        },\n\n        unionExtent: function (other) {\n            var extent = this._extent;\n            other[0] < extent[0] && (extent[0] = other[0]);\n            other[1] > extent[1] && (extent[1] = other[1]);\n\n            // unionExtent may called by it's sub classes\n            IntervalScale.prototype.setExtent.call(this, extent[0], extent[1]);\n        },\n        /**\n         * Get interval\n         */\n        getInterval: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            return this._interval;\n        },\n\n        /**\n         * Set interval\n         */\n        setInterval: function (interval) {\n            this._interval = interval;\n            // Dropped auto calculated niceExtent and use user setted extent\n            // We assume user wan't to set both interval, min, max to get a better result\n            this._niceExtent = this._extent.slice();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            if (!this._interval) {\n                this.niceTicks();\n            }\n            var interval = this._interval;\n            var extent = this._extent;\n            var ticks = [];\n\n            // Consider this case: using dataZoom toolbox, zoom and zoom.\n            var safeLimit = 10000;\n\n            if (interval) {\n                var niceExtent = this._niceExtent;\n                var precision = getPrecisionSafe(interval) + 2;\n\n                if (extent[0] < niceExtent[0]) {\n                    ticks.push(extent[0]);\n                }\n                var tick = niceExtent[0];\n\n                while (tick <= niceExtent[1]) {\n                    ticks.push(tick);\n                    // Avoid rounding error\n                    tick = roundingErrorFix(tick + interval, precision);\n                    if (ticks.length > safeLimit) {\n                        return [];\n                    }\n                }\n                // Consider this case: the last item of ticks is smaller\n                // than niceExtent[1] and niceExtent[1] === extent[1].\n                if (extent[1] > (ticks.length ? ticks[ticks.length - 1] : niceExtent[1])) {\n                    ticks.push(extent[1]);\n                }\n            }\n\n            return ticks;\n        },\n\n        /**\n         * @return {Array.<string>}\n         */\n        getTicksLabels: function () {\n            var labels = [];\n            var ticks = this.getTicks();\n            for (var i = 0; i < ticks.length; i++) {\n                labels.push(this.getLabel(ticks[i]));\n            }\n            return labels;\n        },\n\n        /**\n         * @param {number} n\n         * @return {number}\n         */\n        getLabel: function (data) {\n            return formatUtil.addCommas(data);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         *\n         * @param {number} [splitNumber = 5] Desired number of ticks\n         */\n        niceTicks: function (splitNumber) {\n            splitNumber = splitNumber || 5;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (!isFinite(span)) {\n                return;\n            }\n            // User may set axis min 0 and data are all negative\n            // FIXME If it needs to reverse ?\n            if (span < 0) {\n                span = -span;\n                extent.reverse();\n            }\n\n            // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n            // var niceSpan = numberUtil.nice(span, false);\n            var step = roundingErrorFix(\n                numberUtil.nice(span / splitNumber, true),\n                Math.max(\n                    getPrecisionSafe(extent[0]),\n                    getPrecisionSafe(extent[1])\n                // extent may be [0, 1], and step should have 1 more digits.\n                // To make it safe we add 2 more digits\n                ) + 2\n            );\n\n            var precision = getPrecisionSafe(step) + 2;\n            // Niced extent inside original extent\n            var niceExtent = [\n                roundingErrorFix(mathCeil(extent[0] / step) * step, precision),\n                roundingErrorFix(mathFloor(extent[1] / step) * step, precision)\n            ];\n\n            this._interval = step;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [splitNumber = 5] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                if (extent[0] !== 0) {\n                    // Expand extent\n                    var expandSize = extent[0];\n                    // In the fowllowing case\n                    //      Axis has been fixed max 100\n                    //      Plus data are all 100 and axis extent are [100, 100].\n                    // Extend to the both side will cause expanded max is larger than fixed max.\n                    // So only expand to the smaller side.\n                    if (!fixMax) {\n                        extent[1] += expandSize / 2;\n                        extent[0] -= expandSize / 2;\n                    }\n                    else {\n                        extent[0] -= expandSize / 2;\n                    }\n                }\n                else {\n                    extent[1] = 1;\n                }\n            }\n            var span = extent[1] - extent[0];\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (!isFinite(span)) {\n                extent[0] = 0;\n                extent[1] = 1;\n            }\n\n            this.niceTicks(splitNumber);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = roundingErrorFix(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = roundingErrorFix(mathCeil(extent[1] / interval) * interval);\n            }\n        }\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    IntervalScale.create = function () {\n        return new IntervalScale();\n    };\n\n    module.exports = IntervalScale;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Interval.js\n// module id = 634\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var clazz = require('./clazz');\n\n    var parseClassType = clazz.parseClassType;\n\n    var base = 0;\n\n    var componentUtil = {};\n\n    var DELIMITER = '_';\n\n    /**\n     * @public\n     * @param {string} type\n     * @return {string}\n     */\n    componentUtil.getUID = function (type) {\n        // Considering the case of crossing js context,\n        // use Math.random to make id as unique as possible.\n        return [(type || ''), base++, Math.random()].join(DELIMITER);\n    };\n\n    /**\n     * @inner\n     */\n    componentUtil.enableSubTypeDefaulter = function (entity) {\n\n        var subTypeDefaulters = {};\n\n        entity.registerSubTypeDefaulter = function (componentType, defaulter) {\n            componentType = parseClassType(componentType);\n            subTypeDefaulters[componentType.main] = defaulter;\n        };\n\n        entity.determineSubType = function (componentType, option) {\n            var type = option.type;\n            if (!type) {\n                var componentTypeMain = parseClassType(componentType).main;\n                if (entity.hasSubTypes(componentType) && subTypeDefaulters[componentTypeMain]) {\n                    type = subTypeDefaulters[componentTypeMain](option);\n                }\n            }\n            return type;\n        };\n\n        return entity;\n    };\n\n    /**\n     * Topological travel on Activity Network (Activity On Vertices).\n     * Dependencies is defined in Model.prototype.dependencies, like ['xAxis', 'yAxis'].\n     *\n     * If 'xAxis' or 'yAxis' is absent in componentTypeList, just ignore it in topology.\n     *\n     * If there is circle dependencey, Error will be thrown.\n     *\n     */\n    componentUtil.enableTopologicalTravel = function (entity, dependencyGetter) {\n\n        /**\n         * @public\n         * @param {Array.<string>} targetNameList Target Component type list.\n         *                                           Can be ['aa', 'bb', 'aa.xx']\n         * @param {Array.<string>} fullNameList By which we can build dependency graph.\n         * @param {Function} callback Params: componentType, dependencies.\n         * @param {Object} context Scope of callback.\n         */\n        entity.topologicalTravel = function (targetNameList, fullNameList, callback, context) {\n            if (!targetNameList.length) {\n                return;\n            }\n\n            var result = makeDepndencyGraph(fullNameList);\n            var graph = result.graph;\n            var stack = result.noEntryList;\n\n            var targetNameSet = {};\n            zrUtil.each(targetNameList, function (name) {\n                targetNameSet[name] = true;\n            });\n\n            while (stack.length) {\n                var currComponentType = stack.pop();\n                var currVertex = graph[currComponentType];\n                var isInTargetNameSet = !!targetNameSet[currComponentType];\n                if (isInTargetNameSet) {\n                    callback.call(context, currComponentType, currVertex.originalDeps.slice());\n                    delete targetNameSet[currComponentType];\n                }\n                zrUtil.each(\n                    currVertex.successor,\n                    isInTargetNameSet ? removeEdgeAndAdd : removeEdge\n                );\n            }\n\n            zrUtil.each(targetNameSet, function () {\n                throw new Error('Circle dependency may exists');\n            });\n\n            function removeEdge(succComponentType) {\n                graph[succComponentType].entryCount--;\n                if (graph[succComponentType].entryCount === 0) {\n                    stack.push(succComponentType);\n                }\n            }\n\n            // Consider this case: legend depends on series, and we call\n            // chart.setOption({series: [...]}), where only series is in option.\n            // If we do not have 'removeEdgeAndAdd', legendModel.mergeOption will\n            // not be called, but only sereis.mergeOption is called. Thus legend\n            // have no chance to update its local record about series (like which\n            // name of series is available in legend).\n            function removeEdgeAndAdd(succComponentType) {\n                targetNameSet[succComponentType] = true;\n                removeEdge(succComponentType);\n            }\n        };\n\n        /**\n         * DepndencyGraph: {Object}\n         * key: conponentType,\n         * value: {\n         *     successor: [conponentTypes...],\n         *     originalDeps: [conponentTypes...],\n         *     entryCount: {number}\n         * }\n         */\n        function makeDepndencyGraph(fullNameList) {\n            var graph = {};\n            var noEntryList = [];\n\n            zrUtil.each(fullNameList, function (name) {\n\n                var thisItem = createDependencyGraphItem(graph, name);\n                var originalDeps = thisItem.originalDeps = dependencyGetter(name);\n\n                var availableDeps = getAvailableDependencies(originalDeps, fullNameList);\n                thisItem.entryCount = availableDeps.length;\n                if (thisItem.entryCount === 0) {\n                    noEntryList.push(name);\n                }\n\n                zrUtil.each(availableDeps, function (dependentName) {\n                    if (zrUtil.indexOf(thisItem.predecessor, dependentName) < 0) {\n                        thisItem.predecessor.push(dependentName);\n                    }\n                    var thatItem = createDependencyGraphItem(graph, dependentName);\n                    if (zrUtil.indexOf(thatItem.successor, dependentName) < 0) {\n                        thatItem.successor.push(name);\n                    }\n                });\n            });\n\n            return {graph: graph, noEntryList: noEntryList};\n        }\n\n        function createDependencyGraphItem(graph, name) {\n            if (!graph[name]) {\n                graph[name] = {predecessor: [], successor: []};\n            }\n            return graph[name];\n        }\n\n        function getAvailableDependencies(originalDeps, fullNameList) {\n            var availableDeps = [];\n            zrUtil.each(originalDeps, function (dep) {\n                zrUtil.indexOf(fullNameList, dep) >= 0 && availableDeps.push(dep);\n            });\n            return availableDeps;\n        }\n    };\n\n    module.exports = componentUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/component.js\n// module id = 635\n// module chunks = 0","var echarts = require('echarts/lib/echarts');\nimport './chart.less';\n// include gauge chart\nrequire('echarts/lib/chart/gauge');\n\n// include pie chart\nrequire('echarts/lib/chart/pie');\n// include line chart\nrequire('echarts/lib/chart/line');\n\n// include tooltip component\nrequire('echarts/lib/component/tooltip');\n// include title component\nrequire('echarts/lib/component/title');\n// include legend component\nrequire('echarts/lib/component/legend');\n\nexport default angular.module('ng-echarts',[])\n\t.directive('ngEcharts',[function(){\n\t\treturn {\n\t\t\tlink: function(scope,element,attrs,ctrl){\n\t\t\t\tfunction refreshChart(){\n\t\t\t\t\tvar theme = (scope.config && scope.config.theme)\n\t\t\t\t\t\t? scope.config.theme : 'default';\n\t\t\t\t\tvar chart = echarts.init(element[0],theme);\n\t\t\t\t\tif(scope.config && scope.config.dataLoaded === false){\n\t\t\t\t\t\tchart.showLoading();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(scope.config && scope.config.dataLoaded){\n\t\t\t\t\t\tchart.setOption(scope.option);\n\t\t\t\t\t\tchart.resize();\n\t\t\t\t\t\tchart.hideLoading();\n\t\t\t\t\t}\n\n\t\t\t\t\tif(scope.config && scope.config.event){\n\t\t\t\t\t\tif(angular.isArray(scope.config.event)){\n\t\t\t\t\t\t\tangular.forEach(scope.config.event,function(value,key){\n\t\t\t\t\t\t\t\tfor(var e in value){\n\t\t\t\t\t\t\t\t\tchart.on(e,value[e]);\n\t\t\t\t\t\t\t\t}\n\t\t\t\t\t\t\t});\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t};\n\n\t\t\t\t//自定义参数 - config\n\t\t\t\t// event 定义事件\n\t\t\t\t// theme 主题名称\n\t\t\t\t// dataLoaded 数据是否加载\n\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction () { return scope.config; },\n\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\n\t\t\t\t//图表原生option\n\t\t\t\tscope.$watch(\n\t\t\t\t\tfunction () { return scope.option; },\n\t\t\t\t\tfunction (value) {if (value) {refreshChart();}},\n\t\t\t\t\ttrue\n\t\t\t\t);\n\t\t\t},\n\t\t\tscope:{\n\t\t\t\toption:'=ecOption',\n\t\t\t\tconfig:'=ecConfig'\n\t\t\t},\n\t\t\trestrict:'EA'\n\t\t}\n\t}]);\n\n\n// WEBPACK FOOTER //\n// ./lib/Charts/index.js","// https://github.com/mziccard/node-timsort\n\n    var DEFAULT_MIN_MERGE = 32;\n\n    var DEFAULT_MIN_GALLOPING = 7;\n\n    var DEFAULT_TMP_STORAGE_LENGTH = 256;\n\n    function minRunLength(n) {\n        var r = 0;\n\n        while (n >= DEFAULT_MIN_MERGE) {\n            r |= n & 1;\n            n >>= 1;\n        }\n\n        return n + r;\n    }\n\n    function makeAscendingRun(array, lo, hi, compare) {\n        var runHi = lo + 1;\n\n        if (runHi === hi) {\n            return 1;\n        }\n\n        if (compare(array[runHi++], array[lo]) < 0) {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) < 0) {\n                runHi++;\n            }\n\n            reverseRun(array, lo, runHi);\n        }\n        else {\n            while (runHi < hi && compare(array[runHi], array[runHi - 1]) >= 0) {\n                runHi++;\n            }\n        }\n\n        return runHi - lo;\n    }\n\n    function reverseRun(array, lo, hi) {\n        hi--;\n\n        while (lo < hi) {\n            var t = array[lo];\n            array[lo++] = array[hi];\n            array[hi--] = t;\n        }\n    }\n\n    function binaryInsertionSort(array, lo, hi, start, compare) {\n        if (start === lo) {\n            start++;\n        }\n\n        for (; start < hi; start++) {\n            var pivot = array[start];\n\n            var left = lo;\n            var right = start;\n            var mid;\n\n            while (left < right) {\n                mid = left + right >>> 1;\n\n                if (compare(pivot, array[mid]) < 0) {\n                    right = mid;\n                }\n                else {\n                    left = mid + 1;\n                }\n            }\n\n            var n = start - left;\n\n            switch (n) {\n                case 3:\n                    array[left + 3] = array[left + 2];\n\n                case 2:\n                    array[left + 2] = array[left + 1];\n\n                case 1:\n                    array[left + 1] = array[left];\n                    break;\n                default:\n                    while (n > 0) {\n                        array[left + n] = array[left + n - 1];\n                        n--;\n                    }\n            }\n\n            array[left] = pivot;\n        }\n    }\n\n    function gallopLeft(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) > 0) {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) > 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n        else {\n            maxOffset = hint + 1;\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) <= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n\n        lastOffset++;\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) > 0) {\n                lastOffset = m + 1;\n            }\n            else {\n                offset = m;\n            }\n        }\n        return offset;\n    }\n\n    function gallopRight(value, array, start, length, hint, compare) {\n        var lastOffset = 0;\n        var maxOffset = 0;\n        var offset = 1;\n\n        if (compare(value, array[start + hint]) < 0) {\n            maxOffset = hint + 1;\n\n            while (offset < maxOffset && compare(value, array[start + hint - offset]) < 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            var tmp = lastOffset;\n            lastOffset = hint - offset;\n            offset = hint - tmp;\n        }\n        else {\n            maxOffset = length - hint;\n\n            while (offset < maxOffset && compare(value, array[start + hint + offset]) >= 0) {\n                lastOffset = offset;\n                offset = (offset << 1) + 1;\n\n                if (offset <= 0) {\n                    offset = maxOffset;\n                }\n            }\n\n            if (offset > maxOffset) {\n                offset = maxOffset;\n            }\n\n            lastOffset += hint;\n            offset += hint;\n        }\n\n        lastOffset++;\n\n        while (lastOffset < offset) {\n            var m = lastOffset + (offset - lastOffset >>> 1);\n\n            if (compare(value, array[start + m]) < 0) {\n                offset = m;\n            }\n            else {\n                lastOffset = m + 1;\n            }\n        }\n\n        return offset;\n    }\n\n    function TimSort(array, compare) {\n        var minGallop = DEFAULT_MIN_GALLOPING;\n        var length = 0;\n        var tmpStorageLength = DEFAULT_TMP_STORAGE_LENGTH;\n        var stackLength = 0;\n        var runStart;\n        var runLength;\n        var stackSize = 0;\n\n        length = array.length;\n\n        if (length < 2 * DEFAULT_TMP_STORAGE_LENGTH) {\n            tmpStorageLength = length >>> 1;\n        }\n\n        var tmp = [];\n\n        stackLength = length < 120 ? 5 : length < 1542 ? 10 : length < 119151 ? 19 : 40;\n\n        runStart = [];\n        runLength = [];\n\n        function pushRun(_runStart, _runLength) {\n            runStart[stackSize] = _runStart;\n            runLength[stackSize] = _runLength;\n            stackSize += 1;\n        }\n\n        function mergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n >= 1 && runLength[n - 1] <= runLength[n] + runLength[n + 1] || n >= 2 && runLength[n - 2] <= runLength[n] + runLength[n - 1]) {\n                    if (runLength[n - 1] < runLength[n + 1]) {\n                        n--;\n                    }\n                }\n                else if (runLength[n] > runLength[n + 1]) {\n                    break;\n                }\n                mergeAt(n);\n            }\n        }\n\n        function forceMergeRuns() {\n            while (stackSize > 1) {\n                var n = stackSize - 2;\n\n                if (n > 0 && runLength[n - 1] < runLength[n + 1]) {\n                    n--;\n                }\n\n                mergeAt(n);\n            }\n        }\n\n        function mergeAt(i) {\n            var start1 = runStart[i];\n            var length1 = runLength[i];\n            var start2 = runStart[i + 1];\n            var length2 = runLength[i + 1];\n\n            runLength[i] = length1 + length2;\n\n            if (i === stackSize - 3) {\n                runStart[i + 1] = runStart[i + 2];\n                runLength[i + 1] = runLength[i + 2];\n            }\n\n            stackSize--;\n\n            var k = gallopRight(array[start2], array, start1, length1, 0, compare);\n            start1 += k;\n            length1 -= k;\n\n            if (length1 === 0) {\n                return;\n            }\n\n            length2 = gallopLeft(array[start1 + length1 - 1], array, start2, length2, length2 - 1, compare);\n\n            if (length2 === 0) {\n                return;\n            }\n\n            if (length1 <= length2) {\n                mergeLow(start1, length1, start2, length2);\n            }\n            else {\n                mergeHigh(start1, length1, start2, length2);\n            }\n        }\n\n        function mergeLow(start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length1; i++) {\n                tmp[i] = array[start1 + i];\n            }\n\n            var cursor1 = 0;\n            var cursor2 = start2;\n            var dest = start1;\n\n            array[dest++] = array[cursor2++];\n\n            if (--length2 === 0) {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n                return;\n            }\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n                return;\n            }\n\n            var _minGallop = minGallop;\n            var count1, count2, exit;\n\n            while (1) {\n                count1 = 0;\n                count2 = 0;\n                exit = false;\n\n                do {\n                    if (compare(array[cursor2], tmp[cursor1]) < 0) {\n                        array[dest++] = array[cursor2++];\n                        count2++;\n                        count1 = 0;\n\n                        if (--length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest++] = tmp[cursor1++];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = gallopRight(array[cursor2], tmp, cursor1, length1, 0, compare);\n\n                    if (count1 !== 0) {\n                        for (i = 0; i < count1; i++) {\n                            array[dest + i] = tmp[cursor1 + i];\n                        }\n\n                        dest += count1;\n                        cursor1 += count1;\n                        length1 -= count1;\n                        if (length1 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest++] = array[cursor2++];\n\n                    if (--length2 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = gallopLeft(tmp[cursor1], array, cursor2, length2, 0, compare);\n\n                    if (count2 !== 0) {\n                        for (i = 0; i < count2; i++) {\n                            array[dest + i] = array[cursor2 + i];\n                        }\n\n                        dest += count2;\n                        cursor2 += count2;\n                        length2 -= count2;\n\n                        if (length2 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    array[dest++] = tmp[cursor1++];\n\n                    if (--length1 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            minGallop < 1 && (minGallop = 1);\n\n            if (length1 === 1) {\n                for (i = 0; i < length2; i++) {\n                    array[dest + i] = array[cursor2 + i];\n                }\n                array[dest + length2] = tmp[cursor1];\n            }\n            else if (length1 === 0) {\n                throw new Error();\n                // throw new Error('mergeLow preconditions were not respected');\n            }\n            else {\n                for (i = 0; i < length1; i++) {\n                    array[dest + i] = tmp[cursor1 + i];\n                }\n            }\n        }\n\n        function mergeHigh (start1, length1, start2, length2) {\n            var i = 0;\n\n            for (i = 0; i < length2; i++) {\n                tmp[i] = array[start2 + i];\n            }\n\n            var cursor1 = start1 + length1 - 1;\n            var cursor2 = length2 - 1;\n            var dest = start2 + length2 - 1;\n            var customCursor = 0;\n            var customDest = 0;\n\n            array[dest--] = array[cursor1--];\n\n            if (--length1 === 0) {\n                customCursor = dest - (length2 - 1);\n\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n\n                return;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n                return;\n            }\n\n            var _minGallop = minGallop;\n\n            while (true) {\n                var count1 = 0;\n                var count2 = 0;\n                var exit = false;\n\n                do {\n                    if (compare(tmp[cursor2], array[cursor1]) < 0) {\n                        array[dest--] = array[cursor1--];\n                        count1++;\n                        count2 = 0;\n                        if (--length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                    else {\n                        array[dest--] = tmp[cursor2--];\n                        count2++;\n                        count1 = 0;\n                        if (--length2 === 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n                } while ((count1 | count2) < _minGallop);\n\n                if (exit) {\n                    break;\n                }\n\n                do {\n                    count1 = length1 - gallopRight(tmp[cursor2], array, start1, length1, length1 - 1, compare);\n\n                    if (count1 !== 0) {\n                        dest -= count1;\n                        cursor1 -= count1;\n                        length1 -= count1;\n                        customDest = dest + 1;\n                        customCursor = cursor1 + 1;\n\n                        for (i = count1 - 1; i >= 0; i--) {\n                            array[customDest + i] = array[customCursor + i];\n                        }\n\n                        if (length1 === 0) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = tmp[cursor2--];\n\n                    if (--length2 === 1) {\n                        exit = true;\n                        break;\n                    }\n\n                    count2 = length2 - gallopLeft(array[cursor1], tmp, 0, length2, length2 - 1, compare);\n\n                    if (count2 !== 0) {\n                        dest -= count2;\n                        cursor2 -= count2;\n                        length2 -= count2;\n                        customDest = dest + 1;\n                        customCursor = cursor2 + 1;\n\n                        for (i = 0; i < count2; i++) {\n                            array[customDest + i] = tmp[customCursor + i];\n                        }\n\n                        if (length2 <= 1) {\n                            exit = true;\n                            break;\n                        }\n                    }\n\n                    array[dest--] = array[cursor1--];\n\n                    if (--length1 === 0) {\n                        exit = true;\n                        break;\n                    }\n\n                    _minGallop--;\n                } while (count1 >= DEFAULT_MIN_GALLOPING || count2 >= DEFAULT_MIN_GALLOPING);\n\n                if (exit) {\n                    break;\n                }\n\n                if (_minGallop < 0) {\n                    _minGallop = 0;\n                }\n\n                _minGallop += 2;\n            }\n\n            minGallop = _minGallop;\n\n            if (minGallop < 1) {\n                minGallop = 1;\n            }\n\n            if (length2 === 1) {\n                dest -= length1;\n                cursor1 -= length1;\n                customDest = dest + 1;\n                customCursor = cursor1 + 1;\n\n                for (i = length1 - 1; i >= 0; i--) {\n                    array[customDest + i] = array[customCursor + i];\n                }\n\n                array[dest] = tmp[cursor2];\n            }\n            else if (length2 === 0) {\n                throw new Error();\n                // throw new Error('mergeHigh preconditions were not respected');\n            }\n            else {\n                customCursor = dest - (length2 - 1);\n                for (i = 0; i < length2; i++) {\n                    array[customCursor + i] = tmp[i];\n                }\n            }\n        }\n\n        this.mergeRuns = mergeRuns;\n        this.forceMergeRuns = forceMergeRuns;\n        this.pushRun = pushRun;\n    }\n\n    function sort(array, compare, lo, hi) {\n        if (!lo) {\n            lo = 0;\n        }\n        if (!hi) {\n            hi = array.length;\n        }\n\n        var remaining = hi - lo;\n\n        if (remaining < 2) {\n            return;\n        }\n\n        var runLength = 0;\n\n        if (remaining < DEFAULT_MIN_MERGE) {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            binaryInsertionSort(array, lo, hi, lo + runLength, compare);\n            return;\n        }\n\n        var ts = new TimSort(array, compare);\n\n        var minRun = minRunLength(remaining);\n\n        do {\n            runLength = makeAscendingRun(array, lo, hi, compare);\n            if (runLength < minRun) {\n                var force = remaining;\n                if (force > minRun) {\n                    force = minRun;\n                }\n\n                binaryInsertionSort(array, lo, lo + force, lo + runLength, compare);\n                runLength = force;\n            }\n\n            ts.pushRun(lo, runLength);\n            ts.mergeRuns();\n\n            remaining -= runLength;\n            lo += runLength;\n        } while (remaining !== 0);\n\n        ts.forceMergeRuns();\n    }\n\n    module.exports = sort;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/timsort.js\n// module id = 654\n// module chunks = 0","/**\n * 可绘制的图形基类\n * Base class of all displayable graphic objects\n * @module zrender/graphic/Displayable\n */\n\n\n\n    var zrUtil = require('../core/util');\n\n    var Style = require('./Style');\n\n    var Element = require('../Element');\n    var RectText = require('./mixin/RectText');\n    // var Stateful = require('./mixin/Stateful');\n\n    /**\n     * @alias module:zrender/graphic/Displayable\n     * @extends module:zrender/Element\n     * @extends module:zrender/graphic/mixin/RectText\n     */\n    function Displayable(opts) {\n\n        opts = opts || {};\n\n        Element.call(this, opts);\n\n        // Extend properties\n        for (var name in opts) {\n            if (\n                opts.hasOwnProperty(name) &&\n                name !== 'style'\n            ) {\n                this[name] = opts[name];\n            }\n        }\n\n        /**\n         * @type {module:zrender/graphic/Style}\n         */\n        this.style = new Style(opts.style);\n\n        this._rect = null;\n        // Shapes for cascade clipping.\n        this.__clipPaths = [];\n\n        // FIXME Stateful must be mixined after style is setted\n        // Stateful.call(this, opts);\n    }\n\n    Displayable.prototype = {\n\n        constructor: Displayable,\n\n        type: 'displayable',\n\n        /**\n         * Displayable 是否为脏，Painter 中会根据该标记判断是否需要是否需要重新绘制\n         * Dirty flag. From which painter will determine if this displayable object needs brush\n         * @name module:zrender/graphic/Displayable#__dirty\n         * @type {boolean}\n         */\n        __dirty: true,\n\n        /**\n         * 图形是否可见，为true时不绘制图形，但是仍能触发鼠标事件\n         * If ignore drawing of the displayable object. Mouse event will still be triggered\n         * @name module:/zrender/graphic/Displayable#invisible\n         * @type {boolean}\n         * @default false\n         */\n        invisible: false,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z: 0,\n\n        /**\n         * @name module:/zrender/graphic/Displayable#z\n         * @type {number}\n         * @default 0\n         */\n        z2: 0,\n\n        /**\n         * z层level，决定绘画在哪层canvas中\n         * @name module:/zrender/graphic/Displayable#zlevel\n         * @type {number}\n         * @default 0\n         */\n        zlevel: 0,\n\n        /**\n         * 是否可拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        draggable: false,\n\n        /**\n         * 是否正在拖拽\n         * @name module:/zrender/graphic/Displayable#draggable\n         * @type {boolean}\n         * @default false\n         */\n        dragging: false,\n\n        /**\n         * 是否相应鼠标事件\n         * @name module:/zrender/graphic/Displayable#silent\n         * @type {boolean}\n         * @default false\n         */\n        silent: false,\n\n        /**\n         * If enable culling\n         * @type {boolean}\n         * @default false\n         */\n        culling: false,\n\n        /**\n         * Mouse cursor when hovered\n         * @name module:/zrender/graphic/Displayable#cursor\n         * @type {string}\n         */\n        cursor: 'pointer',\n\n        /**\n         * If hover area is bounding rect\n         * @name module:/zrender/graphic/Displayable#rectHover\n         * @type {string}\n         */\n        rectHover: false,\n\n        /**\n         * Render the element progressively when the value >= 0,\n         * usefull for large data.\n         * @type {number}\n         */\n        progressive: -1,\n\n        beforeBrush: function (ctx) {},\n\n        afterBrush: function (ctx) {},\n\n        /**\n         * 图形绘制方法\n         * @param {Canvas2DRenderingContext} ctx\n         */\n        // Interface\n        brush: function (ctx, prevEl) {},\n\n        /**\n         * 获取最小包围盒\n         * @return {module:zrender/core/BoundingRect}\n         */\n        // Interface\n        getBoundingRect: function () {},\n\n        /**\n         * 判断坐标 x, y 是否在图形上\n         * If displayable element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        contain: function (x, y) {\n            return this.rectContain(x, y);\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {\n            cb.call(context, this);\n        },\n\n        /**\n         * 判断坐标 x, y 是否在图形的包围盒上\n         * If bounding rect of element contain coord x, y\n         * @param  {number} x\n         * @param  {number} y\n         * @return {boolean}\n         */\n        rectContain: function (x, y) {\n            var coord = this.transformCoordToLocal(x, y);\n            var rect = this.getBoundingRect();\n            return rect.contain(coord[0], coord[1]);\n        },\n\n        /**\n         * 标记图形元素为脏，并且在下一帧重绘\n         * Mark displayable element dirty and refresh next frame\n         */\n        dirty: function () {\n            this.__dirty = true;\n\n            this._rect = null;\n\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * 图形是否会触发事件\n         * If displayable object binded any event\n         * @return {boolean}\n         */\n        // TODO, 通过 bind 绑定的事件\n        // isSilent: function () {\n        //     return !(\n        //         this.hoverable || this.draggable\n        //         || this.onmousemove || this.onmouseover || this.onmouseout\n        //         || this.onmousedown || this.onmouseup || this.onclick\n        //         || this.ondragenter || this.ondragover || this.ondragleave\n        //         || this.ondrop\n        //     );\n        // },\n        /**\n         * Alias for animate('style')\n         * @param {boolean} loop\n         */\n        animateStyle: function (loop) {\n            return this.animate('style', loop);\n        },\n\n        attrKV: function (key, value) {\n            if (key !== 'style') {\n                Element.prototype.attrKV.call(this, key, value);\n            }\n            else {\n                this.style.set(value);\n            }\n        },\n\n        /**\n         * @param {Object|string} key\n         * @param {*} value\n         */\n        setStyle: function (key, value) {\n            this.style.set(key, value);\n            this.dirty(false);\n            return this;\n        },\n\n        /**\n         * Use given style object\n         * @param  {Object} obj\n         */\n        useStyle: function (obj) {\n            this.style = new Style(obj);\n            this.dirty(false);\n            return this;\n        }\n    };\n\n    zrUtil.inherits(Displayable, Element);\n\n    zrUtil.mixin(Displayable, RectText);\n    // zrUtil.mixin(Displayable, Stateful);\n\n    module.exports = Displayable;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Displayable.js\n// module id = 655\n// module chunks = 0","\n\n    /**\n     * @param {Array.<Object>} colorStops\n     */\n    var Gradient = function (colorStops) {\n\n        this.colorStops = colorStops || [];\n    };\n\n    Gradient.prototype = {\n\n        constructor: Gradient,\n\n        addColorStop: function (offset, color) {\n            this.colorStops.push({\n\n                offset: offset,\n\n                color: color\n            });\n        }\n    };\n\n    module.exports = Gradient;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Gradient.js\n// module id = 656\n// module chunks = 0","/**\n * @module echarts/chart/helper/Symbol\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolUtil = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n\n    function normalizeSymbolSize(symbolSize) {\n        symbolSize = symbolSize instanceof Array\n            ? symbolSize.slice()\n            : [+symbolSize, +symbolSize];\n        symbolSize[0] /= 2;\n        symbolSize[1] /= 2;\n        return symbolSize;\n    }\n\n    /**\n     * @constructor\n     * @alias {module:echarts/chart/helper/Symbol}\n     * @param {module:echarts/data/List} data\n     * @param {number} idx\n     * @extends {module:zrender/graphic/Group}\n     */\n    function Symbol(data, idx, seriesScope) {\n        graphic.Group.call(this);\n\n        this.updateData(data, idx, seriesScope);\n    }\n\n    var symbolProto = Symbol.prototype;\n\n    function driftSymbol(dx, dy) {\n        this.parent.drift(dx, dy);\n    }\n\n    symbolProto._createSymbol = function (symbolType, data, idx) {\n        // Remove paths created before\n        this.removeAll();\n\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // var symbolPath = symbolUtil.createSymbol(\n        //     symbolType, -0.5, -0.5, 1, 1, color\n        // );\n        // If width/height are set too small (e.g., set to 1) on ios10\n        // and macOS Sierra, a circle stroke become a rect, no matter what\n        // the scale is set. So we set width/height as 2. See #4150.\n        var symbolPath = symbolUtil.createSymbol(\n            symbolType, -1, -1, 2, 2, color\n        );\n\n        symbolPath.attr({\n            z2: 100,\n            culling: true,\n            scale: [0, 0]\n        });\n        // Rewrite drift method\n        symbolPath.drift = driftSymbol;\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        graphic.initProps(symbolPath, {\n            scale: size\n        }, seriesModel, idx);\n        this._symbolType = symbolType;\n\n        this.add(symbolPath);\n    };\n\n    /**\n     * Stop animation\n     * @param {boolean} toLastFrame\n     */\n    symbolProto.stopSymbolAnimation = function (toLastFrame) {\n        this.childAt(0).stopAnimation(toLastFrame);\n    };\n\n    /**\n     * Get symbol path element\n     */\n    symbolProto.getSymbolPath = function () {\n        return this.childAt(0);\n    };\n\n    /**\n     * Get scale(aka, current symbol size).\n     * Including the change caused by animation\n     */\n    symbolProto.getScale = function () {\n        return this.childAt(0).scale;\n    };\n\n    /**\n     * Highlight symbol\n     */\n    symbolProto.highlight = function () {\n        this.childAt(0).trigger('emphasis');\n    };\n\n    /**\n     * Downplay symbol\n     */\n    symbolProto.downplay = function () {\n        this.childAt(0).trigger('normal');\n    };\n\n    /**\n     * @param {number} zlevel\n     * @param {number} z\n     */\n    symbolProto.setZ = function (zlevel, z) {\n        var symbolPath = this.childAt(0);\n        symbolPath.zlevel = zlevel;\n        symbolPath.z = z;\n    };\n\n    symbolProto.setDraggable = function (draggable) {\n        var symbolPath = this.childAt(0);\n        symbolPath.draggable = draggable;\n        symbolPath.cursor = draggable ? 'move' : 'pointer';\n    };\n\n    /**\n     * Update symbol properties\n     * @param  {module:echarts/data/List} data\n     * @param  {number} idx\n     */\n    symbolProto.updateData = function (data, idx, seriesScope) {\n        this.silent = false;\n\n        var symbolType = data.getItemVisual(idx, 'symbol') || 'circle';\n        var seriesModel = data.hostModel;\n        var symbolSize = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n        if (symbolType !== this._symbolType) {\n            this._createSymbol(symbolType, data, idx);\n        }\n        else {\n            var symbolPath = this.childAt(0);\n            graphic.updateProps(symbolPath, {\n                scale: symbolSize\n            }, seriesModel, idx);\n        }\n        this._updateCommon(data, idx, symbolSize, seriesScope);\n        this._seriesModel = seriesModel;\n    };\n\n    // Update common properties\n    var normalStyleAccessPath = ['itemStyle', 'normal'];\n    var emphasisStyleAccessPath = ['itemStyle', 'emphasis'];\n    var normalLabelAccessPath = ['label', 'normal'];\n    var emphasisLabelAccessPath = ['label', 'emphasis'];\n\n    symbolProto._updateCommon = function (data, idx, symbolSize, seriesScope) {\n        var symbolPath = this.childAt(0);\n        var seriesModel = data.hostModel;\n        var color = data.getItemVisual(idx, 'color');\n\n        // Reset style\n        if (symbolPath.type !== 'image') {\n            symbolPath.useStyle({\n                strokeNoScale: true\n            });\n        }\n\n        seriesScope = seriesScope || null;\n\n        var itemStyle = seriesScope && seriesScope.itemStyle;\n        var hoverItemStyle = seriesScope && seriesScope.hoverItemStyle;\n        var symbolRotate = seriesScope && seriesScope.symbolRotate;\n        var symbolOffset = seriesScope && seriesScope.symbolOffset;\n        var labelModel = seriesScope && seriesScope.labelModel;\n        var hoverLabelModel = seriesScope && seriesScope.hoverLabelModel;\n        var hoverAnimation = seriesScope && seriesScope.hoverAnimation;\n\n        if (!seriesScope || data.hasItemOption) {\n            var itemModel = data.getItemModel(idx);\n\n            // Color must be excluded.\n            // Because symbol provide setColor individually to set fill and stroke\n            itemStyle = itemModel.getModel(normalStyleAccessPath).getItemStyle(['color']);\n            hoverItemStyle = itemModel.getModel(emphasisStyleAccessPath).getItemStyle();\n\n            symbolRotate = itemModel.getShallow('symbolRotate');\n            symbolOffset = itemModel.getShallow('symbolOffset');\n\n            labelModel = itemModel.getModel(normalLabelAccessPath);\n            hoverLabelModel = itemModel.getModel(emphasisLabelAccessPath);\n            hoverAnimation = itemModel.getShallow('hoverAnimation');\n        }\n        else {\n            hoverItemStyle = zrUtil.extend({}, hoverItemStyle);\n        }\n\n        var elStyle = symbolPath.style;\n\n        symbolPath.attr('rotation', (symbolRotate || 0) * Math.PI / 180 || 0);\n\n        if (symbolOffset) {\n            symbolPath.attr('position', [\n                numberUtil.parsePercent(symbolOffset[0], symbolSize[0]),\n                numberUtil.parsePercent(symbolOffset[1], symbolSize[1])\n            ]);\n        }\n\n        // PENDING setColor before setStyle!!!\n        symbolPath.setColor(color);\n\n        symbolPath.setStyle(itemStyle);\n\n        var opacity = data.getItemVisual(idx, 'opacity');\n        if (opacity != null) {\n            elStyle.opacity = opacity;\n        }\n\n        // Get last value dim\n        var dimensions = data.dimensions.slice();\n        var valueDim;\n        var dataType;\n        while (dimensions.length && (\n            valueDim = dimensions.pop(),\n            dataType = data.getDimensionInfo(valueDim).type,\n            dataType === 'ordinal' || dataType === 'time'\n        )) {} // jshint ignore:line\n\n        if (valueDim != null && labelModel.getShallow('show')) {\n            graphic.setText(elStyle, labelModel, color);\n            elStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'normal'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            elStyle.text = '';\n        }\n\n        if (valueDim != null && hoverLabelModel.getShallow('show')) {\n            graphic.setText(hoverItemStyle, hoverLabelModel, color);\n            hoverItemStyle.text = zrUtil.retrieve(\n                seriesModel.getFormattedLabel(idx, 'emphasis'),\n                data.get(valueDim, idx)\n            );\n        }\n        else {\n            hoverItemStyle.text = '';\n        }\n\n        var size = normalizeSymbolSize(data.getItemVisual(idx, 'symbolSize'));\n\n        symbolPath.off('mouseover')\n            .off('mouseout')\n            .off('emphasis')\n            .off('normal');\n\n        symbolPath.hoverStyle = hoverItemStyle;\n\n        graphic.setHoverStyle(symbolPath);\n\n        if (hoverAnimation && seriesModel.ifEnableAnimation()) {\n            var onEmphasis = function() {\n                var ratio = size[1] / size[0];\n                this.animateTo({\n                    scale: [\n                        Math.max(size[0] * 1.1, size[0] + 3),\n                        Math.max(size[1] * 1.1, size[1] + 3 * ratio)\n                    ]\n                }, 400, 'elasticOut');\n            };\n            var onNormal = function() {\n                this.animateTo({\n                    scale: size\n                }, 400, 'elasticOut');\n            };\n            symbolPath.on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n    };\n\n    symbolProto.fadeOut = function (cb) {\n        var symbolPath = this.childAt(0);\n        // Avoid mistaken hover when fading out\n        this.silent = true;\n        // Not show text when animating\n        symbolPath.style.text = '';\n        graphic.updateProps(symbolPath, {\n            scale: [0, 0]\n        }, this._seriesModel, this.dataIndex, cb);\n    };\n\n    zrUtil.inherits(Symbol, graphic.Group);\n\n    module.exports = Symbol;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/Symbol.js\n// module id = 657\n// module chunks = 0","'use strict';\n\n\n    var ComponentModel = require('../../model/Component');\n    var zrUtil = require('zrender/lib/core/util');\n    var axisModelCreator = require('../axisModelCreator');\n\n    var AxisModel = ComponentModel.extend({\n\n        type: 'cartesian2dAxis',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Axis2D}\n         */\n        axis: null,\n\n        /**\n         * @override\n         */\n        init: function () {\n            AxisModel.superApply(this, 'init', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        mergeOption: function () {\n            AxisModel.superApply(this, 'mergeOption', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @override\n         */\n        restoreData: function () {\n            AxisModel.superApply(this, 'restoreData', arguments);\n            this.resetRange();\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        findGridModel: function () {\n            return this.ecModel.queryComponents({\n                mainType: 'grid',\n                index: this.get('gridIndex'),\n                id: this.get('gridId')\n            })[0];\n        }\n\n    });\n\n    function getAxisType(axisDim, option) {\n        // Default axis with data is category axis\n        return option.type || (option.data ? 'category' : 'value');\n    }\n\n    zrUtil.merge(AxisModel.prototype, require('../axisModelCommonMixin'));\n    zrUtil.merge(AxisModel.prototype, require('../axisModelZoomMixin'));\n\n    var extraOption = {\n        // gridIndex: 0,\n        // gridId: '',\n\n        // Offset is for multiple axis on the same position\n        offset: 0\n    };\n\n    axisModelCreator('x', AxisModel, getAxisType, extraOption);\n    axisModelCreator('y', AxisModel, getAxisType, extraOption);\n\n    module.exports = AxisModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/AxisModel.js\n// module id = 658\n// module chunks = 0","/**\n * Complete dimensions by data (guess dimension).\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * Complete the dimensions array guessed from the data structure.\n     * @param  {Array.<string>} dimensions      Necessary dimensions, like ['x', 'y']\n     * @param  {Array} data                     Data list. [[1, 2, 3], [2, 3, 4]]\n     * @param  {Array.<string>} defaultNames    Default names to fill not necessary dimensions, like ['value']\n     * @param  {string} extraPrefix             Prefix of name when filling the left dimensions.\n     * @return {Array.<string>}\n     */\n    function completeDimensions(dimensions, data, defaultNames, extraPrefix) {\n        if (!data) {\n            return dimensions;\n        }\n\n        var value0 = retrieveValue(data[0]);\n        var dimSize = zrUtil.isArray(value0) && value0.length || 1;\n\n        defaultNames = defaultNames || [];\n        extraPrefix = extraPrefix || 'extra';\n        for (var i = 0; i < dimSize; i++) {\n            if (!dimensions[i]) {\n                var name = defaultNames[i] || (extraPrefix + (i - defaultNames.length));\n                dimensions[i] = guessOrdinal(data, i)\n                    ? {type: 'ordinal', name: name}\n                    : name;\n            }\n        }\n\n        return dimensions;\n    }\n\n    // The rule should not be complex, otherwise user might not\n    // be able to known where the data is wrong.\n    var guessOrdinal = completeDimensions.guessOrdinal = function (data, dimIndex) {\n        for (var i = 0, len = data.length; i < len; i++) {\n            var value = retrieveValue(data[i]);\n\n            if (!zrUtil.isArray(value)) {\n                return false;\n            }\n\n            var value = value[dimIndex];\n            if (value != null && isFinite(value)) {\n                return false;\n            }\n            else if (zrUtil.isString(value) && value !== '-') {\n                return true;\n            }\n        }\n        return false;\n    };\n\n    function retrieveValue(o) {\n        return zrUtil.isArray(o) ? o : zrUtil.isObject(o) ? o.value: o;\n    }\n\n    module.exports = completeDimensions;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/helper/completeDimensions.js\n// module id = 659\n// module chunks = 0","\n    module.exports = {\n        clearColorPalette: function () {\n            this._colorIdx = 0;\n            this._colorNameMap = {};\n        },\n\n        getColorFromPalette: function (name, scope) {\n            scope = scope || this;\n            var colorIdx = scope._colorIdx || 0;\n            var colorNameMap = scope._colorNameMap || (scope._colorNameMap = {});\n            if (colorNameMap[name]) {\n                return colorNameMap[name];\n            }\n            var colorPalette = this.get('color', true) || [];\n            if (!colorPalette.length) {\n                return;\n            }\n\n            var color = colorPalette[colorIdx];\n            if (name) {\n                colorNameMap[name] = color;\n            }\n            scope._colorIdx = (colorIdx + 1) % colorPalette.length;\n\n            return color;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/colorPalette.js\n// module id = 660\n// module chunks = 0","'use strict';\n// Symbol factory\n\n\n    var graphic = require('./graphic');\n    var BoundingRect = require('zrender/lib/core/BoundingRect');\n\n    /**\n     * Triangle shape\n     * @inner\n     */\n    var Triangle = graphic.extendShape({\n        type: 'triangle',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy + height);\n            path.lineTo(cx - width, cy + height);\n            path.closePath();\n        }\n    });\n    /**\n     * Diamond shape\n     * @inner\n     */\n    var Diamond = graphic.extendShape({\n        type: 'diamond',\n        shape: {\n            cx: 0,\n            cy: 0,\n            width: 0,\n            height: 0\n        },\n        buildPath: function (path, shape) {\n            var cx = shape.cx;\n            var cy = shape.cy;\n            var width = shape.width / 2;\n            var height = shape.height / 2;\n            path.moveTo(cx, cy - height);\n            path.lineTo(cx + width, cy);\n            path.lineTo(cx, cy + height);\n            path.lineTo(cx - width, cy);\n            path.closePath();\n        }\n    });\n\n    /**\n     * Pin shape\n     * @inner\n     */\n    var Pin = graphic.extendShape({\n        type: 'pin',\n        shape: {\n            // x, y on the cusp\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (path, shape) {\n            var x = shape.x;\n            var y = shape.y;\n            var w = shape.width / 5 * 3;\n            // Height must be larger than width\n            var h = Math.max(w, shape.height);\n            var r = w / 2;\n\n            // Dist on y with tangent point and circle center\n            var dy = r * r / (h - r);\n            var cy = y - h + r + dy;\n            var angle = Math.asin(dy / r);\n            // Dist on x with tangent point and circle center\n            var dx = Math.cos(angle) * r;\n\n            var tanX = Math.sin(angle);\n            var tanY = Math.cos(angle);\n\n            path.arc(\n                x, cy, r,\n                Math.PI - angle,\n                Math.PI * 2 + angle\n            );\n\n            var cpLen = r * 0.6;\n            var cpLen2 = r * 0.7;\n            path.bezierCurveTo(\n                x + dx - tanX * cpLen, cy + dy + tanY * cpLen,\n                x, y - cpLen2,\n                x, y\n            );\n            path.bezierCurveTo(\n                x, y - cpLen2,\n                x - dx + tanX * cpLen, cy + dy + tanY * cpLen,\n                x - dx, cy + dy\n            );\n            path.closePath();\n        }\n    });\n\n    /**\n     * Arrow shape\n     * @inner\n     */\n    var Arrow = graphic.extendShape({\n\n        type: 'arrow',\n\n        shape: {\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var height = shape.height;\n            var width = shape.width;\n            var x = shape.x;\n            var y = shape.y;\n            var dx = width / 3 * 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(x + dx, y + height);\n            ctx.lineTo(x, y + height / 4 * 3);\n            ctx.lineTo(x - dx, y + height);\n            ctx.lineTo(x, y);\n            ctx.closePath();\n        }\n    });\n\n    /**\n     * Map of path contructors\n     * @type {Object.<string, module:zrender/graphic/Path>}\n     */\n    var symbolCtors = {\n        line: graphic.Line,\n\n        rect: graphic.Rect,\n\n        roundRect: graphic.Rect,\n\n        square: graphic.Rect,\n\n        circle: graphic.Circle,\n\n        diamond: Diamond,\n\n        pin: Pin,\n\n        arrow: Arrow,\n\n        triangle: Triangle\n    };\n\n    var symbolShapeMakers = {\n\n        line: function (x, y, w, h, shape) {\n            // FIXME\n            shape.x1 = x;\n            shape.y1 = y + h / 2;\n            shape.x2 = x + w;\n            shape.y2 = y + h / 2;\n        },\n\n        rect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        roundRect: function (x, y, w, h, shape) {\n            shape.x = x;\n            shape.y = y;\n            shape.width = w;\n            shape.height = h;\n            shape.r = Math.min(w, h) / 4;\n        },\n\n        square: function (x, y, w, h, shape) {\n            var size = Math.min(w, h);\n            shape.x = x;\n            shape.y = y;\n            shape.width = size;\n            shape.height = size;\n        },\n\n        circle: function (x, y, w, h, shape) {\n            // Put circle in the center of square\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.r = Math.min(w, h) / 2;\n        },\n\n        diamond: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        pin: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        arrow: function (x, y, w, h, shape) {\n            shape.x = x + w / 2;\n            shape.y = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        },\n\n        triangle: function (x, y, w, h, shape) {\n            shape.cx = x + w / 2;\n            shape.cy = y + h / 2;\n            shape.width = w;\n            shape.height = h;\n        }\n    };\n\n    var symbolBuildProxies = {};\n    for (var name in symbolCtors) {\n        if (symbolCtors.hasOwnProperty(name)) {\n            symbolBuildProxies[name] = new symbolCtors[name]();\n        }\n    }\n\n    var Symbol = graphic.extendShape({\n\n        type: 'symbol',\n\n        shape: {\n            symbolType: '',\n            x: 0,\n            y: 0,\n            width: 0,\n            height: 0\n        },\n\n        beforeBrush: function () {\n            var style = this.style;\n            var shape = this.shape;\n            // FIXME\n            if (shape.symbolType === 'pin' && style.textPosition === 'inside') {\n                style.textPosition = ['50%', '40%'];\n                style.textAlign = 'center';\n                style.textVerticalAlign = 'middle';\n            }\n        },\n\n        buildPath: function (ctx, shape, inBundle) {\n            var symbolType = shape.symbolType;\n            var proxySymbol = symbolBuildProxies[symbolType];\n            if (shape.symbolType !== 'none') {\n                if (!proxySymbol) {\n                    // Default rect\n                    symbolType = 'rect';\n                    proxySymbol = symbolBuildProxies[symbolType];\n                }\n                symbolShapeMakers[symbolType](\n                    shape.x, shape.y, shape.width, shape.height, proxySymbol.shape\n                );\n                proxySymbol.buildPath(ctx, proxySymbol.shape, inBundle);\n            }\n        }\n    });\n\n    // Provide setColor helper method to avoid determine if set the fill or stroke outside\n    var symbolPathSetColor = function (color) {\n        if (this.type !== 'image') {\n            var symbolStyle = this.style;\n            var symbolShape = this.shape;\n            if (symbolShape && symbolShape.symbolType === 'line') {\n                symbolStyle.stroke = color;\n            }\n            else if (this.__isEmptyBrush) {\n                symbolStyle.stroke = color;\n                symbolStyle.fill = '#fff';\n            }\n            else {\n                // FIXME 判断图形默认是填充还是描边，使用 onlyStroke ?\n                symbolStyle.fill && (symbolStyle.fill = color);\n                symbolStyle.stroke && (symbolStyle.stroke = color);\n            }\n            this.dirty(false);\n        }\n    };\n\n    var symbolUtil = {\n        /**\n         * Create a symbol element with given symbol configuration: shape, x, y, width, height, color\n         * @param {string} symbolType\n         * @param {number} x\n         * @param {number} y\n         * @param {number} w\n         * @param {number} h\n         * @param {string} color\n         */\n        createSymbol: function (symbolType, x, y, w, h, color) {\n            var isEmpty = symbolType.indexOf('empty') === 0;\n            if (isEmpty) {\n                symbolType = symbolType.substr(5, 1).toLowerCase() + symbolType.substr(6);\n            }\n            var symbolPath;\n\n            if (symbolType.indexOf('image://') === 0) {\n                symbolPath = new graphic.Image({\n                    style: {\n                        image: symbolType.slice(8),\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n            else if (symbolType.indexOf('path://') === 0) {\n                symbolPath = graphic.makePath(symbolType.slice(7), {}, new BoundingRect(x, y, w, h));\n            }\n            else {\n                symbolPath = new Symbol({\n                    shape: {\n                        symbolType: symbolType,\n                        x: x,\n                        y: y,\n                        width: w,\n                        height: h\n                    }\n                });\n            }\n\n            symbolPath.__isEmptyBrush = isEmpty;\n\n            symbolPath.setColor = symbolPathSetColor;\n\n            symbolPath.setColor(color);\n\n            return symbolPath;\n        }\n    };\n\n    module.exports = symbolUtil;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/symbol.js\n// module id = 661\n// module chunks = 0","var g;\r\n\r\n// This works in non-strict mode\r\ng = (function() { return this; })();\r\n\r\ntry {\r\n\t// This works if eval is allowed (see CSP)\r\n\tg = g || Function(\"return this\")() || (1,eval)(\"this\");\r\n} catch(e) {\r\n\t// This works if the window reference is available\r\n\tif(typeof window === \"object\")\r\n\t\tg = window;\r\n}\r\n\r\n// g can still be undefined, but nothing to do about it...\r\n// We return undefined, instead of nothing here, so it's\r\n// easier to handle this case. if(!global) { ...}\r\n\r\nmodule.exports = g;\r\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// (webpack)/buildin/global.js\n// module id = 664\n// module chunks = 0","'use strict';\n/**\n * @module zrender/Element\n */\n\n\n    var guid = require('./core/guid');\n    var Eventful = require('./mixin/Eventful');\n    var Transformable = require('./mixin/Transformable');\n    var Animatable = require('./mixin/Animatable');\n    var zrUtil = require('./core/util');\n\n    /**\n     * @alias module:zrender/Element\n     * @constructor\n     * @extends {module:zrender/mixin/Animatable}\n     * @extends {module:zrender/mixin/Transformable}\n     * @extends {module:zrender/mixin/Eventful}\n     */\n    var Element = function (opts) {\n\n        Transformable.call(this, opts);\n        Eventful.call(this, opts);\n        Animatable.call(this, opts);\n\n        /**\n         * 画布元素ID\n         * @type {string}\n         */\n        this.id = opts.id || guid();\n    };\n\n    Element.prototype = {\n\n        /**\n         * 元素类型\n         * Element type\n         * @type {string}\n         */\n        type: 'element',\n\n        /**\n         * 元素名字\n         * Element name\n         * @type {string}\n         */\n        name: '',\n\n        /**\n         * ZRender 实例对象，会在 element 添加到 zrender 实例中后自动赋值\n         * ZRender instance will be assigned when element is associated with zrender\n         * @name module:/zrender/Element#__zr\n         * @type {module:zrender/ZRender}\n         */\n        __zr: null,\n\n        /**\n         * 图形是否忽略，为true时忽略图形的绘制以及事件触发\n         * If ignore drawing and events of the element object\n         * @name module:/zrender/Element#ignore\n         * @type {boolean}\n         * @default false\n         */\n        ignore: false,\n\n        /**\n         * 用于裁剪的路径(shape)，所有 Group 内的路径在绘制时都会被这个路径裁剪\n         * 该路径会继承被裁减对象的变换\n         * @type {module:zrender/graphic/Path}\n         * @see http://www.w3.org/TR/2dcontext/#clipping-region\n         * @readOnly\n         */\n        clipPath: null,\n\n        /**\n         * Drift element\n         * @param  {number} dx dx on the global space\n         * @param  {number} dy dy on the global space\n         */\n        drift: function (dx, dy) {\n            switch (this.draggable) {\n                case 'horizontal':\n                    dy = 0;\n                    break;\n                case 'vertical':\n                    dx = 0;\n                    break;\n            }\n\n            var m = this.transform;\n            if (!m) {\n                m = this.transform = [1, 0, 0, 1, 0, 0];\n            }\n            m[4] += dx;\n            m[5] += dy;\n\n            this.decomposeTransform();\n            this.dirty(false);\n        },\n\n        /**\n         * Hook before update\n         */\n        beforeUpdate: function () {},\n        /**\n         * Hook after update\n         */\n        afterUpdate: function () {},\n        /**\n         * Update each frame\n         */\n        update: function () {\n            this.updateTransform();\n        },\n\n        /**\n         * @param  {Function} cb\n         * @param  {}   context\n         */\n        traverse: function (cb, context) {},\n\n        /**\n         * @protected\n         */\n        attrKV: function (key, value) {\n            if (key === 'position' || key === 'scale' || key === 'origin') {\n                // Copy the array\n                if (value) {\n                    var target = this[key];\n                    if (!target) {\n                        target = this[key] = [];\n                    }\n                    target[0] = value[0];\n                    target[1] = value[1];\n                }\n            }\n            else {\n                this[key] = value;\n            }\n        },\n\n        /**\n         * Hide the element\n         */\n        hide: function () {\n            this.ignore = true;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * Show the element\n         */\n        show: function () {\n            this.ignore = false;\n            this.__zr && this.__zr.refresh();\n        },\n\n        /**\n         * @param {string|Object} key\n         * @param {*} value\n         */\n        attr: function (key, value) {\n            if (typeof key === 'string') {\n                this.attrKV(key, value);\n            }\n            else if (zrUtil.isObject(key)) {\n                for (var name in key) {\n                    if (key.hasOwnProperty(name)) {\n                        this.attrKV(name, key[name]);\n                    }\n                }\n            }\n\n            this.dirty(false);\n\n            return this;\n        },\n\n        /**\n         * @param {module:zrender/graphic/Path} clipPath\n         */\n        setClipPath: function (clipPath) {\n            var zr = this.__zr;\n            if (zr) {\n                clipPath.addSelfToZr(zr);\n            }\n\n            // Remove previous clip path\n            if (this.clipPath && this.clipPath !== clipPath) {\n                this.removeClipPath();\n            }\n\n            this.clipPath = clipPath;\n            clipPath.__zr = zr;\n            clipPath.__clipTarget = this;\n\n            this.dirty(false);\n        },\n\n        /**\n         */\n        removeClipPath: function () {\n            var clipPath = this.clipPath;\n            if (clipPath) {\n                if (clipPath.__zr) {\n                    clipPath.removeSelfFromZr(clipPath.__zr);\n                }\n\n                clipPath.__zr = null;\n                clipPath.__clipTarget = null;\n                this.clipPath = null;\n\n                this.dirty(false);\n            }\n        },\n\n        /**\n         * Add self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        addSelfToZr: function (zr) {\n            this.__zr = zr;\n            // 添加动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.addAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.addSelfToZr(zr);\n            }\n        },\n\n        /**\n         * Remove self from zrender instance.\n         * Not recursively because it will be invoked when element added to storage.\n         * @param {module:zrender/ZRender} zr\n         */\n        removeSelfFromZr: function (zr) {\n            this.__zr = null;\n            // 移除动画\n            var animators = this.animators;\n            if (animators) {\n                for (var i = 0; i < animators.length; i++) {\n                    zr.animation.removeAnimator(animators[i]);\n                }\n            }\n\n            if (this.clipPath) {\n                this.clipPath.removeSelfFromZr(zr);\n            }\n        }\n    };\n\n    zrUtil.mixin(Element, Animatable);\n    zrUtil.mixin(Element, Transformable);\n    zrUtil.mixin(Element, Eventful);\n\n    module.exports = Element;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/Element.js\n// module id = 665\n// module chunks = 0","/**\n * @module echarts/animation/Animator\n */\n\n\n    var Clip = require('./Clip');\n    var color = require('../tool/color');\n    var util = require('../core/util');\n    var isArrayLike = util.isArrayLike;\n\n    var arraySlice = Array.prototype.slice;\n\n    function defaultGetter(target, key) {\n        return target[key];\n    }\n\n    function defaultSetter(target, key, value) {\n        target[key] = value;\n    }\n\n    /**\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} percent\n     * @return {number}\n     */\n    function interpolateNumber(p0, p1, percent) {\n        return (p1 - p0) * percent + p0;\n    }\n\n    /**\n     * @param  {string} p0\n     * @param  {string} p1\n     * @param  {number} percent\n     * @return {string}\n     */\n    function interpolateString(p0, p1, percent) {\n        return percent > 0.5 ? p1 : p0;\n    }\n\n    /**\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {number} percent\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function interpolateArray(p0, p1, percent, out, arrDim) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = interpolateNumber(p0[i], p1[i], percent);\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = interpolateNumber(\n                        p0[i][j], p1[i][j], percent\n                    );\n                }\n            }\n        }\n    }\n\n    // arr0 is source array, arr1 is target array.\n    // Do some preprocess to avoid error happened when interpolating from arr0 to arr1\n    function fillArr(arr0, arr1, arrDim) {\n        var arr0Len = arr0.length;\n        var arr1Len = arr1.length;\n        if (arr0Len !== arr1Len) {\n            // FIXME Not work for TypedArray\n            var isPreviousLarger = arr0Len > arr1Len;\n            if (isPreviousLarger) {\n                // Cut the previous\n                arr0.length = arr1Len;\n            }\n            else {\n                // Fill the previous\n                for (var i = arr0Len; i < arr1Len; i++) {\n                    arr0.push(\n                        arrDim === 1 ? arr1[i] : arraySlice.call(arr1[i])\n                    );\n                }\n            }\n        }\n        // Handling NaN value\n        var len2 = arr0[0] && arr0[0].length;\n        for (var i = 0; i < arr0.length; i++) {\n            if (arrDim === 1) {\n                if (isNaN(arr0[i])) {\n                    arr0[i] = arr1[i];\n                }\n            }\n            else {\n                for (var j = 0; j < len2; j++) {\n                    if (isNaN(arr0[i][j])) {\n                        arr0[i][j] = arr1[i][j];\n                    }\n                }\n            }\n        }\n    }\n\n    /**\n     * @param  {Array} arr0\n     * @param  {Array} arr1\n     * @param  {number} arrDim\n     * @return {boolean}\n     */\n    function isArraySame(arr0, arr1, arrDim) {\n        if (arr0 === arr1) {\n            return true;\n        }\n        var len = arr0.length;\n        if (len !== arr1.length) {\n            return false;\n        }\n        if (arrDim === 1) {\n            for (var i = 0; i < len; i++) {\n                if (arr0[i] !== arr1[i]) {\n                    return false;\n                }\n            }\n        }\n        else {\n            var len2 = arr0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    if (arr0[i][j] !== arr1[i][j]) {\n                        return false;\n                    }\n                }\n            }\n        }\n        return true;\n    }\n\n    /**\n     * Catmull Rom interpolate array\n     * @param  {Array} p0\n     * @param  {Array} p1\n     * @param  {Array} p2\n     * @param  {Array} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @param  {Array} out\n     * @param  {number} arrDim\n     */\n    function catmullRomInterpolateArray(\n        p0, p1, p2, p3, t, t2, t3, out, arrDim\n    ) {\n        var len = p0.length;\n        if (arrDim == 1) {\n            for (var i = 0; i < len; i++) {\n                out[i] = catmullRomInterpolate(\n                    p0[i], p1[i], p2[i], p3[i], t, t2, t3\n                );\n            }\n        }\n        else {\n            var len2 = p0[0].length;\n            for (var i = 0; i < len; i++) {\n                for (var j = 0; j < len2; j++) {\n                    out[i][j] = catmullRomInterpolate(\n                        p0[i][j], p1[i][j], p2[i][j], p3[i][j],\n                        t, t2, t3\n                    );\n                }\n            }\n        }\n    }\n\n    /**\n     * Catmull Rom interpolate number\n     * @param  {number} p0\n     * @param  {number} p1\n     * @param  {number} p2\n     * @param  {number} p3\n     * @param  {number} t\n     * @param  {number} t2\n     * @param  {number} t3\n     * @return {number}\n     */\n    function catmullRomInterpolate(p0, p1, p2, p3, t, t2, t3) {\n        var v0 = (p2 - p0) * 0.5;\n        var v1 = (p3 - p1) * 0.5;\n        return (2 * (p1 - p2) + v0 + v1) * t3\n                + (-3 * (p1 - p2) - 2 * v0 - v1) * t2\n                + v0 * t + p1;\n    }\n\n    function cloneValue(value) {\n        if (isArrayLike(value)) {\n            var len = value.length;\n            if (isArrayLike(value[0])) {\n                var ret = [];\n                for (var i = 0; i < len; i++) {\n                    ret.push(arraySlice.call(value[i]));\n                }\n                return ret;\n            }\n\n            return arraySlice.call(value);\n        }\n\n        return value;\n    }\n\n    function rgba2String(rgba) {\n        rgba[0] = Math.floor(rgba[0]);\n        rgba[1] = Math.floor(rgba[1]);\n        rgba[2] = Math.floor(rgba[2]);\n\n        return 'rgba(' + rgba.join(',') + ')';\n    }\n\n    function createTrackClip (animator, easing, oneTrackDone, keyframes, propName) {\n        var getter = animator._getter;\n        var setter = animator._setter;\n        var useSpline = easing === 'spline';\n\n        var trackLen = keyframes.length;\n        if (!trackLen) {\n            return;\n        }\n        // Guess data type\n        var firstVal = keyframes[0].value;\n        var isValueArray = isArrayLike(firstVal);\n        var isValueColor = false;\n        var isValueString = false;\n\n        // For vertices morphing\n        var arrDim = (\n                isValueArray\n                && isArrayLike(firstVal[0])\n            )\n            ? 2 : 1;\n        var trackMaxTime;\n        // Sort keyframe as ascending\n        keyframes.sort(function(a, b) {\n            return a.time - b.time;\n        });\n\n        trackMaxTime = keyframes[trackLen - 1].time;\n        // Percents of each keyframe\n        var kfPercents = [];\n        // Value of each keyframe\n        var kfValues = [];\n        var prevValue = keyframes[0].value;\n        var isAllValueEqual = true;\n        for (var i = 0; i < trackLen; i++) {\n            kfPercents.push(keyframes[i].time / trackMaxTime);\n            // Assume value is a color when it is a string\n            var value = keyframes[i].value;\n\n            // Check if value is equal, deep check if value is array\n            if (!((isValueArray && isArraySame(value, prevValue, arrDim))\n                || (!isValueArray && value === prevValue))) {\n                isAllValueEqual = false;\n            }\n            prevValue = value;\n\n            // Try converting a string to a color array\n            if (typeof value == 'string') {\n                var colorArray = color.parse(value);\n                if (colorArray) {\n                    value = colorArray;\n                    isValueColor = true;\n                }\n                else {\n                    isValueString = true;\n                }\n            }\n            kfValues.push(value);\n        }\n        if (isAllValueEqual) {\n            return;\n        }\n\n        var lastValue = kfValues[trackLen - 1];\n        // Polyfill array and NaN value\n        for (var i = 0; i < trackLen - 1; i++) {\n            if (isValueArray) {\n                fillArr(kfValues[i], lastValue, arrDim);\n            }\n            else {\n                if (isNaN(kfValues[i]) && !isNaN(lastValue) && !isValueString && !isValueColor) {\n                    kfValues[i] = lastValue;\n                }\n            }\n        }\n        isValueArray && fillArr(getter(animator._target, propName), lastValue, arrDim);\n\n        // Cache the key of last frame to speed up when\n        // animation playback is sequency\n        var lastFrame = 0;\n        var lastFramePercent = 0;\n        var start;\n        var w;\n        var p0;\n        var p1;\n        var p2;\n        var p3;\n\n        if (isValueColor) {\n            var rgba = [0, 0, 0, 0];\n        }\n\n        var onframe = function (target, percent) {\n            // Find the range keyframes\n            // kf1-----kf2---------current--------kf3\n            // find kf2 and kf3 and do interpolation\n            var frame;\n            // In the easing function like elasticOut, percent may less than 0\n            if (percent < 0) {\n                frame = 0;\n            }\n            else if (percent < lastFramePercent) {\n                // Start from next key\n                // PENDING start from lastFrame ?\n                start = Math.min(lastFrame + 1, trackLen - 1);\n                for (frame = start; frame >= 0; frame--) {\n                    if (kfPercents[frame] <= percent) {\n                        break;\n                    }\n                }\n                // PENDING really need to do this ?\n                frame = Math.min(frame, trackLen - 2);\n            }\n            else {\n                for (frame = lastFrame; frame < trackLen; frame++) {\n                    if (kfPercents[frame] > percent) {\n                        break;\n                    }\n                }\n                frame = Math.min(frame - 1, trackLen - 2);\n            }\n            lastFrame = frame;\n            lastFramePercent = percent;\n\n            var range = (kfPercents[frame + 1] - kfPercents[frame]);\n            if (range === 0) {\n                return;\n            }\n            else {\n                w = (percent - kfPercents[frame]) / range;\n            }\n            if (useSpline) {\n                p1 = kfValues[frame];\n                p0 = kfValues[frame === 0 ? frame : frame - 1];\n                p2 = kfValues[frame > trackLen - 2 ? trackLen - 1 : frame + 1];\n                p3 = kfValues[frame > trackLen - 3 ? trackLen - 1 : frame + 2];\n                if (isValueArray) {\n                    catmullRomInterpolateArray(\n                        p0, p1, p2, p3, w, w * w, w * w * w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        value = catmullRomInterpolateArray(\n                            p0, p1, p2, p3, w, w * w, w * w * w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(p1, p2, w);\n                    }\n                    else {\n                        value = catmullRomInterpolate(\n                            p0, p1, p2, p3, w, w * w, w * w * w\n                        );\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n            else {\n                if (isValueArray) {\n                    interpolateArray(\n                        kfValues[frame], kfValues[frame + 1], w,\n                        getter(target, propName),\n                        arrDim\n                    );\n                }\n                else {\n                    var value;\n                    if (isValueColor) {\n                        interpolateArray(\n                            kfValues[frame], kfValues[frame + 1], w,\n                            rgba, 1\n                        );\n                        value = rgba2String(rgba);\n                    }\n                    else if (isValueString) {\n                        // String is step(0.5)\n                        return interpolateString(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    else {\n                        value = interpolateNumber(kfValues[frame], kfValues[frame + 1], w);\n                    }\n                    setter(\n                        target,\n                        propName,\n                        value\n                    );\n                }\n            }\n        };\n\n        var clip = new Clip({\n            target: animator._target,\n            life: trackMaxTime,\n            loop: animator._loop,\n            delay: animator._delay,\n            onframe: onframe,\n            ondestroy: oneTrackDone\n        });\n\n        if (easing && easing !== 'spline') {\n            clip.easing = easing;\n        }\n\n        return clip;\n    }\n\n    /**\n     * @alias module:zrender/animation/Animator\n     * @constructor\n     * @param {Object} target\n     * @param {boolean} loop\n     * @param {Function} getter\n     * @param {Function} setter\n     */\n    var Animator = function(target, loop, getter, setter) {\n        this._tracks = {};\n        this._target = target;\n\n        this._loop = loop || false;\n\n        this._getter = getter || defaultGetter;\n        this._setter = setter || defaultSetter;\n\n        this._clipCount = 0;\n\n        this._delay = 0;\n\n        this._doneList = [];\n\n        this._onframeList = [];\n\n        this._clipList = [];\n    };\n\n    Animator.prototype = {\n        /**\n         * 设置动画关键帧\n         * @param  {number} time 关键帧时间，单位是ms\n         * @param  {Object} props 关键帧的属性值，key-value表示\n         * @return {module:zrender/animation/Animator}\n         */\n        when: function(time /* ms */, props) {\n            var tracks = this._tracks;\n            for (var propName in props) {\n                if (!props.hasOwnProperty(propName)) {\n                    continue;\n                }\n\n                if (!tracks[propName]) {\n                    tracks[propName] = [];\n                    // Invalid value\n                    var value = this._getter(this._target, propName);\n                    if (value == null) {\n                        // zrLog('Invalid property ' + propName);\n                        continue;\n                    }\n                    // If time is 0\n                    //  Then props is given initialize value\n                    // Else\n                    //  Initialize value from current prop value\n                    if (time !== 0) {\n                        tracks[propName].push({\n                            time: 0,\n                            value: cloneValue(value)\n                        });\n                    }\n                }\n                tracks[propName].push({\n                    time: time,\n                    value: props[propName]\n                });\n            }\n            return this;\n        },\n        /**\n         * 添加动画每一帧的回调函数\n         * @param  {Function} callback\n         * @return {module:zrender/animation/Animator}\n         */\n        during: function (callback) {\n            this._onframeList.push(callback);\n            return this;\n        },\n\n        _doneCallback: function () {\n            // Clear all tracks\n            this._tracks = {};\n            // Clear all clips\n            this._clipList.length = 0;\n\n            var doneList = this._doneList;\n            var len = doneList.length;\n            for (var i = 0; i < len; i++) {\n                doneList[i].call(this);\n            }\n        },\n        /**\n         * 开始执行动画\n         * @param  {string|Function} easing\n         *         动画缓动函数，详见{@link module:zrender/animation/easing}\n         * @return {module:zrender/animation/Animator}\n         */\n        start: function (easing) {\n\n            var self = this;\n            var clipCount = 0;\n\n            var oneTrackDone = function() {\n                clipCount--;\n                if (!clipCount) {\n                    self._doneCallback();\n                }\n            };\n\n            var lastClip;\n            for (var propName in this._tracks) {\n                if (!this._tracks.hasOwnProperty(propName)) {\n                    continue;\n                }\n                var clip = createTrackClip(\n                    this, easing, oneTrackDone,\n                    this._tracks[propName], propName\n                );\n                if (clip) {\n                    this._clipList.push(clip);\n                    clipCount++;\n\n                    // If start after added to animation\n                    if (this.animation) {\n                        this.animation.addClip(clip);\n                    }\n\n                    lastClip = clip;\n                }\n            }\n\n            // Add during callback on the last clip\n            if (lastClip) {\n                var oldOnFrame = lastClip.onframe;\n                lastClip.onframe = function (target, percent) {\n                    oldOnFrame(target, percent);\n\n                    for (var i = 0; i < self._onframeList.length; i++) {\n                        self._onframeList[i](target, percent);\n                    }\n                };\n            }\n\n            if (!clipCount) {\n                this._doneCallback();\n            }\n            return this;\n        },\n        /**\n         * 停止动画\n         * @param {boolean} forwardToLast If move to last frame before stop\n         */\n        stop: function (forwardToLast) {\n            var clipList = this._clipList;\n            var animation = this.animation;\n            for (var i = 0; i < clipList.length; i++) {\n                var clip = clipList[i];\n                if (forwardToLast) {\n                    // Move to last frame before stop\n                    clip.onframe(this._target, 1);\n                }\n                animation && animation.removeClip(clip);\n            }\n            clipList.length = 0;\n        },\n        /**\n         * 设置动画延迟开始的时间\n         * @param  {number} time 单位ms\n         * @return {module:zrender/animation/Animator}\n         */\n        delay: function (time) {\n            this._delay = time;\n            return this;\n        },\n        /**\n         * 添加动画结束的回调\n         * @param  {Function} cb\n         * @return {module:zrender/animation/Animator}\n         */\n        done: function(cb) {\n            if (cb) {\n                this._doneList.push(cb);\n            }\n            return this;\n        },\n\n        /**\n         * @return {Array.<module:zrender/animation/Clip>}\n         */\n        getClips: function () {\n            return this._clipList;\n        }\n    };\n\n    module.exports = Animator;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/Animator.js\n// module id = 666\n// module chunks = 0","\n\n    module.exports = (typeof window !== 'undefined' &&\n                                    (window.requestAnimationFrame\n                                    || window.msRequestAnimationFrame\n                                    || window.mozRequestAnimationFrame\n                                    || window.webkitRequestAnimationFrame))\n                                || function (func) {\n                                    setTimeout(func, 16);\n                                };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/animation/requestAnimationFrame.js\n// module id = 667\n// module chunks = 0","\n\n    var PI2 = Math.PI * 2;\n    module.exports = {\n        normalizeRadian: function(angle) {\n            angle %= PI2;\n            if (angle < 0) {\n                angle += PI2;\n            }\n            return angle;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/contain/util.js\n// module id = 668\n// module chunks = 0","/**\n * zrender: 生成唯一id\n *\n * @author errorrik (errorrik@gmail.com)\n */\n\n\n    var idStart = 0x0907;\n\n    module.exports = function () {\n        return idStart++;\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/guid.js\n// module id = 669\n// module chunks = 0","\n        var config = require('../config');\n\n        /**\n         * @exports zrender/tool/log\n         * @author Kener (@Kener-林峰, kener.linfeng@gmail.com)\n         */\n        module.exports = function() {\n            if (config.debugMode === 0) {\n                return;\n            }\n            else if (config.debugMode == 1) {\n                for (var k in arguments) {\n                    throw new Error(arguments[k]);\n                }\n            }\n            else if (config.debugMode > 1) {\n                for (var k in arguments) {\n                    console.log(arguments[k]);\n                }\n            }\n        };\n\n        /* for debug\n        return function(mes) {\n            document.getElementById('wrong-message').innerHTML =\n                mes + ' ' + (new Date() - 0)\n                + '<br/>'\n                + document.getElementById('wrong-message').innerHTML;\n        };\n        */\n    \n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/core/log.js\n// module id = 670\n// module chunks = 0","/**\n * Image element\n * @module zrender/graphic/Image\n */\n\n\n\n    var Displayable = require('./Displayable');\n    var BoundingRect = require('../core/BoundingRect');\n    var zrUtil = require('../core/util');\n\n    var LRU = require('../core/LRU');\n    var globalImageCache = new LRU(50);\n    /**\n     * @alias zrender/graphic/Image\n     * @extends module:zrender/graphic/Displayable\n     * @constructor\n     * @param {Object} opts\n     */\n    function ZImage(opts) {\n        Displayable.call(this, opts);\n    }\n\n    ZImage.prototype = {\n\n        constructor: ZImage,\n\n        type: 'image',\n\n        brush: function (ctx, prevEl) {\n            var style = this.style;\n            var src = style.image;\n            var image;\n\n            // Must bind each time\n            style.bind(ctx, this, prevEl);\n            // style.image is a url string\n            if (typeof src === 'string') {\n                image = this._image;\n            }\n            // style.image is an HTMLImageElement or HTMLCanvasElement or Canvas\n            else {\n                image = src;\n            }\n            // FIXME Case create many images with src\n            if (!image && src) {\n                // Try get from global image cache\n                var cachedImgObj = globalImageCache.get(src);\n                if (!cachedImgObj) {\n                    // Create a new image\n                    image = new Image();\n                    image.onload = function () {\n                        image.onload = null;\n                        for (var i = 0; i < cachedImgObj.pending.length; i++) {\n                            cachedImgObj.pending[i].dirty();\n                        }\n                    };\n                    cachedImgObj = {\n                        image: image,\n                        pending: [this]\n                    };\n                    image.src = src;\n                    globalImageCache.put(src, cachedImgObj);\n                    this._image = image;\n                    return;\n                }\n                else {\n                    image = cachedImgObj.image;\n                    this._image = image;\n                    // Image is not complete finish, add to pending list\n                    if (!image.width || !image.height) {\n                        cachedImgObj.pending.push(this);\n                        return;\n                    }\n                }\n            }\n\n            if (image) {\n                // 图片已经加载完成\n                // if (image.nodeName.toUpperCase() == 'IMG') {\n                //     if (!image.complete) {\n                //         return;\n                //     }\n                // }\n                // Else is canvas\n\n                var width = style.width || image.width;\n                var height = style.height || image.height;\n                var x = style.x || 0;\n                var y = style.y || 0;\n                // 图片加载失败\n                if (!image.width || !image.height) {\n                    return;\n                }\n\n                // 设置transform\n                this.setTransform(ctx);\n\n\n                if (style.sWidth && style.sHeight) {\n                    var sx = style.sx || 0;\n                    var sy = style.sy || 0;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, style.sWidth, style.sHeight,\n                        x, y, width, height\n                    );\n                }\n                else if (style.sx && style.sy) {\n                    var sx = style.sx;\n                    var sy = style.sy;\n                    var sWidth = width - sx;\n                    var sHeight = height - sy;\n                    ctx.drawImage(\n                        image,\n                        sx, sy, sWidth, sHeight,\n                        x, y, width, height\n                    );\n                }\n                else {\n                    ctx.drawImage(image, x, y, width, height);\n                }\n\n                // 如果没设置宽和高的话自动根据图片宽高设置\n                if (style.width == null) {\n                    style.width = width;\n                }\n                if (style.height == null) {\n                    style.height = height;\n                }\n\n                this.restoreTransform(ctx);\n\n                // Draw rect text\n                if (style.text != null) {\n                    this.drawRectText(ctx, this.getBoundingRect());\n                }\n\n            }\n        },\n\n        getBoundingRect: function () {\n            var style = this.style;\n            if (! this._rect) {\n                this._rect = new BoundingRect(\n                    style.x || 0, style.y || 0, style.width || 0, style.height || 0\n                );\n            }\n            return this._rect;\n        }\n    };\n\n    zrUtil.inherits(ZImage, Displayable);\n\n    module.exports = ZImage;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Image.js\n// module id = 671\n// module chunks = 0","\n\n    var Pattern = function (image, repeat) {\n        this.image = image;\n        this.repeat = repeat;\n\n        // Can be cloned\n        this.type = 'pattern';\n    };\n\n    Pattern.prototype.getCanvasPattern = function (ctx) {\n\n        return this._canvasPattern\n            || (this._canvasPattern = ctx.createPattern(this.image, this.repeat));\n    };\n\n    module.exports = Pattern;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Pattern.js\n// module id = 672\n// module chunks = 0","/**\n * @module zrender/graphic/Style\n */\n\n\n    var STYLE_COMMON_PROPS = [\n        ['shadowBlur', 0], ['shadowOffsetX', 0], ['shadowOffsetY', 0], ['shadowColor', '#000'],\n        ['lineCap', 'butt'], ['lineJoin', 'miter'], ['miterLimit', 10]\n    ];\n\n    // var SHADOW_PROPS = STYLE_COMMON_PROPS.slice(0, 4);\n    // var LINE_PROPS = STYLE_COMMON_PROPS.slice(4);\n\n    var Style = function (opts) {\n        this.extendFrom(opts);\n    };\n\n    function createLinearGradient(ctx, obj, rect) {\n        // var size =\n        var x = obj.x;\n        var x2 = obj.x2;\n        var y = obj.y;\n        var y2 = obj.y2;\n\n        if (!obj.global) {\n            x = x * rect.width + rect.x;\n            x2 = x2 * rect.width + rect.x;\n            y = y * rect.height + rect.y;\n            y2 = y2 * rect.height + rect.y;\n        }\n\n        var canvasGradient = ctx.createLinearGradient(x, y, x2, y2);\n\n        return canvasGradient;\n    }\n\n    function createRadialGradient(ctx, obj, rect) {\n        var width = rect.width;\n        var height = rect.height;\n        var min = Math.min(width, height);\n\n        var x = obj.x;\n        var y = obj.y;\n        var r = obj.r;\n        if (!obj.global) {\n            x = x * width + rect.x;\n            y = y * height + rect.y;\n            r = r * min;\n        }\n\n        var canvasGradient = ctx.createRadialGradient(x, y, 0, x, y, r);\n\n        return canvasGradient;\n    }\n\n\n    Style.prototype = {\n\n        constructor: Style,\n\n        /**\n         * @type {string}\n         */\n        fill: '#000000',\n\n        /**\n         * @type {string}\n         */\n        stroke: null,\n\n        /**\n         * @type {number}\n         */\n        opacity: 1,\n\n        /**\n         * @type {Array.<number>}\n         */\n        lineDash: null,\n\n        /**\n         * @type {number}\n         */\n        lineDashOffset: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowBlur: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetX: 0,\n\n        /**\n         * @type {number}\n         */\n        shadowOffsetY: 0,\n\n        /**\n         * @type {number}\n         */\n        lineWidth: 1,\n\n        /**\n         * If stroke ignore scale\n         * @type {Boolean}\n         */\n        strokeNoScale: false,\n\n        // Bounding rect text configuration\n        // Not affected by element transform\n        /**\n         * @type {string}\n         */\n        text: null,\n\n        /**\n         * @type {string}\n         */\n        textFill: '#000',\n\n        /**\n         * @type {string}\n         */\n        textStroke: null,\n\n        /**\n         * 'inside', 'left', 'right', 'top', 'bottom'\n         * [x, y]\n         * @type {string|Array.<number>}\n         * @default 'inside'\n         */\n        textPosition: 'inside',\n\n        /**\n         * @type {string}\n         */\n        textBaseline: null,\n\n        /**\n         * @type {string}\n         */\n        textAlign: null,\n\n        /**\n         * @type {string}\n         */\n        textVerticalAlign: null,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textDistance: 5,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowBlur: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetX: 0,\n\n        /**\n         * Only useful in Path and Image element\n         * @type {number}\n         */\n        textShadowOffsetY: 0,\n\n        /**\n         * If transform text\n         * Only useful in Path and Image element\n         * @type {boolean}\n         */\n        textTransform: false,\n\n        /**\n         * Text rotate around position of Path or Image\n         * Only useful in Path and Image element and textTransform is false.\n         */\n        textRotation: 0,\n\n        /**\n         * @type {string}\n         * https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n         */\n        blend: null,\n\n        /**\n         * @param {CanvasRenderingContext2D} ctx\n         */\n        bind: function (ctx, el, prevEl) {\n            var style = this;\n            var prevStyle = prevEl && prevEl.style;\n            var firstDraw = !prevStyle;\n\n            for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n                var prop = STYLE_COMMON_PROPS[i];\n                var styleName = prop[0];\n\n                if (firstDraw || style[styleName] !== prevStyle[styleName]) {\n                    // FIXME Invalid property value will cause style leak from previous element.\n                    ctx[styleName] = style[styleName] || prop[1];\n                }\n            }\n\n            if ((firstDraw || style.fill !== prevStyle.fill)) {\n                ctx.fillStyle = style.fill;\n            }\n            if ((firstDraw || style.stroke !== prevStyle.stroke)) {\n                ctx.strokeStyle = style.stroke;\n            }\n            if ((firstDraw || style.opacity !== prevStyle.opacity)) {\n                ctx.globalAlpha = style.opacity == null ? 1 : style.opacity;\n            }\n\n            if ((firstDraw || style.blend !== prevStyle.blend)) {\n                ctx.globalCompositeOperation = style.blend || 'source-over';\n            }\n            if (this.hasStroke()) {\n                var lineWidth = style.lineWidth;\n                ctx.lineWidth = lineWidth / (\n                    (this.strokeNoScale && el && el.getLineScale) ? el.getLineScale() : 1\n                );\n            }\n        },\n\n        hasFill: function () {\n            var fill = this.fill;\n            return fill != null && fill !== 'none';\n        },\n\n        hasStroke: function () {\n            var stroke = this.stroke;\n            return stroke != null && stroke !== 'none' && this.lineWidth > 0;\n        },\n\n        /**\n         * Extend from other style\n         * @param {zrender/graphic/Style} otherStyle\n         * @param {boolean} overwrite\n         */\n        extendFrom: function (otherStyle, overwrite) {\n            if (otherStyle) {\n                var target = this;\n                for (var name in otherStyle) {\n                    if (otherStyle.hasOwnProperty(name)\n                        && (overwrite || ! target.hasOwnProperty(name))\n                    ) {\n                        target[name] = otherStyle[name];\n                    }\n                }\n            }\n        },\n\n        /**\n         * Batch setting style with a given object\n         * @param {Object|string} obj\n         * @param {*} [obj]\n         */\n        set: function (obj, value) {\n            if (typeof obj === 'string') {\n                this[obj] = value;\n            }\n            else {\n                this.extendFrom(obj, true);\n            }\n        },\n\n        /**\n         * Clone\n         * @return {zrender/graphic/Style} [description]\n         */\n        clone: function () {\n            var newStyle = new this.constructor();\n            newStyle.extendFrom(this, true);\n            return newStyle;\n        },\n\n        getGradient: function (ctx, obj, rect) {\n            var method = obj.type === 'radial' ? createRadialGradient : createLinearGradient;\n            var canvasGradient = method(ctx, obj, rect);\n            var colorStops = obj.colorStops;\n            for (var i = 0; i < colorStops.length; i++) {\n                canvasGradient.addColorStop(\n                    colorStops[i].offset, colorStops[i].color\n                );\n            }\n            return canvasGradient;\n        }\n    };\n\n    var styleProto = Style.prototype;\n    for (var i = 0; i < STYLE_COMMON_PROPS.length; i++) {\n        var prop = STYLE_COMMON_PROPS[i];\n        if (!(prop[0] in styleProto)) {\n            styleProto[prop[0]] = prop[1];\n        }\n    }\n\n    // Provide for others\n    Style.getGradient = styleProto.getGradient;\n\n    module.exports = Style;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/Style.js\n// module id = 673\n// module chunks = 0","\n\n    var smoothSpline = require('./smoothSpline');\n    var smoothBezier = require('./smoothBezier');\n\n    module.exports = {\n        buildPath: function (ctx, shape, closePath) {\n            var points = shape.points;\n            var smooth = shape.smooth;\n            if (points && points.length >= 2) {\n                if (smooth && smooth !== 'spline') {\n                    var controlPoints = smoothBezier(\n                        points, smooth, closePath, shape.smoothConstraint\n                    );\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    var len = points.length;\n                    for (var i = 0; i < (closePath ? len : len - 1); i++) {\n                        var cp1 = controlPoints[i * 2];\n                        var cp2 = controlPoints[i * 2 + 1];\n                        var p = points[(i + 1) % len];\n                        ctx.bezierCurveTo(\n                            cp1[0], cp1[1], cp2[0], cp2[1], p[0], p[1]\n                        );\n                    }\n                }\n                else {\n                    if (smooth === 'spline') {\n                        points = smoothSpline(points, closePath);\n                    }\n\n                    ctx.moveTo(points[0][0], points[0][1]);\n                    for (var i = 1, l = points.length; i < l; i++) {\n                        ctx.lineTo(points[i][0], points[i][1]);\n                    }\n                }\n\n                closePath && ctx.closePath();\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/zrender/lib/graphic/helper/poly.js\n// module id = 674\n// module chunks = 0","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./example/app/components/gaugechart/gaugechart.less\n// module id = 687\n// module chunks = 0","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./example/app/components/linechart/linechart.less\n// module id = 696\n// module chunks = 0","exports = module.exports = require(\"./../../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./example/app/components/piechart/piechart.less\n// module id = 705\n// module chunks = 0","exports = module.exports = require(\"./../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \".echarts {\\n  width: 100%;\\n  height: 100%;\\n  display: block;\\n}\\n\", \"\"]);\n\n// exports\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./~/less-loader!./lib/Charts/chart.less\n// module id = 723\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var echartsAPIList = [\n        'getDom', 'getZr', 'getWidth', 'getHeight', 'dispatchAction', 'isDisposed',\n        'on', 'off', 'getDataURL', 'getConnectedDataURL', 'getModel', 'getOption'\n    ];\n\n    function ExtensionAPI(chartInstance) {\n        zrUtil.each(echartsAPIList, function (name) {\n            this[name] = zrUtil.bind(chartInstance[name], chartInstance);\n        }, this);\n    }\n\n    module.exports = ExtensionAPI;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/ExtensionAPI.js\n// module id = 741\n// module chunks = 0","\n    var echarts = require('../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n    module.exports = function (seriesType, actionInfos) {\n        zrUtil.each(actionInfos, function (actionInfo) {\n            actionInfo.update = 'updateView';\n            /**\n             * @payload\n             * @property {string} seriesName\n             * @property {string} name\n             */\n            echarts.registerAction(actionInfo, function (payload, ecModel) {\n                var selected = {};\n                ecModel.eachComponent(\n                    {mainType: 'series', subType: seriesType, query: payload},\n                    function (seriesModel) {\n                        if (seriesModel[actionInfo.method]) {\n                            seriesModel[actionInfo.method](payload.name);\n                        }\n                        var data = seriesModel.getData();\n                        // Create selected map\n                        data.each(function (idx) {\n                            var name = data.getName(idx);\n                            selected[name] = seriesModel.isSelected(name) || false;\n                        });\n                    }\n                );\n                return {\n                    name: payload.name,\n                    selected: selected\n                };\n            });\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/action/createDataSelectAction.js\n// module id = 742\n// module chunks = 0","\n    require('./gauge/GaugeSeries');\n    require('./gauge/GaugeView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge.js\n// module id = 743\n// module chunks = 0","\n\n    var List = require('../../data/List');\n    var SeriesModel = require('../../model/Series');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var GaugeSeries = SeriesModel.extend({\n\n        type: 'series.gauge',\n\n        getInitialData: function (option, ecModel) {\n            var list = new List(['value'], this);\n            var dataOpt = option.data || [];\n            if (!zrUtil.isArray(dataOpt)) {\n                dataOpt = [dataOpt];\n            }\n            // Only use the first data item\n            list.initData(dataOpt);\n            return list;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            legendHoverLink: true,\n            radius: '75%',\n            startAngle: 225,\n            endAngle: -45,\n            clockwise: true,\n            // 最小值\n            min: 0,\n            // 最大值\n            max: 100,\n            // 分割段数，默认为10\n            splitNumber: 10,\n            // 坐标轴线\n            axisLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                lineStyle: {       // 属性lineStyle控制线条样式\n                    color: [[0.2, '#91c7ae'], [0.8, '#63869e'], [1, '#c23531']],\n                    width: 30\n                }\n            },\n            // 分隔线\n            splitLine: {\n                // 默认显示，属性show控制显示与否\n                show: true,\n                // 属性length控制线长\n                length: 30,\n                // 属性lineStyle（详见lineStyle）控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // 坐标轴小标记\n            axisTick: {\n                // 属性show控制显示与否，默认不显示\n                show: true,\n                // 每份split细分多少段\n                splitNumber: 5,\n                // 属性length控制线长\n                length: 8,\n                // 属性lineStyle控制线条样式\n                lineStyle: {\n                    color: '#eee',\n                    width: 1,\n                    type: 'solid'\n                }\n            },\n            axisLabel: {\n                show: true,\n                distance: 5,\n                // formatter: null,\n                textStyle: {       // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                    color: 'auto'\n                }\n            },\n            pointer: {\n                show: true,\n                length: '80%',\n                width: 8\n            },\n            itemStyle: {\n                normal: {\n                    color: 'auto'\n                }\n            },\n            title: {\n                show: true,\n                // x, y，单位px\n                offsetCenter: [0, '-40%'],\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: '#333',\n                    fontSize: 15\n                }\n            },\n            detail: {\n                show: true,\n                backgroundColor: 'rgba(0,0,0,0)',\n                borderWidth: 0,\n                borderColor: '#ccc',\n                width: 100,\n                height: 40,\n                // x, y，单位px\n                offsetCenter: [0, '40%'],\n                // formatter: null,\n                // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n                textStyle: {\n                    color: 'auto',\n                    fontSize: 30\n                }\n            }\n        }\n    });\n\n    module.exports = GaugeSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeSeries.js\n// module id = 744\n// module chunks = 0","\n\n    var PointerPath = require('./PointerPath');\n\n    var graphic = require('../../util/graphic');\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n\n    function parsePosition(seriesModel, api) {\n        var center = seriesModel.get('center');\n        var width = api.getWidth();\n        var height = api.getHeight();\n        var size = Math.min(width, height);\n        var cx = parsePercent(center[0], api.getWidth());\n        var cy = parsePercent(center[1], api.getHeight());\n        var r = parsePercent(seriesModel.get('radius'), size / 2);\n\n        return {\n            cx: cx,\n            cy: cy,\n            r: r\n        };\n    }\n\n    function formatLabel(label, labelFormatter) {\n        if (labelFormatter) {\n            if (typeof labelFormatter === 'string') {\n                label = labelFormatter.replace('{value}', label != null ? label : '');\n            }\n            else if (typeof labelFormatter === 'function') {\n                label = labelFormatter(label);\n            }\n        }\n\n        return label;\n    }\n\n    var PI2 = Math.PI * 2;\n\n    var GaugeView = require('../../view/Chart').extend({\n\n        type: 'gauge',\n\n        render: function (seriesModel, ecModel, api) {\n\n            this.group.removeAll();\n\n            var colorList = seriesModel.get('axisLine.lineStyle.color');\n            var posInfo = parsePosition(seriesModel, api);\n\n            this._renderMain(\n                seriesModel, ecModel, api, colorList, posInfo\n            );\n        },\n\n        dispose: function () {},\n\n        _renderMain: function (seriesModel, ecModel, api, colorList, posInfo) {\n            var group = this.group;\n\n            var axisLineModel = seriesModel.getModel('axisLine');\n            var lineStyleModel = axisLineModel.getModel('lineStyle');\n\n            var clockwise = seriesModel.get('clockwise');\n            var startAngle = -seriesModel.get('startAngle') / 180 * Math.PI;\n            var endAngle = -seriesModel.get('endAngle') / 180 * Math.PI;\n\n            var angleRangeSpan = (endAngle - startAngle) % PI2;\n\n            var prevEndAngle = startAngle;\n            var axisLineWidth = lineStyleModel.get('width');\n\n            for (var i = 0; i < colorList.length; i++) {\n                // Clamp\n                var percent = Math.min(Math.max(colorList[i][0], 0), 1);\n                var endAngle = startAngle + angleRangeSpan * percent;\n                var sector = new graphic.Sector({\n                    shape: {\n                        startAngle: prevEndAngle,\n                        endAngle: endAngle,\n                        cx: posInfo.cx,\n                        cy: posInfo.cy,\n                        clockwise: clockwise,\n                        r0: posInfo.r - axisLineWidth,\n                        r: posInfo.r\n                    },\n                    silent: true\n                });\n\n                sector.setStyle({\n                    fill: colorList[i][1]\n                });\n\n                sector.setStyle(lineStyleModel.getLineStyle(\n                    // Because we use sector to simulate arc\n                    // so the properties for stroking are useless\n                    ['color', 'borderWidth', 'borderColor']\n                ));\n\n                group.add(sector);\n\n                prevEndAngle = endAngle;\n            }\n\n            var getColor = function (percent) {\n                // Less than 0\n                if (percent <= 0) {\n                    return colorList[0][1];\n                }\n                for (var i = 0; i < colorList.length; i++) {\n                    if (colorList[i][0] >= percent\n                        && (i === 0 ? 0 : colorList[i - 1][0]) < percent\n                    ) {\n                        return colorList[i][1];\n                    }\n                }\n                // More than 1\n                return colorList[i - 1][1];\n            };\n\n            if (!clockwise) {\n                var tmp = startAngle;\n                startAngle = endAngle;\n                endAngle = tmp;\n            }\n\n            this._renderTicks(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderPointer(\n                seriesModel, ecModel, api, getColor, posInfo,\n                startAngle, endAngle, clockwise\n            );\n\n            this._renderTitle(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n            this._renderDetail(\n                seriesModel, ecModel, api, getColor, posInfo\n            );\n        },\n\n        _renderTicks: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var group = this.group;\n            var cx = posInfo.cx;\n            var cy = posInfo.cy;\n            var r = posInfo.r;\n\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n\n            var splitLineModel = seriesModel.getModel('splitLine');\n            var tickModel = seriesModel.getModel('axisTick');\n            var labelModel = seriesModel.getModel('axisLabel');\n\n            var splitNumber = seriesModel.get('splitNumber');\n            var subSplitNumber = tickModel.get('splitNumber');\n\n            var splitLineLen = parsePercent(\n                splitLineModel.get('length'), r\n            );\n            var tickLen = parsePercent(\n                tickModel.get('length'), r\n            );\n\n            var angle = startAngle;\n            var step = (endAngle - startAngle) / splitNumber;\n            var subStep = step / subSplitNumber;\n\n            var splitLineStyle = splitLineModel.getModel('lineStyle').getLineStyle();\n            var tickLineStyle = tickModel.getModel('lineStyle').getLineStyle();\n            var textStyleModel = labelModel.getModel('textStyle');\n\n            for (var i = 0; i <= splitNumber; i++) {\n                var unitX = Math.cos(angle);\n                var unitY = Math.sin(angle);\n                // Split line\n                if (splitLineModel.get('show')) {\n                    var splitLine = new graphic.Line({\n                        shape: {\n                            x1: unitX * r + cx,\n                            y1: unitY * r + cy,\n                            x2: unitX * (r - splitLineLen) + cx,\n                            y2: unitY * (r - splitLineLen) + cy\n                        },\n                        style: splitLineStyle,\n                        silent: true\n                    });\n                    if (splitLineStyle.stroke === 'auto') {\n                        splitLine.setStyle({\n                            stroke: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(splitLine);\n                }\n\n                // Label\n                if (labelModel.get('show')) {\n                    var label = formatLabel(\n                        numberUtil.round(i / splitNumber * (maxVal - minVal) + minVal),\n                        labelModel.get('formatter')\n                    );\n                    var distance = labelModel.get('distance');\n\n                    var text = new graphic.Text({\n                        style: {\n                            text: label,\n                            x: unitX * (r - splitLineLen - distance) + cx,\n                            y: unitY * (r - splitLineLen - distance) + cy,\n                            fill: textStyleModel.getTextColor(),\n                            textFont: textStyleModel.getFont(),\n                            textVerticalAlign: unitY < -0.4 ? 'top' : (unitY > 0.4 ? 'bottom' : 'middle'),\n                            textAlign: unitX < -0.4 ? 'left' : (unitX > 0.4 ? 'right' : 'center')\n                        },\n                        silent: true\n                    });\n                    if (text.style.fill === 'auto') {\n                        text.setStyle({\n                            fill: getColor(i / splitNumber)\n                        });\n                    }\n\n                    group.add(text);\n                }\n\n                // Axis tick\n                if (tickModel.get('show') && i !== splitNumber) {\n                    for (var j = 0; j <= subSplitNumber; j++) {\n                        var unitX = Math.cos(angle);\n                        var unitY = Math.sin(angle);\n                        var tickLine = new graphic.Line({\n                            shape: {\n                                x1: unitX * r + cx,\n                                y1: unitY * r + cy,\n                                x2: unitX * (r - tickLen) + cx,\n                                y2: unitY * (r - tickLen) + cy\n                            },\n                            silent: true,\n                            style: tickLineStyle\n                        });\n\n                        if (tickLineStyle.stroke === 'auto') {\n                            tickLine.setStyle({\n                                stroke: getColor((i + j / subSplitNumber) / splitNumber)\n                            });\n                        }\n\n                        group.add(tickLine);\n                        angle += subStep;\n                    }\n                    angle -= subStep;\n                }\n                else {\n                    angle += step;\n                }\n            }\n        },\n\n        _renderPointer: function (\n            seriesModel, ecModel, api, getColor, posInfo,\n            startAngle, endAngle, clockwise\n        ) {\n            var valueExtent = [+seriesModel.get('min'), +seriesModel.get('max')];\n            var angleExtent = [startAngle, endAngle];\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n\n            var group = this.group;\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var pointer = new PointerPath({\n                        shape: {\n                            angle: startAngle\n                        }\n                    });\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', idx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(idx, pointer);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var pointer = oldData.getItemGraphicEl(oldIdx);\n\n                    graphic.updateProps(pointer, {\n                        shape: {\n                            angle: numberUtil.linearMap(data.get('value', newIdx), valueExtent, angleExtent, true)\n                        }\n                    }, seriesModel);\n\n                    group.add(pointer);\n                    data.setItemGraphicEl(newIdx, pointer);\n                })\n                .remove(function (idx) {\n                    var pointer = oldData.getItemGraphicEl(idx);\n                    group.remove(pointer);\n                })\n                .execute();\n\n            data.eachItemGraphicEl(function (pointer, idx) {\n                var itemModel = data.getItemModel(idx);\n                var pointerModel = itemModel.getModel('pointer');\n\n                pointer.setShape({\n                    x: posInfo.cx,\n                    y: posInfo.cy,\n                    width: parsePercent(\n                        pointerModel.get('width'), posInfo.r\n                    ),\n                    r: parsePercent(pointerModel.get('length'), posInfo.r)\n                });\n\n                pointer.useStyle(itemModel.getModel('itemStyle.normal').getItemStyle());\n\n                if (pointer.style.fill === 'auto') {\n                    pointer.setStyle('fill', getColor(\n                        (data.get('value', idx) - valueExtent[0]) / (valueExtent[1] - valueExtent[0])\n                    ));\n                }\n\n                graphic.setHoverStyle(\n                    pointer, itemModel.getModel('itemStyle.emphasis').getItemStyle()\n                );\n            });\n\n            this._data = data;\n        },\n\n        _renderTitle: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var titleModel = seriesModel.getModel('title');\n            if (titleModel.get('show')) {\n                var textStyleModel = titleModel.getModel('textStyle');\n                var offsetCenter = titleModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var text = new graphic.Text({\n                    style: {\n                        x: x,\n                        y: y,\n                        // FIXME First data name ?\n                        text: seriesModel.getData().getName(0),\n                        fill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont(),\n                        textAlign: 'center',\n                        textVerticalAlign: 'middle'\n                    }\n                });\n                this.group.add(text);\n            }\n        },\n\n        _renderDetail: function (\n            seriesModel, ecModel, api, getColor, posInfo\n        ) {\n            var detailModel = seriesModel.getModel('detail');\n            var minVal = seriesModel.get('min');\n            var maxVal = seriesModel.get('max');\n            if (detailModel.get('show')) {\n                var textStyleModel = detailModel.getModel('textStyle');\n                var offsetCenter = detailModel.get('offsetCenter');\n                var x = posInfo.cx + parsePercent(offsetCenter[0], posInfo.r);\n                var y = posInfo.cy + parsePercent(offsetCenter[1], posInfo.r);\n                var width = parsePercent(detailModel.get('width'), posInfo.r);\n                var height = parsePercent(detailModel.get('height'), posInfo.r);\n                var value = seriesModel.getData().get('value', 0);\n                var rect = new graphic.Rect({\n                    shape: {\n                        x: x - width / 2,\n                        y: y - height / 2,\n                        width: width,\n                        height: height\n                    },\n                    style: {\n                        text: formatLabel(\n                            // FIXME First data name ?\n                            value, detailModel.get('formatter')\n                        ),\n                        fill: detailModel.get('backgroundColor'),\n                        textFill: textStyleModel.getTextColor(),\n                        textFont: textStyleModel.getFont()\n                    }\n                });\n                if (rect.style.textFill === 'auto') {\n                    rect.setStyle('textFill', getColor(\n                        numberUtil.linearMap(value, [minVal, maxVal], [0, 1], true)\n                    ));\n                }\n                rect.setStyle(detailModel.getItemStyle(['color']));\n                this.group.add(rect);\n            }\n        }\n    });\n\n    module.exports = GaugeView;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/GaugeView.js\n// module id = 745\n// module chunks = 0","\n\n    module.exports = require('zrender/lib/graphic/Path').extend({\n\n        type: 'echartsGaugePointer',\n\n        shape: {\n            angle: 0,\n\n            width: 10,\n\n            r: 10,\n\n            x: 0,\n\n            y: 0\n        },\n\n        buildPath: function (ctx, shape) {\n            var mathCos = Math.cos;\n            var mathSin = Math.sin;\n\n            var r = shape.r;\n            var width = shape.width;\n            var angle = shape.angle;\n            var x = shape.x - mathCos(angle) * width * (width >= r / 3 ? 1 : 2);\n            var y = shape.y - mathSin(angle) * width * (width >= r / 3 ? 1 : 2);\n\n            angle = shape.angle - Math.PI / 2;\n            ctx.moveTo(x, y);\n            ctx.lineTo(\n                shape.x + mathCos(angle) * width,\n                shape.y + mathSin(angle) * width\n            );\n            ctx.lineTo(\n                shape.x + mathCos(shape.angle) * r,\n                shape.y + mathSin(shape.angle) * r\n            );\n            ctx.lineTo(\n                shape.x - mathCos(angle) * width,\n                shape.y - mathSin(angle) * width\n            );\n            ctx.lineTo(x, y);\n            return;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/gauge/PointerPath.js\n// module id = 746\n// module chunks = 0","/**\n * @module echarts/chart/helper/SymbolDraw\n */\n\n\n    var graphic = require('../../util/graphic');\n    var Symbol = require('./Symbol');\n\n    /**\n     * @constructor\n     * @alias module:echarts/chart/helper/SymbolDraw\n     * @param {module:zrender/graphic/Group} [symbolCtor]\n     */\n    function SymbolDraw(symbolCtor) {\n        this.group = new graphic.Group();\n\n        this._symbolCtor = symbolCtor || Symbol;\n    }\n\n    var symbolDrawProto = SymbolDraw.prototype;\n\n    function symbolNeedsDraw(data, idx, isIgnore) {\n        var point = data.getItemLayout(idx);\n        // Is an object\n        // if (point && point.hasOwnProperty('point')) {\n        //     point = point.point;\n        // }\n        return point && !isNaN(point[0]) && !isNaN(point[1]) && !(isIgnore && isIgnore(idx))\n                    && data.getItemVisual(idx, 'symbol') !== 'none';\n    }\n    /**\n     * Update symbols draw by new data\n     * @param {module:echarts/data/List} data\n     * @param {Array.<boolean>} [isIgnore]\n     */\n    symbolDrawProto.updateData = function (data, isIgnore) {\n        var group = this.group;\n        var seriesModel = data.hostModel;\n        var oldData = this._data;\n\n        var SymbolCtor = this._symbolCtor;\n\n        var seriesScope = {\n            itemStyle: seriesModel.getModel('itemStyle.normal').getItemStyle(['color']),\n            hoverItemStyle: seriesModel.getModel('itemStyle.emphasis').getItemStyle(),\n            symbolRotate: seriesModel.get('symbolRotate'),\n            symbolOffset: seriesModel.get('symbolOffset'),\n            hoverAnimation: seriesModel.get('hoverAnimation'),\n\n            labelModel: seriesModel.getModel('label.normal'),\n            hoverLabelModel: seriesModel.getModel('label.emphasis')\n        };\n\n        data.diff(oldData)\n            .add(function (newIdx) {\n                var point = data.getItemLayout(newIdx);\n                if (symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    var symbolEl = new SymbolCtor(data, newIdx, seriesScope);\n                    symbolEl.attr('position', point);\n                    data.setItemGraphicEl(newIdx, symbolEl);\n                    group.add(symbolEl);\n                }\n            })\n            .update(function (newIdx, oldIdx) {\n                var symbolEl = oldData.getItemGraphicEl(oldIdx);\n                var point = data.getItemLayout(newIdx);\n                if (!symbolNeedsDraw(data, newIdx, isIgnore)) {\n                    group.remove(symbolEl);\n                    return;\n                }\n                if (!symbolEl) {\n                    symbolEl = new SymbolCtor(data, newIdx);\n                    symbolEl.attr('position', point);\n                }\n                else {\n                    symbolEl.updateData(data, newIdx, seriesScope);\n                    graphic.updateProps(symbolEl, {\n                        position: point\n                    }, seriesModel);\n                }\n\n                // Add back\n                group.add(symbolEl);\n\n                data.setItemGraphicEl(newIdx, symbolEl);\n            })\n            .remove(function (oldIdx) {\n                var el = oldData.getItemGraphicEl(oldIdx);\n                el && el.fadeOut(function () {\n                    group.remove(el);\n                });\n            })\n            .execute();\n\n        this._data = data;\n    };\n\n    symbolDrawProto.updateLayout = function () {\n        var data = this._data;\n        if (data) {\n            // Not use animation\n            data.eachItemGraphicEl(function (el, idx) {\n                var point = data.getItemLayout(idx);\n                el.attr('position', point);\n            });\n        }\n    };\n\n    symbolDrawProto.remove = function (enableAnimation) {\n        var group = this.group;\n        var data = this._data;\n        if (data) {\n            if (enableAnimation) {\n                data.eachItemGraphicEl(function (el) {\n                    el.fadeOut(function () {\n                        group.remove(el);\n                    });\n                });\n            }\n            else {\n                group.removeAll();\n            }\n        }\n    };\n\n    module.exports = SymbolDraw;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/SymbolDraw.js\n// module id = 747\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var CoordinateSystem = require('../../CoordinateSystem');\n    var getDataItemValue = modelUtil.getDataItemValue;\n    var converDataValue = modelUtil.converDataValue;\n\n    function firstDataNotNull(data) {\n        var i = 0;\n        while (i < data.length && data[i] == null) {\n            i++;\n        }\n        return data[i];\n    }\n    function ifNeedCompleteOrdinalData(data) {\n        var sampleItem = firstDataNotNull(data);\n        return sampleItem != null\n            && !zrUtil.isArray(getDataItemValue(sampleItem));\n    }\n\n    /**\n     * Helper function to create a list from option data\n     */\n    function createListFromArray(data, seriesModel, ecModel) {\n        // If data is undefined\n        data = data || [];\n\n        if (__DEV__) {\n            if (!zrUtil.isArray(data)) {\n                throw new Error('Invalid data.');\n            }\n        }\n\n        var coordSysName = seriesModel.get('coordinateSystem');\n        var creator = creators[coordSysName];\n        var registeredCoordSys = CoordinateSystem.get(coordSysName);\n        // FIXME\n        var axesInfo = creator && creator(data, seriesModel, ecModel);\n        var dimensions = axesInfo && axesInfo.dimensions;\n        if (!dimensions) {\n            // Get dimensions from registered coordinate system\n            dimensions = (registeredCoordSys && registeredCoordSys.dimensions) || ['x', 'y'];\n            dimensions = completeDimensions(dimensions, data, dimensions.concat(['value']));\n        }\n        var categoryIndex = axesInfo ? axesInfo.categoryIndex : -1;\n\n        var list = new List(dimensions, seriesModel);\n\n        var nameList = createNameList(axesInfo, data);\n\n        var categories = {};\n        var dimValueGetter = (categoryIndex >= 0 && ifNeedCompleteOrdinalData(data))\n            ? function (itemOpt, dimName, dataIndex, dimIndex) {\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                // Use dataIndex as ordinal value in categoryAxis\n                return dimIndex === categoryIndex\n                    ? dataIndex\n                    : converDataValue(getDataItemValue(itemOpt), dimensions[dimIndex]);\n            }\n            : function (itemOpt, dimName, dataIndex, dimIndex) {\n                var value = getDataItemValue(itemOpt);\n                var val = converDataValue(value && value[dimIndex], dimensions[dimIndex]);\n                // If any dataItem is like { value: 10 }\n                if (modelUtil.isDataItemOption(itemOpt)) {\n                    list.hasItemOption = true;\n                }\n\n                var categoryAxesModels = axesInfo && axesInfo.categoryAxesModels;\n                if (categoryAxesModels && categoryAxesModels[dimName]) {\n                    // If given value is a category string\n                    if (typeof val === 'string') {\n                        // Lazy get categories\n                        categories[dimName] = categories[dimName]\n                            || categoryAxesModels[dimName].getCategories();\n                        val = zrUtil.indexOf(categories[dimName], val);\n                        if (val < 0 && !isNaN(val)) {\n                            // In case some one write '1', '2' istead of 1, 2\n                            val = +val;\n                        }\n                    }\n                }\n                return val;\n            };\n\n        list.hasItemOption = false;\n        list.initData(data, nameList, dimValueGetter);\n\n        return list;\n    }\n\n    function isStackable(axisType) {\n        return axisType !== 'category' && axisType !== 'time';\n    }\n\n    function getDimTypeByAxis(axisType) {\n        return axisType === 'category'\n            ? 'ordinal'\n            : axisType === 'time'\n            ? 'time'\n            : 'float';\n    }\n\n    /**\n     * Creaters for each coord system.\n     */\n    var creators = {\n\n        cartesian2d: function (data, seriesModel, ecModel) {\n\n            var axesModels = zrUtil.map(['xAxis', 'yAxis'], function (name) {\n                return ecModel.queryComponents({\n                    mainType: name,\n                    index: seriesModel.get(name + 'Index'),\n                    id: seriesModel.get(name + 'Id')\n                })[0];\n            });\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            if (__DEV__) {\n                if (!xAxisModel) {\n                    throw new Error('xAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('xAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n                if (!yAxisModel) {\n                    throw new Error('yAxis \"' + zrUtil.retrieve(\n                        seriesModel.get('xAxisIndex'),\n                        seriesModel.get('yAxisId'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n\n            var xAxisType = xAxisModel.get('type');\n            var yAxisType = yAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'x',\n                    type: getDimTypeByAxis(xAxisType),\n                    stackable: isStackable(xAxisType)\n                },\n                {\n                    name: 'y',\n                    // If two category axes\n                    type: getDimTypeByAxis(yAxisType),\n                    stackable: isStackable(yAxisType)\n                }\n            ];\n\n            var isXAxisCateogry = xAxisType === 'category';\n            var isYAxisCategory = yAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['x', 'y', 'z']);\n\n            var categoryAxesModels = {};\n            if (isXAxisCateogry) {\n                categoryAxesModels.x = xAxisModel;\n            }\n            if (isYAxisCategory) {\n                categoryAxesModels.y = yAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isXAxisCateogry ? 0 : (isYAxisCategory ? 1 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        polar: function (data, seriesModel, ecModel) {\n            var polarModel = ecModel.queryComponents({\n                mainType: 'polar',\n                index: seriesModel.get('polarIndex'),\n                id: seriesModel.get('polarId')\n            })[0];\n\n            var angleAxisModel = polarModel.findAxisModel('angleAxis');\n            var radiusAxisModel = polarModel.findAxisModel('radiusAxis');\n\n            if (__DEV__) {\n                if (!angleAxisModel) {\n                    throw new Error('angleAxis option not found');\n                }\n                if (!radiusAxisModel) {\n                    throw new Error('radiusAxis option not found');\n                }\n            }\n\n            var radiusAxisType = radiusAxisModel.get('type');\n            var angleAxisType = angleAxisModel.get('type');\n\n            var dimensions = [\n                {\n                    name: 'radius',\n                    type: getDimTypeByAxis(radiusAxisType),\n                    stackable: isStackable(radiusAxisType)\n                },\n                {\n                    name: 'angle',\n                    type: getDimTypeByAxis(angleAxisType),\n                    stackable: isStackable(angleAxisType)\n                }\n            ];\n            var isAngleAxisCateogry = angleAxisType === 'category';\n            var isRadiusAxisCateogry = radiusAxisType === 'category';\n\n            completeDimensions(dimensions, data, ['radius', 'angle', 'value']);\n\n            var categoryAxesModels = {};\n            if (isRadiusAxisCateogry) {\n                categoryAxesModels.radius = radiusAxisModel;\n            }\n            if (isAngleAxisCateogry) {\n                categoryAxesModels.angle = angleAxisModel;\n            }\n            return {\n                dimensions: dimensions,\n                categoryIndex: isAngleAxisCateogry ? 1 : (isRadiusAxisCateogry ? 0 : -1),\n                categoryAxesModels: categoryAxesModels\n            };\n        },\n\n        geo: function (data, seriesModel, ecModel) {\n            // TODO Region\n            // 多个散点图系列在同一个地区的时候\n            return {\n                dimensions: completeDimensions([\n                    {name: 'lng'},\n                    {name: 'lat'}\n                ], data, ['lng', 'lat', 'value'])\n            };\n        }\n    };\n\n    function createNameList(result, data) {\n        var nameList = [];\n\n        var categoryDim = result && result.dimensions[result.categoryIndex];\n        var categoryAxisModel;\n        if (categoryDim) {\n            categoryAxisModel = result.categoryAxesModels[categoryDim.name];\n        }\n\n        if (categoryAxisModel) {\n            // FIXME Two category axis\n            var categories = categoryAxisModel.getCategories();\n            if (categories) {\n                var dataLen = data.length;\n                // Ordered data is given explicitly like\n                // [[3, 0.2], [1, 0.3], [2, 0.15]]\n                // or given scatter data,\n                // pick the category\n                if (zrUtil.isArray(data[0]) && data[0].length > 1) {\n                    nameList = [];\n                    for (var i = 0; i < dataLen; i++) {\n                        nameList[i] = categories[data[i][result.categoryIndex || 0]];\n                    }\n                }\n                else {\n                    nameList = categories.slice(0);\n                }\n            }\n        }\n\n        return nameList;\n    }\n\n    module.exports = createListFromArray;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/helper/createListFromArray.js\n// module id = 748\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n    var PRIORITY = echarts.PRIORITY;\n\n    require('./line/LineSeries');\n    require('./line/LineView');\n\n    echarts.registerVisual(zrUtil.curry(\n        require('../visual/symbol'), 'line', 'circle', 'line'\n    ));\n    echarts.registerLayout(zrUtil.curry(\n        require('../layout/points'), 'line'\n    ));\n\n    // Down sample after filter\n    echarts.registerProcessor(PRIORITY.PROCESSOR.STATISTIC, zrUtil.curry(\n        require('../processor/dataSample'), 'line'\n    ));\n\n    // In case developer forget to include grid component\n    require('../component/grid');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line.js\n// module id = 749\n// module chunks = 0","'use strict';\n\n\n    var createListFromArray = require('../helper/createListFromArray');\n    var SeriesModel = require('../../model/Series');\n\n    module.exports = SeriesModel.extend({\n\n        type: 'series.line',\n\n        dependencies: ['grid', 'polar'],\n\n        getInitialData: function (option, ecModel) {\n            if (__DEV__) {\n                var coordSys = option.coordinateSystem;\n                if (coordSys !== 'polar' && coordSys !== 'cartesian2d') {\n                    throw new Error('Line not support coordinateSystem besides cartesian and polar');\n                }\n            }\n            return createListFromArray(option.data, this, ecModel);\n        },\n\n        defaultOption: {\n            zlevel: 0,                  // 一级层叠\n            z: 2,                       // 二级层叠\n            coordinateSystem: 'cartesian2d',\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // stack: null\n            // xAxisIndex: 0,\n            // yAxisIndex: 0,\n\n            // polarIndex: 0,\n\n            // If clip the overflow value\n            clipOverflow: true,\n\n            label: {\n                normal: {\n                    position: 'top'\n                }\n            },\n            // itemStyle: {\n            //     normal: {},\n            //     emphasis: {}\n            // },\n            lineStyle: {\n                normal: {\n                    width: 2,\n                    type: 'solid'\n                }\n            },\n            // areaStyle: {},\n            // false, 'start', 'end', 'middle'\n            step: false,\n\n            // Disabled if step is true\n            smooth: false,\n            smoothMonotone: null,\n            // 拐点图形类型\n            symbol: 'emptyCircle',\n            // 拐点图形大小\n            symbolSize: 4,\n            // 拐点图形旋转控制\n            symbolRotate: null,\n\n            // 是否显示 symbol, 只有在 tooltip hover 的时候显示\n            showSymbol: true,\n            // 标志图形默认只有主轴显示（随主轴标签间隔隐藏策略）\n            showAllSymbol: false,\n\n            // 是否连接断点\n            connectNulls: false,\n\n            // 数据过滤，'average', 'max', 'min', 'sum'\n            sampling: 'none',\n\n            animationEasing: 'linear',\n\n            // Disable progressive\n            progressive: 0,\n            hoverLayerThreshold: Infinity\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineSeries.js\n// module id = 750\n// module chunks = 0","'use strict';\n// FIXME step not support polar\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var SymbolDraw = require('../helper/SymbolDraw');\n    var Symbol = require('../helper/Symbol');\n    var lineAnimationDiff = require('./lineAnimationDiff');\n    var graphic = require('../../util/graphic');\n    var modelUtil = require('../../util/model');\n    var polyHelper = require('./poly');\n    var ChartView = require('../../view/Chart');\n\n    function isPointsSame(points1, points2) {\n        if (points1.length !== points2.length) {\n            return;\n        }\n        for (var i = 0; i < points1.length; i++) {\n            var p1 = points1[i];\n            var p2 = points2[i];\n            if (p1[0] !== p2[0] || p1[1] !== p2[1]) {\n                return;\n            }\n        }\n        return true;\n    }\n\n    function getSmooth(smooth) {\n        return typeof (smooth) === 'number' ? smooth : (smooth ? 0.3 : 0);\n    }\n\n    function getAxisExtentWithGap(axis) {\n        var extent = axis.getGlobalExtent();\n        if (axis.onBand) {\n            // Remove extra 1px to avoid line miter in clipped edge\n            var halfBandWidth = axis.getBandWidth() / 2 - 1;\n            var dir = extent[1] > extent[0] ? 1 : -1;\n            extent[0] += dir * halfBandWidth;\n            extent[1] -= dir * halfBandWidth;\n        }\n        return extent;\n    }\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n    /**\n     * @param {module:echarts/coord/cartesian/Cartesian2D|module:echarts/coord/polar/Polar} coordSys\n     * @param {module:echarts/data/List} data\n     * @param {Array.<Array.<number>>} points\n     * @private\n     */\n    function getStackedOnPoints(coordSys, data) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        return data.mapArray([valueDim], function (val, idx) {\n            var stackedOnSameSign;\n            var stackedOn = data.stackedOn;\n            // Find first stacked value with same sign\n            while (stackedOn &&\n                sign(stackedOn.get(valueDim, idx)) === sign(val)\n            ) {\n                stackedOnSameSign = stackedOn;\n                break;\n            }\n            var stackedData = [];\n            stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n            stackedData[1 - baseDataOffset] = stackedOnSameSign\n                ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n            return coordSys.dataToPoint(stackedData);\n        }, true);\n    }\n\n    function createGridClipShape(cartesian, hasAnimation, seriesModel) {\n        var xExtent = getAxisExtentWithGap(cartesian.getAxis('x'));\n        var yExtent = getAxisExtentWithGap(cartesian.getAxis('y'));\n        var isHorizontal = cartesian.getBaseAxis().isHorizontal();\n\n        var x = Math.min(xExtent[0], xExtent[1]);\n        var y = Math.min(yExtent[0], yExtent[1]);\n        var width = Math.max(xExtent[0], xExtent[1]) - x;\n        var height = Math.max(yExtent[0], yExtent[1]) - y;\n        var lineWidth = seriesModel.get('lineStyle.normal.width') || 2;\n        // Expand clip shape to avoid clipping when line value exceeds axis\n        var expandSize = seriesModel.get('clipOverflow') ? lineWidth / 2 : Math.max(width, height);\n        if (isHorizontal) {\n            y -= expandSize;\n            height += expandSize * 2;\n        }\n        else {\n            x -= expandSize;\n            width += expandSize * 2;\n        }\n\n        var clipPath = new graphic.Rect({\n            shape: {\n                x: x,\n                y: y,\n                width: width,\n                height: height\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape[isHorizontal ? 'width' : 'height'] = 0;\n            graphic.initProps(clipPath, {\n                shape: {\n                    width: width,\n                    height: height\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createPolarClipShape(polar, hasAnimation, seriesModel) {\n        var angleAxis = polar.getAngleAxis();\n        var radiusAxis = polar.getRadiusAxis();\n\n        var radiusExtent = radiusAxis.getExtent();\n        var angleExtent = angleAxis.getExtent();\n\n        var RADIAN = Math.PI / 180;\n\n        var clipPath = new graphic.Sector({\n            shape: {\n                cx: polar.cx,\n                cy: polar.cy,\n                r0: radiusExtent[0],\n                r: radiusExtent[1],\n                startAngle: -angleExtent[0] * RADIAN,\n                endAngle: -angleExtent[1] * RADIAN,\n                clockwise: angleAxis.inverse\n            }\n        });\n\n        if (hasAnimation) {\n            clipPath.shape.endAngle = -angleExtent[0] * RADIAN;\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: -angleExtent[1] * RADIAN\n                }\n            }, seriesModel);\n        }\n\n        return clipPath;\n    }\n\n    function createClipShape(coordSys, hasAnimation, seriesModel) {\n        return coordSys.type === 'polar'\n            ? createPolarClipShape(coordSys, hasAnimation, seriesModel)\n            : createGridClipShape(coordSys, hasAnimation, seriesModel);\n    }\n\n    function turnPointsIntoStep(points, coordSys, stepTurnAt) {\n        var baseAxis = coordSys.getBaseAxis();\n        var baseIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n        var stepPoints = [];\n        for (var i = 0; i < points.length - 1; i++) {\n            var nextPt = points[i + 1];\n            var pt = points[i];\n            stepPoints.push(pt);\n\n            var stepPt = [];\n            switch (stepTurnAt) {\n                case 'end':\n                    stepPt[baseIndex] = nextPt[baseIndex];\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n                    break;\n                case 'middle':\n                    // default is start\n                    var middle = (pt[baseIndex] + nextPt[baseIndex]) / 2;\n                    var stepPt2 = [];\n                    stepPt[baseIndex] = stepPt2[baseIndex] = middle;\n                    stepPt[1 - baseIndex] = pt[1 - baseIndex];\n                    stepPt2[1 - baseIndex] = nextPt[1 - baseIndex];\n                    stepPoints.push(stepPt);\n                    stepPoints.push(stepPt2);\n                    break;\n                default:\n                    stepPt[baseIndex] = pt[baseIndex];\n                    stepPt[1 - baseIndex] = nextPt[1 - baseIndex];\n                    // default is start\n                    stepPoints.push(stepPt);\n            }\n        }\n        // Last points\n        points[i] && stepPoints.push(points[i]);\n        return stepPoints;\n    }\n\n    function getVisualGradient(data, coordSys) {\n        var visualMetaList = data.getVisual('visualMeta');\n        if (!visualMetaList || !visualMetaList.length || !data.count()) {\n            // When data.count() is 0, gradient range can not be calculated.\n            return;\n        }\n\n        var visualMeta;\n        for (var i = visualMetaList.length - 1; i >= 0; i--) {\n            // Can only be x or y\n            if (visualMetaList[i].dimension < 2) {\n                visualMeta = visualMetaList[i];\n                break;\n            }\n        }\n        if (!visualMeta || coordSys.type !== 'cartesian2d') {\n            if (__DEV__) {\n                console.warn('Visual map on line style only support x or y dimension.');\n            }\n            return;\n        }\n\n        // If the area to be rendered is bigger than area defined by LinearGradient,\n        // the canvas spec prescribes that the color of the first stop and the last\n        // stop should be used. But if two stops are added at offset 0, in effect\n        // browsers use the color of the second stop to render area outside\n        // LinearGradient. So we can only infinitesimally extend area defined in\n        // LinearGradient to render `outerColors`.\n\n        var dimension = visualMeta.dimension;\n        var dimName = data.dimensions[dimension];\n        var axis = coordSys.getAxis(dimName);\n\n        // dataToCoor mapping may not be linear, but must be monotonic.\n        var colorStops = zrUtil.map(visualMeta.stops, function (stop) {\n            return {\n                coord: axis.toGlobalCoord(axis.dataToCoord(stop.value)),\n                color: stop.color\n            };\n        });\n        var stopLen = colorStops.length;\n        var outerColors = visualMeta.outerColors.slice();\n\n        if (stopLen && colorStops[0].coord > colorStops[stopLen - 1].coord) {\n            colorStops.reverse();\n            outerColors.reverse();\n        }\n\n        var tinyExtent = 10; // Arbitrary value: 10px\n        var minCoord = colorStops[0].coord - tinyExtent;\n        var maxCoord = colorStops[stopLen - 1].coord + tinyExtent;\n        var coordSpan = maxCoord - minCoord;\n\n        if (coordSpan < 1e-3) {\n            return 'transparent';\n        }\n\n        zrUtil.each(colorStops, function (stop) {\n            stop.offset = (stop.coord - minCoord) / coordSpan;\n        });\n        colorStops.push({\n            offset: stopLen ? colorStops[stopLen - 1].offset : 0.5,\n            color: outerColors[1] || 'transparent'\n        });\n        colorStops.unshift({ // notice colorStops.length have been changed.\n            offset: stopLen ? colorStops[0].offset : 0.5,\n            color: outerColors[0] || 'transparent'\n        });\n\n        // zrUtil.each(colorStops, function (colorStop) {\n        //     // Make sure each offset has rounded px to avoid not sharp edge\n        //     colorStop.offset = (Math.round(colorStop.offset * (end - start) + start) - start) / (end - start);\n        // });\n\n        var gradient = new graphic.LinearGradient(0, 0, 0, 0, colorStops, true);\n        gradient[dimName] = minCoord;\n        gradient[dimName + '2'] = maxCoord;\n\n        return gradient;\n    }\n\n    module.exports = ChartView.extend({\n\n        type: 'line',\n\n        init: function () {\n            var lineGroup = new graphic.Group();\n\n            var symbolDraw = new SymbolDraw();\n            this.group.add(symbolDraw.group);\n\n            this._symbolDraw = symbolDraw;\n            this._lineGroup = lineGroup;\n        },\n\n        render: function (seriesModel, ecModel, api) {\n            var coordSys = seriesModel.coordinateSystem;\n            var group = this.group;\n            var data = seriesModel.getData();\n            var lineStyleModel = seriesModel.getModel('lineStyle.normal');\n            var areaStyleModel = seriesModel.getModel('areaStyle.normal');\n\n            var points = data.mapArray(data.getItemLayout, true);\n\n            var isCoordSysPolar = coordSys.type === 'polar';\n            var prevCoordSys = this._coordSys;\n\n            var symbolDraw = this._symbolDraw;\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n\n            var lineGroup = this._lineGroup;\n\n            var hasAnimation = seriesModel.get('animation');\n\n            var isAreaChart = !areaStyleModel.isEmpty();\n            var stackedOnPoints = getStackedOnPoints(coordSys, data);\n\n            var showSymbol = seriesModel.get('showSymbol');\n\n            var isSymbolIgnore = showSymbol && !isCoordSysPolar && !seriesModel.get('showAllSymbol')\n                && this._getSymbolIgnoreFunc(data, coordSys);\n\n            // Remove temporary symbols\n            var oldData = this._data;\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            // Remove previous created symbols if showSymbol changed to false\n            if (!showSymbol) {\n                symbolDraw.remove();\n            }\n\n            group.add(lineGroup);\n\n            // FIXME step not support polar\n            var step = !isCoordSysPolar && seriesModel.get('step');\n            // Initialization animation or coordinate system changed\n            if (\n                !(polyline && prevCoordSys.type === coordSys.type && step === this._step)\n            ) {\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                if (step) {\n                    // TODO If stacked series is not step\n                    points = turnPointsIntoStep(points, coordSys, step);\n                    stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                }\n\n                polyline = this._newPolyline(points, coordSys, hasAnimation);\n                if (isAreaChart) {\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                lineGroup.setClipPath(createClipShape(coordSys, true, seriesModel));\n            }\n            else {\n                if (isAreaChart && !polygon) {\n                    // If areaStyle is added\n                    polygon = this._newPolygon(\n                        points, stackedOnPoints,\n                        coordSys, hasAnimation\n                    );\n                }\n                else if (polygon && !isAreaChart) {\n                    // If areaStyle is removed\n                    lineGroup.remove(polygon);\n                    polygon = this._polygon = null;\n                }\n\n                // Update clipPath\n                lineGroup.setClipPath(createClipShape(coordSys, false, seriesModel));\n\n                // Always update, or it is wrong in the case turning on legend\n                // because points are not changed\n                showSymbol && symbolDraw.updateData(data, isSymbolIgnore);\n\n                // Stop symbol animation and sync with line points\n                // FIXME performance?\n                data.eachItemGraphicEl(function (el) {\n                    el.stopAnimation(true);\n                });\n\n                // In the case data zoom triggerred refreshing frequently\n                // Data may not change if line has a category axis. So it should animate nothing\n                if (!isPointsSame(this._stackedOnPoints, stackedOnPoints)\n                    || !isPointsSame(this._points, points)\n                ) {\n                    if (hasAnimation) {\n                        this._updateAnimation(\n                            data, stackedOnPoints, coordSys, api, step\n                        );\n                    }\n                    else {\n                        // Not do it in update with animation\n                        if (step) {\n                            // TODO If stacked series is not step\n                            points = turnPointsIntoStep(points, coordSys, step);\n                            stackedOnPoints = turnPointsIntoStep(stackedOnPoints, coordSys, step);\n                        }\n\n                        polyline.setShape({\n                            points: points\n                        });\n                        polygon && polygon.setShape({\n                            points: points,\n                            stackedOnPoints: stackedOnPoints\n                        });\n                    }\n                }\n            }\n\n            var visualColor = getVisualGradient(data, coordSys) || data.getVisual('color');\n\n            polyline.useStyle(zrUtil.defaults(\n                // Use color in lineStyle first\n                lineStyleModel.getLineStyle(),\n                {\n                    fill: 'none',\n                    stroke: visualColor,\n                    lineJoin: 'bevel'\n                }\n            ));\n\n            var smooth = seriesModel.get('smooth');\n            smooth = getSmooth(seriesModel.get('smooth'));\n            polyline.setShape({\n                smooth: smooth,\n                smoothMonotone: seriesModel.get('smoothMonotone'),\n                connectNulls: seriesModel.get('connectNulls')\n            });\n\n            if (polygon) {\n                var stackedOn = data.stackedOn;\n                var stackedOnSmooth = 0;\n\n                polygon.useStyle(zrUtil.defaults(\n                    areaStyleModel.getAreaStyle(),\n                    {\n                        fill: visualColor,\n                        opacity: 0.7,\n                        lineJoin: 'bevel'\n                    }\n                ));\n\n                if (stackedOn) {\n                    var stackedOnSeries = stackedOn.hostModel;\n                    stackedOnSmooth = getSmooth(stackedOnSeries.get('smooth'));\n                }\n\n                polygon.setShape({\n                    smooth: smooth,\n                    stackedOnSmooth: stackedOnSmooth,\n                    smoothMonotone: seriesModel.get('smoothMonotone'),\n                    connectNulls: seriesModel.get('connectNulls')\n                });\n            }\n\n            this._data = data;\n            // Save the coordinate system for transition animation when data changed\n            this._coordSys = coordSys;\n            this._stackedOnPoints = stackedOnPoints;\n            this._points = points;\n            this._step = step;\n        },\n\n        dispose: function () {},\n\n        highlight: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n\n            if (!(dataIndex instanceof Array) && dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (!symbol) {\n                    // Create a temporary symbol if it is not exists\n                    var pt = data.getItemLayout(dataIndex);\n                    if (!pt) {\n                        // Null data\n                        return;\n                    }\n                    symbol = new Symbol(data, dataIndex);\n                    symbol.position = pt;\n                    symbol.setZ(\n                        seriesModel.get('zlevel'),\n                        seriesModel.get('z')\n                    );\n                    symbol.ignore = isNaN(pt[0]) || isNaN(pt[1]);\n                    symbol.__temp = true;\n                    data.setItemGraphicEl(dataIndex, symbol);\n\n                    // Stop scale animation\n                    symbol.stopSymbolAnimation(true);\n\n                    this.group.add(symbol);\n                }\n                symbol.highlight();\n            }\n            else {\n                // Highlight whole series\n                ChartView.prototype.highlight.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        downplay: function (seriesModel, ecModel, api, payload) {\n            var data = seriesModel.getData();\n            var dataIndex = modelUtil.queryDataIndex(data, payload);\n            if (dataIndex != null && dataIndex >= 0) {\n                var symbol = data.getItemGraphicEl(dataIndex);\n                if (symbol) {\n                    if (symbol.__temp) {\n                        data.setItemGraphicEl(dataIndex, null);\n                        this.group.remove(symbol);\n                    }\n                    else {\n                        symbol.downplay();\n                    }\n                }\n            }\n            else {\n                // Downplay whole series\n                ChartView.prototype.downplay.call(\n                    this, seriesModel, ecModel, api, payload\n                );\n            }\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolyline: function (points) {\n            var polyline = this._polyline;\n            // Remove previous created polyline\n            if (polyline) {\n                this._lineGroup.remove(polyline);\n            }\n\n            polyline = new polyHelper.Polyline({\n                shape: {\n                    points: points\n                },\n                silent: true,\n                z2: 10\n            });\n\n            this._lineGroup.add(polyline);\n\n            this._polyline = polyline;\n\n            return polyline;\n        },\n\n        /**\n         * @param {module:zrender/container/Group} group\n         * @param {Array.<Array.<number>>} stackedOnPoints\n         * @param {Array.<Array.<number>>} points\n         * @private\n         */\n        _newPolygon: function (points, stackedOnPoints) {\n            var polygon = this._polygon;\n            // Remove previous created polygon\n            if (polygon) {\n                this._lineGroup.remove(polygon);\n            }\n\n            polygon = new polyHelper.Polygon({\n                shape: {\n                    points: points,\n                    stackedOnPoints: stackedOnPoints\n                },\n                silent: true\n            });\n\n            this._lineGroup.add(polygon);\n\n            this._polygon = polygon;\n            return polygon;\n        },\n        /**\n         * @private\n         */\n        _getSymbolIgnoreFunc: function (data, coordSys) {\n            var categoryAxis = coordSys.getAxesByScale('ordinal')[0];\n            // `getLabelInterval` is provided by echarts/component/axis\n            if (categoryAxis && categoryAxis.isLabelIgnored) {\n                return zrUtil.bind(categoryAxis.isLabelIgnored, categoryAxis);\n            }\n        },\n\n        /**\n         * @private\n         */\n        // FIXME Two value axis\n        _updateAnimation: function (data, stackedOnPoints, coordSys, api, step) {\n            var polyline = this._polyline;\n            var polygon = this._polygon;\n            var seriesModel = data.hostModel;\n\n            var diff = lineAnimationDiff(\n                this._data, data,\n                this._stackedOnPoints, stackedOnPoints,\n                this._coordSys, coordSys\n            );\n\n            var current = diff.current;\n            var stackedOnCurrent = diff.stackedOnCurrent;\n            var next = diff.next;\n            var stackedOnNext = diff.stackedOnNext;\n            if (step) {\n                // TODO If stacked series is not step\n                current = turnPointsIntoStep(diff.current, coordSys, step);\n                stackedOnCurrent = turnPointsIntoStep(diff.stackedOnCurrent, coordSys, step);\n                next = turnPointsIntoStep(diff.next, coordSys, step);\n                stackedOnNext = turnPointsIntoStep(diff.stackedOnNext, coordSys, step);\n            }\n            // `diff.current` is subset of `current` (which should be ensured by\n            // turnPointsIntoStep), so points in `__points` can be updated when\n            // points in `current` are update during animation.\n            polyline.shape.__points = diff.current;\n            polyline.shape.points = current;\n\n            graphic.updateProps(polyline, {\n                shape: {\n                    points: next\n                }\n            }, seriesModel);\n\n            if (polygon) {\n                polygon.setShape({\n                    points: current,\n                    stackedOnPoints: stackedOnCurrent\n                });\n                graphic.updateProps(polygon, {\n                    shape: {\n                        points: next,\n                        stackedOnPoints: stackedOnNext\n                    }\n                }, seriesModel);\n            }\n\n            var updatedDataInfo = [];\n            var diffStatus = diff.status;\n\n            for (var i = 0; i < diffStatus.length; i++) {\n                var cmd = diffStatus[i].cmd;\n                if (cmd === '=') {\n                    var el = data.getItemGraphicEl(diffStatus[i].idx1);\n                    if (el) {\n                        updatedDataInfo.push({\n                            el: el,\n                            ptIdx: i    // Index of points\n                        });\n                    }\n                }\n            }\n\n            if (polyline.animators && polyline.animators.length) {\n                polyline.animators[0].during(function () {\n                    for (var i = 0; i < updatedDataInfo.length; i++) {\n                        var el = updatedDataInfo[i].el;\n                        el.attr('position', polyline.shape.__points[updatedDataInfo[i].ptIdx]);\n                    }\n                });\n            }\n        },\n\n        remove: function (ecModel) {\n            var group = this.group;\n            var oldData = this._data;\n            this._lineGroup.removeAll();\n            this._symbolDraw.remove(true);\n            // Remove temporary created elements when highlighting\n            oldData && oldData.eachItemGraphicEl(function (el, idx) {\n                if (el.__temp) {\n                    group.remove(el);\n                    oldData.setItemGraphicEl(idx, null);\n                }\n            });\n\n            this._polyline =\n            this._polygon =\n            this._coordSys =\n            this._points =\n            this._stackedOnPoints =\n            this._data = null;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/LineView.js\n// module id = 751\n// module chunks = 0","\n\n    // var arrayDiff = require('zrender/lib/core/arrayDiff');\n    // 'zrender/core/arrayDiff' has been used before, but it did\n    // not do well in performance when roam with fixed dataZoom window.\n\n    function sign(val) {\n        return val >= 0 ? 1 : -1;\n    }\n\n    function getStackedOnPoint(coordSys, data, idx) {\n        var baseAxis = coordSys.getBaseAxis();\n        var valueAxis = coordSys.getOtherAxis(baseAxis);\n        var valueStart = baseAxis.onZero\n            ? 0 : valueAxis.scale.getExtent()[0];\n\n        var valueDim = valueAxis.dim;\n        var baseDataOffset = valueDim === 'x' || valueDim === 'radius' ? 1 : 0;\n\n        var stackedOnSameSign;\n        var stackedOn = data.stackedOn;\n        var val = data.get(valueDim, idx);\n        // Find first stacked value with same sign\n        while (stackedOn &&\n            sign(stackedOn.get(valueDim, idx)) === sign(val)\n        ) {\n            stackedOnSameSign = stackedOn;\n            break;\n        }\n        var stackedData = [];\n        stackedData[baseDataOffset] = data.get(baseAxis.dim, idx);\n        stackedData[1 - baseDataOffset] = stackedOnSameSign\n            ? stackedOnSameSign.get(valueDim, idx, true) : valueStart;\n\n        return coordSys.dataToPoint(stackedData);\n    }\n\n    // function convertToIntId(newIdList, oldIdList) {\n    //     // Generate int id instead of string id.\n    //     // Compare string maybe slow in score function of arrDiff\n\n    //     // Assume id in idList are all unique\n    //     var idIndicesMap = {};\n    //     var idx = 0;\n    //     for (var i = 0; i < newIdList.length; i++) {\n    //         idIndicesMap[newIdList[i]] = idx;\n    //         newIdList[i] = idx++;\n    //     }\n    //     for (var i = 0; i < oldIdList.length; i++) {\n    //         var oldId = oldIdList[i];\n    //         // Same with newIdList\n    //         if (idIndicesMap[oldId]) {\n    //             oldIdList[i] = idIndicesMap[oldId];\n    //         }\n    //         else {\n    //             oldIdList[i] = idx++;\n    //         }\n    //     }\n    // }\n\n    function diffData(oldData, newData) {\n        var diffResult = [];\n\n        newData.diff(oldData)\n            .add(function (idx) {\n                diffResult.push({cmd: '+', idx: idx});\n            })\n            .update(function (newIdx, oldIdx) {\n                diffResult.push({cmd: '=', idx: oldIdx, idx1: newIdx});\n            })\n            .remove(function (idx) {\n                diffResult.push({cmd: '-', idx: idx});\n            })\n            .execute();\n\n        return diffResult;\n    }\n\n    module.exports = function (\n        oldData, newData,\n        oldStackedOnPoints, newStackedOnPoints,\n        oldCoordSys, newCoordSys\n    ) {\n        var diff = diffData(oldData, newData);\n\n        // var newIdList = newData.mapArray(newData.getId);\n        // var oldIdList = oldData.mapArray(oldData.getId);\n\n        // convertToIntId(newIdList, oldIdList);\n\n        // // FIXME One data ?\n        // diff = arrayDiff(oldIdList, newIdList);\n\n        var currPoints = [];\n        var nextPoints = [];\n        // Points for stacking base line\n        var currStackedPoints = [];\n        var nextStackedPoints = [];\n\n        var status = [];\n        var sortedIndices = [];\n        var rawIndices = [];\n        var dims = newCoordSys.dimensions;\n        for (var i = 0; i < diff.length; i++) {\n            var diffItem = diff[i];\n            var pointAdded = true;\n\n            // FIXME, animation is not so perfect when dataZoom window moves fast\n            // Which is in case remvoing or add more than one data in the tail or head\n            switch (diffItem.cmd) {\n                case '=':\n                    var currentPt = oldData.getItemLayout(diffItem.idx);\n                    var nextPt = newData.getItemLayout(diffItem.idx1);\n                    // If previous data is NaN, use next point directly\n                    if (isNaN(currentPt[0]) || isNaN(currentPt[1])) {\n                        currentPt = nextPt.slice();\n                    }\n                    currPoints.push(currentPt);\n                    nextPoints.push(nextPt);\n\n                    currStackedPoints.push(oldStackedOnPoints[diffItem.idx]);\n                    nextStackedPoints.push(newStackedOnPoints[diffItem.idx1]);\n\n                    rawIndices.push(newData.getRawIndex(diffItem.idx1));\n                    break;\n                case '+':\n                    var idx = diffItem.idx;\n                    currPoints.push(\n                        oldCoordSys.dataToPoint([\n                            newData.get(dims[0], idx, true), newData.get(dims[1], idx, true)\n                        ])\n                    );\n\n                    nextPoints.push(newData.getItemLayout(idx).slice());\n\n                    currStackedPoints.push(\n                        getStackedOnPoint(oldCoordSys, newData, idx)\n                    );\n                    nextStackedPoints.push(newStackedOnPoints[idx]);\n\n                    rawIndices.push(newData.getRawIndex(idx));\n                    break;\n                case '-':\n                    var idx = diffItem.idx;\n                    var rawIndex = oldData.getRawIndex(idx);\n                    // Data is replaced. In the case of dynamic data queue\n                    // FIXME FIXME FIXME\n                    if (rawIndex !== idx) {\n                        currPoints.push(oldData.getItemLayout(idx));\n                        nextPoints.push(newCoordSys.dataToPoint([\n                            oldData.get(dims[0], idx, true), oldData.get(dims[1], idx, true)\n                        ]));\n\n                        currStackedPoints.push(oldStackedOnPoints[idx]);\n                        nextStackedPoints.push(\n                            getStackedOnPoint(\n                                newCoordSys, oldData, idx\n                            )\n                        );\n\n                        rawIndices.push(rawIndex);\n                    }\n                    else {\n                        pointAdded = false;\n                    }\n            }\n\n            // Original indices\n            if (pointAdded) {\n                status.push(diffItem);\n                sortedIndices.push(sortedIndices.length);\n            }\n        }\n\n        // Diff result may be crossed if all items are changed\n        // Sort by data index\n        sortedIndices.sort(function (a, b) {\n            return rawIndices[a] - rawIndices[b];\n        });\n\n        var sortedCurrPoints = [];\n        var sortedNextPoints = [];\n\n        var sortedCurrStackedPoints = [];\n        var sortedNextStackedPoints = [];\n\n        var sortedStatus = [];\n        for (var i = 0; i < sortedIndices.length; i++) {\n            var idx = sortedIndices[i];\n            sortedCurrPoints[i] = currPoints[idx];\n            sortedNextPoints[i] = nextPoints[idx];\n\n            sortedCurrStackedPoints[i] = currStackedPoints[idx];\n            sortedNextStackedPoints[i] = nextStackedPoints[idx];\n\n            sortedStatus[i] = status[idx];\n        }\n\n        return {\n            current: sortedCurrPoints,\n            next: sortedNextPoints,\n\n            stackedOnCurrent: sortedCurrStackedPoints,\n            stackedOnNext: sortedNextStackedPoints,\n\n            status: sortedStatus\n        };\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/lineAnimationDiff.js\n// module id = 752\n// module chunks = 0","// Poly path support NaN point\n\n\n    var Path = require('zrender/lib/graphic/Path');\n    var vec2 = require('zrender/lib/core/vector');\n\n    var vec2Min = vec2.min;\n    var vec2Max = vec2.max;\n\n    var scaleAndAdd = vec2.scaleAndAdd;\n    var v2Copy = vec2.copy;\n\n    // Temporary variable\n    var v = [];\n    var cp0 = [];\n    var cp1 = [];\n\n    function isPointNull(p) {\n        return isNaN(p[0]) || isNaN(p[1]);\n    }\n\n    function drawSegment(\n        ctx, points, start, segLen, allLen,\n        dir, smoothMin, smoothMax, smooth, smoothMonotone, connectNulls\n    ) {\n        var prevIdx = 0;\n        var idx = start;\n        for (var k = 0; k < segLen; k++) {\n            var p = points[idx];\n            if (idx >= allLen || idx < 0) {\n                break;\n            }\n            if (isPointNull(p)) {\n                if (connectNulls) {\n                    idx += dir;\n                    continue;\n                }\n                break;\n            }\n\n            if (idx === start) {\n                ctx[dir > 0 ? 'moveTo' : 'lineTo'](p[0], p[1]);\n                v2Copy(cp0, p);\n            }\n            else {\n                if (smooth > 0) {\n                    var nextIdx = idx + dir;\n                    var nextP = points[nextIdx];\n                    if (connectNulls) {\n                        // Find next point not null\n                        while (nextP && isPointNull(points[nextIdx])) {\n                            nextIdx += dir;\n                            nextP = points[nextIdx];\n                        }\n                    }\n\n                    var ratioNextSeg = 0.5;\n                    var prevP = points[prevIdx];\n                    var nextP = points[nextIdx];\n                    // Last point\n                    if (!nextP || isPointNull(nextP)) {\n                        v2Copy(cp1, p);\n                    }\n                    else {\n                        // If next data is null in not connect case\n                        if (isPointNull(nextP) && !connectNulls) {\n                            nextP = p;\n                        }\n\n                        vec2.sub(v, nextP, prevP);\n\n                        var lenPrevSeg;\n                        var lenNextSeg;\n                        if (smoothMonotone === 'x' || smoothMonotone === 'y') {\n                            var dim = smoothMonotone === 'x' ? 0 : 1;\n                            lenPrevSeg = Math.abs(p[dim] - prevP[dim]);\n                            lenNextSeg = Math.abs(p[dim] - nextP[dim]);\n                        }\n                        else {\n                            lenPrevSeg = vec2.dist(p, prevP);\n                            lenNextSeg = vec2.dist(p, nextP);\n                        }\n\n                        // Use ratio of seg length\n                        ratioNextSeg = lenNextSeg / (lenNextSeg + lenPrevSeg);\n\n                        scaleAndAdd(cp1, p, v, -smooth * (1 - ratioNextSeg));\n                    }\n                    // Smooth constraint\n                    vec2Min(cp0, cp0, smoothMax);\n                    vec2Max(cp0, cp0, smoothMin);\n                    vec2Min(cp1, cp1, smoothMax);\n                    vec2Max(cp1, cp1, smoothMin);\n\n                    ctx.bezierCurveTo(\n                        cp0[0], cp0[1],\n                        cp1[0], cp1[1],\n                        p[0], p[1]\n                    );\n                    // cp0 of next segment\n                    scaleAndAdd(cp0, p, v, smooth * ratioNextSeg);\n                }\n                else {\n                    ctx.lineTo(p[0], p[1]);\n                }\n            }\n\n            prevIdx = idx;\n            idx += dir;\n        }\n\n        return k;\n    }\n\n    function getBoundingBox(points, smoothConstraint) {\n        var ptMin = [Infinity, Infinity];\n        var ptMax = [-Infinity, -Infinity];\n        if (smoothConstraint) {\n            for (var i = 0; i < points.length; i++) {\n                var pt = points[i];\n                if (pt[0] < ptMin[0]) { ptMin[0] = pt[0]; }\n                if (pt[1] < ptMin[1]) { ptMin[1] = pt[1]; }\n                if (pt[0] > ptMax[0]) { ptMax[0] = pt[0]; }\n                if (pt[1] > ptMax[1]) { ptMax[1] = pt[1]; }\n            }\n        }\n        return {\n            min: smoothConstraint ? ptMin : ptMax,\n            max: smoothConstraint ? ptMax : ptMin\n        };\n    }\n\n    module.exports = {\n\n        Polyline: Path.extend({\n\n            type: 'ec-polyline',\n\n            shape: {\n                points: [],\n\n                smooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            style: {\n                fill: null,\n\n                stroke: '#000'\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n\n                var i = 0;\n                var len = points.length;\n\n                var result = getBoundingBox(points, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    i += drawSegment(\n                        ctx, points, i, len, len,\n                        1, result.min, result.max, shape.smooth,\n                        shape.smoothMonotone, shape.connectNulls\n                    ) + 1;\n                }\n            }\n        }),\n\n        Polygon: Path.extend({\n\n            type: 'ec-polygon',\n\n            shape: {\n                points: [],\n\n                // Offset between stacked base points and points\n                stackedOnPoints: [],\n\n                smooth: 0,\n\n                stackedOnSmooth: 0,\n\n                smoothConstraint: true,\n\n                smoothMonotone: null,\n\n                connectNulls: false\n            },\n\n            buildPath: function (ctx, shape) {\n                var points = shape.points;\n                var stackedOnPoints = shape.stackedOnPoints;\n\n                var i = 0;\n                var len = points.length;\n                var smoothMonotone = shape.smoothMonotone;\n                var bbox = getBoundingBox(points, shape.smoothConstraint);\n                var stackedOnBBox = getBoundingBox(stackedOnPoints, shape.smoothConstraint);\n\n                if (shape.connectNulls) {\n                    // Must remove first and last null values avoid draw error in polygon\n                    for (; len > 0; len--) {\n                        if (!isPointNull(points[len - 1])) {\n                            break;\n                        }\n                    }\n                    for (; i < len; i++) {\n                        if (!isPointNull(points[i])) {\n                            break;\n                        }\n                    }\n                }\n                while (i < len) {\n                    var k = drawSegment(\n                        ctx, points, i, len, len,\n                        1, bbox.min, bbox.max, shape.smooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    drawSegment(\n                        ctx, stackedOnPoints, i + k - 1, k, len,\n                        -1, stackedOnBBox.min, stackedOnBBox.max, shape.stackedOnSmooth,\n                        smoothMonotone, shape.connectNulls\n                    );\n                    i += k + 1;\n\n                    ctx.closePath();\n                }\n            }\n        })\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/line/poly.js\n// module id = 753\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('./pie/PieSeries');\n    require('./pie/PieView');\n\n    require('../action/createDataSelectAction')('pie', [{\n        type: 'pieToggleSelect',\n        event: 'pieselectchanged',\n        method: 'toggleSelected'\n    }, {\n        type: 'pieSelect',\n        event: 'pieselected',\n        method: 'select'\n    }, {\n        type: 'pieUnSelect',\n        event: 'pieunselected',\n        method: 'unSelect'\n    }]);\n\n    echarts.registerVisual(zrUtil.curry(require('../visual/dataColor'), 'pie'));\n\n    echarts.registerLayout(zrUtil.curry(\n        require('./pie/pieLayout'), 'pie'\n    ));\n\n    echarts.registerProcessor(zrUtil.curry(require('../processor/dataFilter'), 'pie'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie.js\n// module id = 754\n// module chunks = 0","'use strict';\n\n\n    var List = require('../../data/List');\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../../util/model');\n    var completeDimensions = require('../../data/helper/completeDimensions');\n\n    var dataSelectableMixin = require('../../component/helper/selectableMixin');\n\n    var PieSeries = require('../../echarts').extendSeriesModel({\n\n        type: 'series.pie',\n\n        // Overwrite\n        init: function (option) {\n            PieSeries.superApply(this, 'init', arguments);\n\n            // Enable legend selection for each data item\n            // Use a function instead of direct access because data reference may changed\n            this.legendDataProvider = function () {\n                return this._dataBeforeProcessed;\n            };\n\n            this.updateSelectedMap(option.data);\n\n            this._defaultLabelLine(option);\n        },\n\n        // Overwrite\n        mergeOption: function (newOption) {\n            PieSeries.superCall(this, 'mergeOption', newOption);\n            this.updateSelectedMap(this.option.data);\n        },\n\n        getInitialData: function (option, ecModel) {\n            var dimensions = completeDimensions(['value'], option.data);\n            var list = new List(dimensions, this);\n            list.initData(option.data);\n            return list;\n        },\n\n        // Overwrite\n        getDataParams: function (dataIndex) {\n            var data = this._data;\n            var params = PieSeries.superCall(this, 'getDataParams', dataIndex);\n            var sum = data.getSum('value');\n            // FIXME toFixed?\n            //\n            // Percent is 0 if sum is 0\n            params.percent = !sum ? 0 : +(data.get('value', dataIndex) / sum * 100).toFixed(2);\n\n            params.$vars.push('percent');\n            return params;\n        },\n\n        _defaultLabelLine: function (option) {\n            // Extend labelLine emphasis\n            modelUtil.defaultEmphasis(option.labelLine, ['show']);\n\n            var labelLineNormalOpt = option.labelLine.normal;\n            var labelLineEmphasisOpt = option.labelLine.emphasis;\n            // Not show label line if `label.normal.show = false`\n            labelLineNormalOpt.show = labelLineNormalOpt.show\n                && option.label.normal.show;\n            labelLineEmphasisOpt.show = labelLineEmphasisOpt.show\n                && option.label.emphasis.show;\n        },\n\n        defaultOption: {\n            zlevel: 0,\n            z: 2,\n            legendHoverLink: true,\n\n            hoverAnimation: true,\n            // 默认全局居中\n            center: ['50%', '50%'],\n            radius: [0, '75%'],\n            // 默认顺时针\n            clockwise: true,\n            startAngle: 90,\n            // 最小角度改为0\n            minAngle: 0,\n            // 选中是扇区偏移量\n            selectedOffset: 10,\n\n            // If use strategy to avoid label overlapping\n            avoidLabelOverlap: true,\n            // 选择模式，默认关闭，可选single，multiple\n            // selectedMode: false,\n            // 南丁格尔玫瑰图模式，'radius'（半径） | 'area'（面积）\n            // roseType: null,\n\n            label: {\n                normal: {\n                    // If rotate around circle\n                    rotate: false,\n                    show: true,\n                    // 'outer', 'inside', 'center'\n                    position: 'outer'\n                    // formatter: 标签文本格式器，同Tooltip.formatter，不支持异步回调\n                    // textStyle: null      // 默认使用全局文本样式，详见TEXTSTYLE\n                    // distance: 当position为inner时有效，为label位置到圆心的距离与圆半径(环状图为内外半径和)的比例系数\n                },\n                emphasis: {}\n            },\n            // Enabled when label.normal.position is 'outer'\n            labelLine: {\n                normal: {\n                    show: true,\n                    // 引导线两段中的第一段长度\n                    length: 15,\n                    // 引导线两段中的第二段长度\n                    length2: 15,\n                    smooth: false,\n                    lineStyle: {\n                        // color: 各异,\n                        width: 1,\n                        type: 'solid'\n                    }\n                }\n            },\n            itemStyle: {\n                normal: {\n                    borderWidth: 1\n                },\n                emphasis: {}\n            },\n\n            animationEasing: 'cubicOut',\n\n            data: []\n        }\n    });\n\n    zrUtil.mixin(PieSeries, dataSelectableMixin);\n\n    module.exports = PieSeries;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieSeries.js\n// module id = 755\n// module chunks = 0","\n\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n\n    /**\n     * @param {module:echarts/model/Series} seriesModel\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function updateDataSelected(uid, seriesModel, hasAnimation, api) {\n        var data = seriesModel.getData();\n        var dataIndex = this.dataIndex;\n        var name = data.getName(dataIndex);\n        var selectedOffset = seriesModel.get('selectedOffset');\n\n        api.dispatchAction({\n            type: 'pieToggleSelect',\n            from: uid,\n            name: name,\n            seriesId: seriesModel.id\n        });\n\n        data.each(function (idx) {\n            toggleItemSelected(\n                data.getItemGraphicEl(idx),\n                data.getItemLayout(idx),\n                seriesModel.isSelected(data.getName(idx)),\n                selectedOffset,\n                hasAnimation\n            );\n        });\n    }\n\n    /**\n     * @param {module:zrender/graphic/Sector} el\n     * @param {Object} layout\n     * @param {boolean} isSelected\n     * @param {number} selectedOffset\n     * @param {boolean} hasAnimation\n     * @inner\n     */\n    function toggleItemSelected(el, layout, isSelected, selectedOffset, hasAnimation) {\n        var midAngle = (layout.startAngle + layout.endAngle) / 2;\n\n        var dx = Math.cos(midAngle);\n        var dy = Math.sin(midAngle);\n\n        var offset = isSelected ? selectedOffset : 0;\n        var position = [dx * offset, dy * offset];\n\n        hasAnimation\n            // animateTo will stop revious animation like update transition\n            ? el.animate()\n                .when(200, {\n                    position: position\n                })\n                .start('bounceOut')\n            : el.attr('position', position);\n    }\n\n    /**\n     * Piece of pie including Sector, Label, LabelLine\n     * @constructor\n     * @extends {module:zrender/graphic/Group}\n     */\n    function PiePiece(data, idx) {\n\n        graphic.Group.call(this);\n\n        var sector = new graphic.Sector({\n            z2: 2\n        });\n        var polyline = new graphic.Polyline();\n        var text = new graphic.Text();\n        this.add(sector);\n        this.add(polyline);\n        this.add(text);\n\n        this.updateData(data, idx, true);\n\n        // Hover to change label and labelLine\n        function onEmphasis() {\n            polyline.ignore = polyline.hoverIgnore;\n            text.ignore = text.hoverIgnore;\n        }\n        function onNormal() {\n            polyline.ignore = polyline.normalIgnore;\n            text.ignore = text.normalIgnore;\n        }\n        this.on('emphasis', onEmphasis)\n            .on('normal', onNormal)\n            .on('mouseover', onEmphasis)\n            .on('mouseout', onNormal);\n    }\n\n    var piePieceProto = PiePiece.prototype;\n\n    function getLabelStyle(data, idx, state, labelModel, labelPosition) {\n        var textStyleModel = labelModel.getModel('textStyle');\n        var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n        return {\n            fill: textStyleModel.getTextColor()\n                || (isLabelInside ? '#fff' : data.getItemVisual(idx, 'color')),\n            opacity: data.getItemVisual(idx, 'opacity'),\n            textFont: textStyleModel.getFont(),\n            text: zrUtil.retrieve(\n                data.hostModel.getFormattedLabel(idx, state), data.getName(idx)\n            )\n        };\n    }\n\n    piePieceProto.updateData = function (data, idx, firstCreate) {\n\n        var sector = this.childAt(0);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var sectorShape = zrUtil.extend({}, layout);\n        sectorShape.label = null;\n        if (firstCreate) {\n            sector.setShape(sectorShape);\n            sector.shape.endAngle = layout.startAngle;\n            graphic.updateProps(sector, {\n                shape: {\n                    endAngle: layout.endAngle\n                }\n            }, seriesModel, idx);\n        }\n        else {\n            graphic.updateProps(sector, {\n                shape: sectorShape\n            }, seriesModel, idx);\n        }\n\n        // Update common style\n        var itemStyleModel = itemModel.getModel('itemStyle');\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        sector.useStyle(\n            zrUtil.defaults(\n                {\n                    lineJoin: 'bevel',\n                    fill: visualColor\n                },\n                itemStyleModel.getModel('normal').getItemStyle()\n            )\n        );\n        sector.hoverStyle = itemStyleModel.getModel('emphasis').getItemStyle();\n\n        // Toggle selected\n        toggleItemSelected(\n            this,\n            data.getItemLayout(idx),\n            itemModel.get('selected'),\n            seriesModel.get('selectedOffset'),\n            seriesModel.get('animation')\n        );\n\n        function onEmphasis() {\n            // Sector may has animation of updating data. Force to move to the last frame\n            // Or it may stopped on the wrong shape\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r + 10\n                }\n            }, 300, 'elasticOut');\n        }\n        function onNormal() {\n            sector.stopAnimation(true);\n            sector.animateTo({\n                shape: {\n                    r: layout.r\n                }\n            }, 300, 'elasticOut');\n        }\n        sector.off('mouseover').off('mouseout').off('emphasis').off('normal');\n        if (itemModel.get('hoverAnimation') && seriesModel.ifEnableAnimation()) {\n            sector\n                .on('mouseover', onEmphasis)\n                .on('mouseout', onNormal)\n                .on('emphasis', onEmphasis)\n                .on('normal', onNormal);\n        }\n\n        this._updateLabel(data, idx);\n\n        graphic.setHoverStyle(this);\n    };\n\n    piePieceProto._updateLabel = function (data, idx) {\n\n        var labelLine = this.childAt(1);\n        var labelText = this.childAt(2);\n\n        var seriesModel = data.hostModel;\n        var itemModel = data.getItemModel(idx);\n        var layout = data.getItemLayout(idx);\n        var labelLayout = layout.label;\n        var visualColor = data.getItemVisual(idx, 'color');\n\n        graphic.updateProps(labelLine, {\n            shape: {\n                points: labelLayout.linePoints || [\n                    [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y], [labelLayout.x, labelLayout.y]\n                ]\n            }\n        }, seriesModel, idx);\n\n        graphic.updateProps(labelText, {\n            style: {\n                x: labelLayout.x,\n                y: labelLayout.y\n            }\n        }, seriesModel, idx);\n        labelText.attr({\n            style: {\n                textVerticalAlign: labelLayout.verticalAlign,\n                textAlign: labelLayout.textAlign,\n                textFont: labelLayout.font\n            },\n            rotation: labelLayout.rotation,\n            origin: [labelLayout.x, labelLayout.y],\n            z2: 10\n        });\n\n        var labelModel = itemModel.getModel('label.normal');\n        var labelHoverModel = itemModel.getModel('label.emphasis');\n        var labelLineModel = itemModel.getModel('labelLine.normal');\n        var labelLineHoverModel = itemModel.getModel('labelLine.emphasis');\n        var labelPosition = labelModel.get('position') || labelHoverModel.get('position');\n\n        labelText.setStyle(getLabelStyle(data, idx, 'normal', labelModel, labelPosition));\n\n        labelText.ignore = labelText.normalIgnore = !labelModel.get('show');\n        labelText.hoverIgnore = !labelHoverModel.get('show');\n\n        labelLine.ignore = labelLine.normalIgnore = !labelLineModel.get('show');\n        labelLine.hoverIgnore = !labelLineHoverModel.get('show');\n\n        // Default use item visual color\n        labelLine.setStyle({\n            stroke: visualColor,\n            opacity: data.getItemVisual(idx, 'opacity')\n        });\n        labelLine.setStyle(labelLineModel.getModel('lineStyle').getLineStyle());\n\n        labelText.hoverStyle = getLabelStyle(data, idx, 'emphasis', labelHoverModel, labelPosition);\n        labelLine.hoverStyle = labelLineHoverModel.getModel('lineStyle').getLineStyle();\n\n        var smooth = labelLineModel.get('smooth');\n        if (smooth && smooth === true) {\n            smooth = 0.4;\n        }\n        labelLine.setShape({\n            smooth: smooth\n        });\n    };\n\n    zrUtil.inherits(PiePiece, graphic.Group);\n\n\n    // Pie view\n    var Pie = require('../../view/Chart').extend({\n\n        type: 'pie',\n\n        init: function () {\n            var sectorGroup = new graphic.Group();\n            this._sectorGroup = sectorGroup;\n        },\n\n        render: function (seriesModel, ecModel, api, payload) {\n            if (payload && (payload.from === this.uid)) {\n                return;\n            }\n\n            var data = seriesModel.getData();\n            var oldData = this._data;\n            var group = this.group;\n\n            var hasAnimation = ecModel.get('animation');\n            var isFirstRender = !oldData;\n\n            var onSectorClick = zrUtil.curry(\n                updateDataSelected, this.uid, seriesModel, hasAnimation, api\n            );\n\n            var selectedMode = seriesModel.get('selectedMode');\n\n            data.diff(oldData)\n                .add(function (idx) {\n                    var piePiece = new PiePiece(data, idx);\n                    if (isFirstRender) {\n                        piePiece.eachChild(function (child) {\n                            child.stopAnimation(true);\n                        });\n                    }\n\n                    selectedMode && piePiece.on('click', onSectorClick);\n\n                    data.setItemGraphicEl(idx, piePiece);\n\n                    group.add(piePiece);\n                })\n                .update(function (newIdx, oldIdx) {\n                    var piePiece = oldData.getItemGraphicEl(oldIdx);\n\n                    piePiece.updateData(data, newIdx);\n\n                    piePiece.off('click');\n                    selectedMode && piePiece.on('click', onSectorClick);\n                    group.add(piePiece);\n                    data.setItemGraphicEl(newIdx, piePiece);\n                })\n                .remove(function (idx) {\n                    var piePiece = oldData.getItemGraphicEl(idx);\n                    group.remove(piePiece);\n                })\n                .execute();\n\n            if (hasAnimation && isFirstRender && data.count() > 0) {\n                var shape = data.getItemLayout(0);\n                var r = Math.max(api.getWidth(), api.getHeight()) / 2;\n\n                var removeClipPath = zrUtil.bind(group.removeClipPath, group);\n                group.setClipPath(this._createClipPath(\n                    shape.cx, shape.cy, r, shape.startAngle, shape.clockwise, removeClipPath, seriesModel\n                ));\n            }\n\n            this._data = data;\n        },\n\n        dispose: function () {},\n\n        _createClipPath: function (\n            cx, cy, r, startAngle, clockwise, cb, seriesModel\n        ) {\n            var clipPath = new graphic.Sector({\n                shape: {\n                    cx: cx,\n                    cy: cy,\n                    r0: 0,\n                    r: r,\n                    startAngle: startAngle,\n                    endAngle: startAngle,\n                    clockwise: clockwise\n                }\n            });\n\n            graphic.initProps(clipPath, {\n                shape: {\n                    endAngle: startAngle + (clockwise ? 1 : -1) * Math.PI * 2\n                }\n            }, seriesModel, cb);\n\n            return clipPath;\n        },\n\n        /**\n         * @implement\n         */\n        containPoint: function (point, seriesModel) {\n            var data = seriesModel.getData();\n            var itemLayout = data.getItemLayout(0);\n            if (itemLayout) {\n                var dx = point[0] - itemLayout.cx;\n                var dy = point[1] - itemLayout.cy;\n                var radius = Math.sqrt(dx * dx + dy * dy);\n                return radius <= itemLayout.r && radius >= itemLayout.r0;\n            }\n        }\n\n    });\n\n    module.exports = Pie;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/PieView.js\n// module id = 756\n// module chunks = 0","'use strict';\n// FIXME emphasis label position is not same with normal label position\n\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function adjustSingleSide(list, cx, cy, r, dir, viewWidth, viewHeight) {\n        list.sort(function (a, b) {\n            return a.y - b.y;\n        });\n\n        // 压\n        function shiftDown(start, end, delta, dir) {\n            for (var j = start; j < end; j++) {\n                list[j].y += delta;\n                if (j > start\n                    && j + 1 < end\n                    && list[j + 1].y > list[j].y + list[j].height\n                ) {\n                    shiftUp(j, delta / 2);\n                    return;\n                }\n            }\n\n            shiftUp(end - 1, delta / 2);\n        }\n\n        // 弹\n        function shiftUp(end, delta) {\n            for (var j = end; j >= 0; j--) {\n                list[j].y -= delta;\n                if (j > 0\n                    && list[j].y > list[j - 1].y + list[j - 1].height\n                ) {\n                    break;\n                }\n            }\n        }\n\n        function changeX(list, isDownList, cx, cy, r, dir) {\n            var lastDeltaX = dir > 0\n                ? isDownList                // 右侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0                     // 上\n                : isDownList                // 左侧\n                    ? Number.MAX_VALUE      // 下\n                    : 0;                    // 上\n\n            for (var i = 0, l = list.length; i < l; i++) {\n                // Not change x for center label\n                if (list[i].position === 'center') {\n                    continue;\n                }\n                var deltaY = Math.abs(list[i].y - cy);\n                var length = list[i].len;\n                var length2 = list[i].len2;\n                var deltaX = (deltaY < r + length)\n                    ? Math.sqrt(\n                          (r + length + length2) * (r + length + length2)\n                          - deltaY * deltaY\n                      )\n                    : Math.abs(list[i].x - cx);\n                if (isDownList && deltaX >= lastDeltaX) {\n                    // 右下，左下\n                    deltaX = lastDeltaX - 10;\n                }\n                if (!isDownList && deltaX <= lastDeltaX) {\n                    // 右上，左上\n                    deltaX = lastDeltaX + 10;\n                }\n\n                list[i].x = cx + deltaX * dir;\n                lastDeltaX = deltaX;\n            }\n        }\n\n        var lastY = 0;\n        var delta;\n        var len = list.length;\n        var upList = [];\n        var downList = [];\n        for (var i = 0; i < len; i++) {\n            delta = list[i].y - lastY;\n            if (delta < 0) {\n                shiftDown(i, len, -delta, dir);\n            }\n            lastY = list[i].y + list[i].height;\n        }\n        if (viewHeight - lastY < 0) {\n            shiftUp(len - 1, lastY - viewHeight);\n        }\n        for (var i = 0; i < len; i++) {\n            if (list[i].y >= cy) {\n                downList.push(list[i]);\n            }\n            else {\n                upList.push(list[i]);\n            }\n        }\n        changeX(upList, false, cx, cy, r, dir);\n        changeX(downList, true, cx, cy, r, dir);\n    }\n\n    function avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight) {\n        var leftList = [];\n        var rightList = [];\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            if (labelLayoutList[i].x < cx) {\n                leftList.push(labelLayoutList[i]);\n            }\n            else {\n                rightList.push(labelLayoutList[i]);\n            }\n        }\n\n        adjustSingleSide(rightList, cx, cy, r, 1, viewWidth, viewHeight);\n        adjustSingleSide(leftList, cx, cy, r, -1, viewWidth, viewHeight);\n\n        for (var i = 0; i < labelLayoutList.length; i++) {\n            var linePoints = labelLayoutList[i].linePoints;\n            if (linePoints) {\n                var dist = linePoints[1][0] - linePoints[2][0];\n                if (labelLayoutList[i].x < cx) {\n                    linePoints[2][0] = labelLayoutList[i].x + 3;\n                }\n                else {\n                    linePoints[2][0] = labelLayoutList[i].x - 3;\n                }\n                linePoints[1][1] = linePoints[2][1] = labelLayoutList[i].y;\n                linePoints[1][0] = linePoints[2][0] + dist;\n            }\n        }\n    }\n\n    module.exports = function (seriesModel, r, viewWidth, viewHeight) {\n        var data = seriesModel.getData();\n        var labelLayoutList = [];\n        var cx;\n        var cy;\n        var hasLabelRotate = false;\n\n        data.each(function (idx) {\n            var layout = data.getItemLayout(idx);\n\n            var itemModel = data.getItemModel(idx);\n            var labelModel = itemModel.getModel('label.normal');\n            // Use position in normal or emphasis\n            var labelPosition = labelModel.get('position') || itemModel.get('label.emphasis.position');\n\n            var labelLineModel = itemModel.getModel('labelLine.normal');\n            var labelLineLen = labelLineModel.get('length');\n            var labelLineLen2 = labelLineModel.get('length2');\n\n            var midAngle = (layout.startAngle + layout.endAngle) / 2;\n            var dx = Math.cos(midAngle);\n            var dy = Math.sin(midAngle);\n\n            var textX;\n            var textY;\n            var linePoints;\n            var textAlign;\n\n            cx = layout.cx;\n            cy = layout.cy;\n\n            var isLabelInside = labelPosition === 'inside' || labelPosition === 'inner';\n            if (labelPosition === 'center') {\n                textX = layout.cx;\n                textY = layout.cy;\n                textAlign = 'center';\n            }\n            else {\n                var x1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dx : layout.r * dx) + cx;\n                var y1 = (isLabelInside ? (layout.r + layout.r0) / 2 * dy : layout.r * dy) + cy;\n\n                textX = x1 + dx * 3;\n                textY = y1 + dy * 3;\n\n                if (!isLabelInside) {\n                    // For roseType\n                    var x2 = x1 + dx * (labelLineLen + r - layout.r);\n                    var y2 = y1 + dy * (labelLineLen + r - layout.r);\n                    var x3 = x2 + ((dx < 0 ? -1 : 1) * labelLineLen2);\n                    var y3 = y2;\n\n                    textX = x3 + (dx < 0 ? -5 : 5);\n                    textY = y3;\n                    linePoints = [[x1, y1], [x2, y2], [x3, y3]];\n                }\n\n                textAlign = isLabelInside ? 'center' : (dx > 0 ? 'left' : 'right');\n            }\n            var font = labelModel.getModel('textStyle').getFont();\n\n            var labelRotate = labelModel.get('rotate')\n                ? (dx < 0 ? -midAngle + Math.PI : -midAngle) : 0;\n            var text = seriesModel.getFormattedLabel(idx, 'normal')\n                        || data.getName(idx);\n            var textRect = textContain.getBoundingRect(\n                text, font, textAlign, 'top'\n            );\n            hasLabelRotate = !!labelRotate;\n            layout.label = {\n                x: textX,\n                y: textY,\n                position: labelPosition,\n                height: textRect.height,\n                len: labelLineLen,\n                len2: labelLineLen2,\n                linePoints: linePoints,\n                textAlign: textAlign,\n                verticalAlign: 'middle',\n                font: font,\n                rotation: labelRotate\n            };\n\n            // Not layout the inside label\n            if (!isLabelInside) {\n                labelLayoutList.push(layout.label);\n            }\n        });\n        if (!hasLabelRotate && seriesModel.get('avoidLabelOverlap')) {\n            avoidOverlap(labelLayoutList, cx, cy, r, viewWidth, viewHeight);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/labelLayout.js\n// module id = 757\n// module chunks = 0","// TODO minAngle\n\n\n\n    var numberUtil = require('../../util/number');\n    var parsePercent = numberUtil.parsePercent;\n    var labelLayout = require('./labelLayout');\n    var zrUtil = require('zrender/lib/core/util');\n\n    var PI2 = Math.PI * 2;\n    var RADIAN = Math.PI / 180;\n\n    module.exports = function (seriesType, ecModel, api, payload) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var center = seriesModel.get('center');\n            var radius = seriesModel.get('radius');\n\n            if (!zrUtil.isArray(radius)) {\n                radius = [0, radius];\n            }\n            if (!zrUtil.isArray(center)) {\n                center = [center, center];\n            }\n\n            var width = api.getWidth();\n            var height = api.getHeight();\n            var size = Math.min(width, height);\n            var cx = parsePercent(center[0], width);\n            var cy = parsePercent(center[1], height);\n            var r0 = parsePercent(radius[0], size / 2);\n            var r = parsePercent(radius[1], size / 2);\n\n            var data = seriesModel.getData();\n\n            var startAngle = -seriesModel.get('startAngle') * RADIAN;\n\n            var minAngle = seriesModel.get('minAngle') * RADIAN;\n\n            var sum = data.getSum('value');\n            // Sum may be 0\n            var unitRadian = Math.PI / (sum || data.count()) * 2;\n\n            var clockwise = seriesModel.get('clockwise');\n\n            var roseType = seriesModel.get('roseType');\n\n            // [0...max]\n            var extent = data.getDataExtent('value');\n            extent[0] = 0;\n\n            // In the case some sector angle is smaller than minAngle\n            var restAngle = PI2;\n            var valueSumLargerThanMinAngle = 0;\n\n            var currentAngle = startAngle;\n\n            var dir = clockwise ? 1 : -1;\n            data.each('value', function (value, idx) {\n                var angle;\n                // FIXME 兼容 2.0 但是 roseType 是 area 的时候才是这样？\n                if (roseType !== 'area') {\n                    angle = sum === 0 ? unitRadian : (value * unitRadian);\n                }\n                else {\n                    angle = PI2 / (data.count() || 1);\n                }\n\n                if (angle < minAngle) {\n                    angle = minAngle;\n                    restAngle -= minAngle;\n                }\n                else {\n                    valueSumLargerThanMinAngle += value;\n                }\n\n                var endAngle = currentAngle + dir * angle;\n                data.setItemLayout(idx, {\n                    angle: angle,\n                    startAngle: currentAngle,\n                    endAngle: endAngle,\n                    clockwise: clockwise,\n                    cx: cx,\n                    cy: cy,\n                    r0: r0,\n                    r: roseType\n                        ? numberUtil.linearMap(value, extent, [r0, r])\n                        : r\n                });\n\n                currentAngle = endAngle;\n            }, true);\n\n            // Some sector is constrained by minAngle\n            // Rest sectors needs recalculate angle\n            if (restAngle < PI2) {\n                // Average the angle if rest angle is not enough after all angles is\n                // Constrained by minAngle\n                if (restAngle <= 1e-3) {\n                    var angle = PI2 / data.count();\n                    data.each(function (idx) {\n                        var layout = data.getItemLayout(idx);\n                        layout.startAngle = startAngle + dir * idx * angle;\n                        layout.endAngle = startAngle + dir * (idx + 1) * angle;\n                    });\n                }\n                else {\n                    unitRadian = restAngle / valueSumLargerThanMinAngle;\n                    currentAngle = startAngle;\n                    data.each('value', function (value, idx) {\n                        var layout = data.getItemLayout(idx);\n                        var angle = layout.angle === minAngle\n                            ? minAngle : value * unitRadian;\n                        layout.startAngle = currentAngle;\n                        layout.endAngle = currentAngle + dir * angle;\n                        currentAngle += dir * angle;\n                    });\n                }\n            }\n\n            labelLayout(seriesModel, r, width, height);\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/chart/pie/pieLayout.js\n// module id = 758\n// module chunks = 0","'use strict';\n// TODO boundaryGap\n\n\n    require('../coord/cartesian/AxisModel');\n\n    require('./axis/AxisView');\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis.js\n// module id = 759\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n    var Model = require('../../model/Model');\n    var numberUtil = require('../../util/number');\n    var remRadian = numberUtil.remRadian;\n    var isRadianAroundZero = numberUtil.isRadianAroundZero;\n    var vec2 = require('zrender/lib/core/vector');\n    var v2ApplyTransform = vec2.applyTransform;\n    var retrieve = zrUtil.retrieve;\n\n    var PI = Math.PI;\n\n    function makeAxisEventDataBase(axisModel) {\n        var eventData = {\n            componentType: axisModel.mainType\n        };\n        eventData[axisModel.mainType + 'Index'] = axisModel.componentIndex;\n        return eventData;\n    }\n\n    /**\n     * A final axis is translated and rotated from a \"standard axis\".\n     * So opt.position and opt.rotation is required.\n     *\n     * A standard axis is and axis from [0, 0] to [0, axisExtent[1]],\n     * for example: (0, 0) ------------> (0, 50)\n     *\n     * nameDirection or tickDirection or labelDirection is 1 means tick\n     * or label is below the standard axis, whereas is -1 means above\n     * the standard axis. labelOffset means offset between label and axis,\n     * which is useful when 'onZero', where axisLabel is in the grid and\n     * label in outside grid.\n     *\n     * Tips: like always,\n     * positive rotation represents anticlockwise, and negative rotation\n     * represents clockwise.\n     * The direction of position coordinate is the same as the direction\n     * of screen coordinate.\n     *\n     * Do not need to consider axis 'inverse', which is auto processed by\n     * axis extent.\n     *\n     * @param {module:zrender/container/Group} group\n     * @param {Object} axisModel\n     * @param {Object} opt Standard axis parameters.\n     * @param {Array.<number>} opt.position [x, y]\n     * @param {number} opt.rotation by radian\n     * @param {number} [opt.nameDirection=1] 1 or -1 Used when nameLocation is 'middle'.\n     * @param {number} [opt.tickDirection=1] 1 or -1\n     * @param {number} [opt.labelDirection=1] 1 or -1\n     * @param {number} [opt.labelOffset=0] Usefull when onZero.\n     * @param {string} [opt.axisLabelShow] default get from axisModel.\n     * @param {string} [opt.axisName] default get from axisModel.\n     * @param {number} [opt.axisNameAvailableWidth]\n     * @param {number} [opt.labelRotation] by degree, default get from axisModel.\n     * @param {number} [opt.labelInterval] Default label interval when label\n     *                                     interval from model is null or 'auto'.\n     * @param {number} [opt.strokeContainThreshold] Default label interval when label\n     */\n    var AxisBuilder = function (axisModel, opt) {\n\n        /**\n         * @readOnly\n         */\n        this.opt = opt;\n\n        /**\n         * @readOnly\n         */\n        this.axisModel = axisModel;\n\n        // Default value\n        zrUtil.defaults(\n            opt,\n            {\n                labelOffset: 0,\n                nameDirection: 1,\n                tickDirection: 1,\n                labelDirection: 1,\n                silent: true\n            }\n        );\n\n        /**\n         * @readOnly\n         */\n        this.group = new graphic.Group();\n\n        // FIXME Not use a seperate text group?\n        var dumbGroup = new graphic.Group({\n            position: opt.position.slice(),\n            rotation: opt.rotation\n        });\n\n        // this.group.add(dumbGroup);\n        // this._dumbGroup = dumbGroup;\n\n        dumbGroup.updateTransform();\n        this._transform = dumbGroup.transform;\n\n        this._dumbGroup = dumbGroup;\n    };\n\n    AxisBuilder.prototype = {\n\n        constructor: AxisBuilder,\n\n        hasBuilder: function (name) {\n            return !!builders[name];\n        },\n\n        add: function (name) {\n            builders[name].call(this);\n        },\n\n        getGroup: function () {\n            return this.group;\n        }\n\n    };\n\n    var builders = {\n\n        /**\n         * @private\n         */\n        axisLine: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisLine.show')) {\n                return;\n            }\n\n            var extent = this.axisModel.axis.getExtent();\n\n            var matrix = this._transform;\n            var pt1 = [extent[0], 0];\n            var pt2 = [extent[1], 0];\n            if (matrix) {\n                v2ApplyTransform(pt1, pt1, matrix);\n                v2ApplyTransform(pt2, pt2, matrix);\n            }\n\n            this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                // Id for animation\n                anid: 'line',\n\n                shape: {\n                    x1: pt1[0],\n                    y1: pt1[1],\n                    x2: pt2[0],\n                    y2: pt2[1]\n                },\n                style: zrUtil.extend(\n                    {lineCap: 'round'},\n                    axisModel.getModel('axisLine.lineStyle').getLineStyle()\n                ),\n                strokeContainThreshold: opt.strokeContainThreshold || 5,\n                silent: true,\n                z2: 1\n            })));\n        },\n\n        /**\n         * @private\n         */\n        axisTick: function () {\n            var axisModel = this.axisModel;\n\n            if (!axisModel.get('axisTick.show')) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var tickModel = axisModel.getModel('axisTick');\n            var opt = this.opt;\n\n            var lineStyleModel = tickModel.getModel('lineStyle');\n            var tickLen = tickModel.get('length');\n\n            var tickInterval = getInterval(tickModel, opt.labelInterval);\n            var ticksCoords = axis.getTicksCoords(tickModel.get('alignWithLabel'));\n            var ticks = axis.scale.getTicks();\n\n            var pt1 = [];\n            var pt2 = [];\n            var matrix = this._transform;\n\n            for (var i = 0; i < ticksCoords.length; i++) {\n                // Only ordinal scale support tick interval\n                if (ifIgnoreOnTick(axis, i, tickInterval)) {\n                     continue;\n                }\n\n                var tickCoord = ticksCoords[i];\n\n                pt1[0] = tickCoord;\n                pt1[1] = 0;\n                pt2[0] = tickCoord;\n                pt2[1] = opt.tickDirection * tickLen;\n\n                if (matrix) {\n                    v2ApplyTransform(pt1, pt1, matrix);\n                    v2ApplyTransform(pt2, pt2, matrix);\n                }\n                // Tick line, Not use group transform to have better line draw\n                this.group.add(new graphic.Line(graphic.subPixelOptimizeLine({\n\n                    // Id for animation\n                    anid: 'tick_' + ticks[i],\n\n                    shape: {\n                        x1: pt1[0],\n                        y1: pt1[1],\n                        x2: pt2[0],\n                        y2: pt2[1]\n                    },\n                    style: zrUtil.defaults(\n                        lineStyleModel.getLineStyle(),\n                        {\n                            stroke: axisModel.get('axisLine.lineStyle.color')\n                        }\n                    ),\n                    z2: 2,\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @private\n         */\n        axisLabel: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var show = retrieve(opt.axisLabelShow, axisModel.get('axisLabel.show'));\n\n            if (!show) {\n                return;\n            }\n\n            var axis = axisModel.axis;\n            var labelModel = axisModel.getModel('axisLabel');\n            var textStyleModel = labelModel.getModel('textStyle');\n            var labelMargin = labelModel.get('margin');\n            var ticks = axis.scale.getTicks();\n            var labels = axisModel.getFormattedLabels();\n\n            // Special label rotate.\n            var labelRotation = retrieve(opt.labelRotation, labelModel.get('rotate')) || 0;\n            // To radian.\n            labelRotation = labelRotation * PI / 180;\n\n            var labelLayout = innerTextLayout(opt, labelRotation, opt.labelDirection);\n            var categoryData = axisModel.get('data');\n\n            var textEls = [];\n            var silent = isSilent(axisModel);\n            var triggerEvent = axisModel.get('triggerEvent');\n\n            zrUtil.each(ticks, function (tickVal, index) {\n                if (ifIgnoreOnTick(axis, index, opt.labelInterval)) {\n                     return;\n                }\n\n                var itemTextStyleModel = textStyleModel;\n                if (categoryData && categoryData[tickVal] && categoryData[tickVal].textStyle) {\n                    itemTextStyleModel = new Model(\n                        categoryData[tickVal].textStyle, textStyleModel, axisModel.ecModel\n                    );\n                }\n                var textColor = itemTextStyleModel.getTextColor()\n                    || axisModel.get('axisLine.lineStyle.color');\n\n                var tickCoord = axis.dataToCoord(tickVal);\n                var pos = [\n                    tickCoord,\n                    opt.labelOffset + opt.labelDirection * labelMargin\n                ];\n                var labelBeforeFormat = axis.scale.getLabel(tickVal);\n\n                var textEl = new graphic.Text({\n\n                    // Id for animation\n                    anid: 'label_' + tickVal,\n\n                    style: {\n                        text: labels[index],\n                        textAlign: itemTextStyleModel.get('align', true) || labelLayout.textAlign,\n                        textVerticalAlign: itemTextStyleModel.get('baseline', true) || labelLayout.verticalAlign,\n                        textFont: itemTextStyleModel.getFont(),\n                        fill: typeof textColor === 'function' ? textColor(labelBeforeFormat) : textColor\n                    },\n                    position: pos,\n                    rotation: labelLayout.rotation,\n                    silent: silent,\n                    z2: 10\n                });\n\n                // Pack data for mouse event\n                if (triggerEvent) {\n                    textEl.eventData = makeAxisEventDataBase(axisModel);\n                    textEl.eventData.targetType = 'axisLabel';\n                    textEl.eventData.value = labelBeforeFormat;\n                }\n\n                // FIXME\n                this._dumbGroup.add(textEl);\n                textEl.updateTransform();\n\n                textEls.push(textEl);\n                this.group.add(textEl);\n\n                textEl.decomposeTransform();\n\n            }, this);\n\n            function isTwoLabelOverlapped(current, next) {\n                var firstRect = current && current.getBoundingRect().clone();\n                var nextRect = next && next.getBoundingRect().clone();\n                if (firstRect && nextRect) {\n                    firstRect.applyTransform(current.getLocalTransform());\n                    nextRect.applyTransform(next.getLocalTransform());\n                    return firstRect.intersect(nextRect);\n                }\n            }\n            if (axis.type !== 'category') {\n                // If min or max are user set, we need to check\n                // If the tick on min(max) are overlap on their neighbour tick\n                // If they are overlapped, we need to hide the min(max) tick label\n                if (axisModel.getMin ? axisModel.getMin() : axisModel.get('min')) {\n                    var firstLabel = textEls[0];\n                    var nextLabel = textEls[1];\n                    if (isTwoLabelOverlapped(firstLabel, nextLabel)) {\n                        firstLabel.ignore = true;\n                    }\n                }\n                if (axisModel.getMax ? axisModel.getMax() : axisModel.get('max')) {\n                    var lastLabel = textEls[textEls.length - 1];\n                    var prevLabel = textEls[textEls.length - 2];\n                    if (isTwoLabelOverlapped(prevLabel, lastLabel)) {\n                        lastLabel.ignore = true;\n                    }\n                }\n            }\n        },\n\n        /**\n         * @private\n         */\n        axisName: function () {\n            var opt = this.opt;\n            var axisModel = this.axisModel;\n            var name = retrieve(opt.axisName, axisModel.get('name'));\n\n            if (!name) {\n                return;\n            }\n\n            var nameLocation = axisModel.get('nameLocation');\n            var nameDirection = opt.nameDirection;\n            var textStyleModel = axisModel.getModel('nameTextStyle');\n            var gap = axisModel.get('nameGap') || 0;\n\n            var extent = this.axisModel.axis.getExtent();\n            var gapSignal = extent[0] > extent[1] ? -1 : 1;\n            var pos = [\n                nameLocation === 'start'\n                    ? extent[0] - gapSignal * gap\n                    : nameLocation === 'end'\n                    ? extent[1] + gapSignal * gap\n                    : (extent[0] + extent[1]) / 2, // 'middle'\n                // Reuse labelOffset.\n                nameLocation === 'middle' ? opt.labelOffset + nameDirection * gap : 0\n            ];\n\n            var labelLayout;\n\n            var nameRotation = axisModel.get('nameRotate');\n            if (nameRotation != null) {\n                nameRotation = nameRotation * PI / 180; // To radian.\n            }\n\n            var axisNameAvailableWidth;\n\n            if (nameLocation === 'middle') {\n                labelLayout = innerTextLayout(\n                    opt,\n                    nameRotation != null ? nameRotation : opt.rotation, // Adapt to axis.\n                    nameDirection\n                );\n            }\n            else {\n                labelLayout = endTextLayout(\n                    opt, nameLocation, nameRotation || 0, extent\n                );\n\n                axisNameAvailableWidth = opt.axisNameAvailableWidth;\n                if (axisNameAvailableWidth != null) {\n                    axisNameAvailableWidth = Math.abs(\n                        axisNameAvailableWidth / Math.sin(labelLayout.rotation)\n                    );\n                    !isFinite(axisNameAvailableWidth) && (axisNameAvailableWidth = null);\n                }\n            }\n\n            var textFont = textStyleModel.getFont();\n\n            var truncateOpt = axisModel.get('nameTruncate', true) || {};\n            var ellipsis = truncateOpt.ellipsis;\n            var maxWidth = retrieve(truncateOpt.maxWidth, axisNameAvailableWidth);\n            var truncatedText = (ellipsis != null && maxWidth != null)\n                ? formatUtil.truncateText(\n                    name, maxWidth, textFont, ellipsis,\n                    {minChar: 2, placeholder: truncateOpt.placeholder}\n                )\n                : name;\n\n            var tooltipOpt = axisModel.get('tooltip', true);\n\n            var mainType = axisModel.mainType;\n            var formatterParams = {\n                componentType: mainType,\n                name: name,\n                $vars: ['name']\n            };\n            formatterParams[mainType + 'Index'] = axisModel.componentIndex;\n\n            var textEl = new graphic.Text({\n\n                // Id for animation\n                anid: 'name',\n\n                __fullText: name,\n                __truncatedText: truncatedText,\n\n                style: {\n                    text: truncatedText,\n                    textFont: textFont,\n                    fill: textStyleModel.getTextColor()\n                        || axisModel.get('axisLine.lineStyle.color'),\n                    textAlign: labelLayout.textAlign,\n                    textVerticalAlign: labelLayout.verticalAlign\n                },\n                position: pos,\n                rotation: labelLayout.rotation,\n                silent: isSilent(axisModel),\n                z2: 1,\n                tooltip: (tooltipOpt && tooltipOpt.show)\n                    ? zrUtil.extend({\n                        content: name,\n                        formatter: function () {\n                            return name;\n                        },\n                        formatterParams: formatterParams\n                    }, tooltipOpt)\n                    : null\n            });\n\n            if (axisModel.get('triggerEvent')) {\n                textEl.eventData = makeAxisEventDataBase(axisModel);\n                textEl.eventData.targetType = 'axisName';\n                textEl.eventData.name = name;\n            }\n\n            // FIXME\n            this._dumbGroup.add(textEl);\n            textEl.updateTransform();\n\n            this.group.add(textEl);\n\n            textEl.decomposeTransform();\n        }\n\n    };\n\n    /**\n     * @inner\n     */\n    function innerTextLayout(opt, textRotation, direction) {\n        var rotationDiff = remRadian(textRotation - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n\n        if (isRadianAroundZero(rotationDiff)) { // Label is parallel with axis line.\n            verticalAlign = direction > 0 ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI)) { // Label is inverse parallel with axis line.\n            verticalAlign = direction > 0 ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n\n            if (rotationDiff > 0 && rotationDiff < PI) {\n                textAlign = direction > 0 ? 'right' : 'left';\n            }\n            else {\n                textAlign = direction > 0 ? 'left' : 'right';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function endTextLayout(opt, textPosition, textRotate, extent) {\n        var rotationDiff = remRadian(textRotate - opt.rotation);\n        var textAlign;\n        var verticalAlign;\n        var inverse = extent[0] > extent[1];\n        var onLeft = (textPosition === 'start' && !inverse)\n            || (textPosition !== 'start' && inverse);\n\n        if (isRadianAroundZero(rotationDiff - PI / 2)) {\n            verticalAlign = onLeft ? 'bottom' : 'top';\n            textAlign = 'center';\n        }\n        else if (isRadianAroundZero(rotationDiff - PI * 1.5)) {\n            verticalAlign = onLeft ? 'top' : 'bottom';\n            textAlign = 'center';\n        }\n        else {\n            verticalAlign = 'middle';\n            if (rotationDiff < PI * 1.5 && rotationDiff > PI / 2) {\n                textAlign = onLeft ? 'left' : 'right';\n            }\n            else {\n                textAlign = onLeft ? 'right' : 'left';\n            }\n        }\n\n        return {\n            rotation: rotationDiff,\n            textAlign: textAlign,\n            verticalAlign: verticalAlign\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function isSilent(axisModel) {\n        var tooltipOpt = axisModel.get('tooltip');\n        return axisModel.get('silent')\n            // Consider mouse cursor, add these restrictions.\n            || !(\n                axisModel.get('triggerEvent') || (tooltipOpt && tooltipOpt.show)\n            );\n    }\n\n    /**\n     * @static\n     */\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick = function (axis, i, interval) {\n        var rawTick;\n        var scale = axis.scale;\n        return scale.type === 'ordinal'\n            && (\n                typeof interval === 'function'\n                    ? (\n                        rawTick = scale.getTicks()[i],\n                        !interval(rawTick, scale.getLabel(rawTick))\n                    )\n                    : i % (interval + 1)\n            );\n    };\n\n    /**\n     * @static\n     */\n    var getInterval = AxisBuilder.getInterval = function (model, labelInterval) {\n        var interval = model.get('interval');\n        if (interval == null || interval == 'auto') {\n            interval = labelInterval;\n        }\n        return interval;\n    };\n\n    module.exports = AxisBuilder;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisBuilder.js\n// module id = 760\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var graphic = require('../../util/graphic');\n    var AxisBuilder = require('./AxisBuilder');\n    var ifIgnoreOnTick = AxisBuilder.ifIgnoreOnTick;\n    var getInterval = AxisBuilder.getInterval;\n\n    var axisBuilderAttrs = [\n        'axisLine', 'axisLabel', 'axisTick', 'axisName'\n    ];\n    var selfBuilderAttrs = [\n        'splitArea', 'splitLine'\n    ];\n\n    // function getAlignWithLabel(model, axisModel) {\n    //     var alignWithLabel = model.get('alignWithLabel');\n    //     if (alignWithLabel === 'auto') {\n    //         alignWithLabel = axisModel.get('axisTick.alignWithLabel');\n    //     }\n    //     return alignWithLabel;\n    // }\n\n    var AxisView = require('../../echarts').extendComponentView({\n\n        type: 'axis',\n\n        render: function (axisModel, ecModel) {\n\n            this.group.removeAll();\n\n            var oldAxisGroup = this._axisGroup;\n            this._axisGroup = new graphic.Group();\n\n            this.group.add(this._axisGroup);\n\n            if (!axisModel.get('show')) {\n                return;\n            }\n\n            var gridModel = axisModel.findGridModel();\n\n            var layout = layoutAxis(gridModel, axisModel);\n\n            var axisBuilder = new AxisBuilder(axisModel, layout);\n\n            zrUtil.each(axisBuilderAttrs, axisBuilder.add, axisBuilder);\n\n            this._axisGroup.add(axisBuilder.getGroup());\n\n            zrUtil.each(selfBuilderAttrs, function (name) {\n                if (axisModel.get(name + '.show')) {\n                    this['_' + name](axisModel, gridModel, layout.labelInterval);\n                }\n            }, this);\n\n            graphic.groupTransition(oldAxisGroup, this._axisGroup, axisModel);\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitLine: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitLineModel = axisModel.getModel('splitLine');\n            var lineStyleModel = splitLineModel.getModel('lineStyle');\n            var lineColors = lineStyleModel.get('color');\n\n            var lineInterval = getInterval(splitLineModel, labelInterval);\n\n            lineColors = zrUtil.isArray(lineColors) ? lineColors : [lineColors];\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n            var isHorizontal = axis.isHorizontal();\n\n            var lineCount = 0;\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitLineModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var p1 = [];\n            var p2 = [];\n            // Simple optimization\n            // Batching the lines if color are the same\n            var lineStyle = lineStyleModel.getLineStyle();\n            for (var i = 0; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, lineInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                if (isHorizontal) {\n                    p1[0] = tickCoord;\n                    p1[1] = gridRect.y;\n                    p2[0] = tickCoord;\n                    p2[1] = gridRect.y + gridRect.height;\n                }\n                else {\n                    p1[0] = gridRect.x;\n                    p1[1] = tickCoord;\n                    p2[0] = gridRect.x + gridRect.width;\n                    p2[1] = tickCoord;\n                }\n\n                var colorIndex = (lineCount++) % lineColors.length;\n                this._axisGroup.add(new graphic.Line(graphic.subPixelOptimizeLine({\n                    anid: 'line_' + ticks[i],\n\n                    shape: {\n                        x1: p1[0],\n                        y1: p1[1],\n                        x2: p2[0],\n                        y2: p2[1]\n                    },\n                    style: zrUtil.defaults({\n                        stroke: lineColors[colorIndex]\n                    }, lineStyle),\n                    silent: true\n                })));\n            }\n        },\n\n        /**\n         * @param {module:echarts/coord/cartesian/AxisModel} axisModel\n         * @param {module:echarts/coord/cartesian/GridModel} gridModel\n         * @param {number|Function} labelInterval\n         * @private\n         */\n        _splitArea: function (axisModel, gridModel, labelInterval) {\n            var axis = axisModel.axis;\n\n            var splitAreaModel = axisModel.getModel('splitArea');\n            var areaStyleModel = splitAreaModel.getModel('areaStyle');\n            var areaColors = areaStyleModel.get('color');\n\n            var gridRect = gridModel.coordinateSystem.getRect();\n\n            var ticksCoords = axis.getTicksCoords(\n                // splitAreaModel.get('alignWithLabel')\n            );\n            var ticks = axis.scale.getTicks();\n\n            var prevX = axis.toGlobalCoord(ticksCoords[0]);\n            var prevY = axis.toGlobalCoord(ticksCoords[0]);\n\n            var count = 0;\n\n            var areaInterval = getInterval(splitAreaModel, labelInterval);\n\n            var areaStyle = areaStyleModel.getAreaStyle();\n            areaColors = zrUtil.isArray(areaColors) ? areaColors : [areaColors];\n\n            for (var i = 1; i < ticksCoords.length; i++) {\n                if (ifIgnoreOnTick(axis, i, areaInterval)) {\n                    continue;\n                }\n\n                var tickCoord = axis.toGlobalCoord(ticksCoords[i]);\n\n                var x;\n                var y;\n                var width;\n                var height;\n                if (axis.isHorizontal()) {\n                    x = prevX;\n                    y = gridRect.y;\n                    width = tickCoord - x;\n                    height = gridRect.height;\n                }\n                else {\n                    x = gridRect.x;\n                    y = prevY;\n                    width = gridRect.width;\n                    height = tickCoord - y;\n                }\n\n                var colorIndex = (count++) % areaColors.length;\n                this._axisGroup.add(new graphic.Rect({\n                    anid: 'area_' + ticks[i],\n\n                    shape: {\n                        x: x,\n                        y: y,\n                        width: width,\n                        height: height\n                    },\n                    style: zrUtil.defaults({\n                        fill: areaColors[colorIndex]\n                    }, areaStyle),\n                    silent: true\n                }));\n\n                prevX = x + width;\n                prevY = y + height;\n            }\n        }\n    });\n\n    AxisView.extend({\n        type: 'xAxis'\n    });\n    AxisView.extend({\n        type: 'yAxis'\n    });\n\n    /**\n     * @inner\n     */\n    function layoutAxis(gridModel, axisModel) {\n        var grid = gridModel.coordinateSystem;\n        var axis = axisModel.axis;\n        var layout = {};\n\n        var rawAxisPosition = axis.position;\n        var axisPosition = axis.onZero ? 'onZero' : rawAxisPosition;\n        var axisDim = axis.dim;\n\n        // [left, right, top, bottom]\n        var rect = grid.getRect();\n        var rectBound = [rect.x, rect.x + rect.width, rect.y, rect.y + rect.height];\n\n        var axisOffset = axisModel.get('offset') || 0;\n\n        var posMap = {\n            x: { top: rectBound[2] - axisOffset, bottom: rectBound[3] + axisOffset },\n            y: { left: rectBound[0] - axisOffset, right: rectBound[1] + axisOffset }\n        };\n\n        posMap.x.onZero = Math.max(Math.min(getZero('y'), posMap.x.bottom), posMap.x.top);\n        posMap.y.onZero = Math.max(Math.min(getZero('x'), posMap.y.right), posMap.y.left);\n\n        function getZero(dim, val) {\n            var theAxis = grid.getAxis(dim);\n            return theAxis.toGlobalCoord(theAxis.dataToCoord(0));\n        }\n\n        // Axis position\n        layout.position = [\n            axisDim === 'y' ? posMap.y[axisPosition] : rectBound[0],\n            axisDim === 'x' ? posMap.x[axisPosition] : rectBound[3]\n        ];\n\n        // Axis rotation\n        layout.rotation = Math.PI / 2 * (axisDim === 'x' ? 0 : 1);\n\n        // Tick and label direction, x y is axisDim\n        var dirMap = {top: -1, bottom: 1, left: -1, right: 1};\n\n        layout.labelDirection = layout.tickDirection = layout.nameDirection = dirMap[rawAxisPosition];\n        if (axis.onZero) {\n            layout.labelOffset = posMap[axisDim][rawAxisPosition] - posMap[axisDim].onZero;\n        }\n\n        if (axisModel.getModel('axisTick').get('inside')) {\n            layout.tickDirection = -layout.tickDirection;\n        }\n        if (axisModel.getModel('axisLabel').get('inside')) {\n            layout.labelDirection = -layout.labelDirection;\n        }\n\n        // Special label rotation\n        var labelRotation = axisModel.getModel('axisLabel').get('rotate');\n        layout.labelRotation = axisPosition === 'top' ? -labelRotation : labelRotation;\n\n        // label interval when auto mode.\n        layout.labelInterval = axis.getLabelInterval();\n\n        // Over splitLine and splitArea\n        layout.z2 = 1;\n\n        return layout;\n    }\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/axis/AxisView.js\n// module id = 761\n// module chunks = 0","'use strict';\n\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var echarts = require('../echarts');\n\n    require('../coord/cartesian/Grid');\n\n    require('./axis');\n\n    // Grid view\n    echarts.extendComponentView({\n\n        type: 'grid',\n\n        render: function (gridModel, ecModel) {\n            this.group.removeAll();\n            if (gridModel.get('show')) {\n                this.group.add(new graphic.Rect({\n                    shape: gridModel.coordinateSystem.getRect(),\n                    style: zrUtil.defaults({\n                        fill: gridModel.get('backgroundColor')\n                    }, gridModel.getItemStyle()),\n                    silent: true,\n                    z2: -1\n                }));\n            }\n        }\n\n    });\n\n    echarts.registerPreprocessor(function (option) {\n        // Only create grid when need\n        if (option.xAxis && option.yAxis && !option.grid) {\n            option.grid = {};\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/grid.js\n// module id = 762\n// module chunks = 0","\n    // List layout\n    var layout = require('../../util/layout');\n    var formatUtil = require('../../util/format');\n    var graphic = require('../../util/graphic');\n\n    function positionGroup(group, model, api) {\n        layout.positionElement(\n            group, model.getBoxLayoutParams(),\n            {\n                width: api.getWidth(),\n                height: api.getHeight()\n            },\n            model.get('padding')\n        );\n    }\n\n    module.exports = {\n        /**\n         * Layout list like component.\n         * It will box layout each items in group of component and then position the whole group in the viewport\n         * @param {module:zrender/group/Group} group\n         * @param {module:echarts/model/Component} componentModel\n         * @param {module:echarts/ExtensionAPI}\n         */\n        layout: function (group, componentModel, api) {\n            var rect = layout.getLayoutRect(componentModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            }, componentModel.get('padding'));\n            layout.box(\n                componentModel.get('orient'),\n                group,\n                componentModel.get('itemGap'),\n                rect.width,\n                rect.height\n            );\n\n            positionGroup(group, componentModel, api);\n        },\n\n        addBackground: function (group, componentModel) {\n            var padding = formatUtil.normalizeCssArray(\n                componentModel.get('padding')\n            );\n            var boundingRect = group.getBoundingRect();\n            var style = componentModel.getItemStyle(['color', 'opacity']);\n            style.fill = componentModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: boundingRect.x - padding[3],\n                    y: boundingRect.y - padding[0],\n                    width: boundingRect.width + padding[1] + padding[3],\n                    height: boundingRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true,\n                z2: -1\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/listComponent.js\n// module id = 763\n// module chunks = 0","/**\n * Data selectable mixin for chart series.\n * To eanble data select, option of series must have `selectedMode`.\n * And each data item will use `selected` to toggle itself selected status\n *\n * @module echarts/chart/helper/DataSelectable\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    module.exports = {\n\n        updateSelectedMap: function (targetList) {\n            this._selectTargetMap = zrUtil.reduce(targetList || [], function (targetMap, target) {\n                targetMap[target.name] = target;\n                return targetMap;\n            }, {});\n        },\n        /**\n         * @param {string} name\n         */\n        // PENGING If selectedMode is null ?\n        select: function (name) {\n            var targetMap = this._selectTargetMap;\n            var target = targetMap[name];\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                zrUtil.each(targetMap, function (target) {\n                    target.selected = false;\n                });\n            }\n            target && (target.selected = true);\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            var target = this._selectTargetMap[name];\n            // var selectedMode = this.get('selectedMode');\n            // selectedMode !== 'single' && target && (target.selected = false);\n            target && (target.selected = false);\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            if (target != null) {\n                this[target.selected ? 'unSelect' : 'select'](name);\n                return target.selected;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var target = this._selectTargetMap[name];\n            return target && target.selected;\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/helper/selectableMixin.js\n// module id = 764\n// module chunks = 0","/**\n * Legend component entry file8\n */\n\n\n    require('./legend/LegendModel');\n    require('./legend/legendAction');\n    require('./legend/LegendView');\n\n    var echarts = require('../echarts');\n    // Series Filter\n    echarts.registerProcessor(require('./legend/legendFilter'));\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend.js\n// module id = 765\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Model = require('../../model/Model');\n\n    var LegendModel = require('../../echarts').extendComponentModel({\n\n        type: 'legend',\n\n        dependencies: ['series'],\n\n        layoutMode: {\n            type: 'box',\n            ignoreSize: true\n        },\n\n        init: function (option, parentModel, ecModel) {\n            this.mergeDefaultAndTheme(option, ecModel);\n\n            option.selected = option.selected || {};\n        },\n\n        mergeOption: function (option) {\n            LegendModel.superCall(this, 'mergeOption', option);\n        },\n\n        optionUpdated: function () {\n            this._updateData(this.ecModel);\n\n            var legendData = this._data;\n\n            // If selectedMode is single, try to select one\n            if (legendData[0] && this.get('selectedMode') === 'single') {\n                var hasSelected = false;\n                // If has any selected in option.selected\n                for (var i = 0; i < legendData.length; i++) {\n                    var name = legendData[i].get('name');\n                    if (this.isSelected(name)) {\n                        // Force to unselect others\n                        this.select(name);\n                        hasSelected = true;\n                        break;\n                    }\n                }\n                // Try select the first if selectedMode is single\n                !hasSelected && this.select(legendData[0].get('name'));\n            }\n        },\n\n        _updateData: function (ecModel) {\n            var legendData = zrUtil.map(this.get('data') || [], function (dataItem) {\n                // Can be string or number\n                if (typeof dataItem === 'string' || typeof dataItem === 'number') {\n                    dataItem = {\n                        name: dataItem\n                    };\n                }\n                return new Model(dataItem, this, this.ecModel);\n            }, this);\n            this._data = legendData;\n\n            var availableNames = zrUtil.map(ecModel.getSeries(), function (series) {\n                return series.name;\n            });\n            ecModel.eachSeries(function (seriesModel) {\n                if (seriesModel.legendDataProvider) {\n                    var data = seriesModel.legendDataProvider();\n                    availableNames = availableNames.concat(data.mapArray(data.getName));\n                }\n            });\n            /**\n             * @type {Array.<string>}\n             * @private\n             */\n            this._availableNames = availableNames;\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Model>}\n         */\n        getData: function () {\n            return this._data;\n        },\n\n        /**\n         * @param {string} name\n         */\n        select: function (name) {\n            var selected = this.option.selected;\n            var selectedMode = this.get('selectedMode');\n            if (selectedMode === 'single') {\n                var data = this._data;\n                zrUtil.each(data, function (dataItem) {\n                    selected[dataItem.get('name')] = false;\n                });\n            }\n            selected[name] = true;\n        },\n\n        /**\n         * @param {string} name\n         */\n        unSelect: function (name) {\n            if (this.get('selectedMode') !== 'single') {\n                this.option.selected[name] = false;\n            }\n        },\n\n        /**\n         * @param {string} name\n         */\n        toggleSelected: function (name) {\n            var selected = this.option.selected;\n            // Default is true\n            if (!selected.hasOwnProperty(name)) {\n                selected[name] = true;\n            }\n            this[selected[name] ? 'unSelect' : 'select'](name);\n        },\n\n        /**\n         * @param {string} name\n         */\n        isSelected: function (name) {\n            var selected = this.option.selected;\n            return !(selected.hasOwnProperty(name) && !selected[name])\n                && zrUtil.indexOf(this._availableNames, name) >= 0;\n        },\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 4,\n            show: true,\n\n            // 布局方式，默认为水平布局，可选为：\n            // 'horizontal' | 'vertical'\n            orient: 'horizontal',\n\n            left: 'center',\n            // right: 'center',\n\n            top: 'top',\n            // bottom: 'top',\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right'\n            // 默认为 'auto', 根据 x 的位置判断是左对齐还是右对齐\n            align: 'auto',\n\n            backgroundColor: 'rgba(0,0,0,0)',\n            // 图例边框颜色\n            borderColor: '#ccc',\n            // 图例边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n            // 图例内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n            // 各个item之间的间隔，单位px，默认为10，\n            // 横向布局时为水平间隔，纵向布局时为纵向间隔\n            itemGap: 10,\n            // 图例图形宽度\n            itemWidth: 25,\n            // 图例图形高度\n            itemHeight: 14,\n\n            // 图例关闭时候的颜色\n            inactiveColor: '#ccc',\n\n            textStyle: {\n                // 图例文字颜色\n                color: '#333'\n            },\n            // formatter: '',\n            // 选择模式，默认开启图例开关\n            selectedMode: true,\n            // 配置默认选中状态，可配合LEGEND.SELECTED事件做动态数据载入\n            // selected: null,\n            // 图例内容（详见legend.data，数组中每一项代表一个item\n            // data: [],\n\n            // Tooltip 相关配置\n            tooltip: {\n                show: false\n            }\n        }\n    });\n\n    module.exports = LegendModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendModel.js\n// module id = 766\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var symbolCreator = require('../../util/symbol');\n    var graphic = require('../../util/graphic');\n    var listComponentHelper = require('../helper/listComponent');\n\n    var curry = zrUtil.curry;\n\n    function dispatchSelectAction(name, api) {\n        api.dispatchAction({\n            type: 'legendToggleSelect',\n            name: name\n        });\n    }\n\n    function dispatchHighlightAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'highlight',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    function dispatchDownplayAction(seriesModel, dataName, api) {\n        // If element hover will move to a hoverLayer.\n        var el = api.getZr().storage.getDisplayList()[0];\n        if (!(el && el.useHoverLayer)) {\n            seriesModel.get('legendHoverLink') && api.dispatchAction({\n                type: 'downplay',\n                seriesName: seriesModel.name,\n                name: dataName\n            });\n        }\n    }\n\n    module.exports = require('../../echarts').extendComponentView({\n\n        type: 'legend',\n\n        init: function () {\n            this._symbolTypeStore = {};\n        },\n\n        render: function (legendModel, ecModel, api) {\n            var group = this.group;\n            group.removeAll();\n\n            if (!legendModel.get('show')) {\n                return;\n            }\n\n            var selectMode = legendModel.get('selectedMode');\n            var itemAlign = legendModel.get('align');\n\n            if (itemAlign === 'auto') {\n                itemAlign = (legendModel.get('left') === 'right'\n                    && legendModel.get('orient') === 'vertical')\n                    ? 'right' : 'left';\n            }\n\n            var legendDrawedMap = {};\n\n            zrUtil.each(legendModel.getData(), function (itemModel) {\n                var name = itemModel.get('name');\n\n                // Use empty string or \\n as a newline string\n                if (name === '' || name === '\\n') {\n                    group.add(new graphic.Group({\n                        newline: true\n                    }));\n                    return;\n                }\n\n                var seriesModel = ecModel.getSeriesByName(name)[0];\n\n                if (legendDrawedMap[name]) {\n                    // Have been drawed\n                    return;\n                }\n\n                // Series legend\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var color = data.getVisual('color');\n\n                    // If color is a callback function\n                    if (typeof color === 'function') {\n                        // Use the first data\n                        color = color(seriesModel.getDataParams(0));\n                    }\n\n                    // Using rect symbol defaultly\n                    var legendSymbolType = data.getVisual('legendSymbol') || 'roundRect';\n                    var symbolType = data.getVisual('symbol');\n\n                    var itemGroup = this._createItem(\n                        name, itemModel, legendModel,\n                        legendSymbolType, symbolType,\n                        itemAlign, color,\n                        selectMode\n                    );\n\n                    itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                        .on('mouseover', curry(dispatchHighlightAction, seriesModel, null, api))\n                        .on('mouseout', curry(dispatchDownplayAction, seriesModel, null, api));\n\n                    legendDrawedMap[name] = true;\n                }\n                else {\n                    // Data legend of pie, funnel\n                    ecModel.eachRawSeries(function (seriesModel) {\n                        // In case multiple series has same data name\n                        if (legendDrawedMap[name]) {\n                            return;\n                        }\n                        if (seriesModel.legendDataProvider) {\n                            var data = seriesModel.legendDataProvider();\n                            var idx = data.indexOfName(name);\n                            if (idx < 0) {\n                                return;\n                            }\n\n                            var color = data.getItemVisual(idx, 'color');\n\n                            var legendSymbolType = 'roundRect';\n\n                            var itemGroup = this._createItem(\n                                name, itemModel, legendModel,\n                                legendSymbolType, null,\n                                itemAlign, color,\n                                selectMode\n                            );\n\n                            itemGroup.on('click', curry(dispatchSelectAction, name, api))\n                                // FIXME Should not specify the series name\n                                .on('mouseover', curry(dispatchHighlightAction, seriesModel, name, api))\n                                .on('mouseout', curry(dispatchDownplayAction, seriesModel, name, api));\n\n                            legendDrawedMap[name] = true;\n                        }\n                    }, this);\n                }\n\n                if (__DEV__) {\n                    if (!legendDrawedMap[name]) {\n                        console.warn(name + ' series not exists. Legend data should be same with series name or data name.');\n                    }\n                }\n            }, this);\n\n            listComponentHelper.layout(group, legendModel, api);\n            // Render background after group is layout\n            // FIXME\n            listComponentHelper.addBackground(group, legendModel);\n        },\n\n        _createItem: function (\n            name, itemModel, legendModel,\n            legendSymbolType, symbolType,\n            itemAlign, color, selectMode\n        ) {\n            var itemWidth = legendModel.get('itemWidth');\n            var itemHeight = legendModel.get('itemHeight');\n            var inactiveColor = legendModel.get('inactiveColor');\n\n            var isSelected = legendModel.isSelected(name);\n            var itemGroup = new graphic.Group();\n\n            var textStyleModel = itemModel.getModel('textStyle');\n\n            var itemIcon = itemModel.get('icon');\n\n            var tooltipModel = itemModel.getModel('tooltip');\n            var legendGlobalTooltipModel = tooltipModel.parentModel;\n\n            // Use user given icon first\n            legendSymbolType = itemIcon || legendSymbolType;\n            itemGroup.add(symbolCreator.createSymbol(\n                legendSymbolType, 0, 0, itemWidth, itemHeight, isSelected ? color : inactiveColor\n            ));\n\n            // Compose symbols\n            // PENDING\n            if (!itemIcon && symbolType\n                // At least show one symbol, can't be all none\n                && ((symbolType !== legendSymbolType) || symbolType == 'none')\n            ) {\n                var size = itemHeight * 0.8;\n                if (symbolType === 'none') {\n                    symbolType = 'circle';\n                }\n                // Put symbol in the center\n                itemGroup.add(symbolCreator.createSymbol(\n                    symbolType, (itemWidth - size) / 2, (itemHeight - size) / 2, size, size,\n                    isSelected ? color : inactiveColor\n                ));\n            }\n\n            // Text\n            var textX = itemAlign === 'left' ? itemWidth + 5 : -5;\n            var textAlign = itemAlign;\n\n            var formatter = legendModel.get('formatter');\n            var content = name;\n            if (typeof formatter === 'string' && formatter) {\n                content = formatter.replace('{name}', name != null ? name : '');\n            }\n            else if (typeof formatter === 'function') {\n                content = formatter(name);\n            }\n\n            var text = new graphic.Text({\n                style: {\n                    text: content,\n                    x: textX,\n                    y: itemHeight / 2,\n                    fill: isSelected ? textStyleModel.getTextColor() : inactiveColor,\n                    textFont: textStyleModel.getFont(),\n                    textAlign: textAlign,\n                    textVerticalAlign: 'middle'\n                }\n            });\n            itemGroup.add(text);\n\n            // Add a invisible rect to increase the area of mouse hover\n            var hitRect = new graphic.Rect({\n                shape: itemGroup.getBoundingRect(),\n                invisible: true,\n                tooltip: tooltipModel.get('show') ? zrUtil.extend({\n                    content: name,\n                    // Defaul formatter\n                    formatter: legendGlobalTooltipModel.get('formatter', true) || function () {\n                        return name;\n                    },\n                    formatterParams: {\n                        componentType: 'legend',\n                        legendIndex: legendModel.componentIndex,\n                        name: name,\n                        $vars: ['name']\n                    }\n                }, tooltipModel.option) : null\n            });\n            itemGroup.add(hitRect);\n\n            itemGroup.eachChild(function (child) {\n                child.silent = true;\n            });\n\n            hitRect.silent = !selectMode;\n\n\n\n            this.group.add(itemGroup);\n\n            graphic.setHoverStyle(itemGroup);\n\n            return itemGroup;\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/LegendView.js\n// module id = 767\n// module chunks = 0","/**\n * @file Legend action\n */\n\n\n    var echarts = require('../../echarts');\n    var zrUtil = require('zrender/lib/core/util');\n\n    function legendSelectActionHandler(methodName, payload, ecModel) {\n        var selectedMap = {};\n        var isToggleSelect = methodName === 'toggleSelected';\n        var isSelected;\n        // Update all legend components\n        ecModel.eachComponent('legend', function (legendModel) {\n            if (isToggleSelect && isSelected != null) {\n                // Force other legend has same selected status\n                // Or the first is toggled to true and other are toggled to false\n                // In the case one legend has some item unSelected in option. And if other legend\n                // doesn't has the item, they will assume it is selected.\n                legendModel[isSelected ? 'select' : 'unSelect'](payload.name);\n            }\n            else {\n                legendModel[methodName](payload.name);\n                isSelected = legendModel.isSelected(payload.name);\n            }\n            var legendData = legendModel.getData();\n            zrUtil.each(legendData, function (model) {\n                var name = model.get('name');\n                // Wrap element\n                if (name === '\\n' || name === '') {\n                    return;\n                }\n                var isItemSelected = legendModel.isSelected(name);\n                if (name in selectedMap) {\n                    // Unselected if any legend is unselected\n                    selectedMap[name] = selectedMap[name] && isItemSelected;\n                }\n                else {\n                    selectedMap[name] = isItemSelected;\n                }\n            });\n        });\n        // Return the event explicitly\n        return {\n            name: payload.name,\n            selected: selectedMap\n        };\n    }\n    /**\n     * @event legendToggleSelect\n     * @type {Object}\n     * @property {string} type 'legendToggleSelect'\n     * @property {string} [from]\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendToggleSelect', 'legendselectchanged',\n        zrUtil.curry(legendSelectActionHandler, 'toggleSelected')\n    );\n\n    /**\n     * @event legendSelect\n     * @type {Object}\n     * @property {string} type 'legendSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendSelect', 'legendselected',\n        zrUtil.curry(legendSelectActionHandler, 'select')\n    );\n\n    /**\n     * @event legendUnSelect\n     * @type {Object}\n     * @property {string} type 'legendUnSelect'\n     * @property {string} name Series name or data item name\n     */\n    echarts.registerAction(\n        'legendUnSelect', 'legendunselected',\n        zrUtil.curry(legendSelectActionHandler, 'unSelect')\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendAction.js\n// module id = 768\n// module chunks = 0","\n   module.exports = function (ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (legendModels && legendModels.length) {\n            ecModel.filterSeries(function (series) {\n                // If in any legend component the status is not selected.\n                // Because in legend series is assumed selected when it is not in the legend data.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(series.name)) {\n                        return false;\n                    }\n                }\n                return true;\n            });\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/legend/legendFilter.js\n// module id = 769\n// module chunks = 0","'use strict';\n\n\n    var echarts = require('../echarts');\n    var graphic = require('../util/graphic');\n    var layout = require('../util/layout');\n\n    // Model\n    echarts.extendComponentModel({\n\n        type: 'title',\n\n        layoutMode: {type: 'box', ignoreSize: true},\n\n        defaultOption: {\n            // 一级层叠\n            zlevel: 0,\n            // 二级层叠\n            z: 6,\n            show: true,\n\n            text: '',\n            // 超链接跳转\n            // link: null,\n            // 仅支持self | blank\n            target: 'blank',\n            subtext: '',\n\n            // 超链接跳转\n            // sublink: null,\n            // 仅支持self | blank\n            subtarget: 'blank',\n\n            // 'center' ¦ 'left' ¦ 'right'\n            // ¦ {number}（x坐标，单位px）\n            left: 0,\n            // 'top' ¦ 'bottom' ¦ 'center'\n            // ¦ {number}（y坐标，单位px）\n            top: 0,\n\n            // 水平对齐\n            // 'auto' | 'left' | 'right' | 'center'\n            // 默认根据 left 的位置判断是左对齐还是右对齐\n            // textAlign: null\n            //\n            // 垂直对齐\n            // 'auto' | 'top' | 'bottom' | 'middle'\n            // 默认根据 top 位置判断是上对齐还是下对齐\n            // textBaseline: null\n\n            backgroundColor: 'rgba(0,0,0,0)',\n\n            // 标题边框颜色\n            borderColor: '#ccc',\n\n            // 标题边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 标题内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // 主副标题纵向间隔，单位px，默认为10，\n            itemGap: 10,\n            textStyle: {\n                fontSize: 18,\n                fontWeight: 'bolder',\n                color: '#333'\n            },\n            subtextStyle: {\n                color: '#aaa'\n            }\n        }\n    });\n\n    // View\n    echarts.extendComponentView({\n\n        type: 'title',\n\n        render: function (titleModel, ecModel, api) {\n            this.group.removeAll();\n\n            if (!titleModel.get('show')) {\n                return;\n            }\n\n            var group = this.group;\n\n            var textStyleModel = titleModel.getModel('textStyle');\n            var subtextStyleModel = titleModel.getModel('subtextStyle');\n\n            var textAlign = titleModel.get('textAlign');\n            var textBaseline = titleModel.get('textBaseline');\n\n            var textEl = new graphic.Text({\n                style: {\n                    text: titleModel.get('text'),\n                    textFont: textStyleModel.getFont(),\n                    fill: textStyleModel.getTextColor()\n                },\n                z2: 10\n            });\n\n            var textRect = textEl.getBoundingRect();\n\n            var subText = titleModel.get('subtext');\n            var subTextEl = new graphic.Text({\n                style: {\n                    text: subText,\n                    textFont: subtextStyleModel.getFont(),\n                    fill: subtextStyleModel.getTextColor(),\n                    y: textRect.height + titleModel.get('itemGap'),\n                    textBaseline: 'top'\n                },\n                z2: 10\n            });\n\n            var link = titleModel.get('link');\n            var sublink = titleModel.get('sublink');\n\n            textEl.silent = !link;\n            subTextEl.silent = !sublink;\n\n            if (link) {\n                textEl.on('click', function () {\n                    window.open(link, '_' + titleModel.get('target'));\n                });\n            }\n            if (sublink) {\n                subTextEl.on('click', function () {\n                    window.open(sublink, '_' + titleModel.get('subtarget'));\n                });\n            }\n\n            group.add(textEl);\n            subText && group.add(subTextEl);\n            // If no subText, but add subTextEl, there will be an empty line.\n\n            var groupRect = group.getBoundingRect();\n            var layoutOption = titleModel.getBoxLayoutParams();\n            layoutOption.width = groupRect.width;\n            layoutOption.height = groupRect.height;\n            var layoutRect = layout.getLayoutRect(\n                layoutOption, {\n                    width: api.getWidth(),\n                    height: api.getHeight()\n                }, titleModel.get('padding')\n            );\n            // Adjust text align based on position\n            if (!textAlign) {\n                // Align left if title is on the left. center and right is same\n                textAlign = titleModel.get('left') || titleModel.get('right');\n                if (textAlign === 'middle') {\n                    textAlign = 'center';\n                }\n                // Adjust layout by text align\n                if (textAlign === 'right') {\n                    layoutRect.x += layoutRect.width;\n                }\n                else if (textAlign === 'center') {\n                    layoutRect.x += layoutRect.width / 2;\n                }\n            }\n            if (!textBaseline) {\n                textBaseline = titleModel.get('top') || titleModel.get('bottom');\n                if (textBaseline === 'center') {\n                    textBaseline = 'middle';\n                }\n                if (textBaseline === 'bottom') {\n                    layoutRect.y += layoutRect.height;\n                }\n                else if (textBaseline === 'middle') {\n                    layoutRect.y += layoutRect.height / 2;\n                }\n\n                textBaseline = textBaseline || 'top';\n            }\n\n            group.attr('position', [layoutRect.x, layoutRect.y]);\n            var alignStyle = {\n                textAlign: textAlign,\n                textVerticalAlign: textBaseline\n            };\n            textEl.setStyle(alignStyle);\n            subTextEl.setStyle(alignStyle);\n\n            // Render background\n            // Get groupRect again because textAlign has been changed\n            groupRect = group.getBoundingRect();\n            var padding = layoutRect.margin;\n            var style = titleModel.getItemStyle(['color', 'opacity']);\n            style.fill = titleModel.get('backgroundColor');\n            var rect = new graphic.Rect({\n                shape: {\n                    x: groupRect.x - padding[3],\n                    y: groupRect.y - padding[0],\n                    width: groupRect.width + padding[1] + padding[3],\n                    height: groupRect.height + padding[0] + padding[2]\n                },\n                style: style,\n                silent: true\n            });\n            graphic.subPixelOptimizeRect(rect);\n\n            group.add(rect);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/title.js\n// module id = 770\n// module chunks = 0","// FIXME Better way to pack data in graphic element\n\n\n    require('./tooltip/TooltipModel');\n\n    require('./tooltip/TooltipView');\n\n    // Show tip action\n    /**\n     * @action\n     * @property {string} type\n     * @property {number} seriesIndex\n     * @property {number} dataIndex\n     * @property {number} [x]\n     * @property {number} [y]\n     */\n    require('../echarts').registerAction(\n        {\n            type: 'showTip',\n            event: 'showTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n    // Hide tip action\n    require('../echarts').registerAction(\n        {\n            type: 'hideTip',\n            event: 'hideTip',\n            update: 'none'\n        },\n        // noop\n        function () {}\n    );\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip.js\n// module id = 771\n// module chunks = 0","/**\n * @module echarts/component/tooltip/TooltipContent\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var zrColor = require('zrender/lib/tool/color');\n    var eventUtil = require('zrender/lib/core/event');\n    var formatUtil = require('../../util/format');\n    var each = zrUtil.each;\n    var toCamelCase = formatUtil.toCamelCase;\n    var env = require('zrender/lib/core/env');\n\n    var vendors = ['', '-webkit-', '-moz-', '-o-'];\n\n    var gCssText = 'position:absolute;display:block;border-style:solid;white-space:nowrap;z-index:9999999;';\n\n    /**\n     * @param {number} duration\n     * @return {string}\n     * @inner\n     */\n    function assembleTransition(duration) {\n        var transitionCurve = 'cubic-bezier(0.23, 1, 0.32, 1)';\n        var transitionText = 'left ' + duration + 's ' + transitionCurve + ','\n                            + 'top ' + duration + 's ' + transitionCurve;\n        return zrUtil.map(vendors, function (vendorPrefix) {\n            return vendorPrefix + 'transition:' + transitionText;\n        }).join(';');\n    }\n\n    /**\n     * @param {Object} textStyle\n     * @return {string}\n     * @inner\n     */\n    function assembleFont(textStyleModel) {\n        var cssText = [];\n\n        var fontSize = textStyleModel.get('fontSize');\n        var color = textStyleModel.getTextColor();\n\n        color && cssText.push('color:' + color);\n\n        cssText.push('font:' + textStyleModel.getFont());\n\n        fontSize &&\n            cssText.push('line-height:' + Math.round(fontSize * 3 / 2) + 'px');\n\n        each(['decoration', 'align'], function (name) {\n            var val = textStyleModel.get(name);\n            val && cssText.push('text-' + name + ':' + val);\n        });\n\n        return cssText.join(';');\n    }\n\n    /**\n     * @param {Object} tooltipModel\n     * @return {string}\n     * @inner\n     */\n    function assembleCssText(tooltipModel) {\n\n        tooltipModel = tooltipModel;\n\n        var cssText = [];\n\n        var transitionDuration = tooltipModel.get('transitionDuration');\n        var backgroundColor = tooltipModel.get('backgroundColor');\n        var textStyleModel = tooltipModel.getModel('textStyle');\n        var padding = tooltipModel.get('padding');\n\n        // Animation transition\n        transitionDuration &&\n            cssText.push(assembleTransition(transitionDuration));\n\n        if (backgroundColor) {\n            if (env.canvasSupported) {\n                cssText.push('background-Color:' + backgroundColor);\n            }\n            else {\n                // for ie\n                cssText.push(\n                    'background-Color:#' + zrColor.toHex(backgroundColor)\n                );\n                cssText.push('filter:alpha(opacity=70)');\n            }\n        }\n\n        // Border style\n        each(['width', 'color', 'radius'], function (name) {\n            var borderName = 'border-' + name;\n            var camelCase = toCamelCase(borderName);\n            var val = tooltipModel.get(camelCase);\n            val != null &&\n                cssText.push(borderName + ':' + val + (name === 'color' ? '' : 'px'));\n        });\n\n        // Text style\n        cssText.push(assembleFont(textStyleModel));\n\n        // Padding\n        if (padding != null) {\n            cssText.push('padding:' + formatUtil.normalizeCssArray(padding).join('px ') + 'px');\n        }\n\n        return cssText.join(';') + ';';\n    }\n\n    /**\n     * @alias module:echarts/component/tooltip/TooltipContent\n     * @constructor\n     */\n    function TooltipContent(container, api) {\n        var el = document.createElement('div');\n        var zr = api.getZr();\n\n        this.el = el;\n\n        this._x = api.getWidth() / 2;\n        this._y = api.getHeight() / 2;\n\n        container.appendChild(el);\n\n        this._container = container;\n\n        this._show = false;\n\n        /**\n         * @private\n         */\n        this._hideTimeout;\n\n        var self = this;\n        el.onmouseenter = function () {\n            // clear the timeout in hideLater and keep showing tooltip\n            if (self.enterable) {\n                clearTimeout(self._hideTimeout);\n                self._show = true;\n            }\n            self._inContent = true;\n        };\n        el.onmousemove = function (e) {\n            e = e || window.event;\n            if (!self.enterable) {\n                // Try trigger zrender event to avoid mouse\n                // in and out shape too frequently\n                var handler = zr.handler;\n                eventUtil.normalizeEvent(container, e, true);\n                handler.dispatch('mousemove', e);\n            }\n        };\n        el.onmouseleave = function () {\n            if (self.enterable) {\n                if (self._show) {\n                    self.hideLater(self._hideDelay);\n                }\n            }\n            self._inContent = false;\n        };\n    }\n\n    TooltipContent.prototype = {\n\n        constructor: TooltipContent,\n\n        enterable: true,\n\n        /**\n         * Update when tooltip is rendered\n         */\n        update: function () {\n            var container = this._container;\n            var stl = container.currentStyle\n                || document.defaultView.getComputedStyle(container);\n            var domStyle = container.style;\n            if (domStyle.position !== 'absolute' && stl.position !== 'absolute') {\n                domStyle.position = 'relative';\n            }\n            // Hide the tooltip\n            // PENDING\n            // this.hide();\n        },\n\n        show: function (tooltipModel) {\n            clearTimeout(this._hideTimeout);\n            var el = this.el;\n\n            el.style.cssText = gCssText + assembleCssText(tooltipModel)\n                // http://stackoverflow.com/questions/21125587/css3-transition-not-working-in-chrome-anymore\n                + ';left:' + this._x + 'px;top:' + this._y + 'px;'\n                + (tooltipModel.get('extraCssText') || '');\n\n            el.style.display = el.innerHTML ?  'block' : 'none';\n\n            this._show = true;\n        },\n\n        setContent: function (content) {\n            var el = this.el;\n            el.innerHTML = content;\n            el.style.display = content ? 'block' : 'none';\n        },\n\n        moveTo: function (x, y) {\n            var style = this.el.style;\n            style.left = x + 'px';\n            style.top = y + 'px';\n\n            this._x = x;\n            this._y = y;\n        },\n\n        hide: function () {\n            this.el.style.display = 'none';\n            this._show = false;\n        },\n\n        // showLater: function ()\n\n        hideLater: function (time) {\n            if (this._show && !(this._inContent && this.enterable)) {\n                if (time) {\n                    this._hideDelay = time;\n                    // Set show false to avoid invoke hideLater mutiple times\n                    this._show = false;\n                    this._hideTimeout = setTimeout(zrUtil.bind(this.hide, this), time);\n                }\n                else {\n                    this.hide();\n                }\n            }\n        },\n\n        isShow: function () {\n            return this._show;\n        }\n    };\n\n    module.exports = TooltipContent;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipContent.js\n// module id = 772\n// module chunks = 0","\n\n    require('../../echarts').extendComponentModel({\n\n        type: 'tooltip',\n\n        defaultOption: {\n            zlevel: 0,\n\n            z: 8,\n\n            show: true,\n\n            // tooltip主体内容\n            showContent: true,\n\n            // 触发类型，默认数据触发，见下图，可选为：'item' ¦ 'axis'\n            trigger: 'item',\n\n            // 触发条件，支持 'click' | 'mousemove' | 'none'\n            triggerOn: 'mousemove',\n\n            // 是否永远显示 content\n            alwaysShowContent: false,\n\n            // 位置 {Array} | {Function}\n            // position: null\n\n            // 是否约束 content 在 viewRect 中。默认 false 是为了兼容以前版本。\n            confine: false,\n\n            // 内容格式器：{string}（Template） ¦ {Function}\n            // formatter: null\n\n            showDelay: 0,\n\n            // 隐藏延迟，单位ms\n            hideDelay: 100,\n\n            // 动画变换时间，单位s\n            transitionDuration: 0.4,\n\n            enterable: false,\n\n            // 提示背景颜色，默认为透明度为0.7的黑色\n            backgroundColor: 'rgba(50,50,50,0.7)',\n\n            // 提示边框颜色\n            borderColor: '#333',\n\n            // 提示边框圆角，单位px，默认为4\n            borderRadius: 4,\n\n            // 提示边框线宽，单位px，默认为0（无边框）\n            borderWidth: 0,\n\n            // 提示内边距，单位px，默认各方向内边距为5，\n            // 接受数组分别设定上右下左边距，同css\n            padding: 5,\n\n            // Extra css text\n            extraCssText: '',\n\n            // 坐标轴指示器，坐标轴触发有效\n            axisPointer: {\n                // 默认为直线\n                // 可选为：'line' | 'shadow' | 'cross'\n                type: 'line',\n\n                // type 为 line 的时候有效，指定 tooltip line 所在的轴，可选\n                // 可选 'x' | 'y' | 'angle' | 'radius' | 'auto'\n                // 默认 'auto'，会选择类型为 cateogry 的轴，对于双数值轴，笛卡尔坐标系会默认选择 x 轴\n                // 极坐标系会默认选择 angle 轴\n                axis: 'auto',\n\n                animation: true,\n                animationDurationUpdate: 200,\n                animationEasingUpdate: 'exponentialOut',\n\n                // 直线指示器样式设置\n                lineStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'solid'\n                },\n\n                crossStyle: {\n                    color: '#555',\n                    width: 1,\n                    type: 'dashed',\n\n                    // TODO formatter\n                    textStyle: {}\n                },\n\n                // 阴影指示器样式设置\n                shadowStyle: {\n                    color: 'rgba(150,150,150,0.3)'\n                }\n            },\n            textStyle: {\n                color: '#fff',\n                fontSize: 14\n            }\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipModel.js\n// module id = 773\n// module chunks = 0","\n\n    var TooltipContent = require('./TooltipContent');\n    var graphic = require('../../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var formatUtil = require('../../util/format');\n    var numberUtil = require('../../util/number');\n    var modelUtil = require('../../util/model');\n    var parsePercent = numberUtil.parsePercent;\n    var env = require('zrender/lib/core/env');\n    var Model = require('../../model/Model');\n\n    function dataEqual(a, b) {\n        if (!a || !b) {\n            return false;\n        }\n        var round = numberUtil.round;\n        return round(a[0]) === round(b[0])\n            && round(a[1]) === round(b[1]);\n    }\n    /**\n     * @inner\n     */\n    function makeLineShape(x1, y1, x2, y2) {\n        return {\n            x1: x1,\n            y1: y1,\n            x2: x2,\n            y2: y2\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeRectShape(x, y, width, height) {\n        return {\n            x: x,\n            y: y,\n            width: width,\n            height: height\n        };\n    }\n\n    /**\n     * @inner\n     */\n    function makeSectorShape(cx, cy, r0, r, startAngle, endAngle) {\n        return {\n            cx: cx,\n            cy: cy,\n            r0: r0,\n            r: r,\n            startAngle: startAngle,\n            endAngle: endAngle,\n            clockwise: true\n        };\n    }\n\n    function refixTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n        var gap = 20;\n\n        if (x + width + gap > viewWidth) {\n            x -= width + gap;\n        }\n        else {\n            x += gap;\n        }\n        if (y + height + gap > viewHeight) {\n            y -= height + gap;\n        }\n        else {\n            y += gap;\n        }\n        return [x, y];\n    }\n\n    function confineTooltipPosition(x, y, el, viewWidth, viewHeight) {\n        var width = el.clientWidth;\n        var height = el.clientHeight;\n\n        x = Math.min(x + width, viewWidth) - width;\n        y = Math.min(y + height, viewHeight) - height;\n        x = Math.max(x, 0);\n        y = Math.max(y, 0);\n\n        return [x, y];\n    }\n\n    function calcTooltipPosition(position, rect, dom) {\n        var domWidth = dom.clientWidth;\n        var domHeight = dom.clientHeight;\n        var gap = 5;\n        var x = 0;\n        var y = 0;\n        var rectWidth = rect.width;\n        var rectHeight = rect.height;\n        switch (position) {\n            case 'inside':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'top':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y - domHeight - gap;\n                break;\n            case 'bottom':\n                x = rect.x + rectWidth / 2 - domWidth / 2;\n                y = rect.y + rectHeight + gap;\n                break;\n            case 'left':\n                x = rect.x - domWidth - gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n                break;\n            case 'right':\n                x = rect.x + rectWidth + gap;\n                y = rect.y + rectHeight / 2 - domHeight / 2;\n        }\n        return [x, y];\n    }\n\n    /**\n     * @param  {string|Function|Array.<number>} positionExpr\n     * @param  {number} x Mouse x\n     * @param  {number} y Mouse y\n     * @param  {boolean} confine Whether confine tooltip content in view rect.\n     * @param  {module:echarts/component/tooltip/TooltipContent} content\n     * @param  {Object|<Array.<Object>} params\n     * @param  {module:zrender/Element} el target element\n     * @param  {module:echarts/ExtensionAPI} api\n     * @return {Array.<number>}\n     */\n    function updatePosition(positionExpr, x, y, confine, content, params, el, api) {\n        var viewWidth = api.getWidth();\n        var viewHeight = api.getHeight();\n\n        var rect = el && el.getBoundingRect().clone();\n        el && rect.applyTransform(el.transform);\n        if (typeof positionExpr === 'function') {\n            // Callback of position can be an array or a string specify the position\n            positionExpr = positionExpr([x, y], params, content.el, rect);\n        }\n\n        if (zrUtil.isArray(positionExpr)) {\n            x = parsePercent(positionExpr[0], viewWidth);\n            y = parsePercent(positionExpr[1], viewHeight);\n        }\n        // Specify tooltip position by string 'top' 'bottom' 'left' 'right' around graphic element\n        else if (typeof positionExpr === 'string' && el) {\n            var pos = calcTooltipPosition(\n                positionExpr, rect, content.el\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n        else {\n            var pos = refixTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        if (confine) {\n            var pos = confineTooltipPosition(\n                x, y, content.el, viewWidth, viewHeight\n            );\n            x = pos[0];\n            y = pos[1];\n        }\n\n        content.moveTo(x, y);\n    }\n\n    function ifSeriesSupportAxisTrigger(seriesModel) {\n        var coordSys = seriesModel.coordinateSystem;\n        var trigger = seriesModel.get('tooltip.trigger', true);\n        // Ignore series use item tooltip trigger and series coordinate system is not cartesian or\n        return !(!coordSys\n            || (coordSys.type !== 'cartesian2d' && coordSys.type !== 'polar' && coordSys.type !== 'singleAxis')\n            || trigger === 'item');\n    }\n\n    require('../../echarts').extendComponentView({\n\n        type: 'tooltip',\n\n        _axisPointers: {},\n\n        init: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var tooltipContent = new TooltipContent(api.getDom(), api);\n            this._tooltipContent = tooltipContent;\n\n            api.on('showTip', this._manuallyShowTip, this);\n            api.on('hideTip', this._manuallyHideTip, this);\n        },\n\n        render: function (tooltipModel, ecModel, api) {\n            if (env.node) {\n                return;\n            }\n\n            // Reset\n            this.group.removeAll();\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._axisPointers = {};\n\n            /**\n             * @private\n             * @type {module:echarts/component/tooltip/TooltipModel}\n             */\n            this._tooltipModel = tooltipModel;\n\n            /**\n             * @private\n             * @type {module:echarts/model/Global}\n             */\n            this._ecModel = ecModel;\n\n            /**\n             * @private\n             * @type {module:echarts/ExtensionAPI}\n             */\n            this._api = api;\n\n            /**\n             * @type {Object}\n             * @private\n             */\n            this._lastHover = {\n                // data\n                // payloadBatch\n            };\n\n            var tooltipContent = this._tooltipContent;\n            tooltipContent.update();\n            tooltipContent.enterable = tooltipModel.get('enterable');\n            this._alwaysShowContent = tooltipModel.get('alwaysShowContent');\n\n            /**\n             * @type {Object.<string, Array>}\n             */\n            this._seriesGroupByAxis = this._prepareAxisTriggerData(\n                tooltipModel, ecModel\n            );\n\n            var crossText = this._crossText;\n            if (crossText) {\n                this.group.add(crossText);\n            }\n\n            var triggerOn = tooltipModel.get('triggerOn');\n\n            // Try to keep the tooltip show when refreshing\n            if (this._lastX != null\n                && this._lastY != null\n                // When user is willing to control tooltip totally using API,\n                // self._manuallyShowTip({x, y}) might cause tooltip hide,\n                // which is not expected.\n                && triggerOn !== 'none'\n            ) {\n                var self = this;\n                clearTimeout(this._refreshUpdateTimeout);\n                this._refreshUpdateTimeout = setTimeout(function () {\n                    // Show tip next tick after other charts are rendered\n                    // In case highlight action has wrong result\n                    // FIXME\n                    self._manuallyShowTip({\n                        x: self._lastX,\n                        y: self._lastY\n                    });\n                });\n            }\n\n            var zr = this._api.getZr();\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            if (triggerOn === 'click') {\n                zr.on('click', this._tryShow, this);\n            }\n            else if (triggerOn === 'mousemove') {\n                zr.on('mousemove', this._mousemove, this);\n                zr.on('mouseout', this._hide, this);\n                zr.on('globalout', this._hide, this);\n            }\n            // else triggerOn is 'none', which enable user\n            // to control tooltip totally using API.\n        },\n\n        _mousemove: function (e) {\n            var showDelay = this._tooltipModel.get('showDelay');\n            var self = this;\n            clearTimeout(this._showTimeout);\n            if (showDelay > 0) {\n                this._showTimeout = setTimeout(function () {\n                    self._tryShow(e);\n                }, showDelay);\n            }\n            else {\n                this._tryShow(e);\n            }\n        },\n\n        /**\n         * Show tip manually by\n         * dispatchAction({\n         *     type: 'showTip',\n         *     x: 10,\n         *     y: 10\n         * });\n         * Or\n         * dispatchAction({\n         *      type: 'showTip',\n         *      seriesIndex: 0,\n         *      dataIndex or dataIndexInside or name\n         * });\n         *\n         *  TODO Batch\n         */\n        _manuallyShowTip: function (event) {\n            // From self\n            if (event.from === this.uid) {\n                return;\n            }\n\n            var ecModel = this._ecModel;\n            var seriesIndex = event.seriesIndex;\n            var seriesModel = ecModel.getSeriesByIndex(seriesIndex);\n            var api = this._api;\n\n            var isTriggerAxis = this._tooltipModel.get('trigger') === 'axis';\n            function seriesHaveDataOnIndex(_series) {\n                var data = _series.getData();\n                var dataIndex = modelUtil.queryDataIndex(data, event);\n                // Have single dataIndex\n                if (dataIndex != null && !zrUtil.isArray(dataIndex)\n                    && data.hasValue(dataIndex)\n                ) {\n                    return true;\n                }\n            }\n\n            if (event.x == null || event.y == null) {\n                if (isTriggerAxis) {\n                    // Find another series.\n                    if (seriesModel && !seriesHaveDataOnIndex(seriesModel)) {\n                        seriesModel = null;\n                    }\n                    if (!seriesModel) {\n                        // Find the first series can use axis trigger And data is not null\n                        ecModel.eachSeries(function (_series) {\n                            if (ifSeriesSupportAxisTrigger(_series) && !seriesModel) {\n                                if (seriesHaveDataOnIndex(_series)) {\n                                    seriesModel = _series;\n                                }\n                            }\n                        });\n                    }\n                }\n                else {\n                    // Use the first series by default.\n                    seriesModel = seriesModel || ecModel.getSeriesByIndex(0);\n                }\n                if (seriesModel) {\n                    var data = seriesModel.getData();\n                    var dataIndex = modelUtil.queryDataIndex(data, event);\n\n                    if (dataIndex == null || zrUtil.isArray(dataIndex)) {\n                        return;\n                    }\n\n                    var el = data.getItemGraphicEl(dataIndex);\n                    var cx;\n                    var cy;\n                    // Try to get the point in coordinate system\n                    var coordSys = seriesModel.coordinateSystem;\n                    if (seriesModel.getTooltipPosition) {\n                        var point = seriesModel.getTooltipPosition(dataIndex) || [];\n                        cx = point[0];\n                        cy = point[1];\n                    }\n                    else if (coordSys && coordSys.dataToPoint) {\n                        var point = coordSys.dataToPoint(\n                            data.getValues(\n                                zrUtil.map(coordSys.dimensions, function (dim) {\n                                    return seriesModel.coordDimToDataDim(dim)[0];\n                                }), dataIndex, true\n                            )\n                        );\n                        cx = point && point[0];\n                        cy = point && point[1];\n                    }\n                    else if (el) {\n                        // Use graphic bounding rect\n                        var rect = el.getBoundingRect().clone();\n                        rect.applyTransform(el.transform);\n                        cx = rect.x + rect.width / 2;\n                        cy = rect.y + rect.height / 2;\n                    }\n\n                    if (cx != null && cy != null) {\n                        this._tryShow({\n                            offsetX: cx,\n                            offsetY: cy,\n                            position: event.position,\n                            target: el,\n                            event: {}\n                        });\n                    }\n                }\n            }\n            else {\n                var el = api.getZr().handler.findHover(event.x, event.y);\n                this._tryShow({\n                    offsetX: event.x,\n                    offsetY: event.y,\n                    position: event.position,\n                    target: el,\n                    event: {}\n                });\n            }\n        },\n\n        _manuallyHideTip: function (e) {\n            if (e.from === this.uid) {\n                return;\n            }\n\n            this._hide();\n        },\n\n        _prepareAxisTriggerData: function (tooltipModel, ecModel) {\n            // Prepare data for axis trigger\n            var seriesGroupByAxis = {};\n            ecModel.eachSeries(function (seriesModel) {\n                if (ifSeriesSupportAxisTrigger(seriesModel)) {\n                    var coordSys = seriesModel.coordinateSystem;\n                    var baseAxis;\n                    var key;\n\n                    // Only cartesian2d, polar and single support axis trigger\n                    if (coordSys.type === 'cartesian2d') {\n                        // FIXME `axisPointer.axis` is not baseAxis\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + baseAxis.index;\n                    }\n                    else if (coordSys.type === 'singleAxis') {\n                        baseAxis = coordSys.getAxis();\n                        key = baseAxis.dim + baseAxis.type;\n                    }\n                    else {\n                        baseAxis = coordSys.getBaseAxis();\n                        key = baseAxis.dim + coordSys.name;\n                    }\n\n                    seriesGroupByAxis[key] = seriesGroupByAxis[key] || {\n                        coordSys: [],\n                        series: []\n                    };\n                    seriesGroupByAxis[key].coordSys.push(coordSys);\n                    seriesGroupByAxis[key].series.push(seriesModel);\n                }\n            }, this);\n\n            return seriesGroupByAxis;\n        },\n\n        /**\n         * mousemove handler\n         * @param {Object} e\n         * @private\n         */\n        _tryShow: function (e) {\n            var el = e.target;\n            var tooltipModel = this._tooltipModel;\n            var globalTrigger = tooltipModel.get('trigger');\n            var ecModel = this._ecModel;\n            var api = this._api;\n\n            if (!tooltipModel) {\n                return;\n            }\n\n            // Save mouse x, mouse y. So we can try to keep showing the tip if chart is refreshed\n            this._lastX = e.offsetX;\n            this._lastY = e.offsetY;\n\n            // Always show item tooltip if mouse is on the element with dataIndex\n            if (el && el.dataIndex != null) {\n                // Use dataModel in element if possible\n                // Used when mouseover on a element like markPoint or edge\n                // In which case, the data is not main data in series.\n                var dataModel = el.dataModel || ecModel.getSeriesByIndex(el.seriesIndex);\n                var dataIndex = el.dataIndex;\n                var itemModel = dataModel.getData().getItemModel(dataIndex);\n                // Series or single data may use item trigger when global is axis trigger\n                if ((itemModel.get('tooltip.trigger') || globalTrigger) === 'axis') {\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n                else {\n                    // Reset ticket\n                    this._ticket = '';\n                    // If either single data or series use item trigger\n                    this._hideAxisPointer();\n                    // Reset last hover and dispatch downplay action\n                    this._resetLastHover();\n\n                    this._showItemTooltipContent(dataModel, dataIndex, el.dataType, e);\n                }\n\n                api.dispatchAction({\n                    type: 'showTip',\n                    from: this.uid,\n                    dataIndexInside: el.dataIndex,\n                    seriesIndex: el.seriesIndex\n                });\n            }\n            // Tooltip provided directly. Like legend\n            else if (el && el.tooltip) {\n                var tooltipOpt = el.tooltip;\n                if (typeof tooltipOpt === 'string') {\n                    var content = tooltipOpt;\n                    tooltipOpt = {\n                        content: content,\n                        // Fixed formatter\n                        formatter: content\n                    };\n                }\n                var subTooltipModel = new Model(tooltipOpt, tooltipModel);\n                var defaultHtml = subTooltipModel.get('content');\n                var asyncTicket = Math.random();\n                this._showTooltipContent(\n                    // TODO params\n                    subTooltipModel, defaultHtml, subTooltipModel.get('formatterParams') || {},\n                    asyncTicket, e.offsetX, e.offsetY, e.position, el, api\n                );\n            }\n            else {\n                if (globalTrigger === 'item') {\n                    this._hide();\n                }\n                else {\n                    // Try show axis tooltip\n                    this._showAxisTooltip(tooltipModel, ecModel, e);\n                }\n\n                // Action of cross pointer\n                // other pointer types will trigger action in _dispatchAndShowSeriesTooltipContent method\n                if (tooltipModel.get('axisPointer.type') === 'cross') {\n                    api.dispatchAction({\n                        type: 'showTip',\n                        from: this.uid,\n                        x: e.offsetX,\n                        y: e.offsetY\n                    });\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on axis\n         * @param {module:echarts/component/tooltip/TooltipModel} tooltipModel\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Object} e\n         * @private\n         */\n        _showAxisTooltip: function (tooltipModel, ecModel, e) {\n            var axisPointerModel = tooltipModel.getModel('axisPointer');\n            var axisPointerType = axisPointerModel.get('type');\n\n            if (axisPointerType === 'cross') {\n                var el = e.target;\n                if (el && el.dataIndex != null) {\n                    var seriesModel = ecModel.getSeriesByIndex(el.seriesIndex);\n                    var dataIndex = el.dataIndex;\n                    this._showItemTooltipContent(seriesModel, dataIndex, el.dataType, e);\n                }\n            }\n\n            this._showAxisPointer();\n            var allNotShow = true;\n            zrUtil.each(this._seriesGroupByAxis, function (seriesCoordSysSameAxis) {\n                // Try show the axis pointer\n                var allCoordSys = seriesCoordSysSameAxis.coordSys;\n                var coordSys = allCoordSys[0];\n\n                // If mouse position is not in the grid or polar\n                var point = [e.offsetX, e.offsetY];\n\n                if (!coordSys.containPoint(point)) {\n                    // Hide axis pointer\n                    this._hideAxisPointer(coordSys.name);\n                    return;\n                }\n\n                allNotShow = false;\n                // Make sure point is discrete on cateogry axis\n                var dimensions = coordSys.dimensions;\n                var value = coordSys.pointToData(point, true);\n                point = coordSys.dataToPoint(value);\n                var baseAxis = coordSys.getBaseAxis();\n                var axisType = axisPointerModel.get('axis');\n                if (axisType === 'auto') {\n                    axisType = baseAxis.dim;\n                }\n\n                var contentNotChange = false;\n                var lastHover = this._lastHover;\n                if (axisPointerType === 'cross') {\n                    // If hover data not changed\n                    // Possible when two axes are all category\n                    if (dataEqual(lastHover.data, value)) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value;\n                }\n                else {\n                    var valIndex = zrUtil.indexOf(dimensions, axisType);\n\n                    // If hover data not changed on the axis dimension\n                    if (lastHover.data === value[valIndex]) {\n                        contentNotChange = true;\n                    }\n                    lastHover.data = value[valIndex];\n                }\n\n                var enableAnimation = tooltipModel.get('animation');\n\n                if (coordSys.type === 'cartesian2d' && !contentNotChange) {\n                    this._showCartesianPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'polar' && !contentNotChange) {\n                    this._showPolarPointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n                else if (coordSys.type === 'singleAxis' && !contentNotChange) {\n                    this._showSinglePointer(\n                        axisPointerModel, coordSys, axisType, point, enableAnimation\n                    );\n                }\n\n                if (axisPointerType !== 'cross') {\n                    this._dispatchAndShowSeriesTooltipContent(\n                        coordSys, seriesCoordSysSameAxis.series, point, value, contentNotChange, e.position\n                    );\n                }\n            }, this);\n\n            if (!this._tooltipModel.get('show')) {\n                this._hideAxisPointer();\n            }\n\n            if (allNotShow) {\n                this._hide();\n            }\n        },\n\n        /**\n         * Show tooltip on axis of cartesian coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {module:echarts/coord/cartesian/Cartesian2D} cartesians\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         * @private\n         */\n        _showCartesianPointer: function (axisPointerModel, cartesian, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n            var baseAxis = cartesian.getBaseAxis();\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && baseAxis.type === 'category'\n                && baseAxis.getBandWidth() > 20;\n\n            if (axisPointerType === 'cross') {\n                moveGridLine('x', point, cartesian.getAxis('y').getGlobalExtent());\n                moveGridLine('y', point, cartesian.getAxis('x').getGlobalExtent());\n\n                this._updateCrossText(cartesian, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = cartesian.getAxis(axisType === 'x' ? 'y' : 'x');\n                var otherExtent = otherAxis.getGlobalExtent();\n\n                if (cartesian.type === 'cartesian2d') {\n                    (axisPointerType === 'line' ? moveGridLine : moveGridShadow)(\n                        axisType, point, otherExtent\n                    );\n                }\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridLine(axisType, point, otherExtent) {\n                var targetShape = axisType === 'x'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                graphic.subPixelOptimizeLine({\n                    shape: targetShape,\n                    style: pointerEl.style\n                });\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function moveGridShadow(axisType, point, otherExtent) {\n                var axis = cartesian.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n                var span = otherExtent[1] - otherExtent[0];\n                var targetShape = axisType === 'x'\n                    ? makeRectShape(point[0] - bandWidth / 2, otherExtent[0], bandWidth, span)\n                    : makeRectShape(otherExtent[0], point[1] - bandWidth / 2, span, bandWidth);\n\n                var pointerEl = self._getPointerElement(\n                    cartesian, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _showSinglePointer: function (axisPointerModel, single, axisType, point, enableAnimation) {\n            var self = this;\n            var axisPointerType = axisPointerModel.get('type');\n            var moveAnimation =\n                enableAnimation\n                && axisPointerType !== 'cross'\n                && single.getBaseAxis().type === 'category';\n            var rect = single.getRect();\n            var otherExtent = [rect.y, rect.y + rect.height];\n\n            moveSingleLine(axisType, point, otherExtent);\n\n            /**\n             * @inner\n             */\n            function moveSingleLine(axisType, point, otherExtent) {\n                var axis = single.getAxis();\n                var orient = axis.orient;\n\n                var targetShape = orient === 'horizontal'\n                    ? makeLineShape(point[0], otherExtent[0], point[0], otherExtent[1])\n                    : makeLineShape(otherExtent[0], point[1], otherExtent[1], point[1]);\n\n                var pointerEl = self._getPointerElement(\n                    single, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n        },\n\n        /**\n         * Show tooltip on axis of polar coordinate\n         * @param {module:echarts/model/Model} axisPointerModel\n         * @param {Array.<module:echarts/coord/polar/Polar>} polar\n         * @param {string} axisType\n         * @param {Array.<number>} point\n         */\n        _showPolarPointer: function (axisPointerModel, polar, axisType, point, enableAnimation) {\n            var self = this;\n\n            var axisPointerType = axisPointerModel.get('type');\n\n            var angleAxis = polar.getAngleAxis();\n            var radiusAxis = polar.getRadiusAxis();\n\n            var moveAnimation = enableAnimation\n                && axisPointerType !== 'cross'\n                && polar.getBaseAxis().type === 'category';\n\n            if (axisPointerType === 'cross') {\n                movePolarLine('angle', point, radiusAxis.getExtent());\n                movePolarLine('radius', point, angleAxis.getExtent());\n\n                this._updateCrossText(polar, point, axisPointerModel);\n            }\n            else {\n                var otherAxis = polar.getAxis(axisType === 'radius' ? 'angle' : 'radius');\n                var otherExtent = otherAxis.getExtent();\n\n                (axisPointerType === 'line' ? movePolarLine : movePolarShadow)(\n                    axisType, point, otherExtent\n                );\n            }\n            /**\n             * @inner\n             */\n            function movePolarLine(axisType, point, otherExtent) {\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                if (axisType === 'angle') {\n                    var p1 = polar.coordToPoint([otherExtent[0], mouseCoord[1]]);\n                    var p2 = polar.coordToPoint([otherExtent[1], mouseCoord[1]]);\n                    targetShape = makeLineShape(p1[0], p1[1], p2[0], p2[1]);\n                }\n                else {\n                    targetShape = {\n                        cx: polar.cx,\n                        cy: polar.cy,\n                        r: mouseCoord[0]\n                    };\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n\n            /**\n             * @inner\n             */\n            function movePolarShadow(axisType, point, otherExtent) {\n                var axis = polar.getAxis(axisType);\n                var bandWidth = axis.getBandWidth();\n\n                var mouseCoord = polar.pointToCoord(point);\n\n                var targetShape;\n\n                var radian = Math.PI / 180;\n\n                if (axisType === 'angle') {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        otherExtent[0], otherExtent[1],\n                        // In ECharts y is negative if angle is positive\n                        (-mouseCoord[1] - bandWidth / 2) * radian,\n                        (-mouseCoord[1] + bandWidth / 2) * radian\n                    );\n                }\n                else {\n                    targetShape = makeSectorShape(\n                        polar.cx, polar.cy,\n                        mouseCoord[0] - bandWidth / 2,\n                        mouseCoord[0] + bandWidth / 2,\n                        0, Math.PI * 2\n                    );\n                }\n\n                var pointerEl = self._getPointerElement(\n                    polar, axisPointerModel, axisType, targetShape\n                );\n                moveAnimation\n                    ? graphic.updateProps(pointerEl, {\n                        shape: targetShape\n                    }, axisPointerModel)\n                    :  pointerEl.attr({\n                        shape: targetShape\n                    });\n            }\n        },\n\n        _updateCrossText: function (coordSys, point, axisPointerModel) {\n            var crossStyleModel = axisPointerModel.getModel('crossStyle');\n            var textStyleModel = crossStyleModel.getModel('textStyle');\n\n            var tooltipModel = this._tooltipModel;\n\n            var text = this._crossText;\n            if (!text) {\n                text = this._crossText = new graphic.Text({\n                    style: {\n                        textAlign: 'left',\n                        textVerticalAlign: 'bottom'\n                    }\n                });\n                this.group.add(text);\n            }\n\n            var value = coordSys.pointToData(point);\n\n            var dims = coordSys.dimensions;\n            value = zrUtil.map(value, function (val, idx) {\n                var axis = coordSys.getAxis(dims[idx]);\n                if (axis.type === 'category' || axis.type === 'time') {\n                    val = axis.scale.getLabel(val);\n                }\n                else {\n                    val = formatUtil.addCommas(\n                        val.toFixed(axis.getPixelPrecision())\n                    );\n                }\n                return val;\n            });\n\n            text.setStyle({\n                fill: textStyleModel.getTextColor() || crossStyleModel.get('color'),\n                textFont: textStyleModel.getFont(),\n                text: value.join(', '),\n                x: point[0] + 5,\n                y: point[1] - 5\n            });\n            text.z = tooltipModel.get('z');\n            text.zlevel = tooltipModel.get('zlevel');\n        },\n\n        _getPointerElement: function (coordSys, pointerModel, axisType, initShape) {\n            var tooltipModel = this._tooltipModel;\n            var z = tooltipModel.get('z');\n            var zlevel = tooltipModel.get('zlevel');\n            var axisPointers = this._axisPointers;\n            var coordSysName = coordSys.name;\n            axisPointers[coordSysName] = axisPointers[coordSysName] || {};\n            if (axisPointers[coordSysName][axisType]) {\n                return axisPointers[coordSysName][axisType];\n            }\n\n            // Create if not exists\n            var pointerType = pointerModel.get('type');\n            var styleModel = pointerModel.getModel(pointerType + 'Style');\n            var isShadow = pointerType === 'shadow';\n            var style = styleModel[isShadow ? 'getAreaStyle' : 'getLineStyle']();\n\n            var elementType = coordSys.type === 'polar'\n                ? (isShadow ? 'Sector' : (axisType === 'radius' ? 'Circle' : 'Line'))\n                : (isShadow ? 'Rect' : 'Line');\n\n            isShadow ? (style.stroke = null) : (style.fill = null);\n\n            var el = axisPointers[coordSysName][axisType] = new graphic[elementType]({\n                style: style,\n                z: z,\n                zlevel: zlevel,\n                silent: true,\n                shape: initShape\n            });\n\n            this.group.add(el);\n            return el;\n        },\n\n        /**\n         * Dispatch actions and show tooltip on series\n         * @param {Array.<module:echarts/model/Series>} seriesList\n         * @param {Array.<number>} point\n         * @param {Array.<number>} value\n         * @param {boolean} contentNotChange\n         * @param {Array.<number>|string|Function} [positionExpr]\n         */\n        _dispatchAndShowSeriesTooltipContent: function (\n            coordSys, seriesList, point, value, contentNotChange, positionExpr\n        ) {\n\n            var rootTooltipModel = this._tooltipModel;\n\n            var baseAxis = coordSys.getBaseAxis();\n            var baseDimIndex = baseAxis.dim === 'x' || baseAxis.dim === 'radius' ? 0 : 1;\n\n            var payloadBatch = zrUtil.map(seriesList, function (series) {\n                return {\n                    seriesIndex: series.seriesIndex,\n                    dataIndexInside: series.getAxisTooltipDataIndex\n                        ? series.getAxisTooltipDataIndex(series.coordDimToDataDim(baseAxis.dim), value, baseAxis)\n                        : series.getData().indexOfNearest(\n                            series.coordDimToDataDim(baseAxis.dim)[0],\n                            value[baseDimIndex],\n                            // Add a threshold to avoid find the wrong dataIndex when data length is not same\n                            false, baseAxis.type === 'category' ? 0.5 : null\n                        )\n                };\n            });\n            var sampleSeriesIndex;\n            zrUtil.each(payloadBatch, function (payload, idx) {\n                if (seriesList[idx].getData().hasValue(payload.dataIndexInside)) {\n                    sampleSeriesIndex = idx;\n                }\n            });\n            // Fallback to 0.\n            sampleSeriesIndex = sampleSeriesIndex || 0;\n\n            var lastHover = this._lastHover;\n            var api = this._api;\n            // Dispatch downplay action\n            if (lastHover.payloadBatch && !contentNotChange) {\n                api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Dispatch highlight action\n            if (!contentNotChange) {\n                api.dispatchAction({\n                    type: 'highlight',\n                    batch: payloadBatch\n                });\n                lastHover.payloadBatch = payloadBatch;\n            }\n            // Dispatch showTip action\n            api.dispatchAction({\n                type: 'showTip',\n                dataIndexInside: payloadBatch[sampleSeriesIndex].dataIndexInside,\n                seriesIndex: payloadBatch[sampleSeriesIndex].seriesIndex,\n                from: this.uid\n            });\n\n            if (baseAxis && rootTooltipModel.get('showContent') && rootTooltipModel.get('show')) {\n                var paramsList = zrUtil.map(seriesList, function (series, index) {\n                    return series.getDataParams(payloadBatch[index].dataIndexInside);\n                });\n\n                if (!contentNotChange) {\n                    // Update html content\n                    var firstDataIndex = payloadBatch[sampleSeriesIndex].dataIndexInside;\n\n                    // Default tooltip content\n                    // FIXME\n                    // (1) shold be the first data which has name?\n                    // (2) themeRiver, firstDataIndex is array, and first line is unnecessary.\n                    var firstLine = baseAxis.type === 'time'\n                        ? baseAxis.scale.getLabel(value[baseDimIndex])\n                        : seriesList[sampleSeriesIndex].getData().getName(firstDataIndex);\n                    var defaultHtml = (firstLine ? firstLine + '<br />' : '')\n                        + zrUtil.map(seriesList, function (series, index) {\n                            return series.formatTooltip(payloadBatch[index].dataIndexInside, true);\n                        }).join('<br />');\n\n                    var asyncTicket = 'axis_' + coordSys.name + '_' + firstDataIndex;\n\n                    this._showTooltipContent(\n                        rootTooltipModel, defaultHtml, paramsList, asyncTicket,\n                        point[0], point[1], positionExpr, null, api\n                    );\n                }\n                else {\n                    updatePosition(\n                        positionExpr || rootTooltipModel.get('position'),\n                        point[0], point[1],\n                        rootTooltipModel.get('confine'),\n                        this._tooltipContent, paramsList, null, api\n                    );\n                }\n            }\n        },\n\n        /**\n         * Show tooltip on item\n         * @param {module:echarts/model/Series} seriesModel\n         * @param {number} dataIndex\n         * @param {string} dataType\n         * @param {Object} e\n         */\n        _showItemTooltipContent: function (seriesModel, dataIndex, dataType, e) {\n            // FIXME Graph data\n            var api = this._api;\n            var data = seriesModel.getData(dataType);\n            var itemModel = data.getItemModel(dataIndex);\n\n            var tooltipOpt = itemModel.get('tooltip', true);\n            if (typeof tooltipOpt === 'string') {\n                // In each data item tooltip can be simply write:\n                // {\n                //  value: 10,\n                //  tooltip: 'Something you need to know'\n                // }\n                var tooltipContent = tooltipOpt;\n                tooltipOpt = {\n                    formatter: tooltipContent\n                };\n            }\n            var rootTooltipModel = this._tooltipModel;\n            var seriesTooltipModel = seriesModel.getModel(\n                'tooltip', rootTooltipModel\n            );\n            var tooltipModel = new Model(tooltipOpt, seriesTooltipModel, seriesTooltipModel.ecModel);\n\n            var params = seriesModel.getDataParams(dataIndex, dataType);\n            var defaultHtml = seriesModel.formatTooltip(dataIndex, false, dataType);\n\n            var asyncTicket = 'item_' + seriesModel.name + '_' + dataIndex;\n\n            this._showTooltipContent(\n                tooltipModel, defaultHtml, params, asyncTicket,\n                e.offsetX, e.offsetY, e.position, e.target, api\n            );\n        },\n\n        _showTooltipContent: function (\n            tooltipModel, defaultHtml, params, asyncTicket, x, y, positionExpr, target, api\n        ) {\n            // Reset ticket\n            this._ticket = '';\n\n            if (tooltipModel.get('showContent') && tooltipModel.get('show')) {\n                var tooltipContent = this._tooltipContent;\n                var confine = tooltipModel.get('confine');\n\n                var formatter = tooltipModel.get('formatter');\n                positionExpr = positionExpr || tooltipModel.get('position');\n                var html = defaultHtml;\n\n                if (formatter) {\n                    if (typeof formatter === 'string') {\n                        html = formatUtil.formatTpl(formatter, params);\n                    }\n                    else if (typeof formatter === 'function') {\n                        var self = this;\n                        var ticket = asyncTicket;\n                        var callback = function (cbTicket, html) {\n                            if (cbTicket === self._ticket) {\n                                tooltipContent.setContent(html);\n\n                                updatePosition(\n                                    positionExpr, x, y, confine,\n                                    tooltipContent, params, target, api\n                                );\n                            }\n                        };\n                        self._ticket = ticket;\n                        html = formatter(params, ticket, callback);\n                    }\n                }\n\n                tooltipContent.show(tooltipModel);\n                tooltipContent.setContent(html);\n\n                updatePosition(\n                    positionExpr, x, y, confine,\n                    tooltipContent, params, target, api\n                );\n            }\n        },\n\n        /**\n         * Show axis pointer\n         * @param {string} [coordSysName]\n         */\n        _showAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.show();\n                });\n            }\n            else {\n                this.group.eachChild(function (child) {\n                    child.show();\n                });\n                this.group.show();\n            }\n        },\n\n        _resetLastHover: function () {\n            var lastHover = this._lastHover;\n            if (lastHover.payloadBatch) {\n                this._api.dispatchAction({\n                    type: 'downplay',\n                    batch: lastHover.payloadBatch\n                });\n            }\n            // Reset lastHover\n            this._lastHover = {};\n        },\n        /**\n         * Hide axis pointer\n         * @param {string} [coordSysName]\n         */\n        _hideAxisPointer: function (coordSysName) {\n            if (coordSysName) {\n                var axisPointers = this._axisPointers[coordSysName];\n                axisPointers && zrUtil.each(axisPointers, function (el) {\n                    el.hide();\n                });\n            }\n            else {\n                if (this.group.children().length) {\n                    this.group.hide();\n                }\n            }\n        },\n\n        _hide: function () {\n            clearTimeout(this._showTimeout);\n\n            this._hideAxisPointer();\n            this._resetLastHover();\n            if (!this._alwaysShowContent) {\n                this._tooltipContent.hideLater(this._tooltipModel.get('hideDelay'));\n            }\n\n            this._api.dispatchAction({\n                type: 'hideTip',\n                from: this.uid\n            });\n\n            this._lastX = this._lastY = null;\n        },\n\n        dispose: function (ecModel, api) {\n            if (env.node) {\n                return;\n            }\n            var zr = api.getZr();\n            this._tooltipContent.hide();\n\n            zr.off('click', this._tryShow);\n            zr.off('mousemove', this._mousemove);\n            zr.off('mouseout', this._hide);\n            zr.off('globalout', this._hide);\n\n            api.off('showTip', this._manuallyShowTip);\n            api.off('hideTip', this._manuallyHideTip);\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/component/tooltip/TooltipView.js\n// module id = 774\n// module chunks = 0","\n\n    var numberUtil = require('../util/number');\n    var linearMap = numberUtil.linearMap;\n    var zrUtil = require('zrender/lib/core/util');\n\n    function fixExtentWithBands(extent, nTick) {\n        var size = extent[1] - extent[0];\n        var len = nTick;\n        var margin = size / len / 2;\n        extent[0] += margin;\n        extent[1] -= margin;\n    }\n\n    var normalizedExtent = [0, 1];\n    /**\n     * @name module:echarts/coord/CartesianAxis\n     * @constructor\n     */\n    var Axis = function (dim, scale, extent) {\n\n        /**\n         * Axis dimension. Such as 'x', 'y', 'z', 'angle', 'radius'\n         * @type {string}\n         */\n        this.dim = dim;\n\n        /**\n         * Axis scale\n         * @type {module:echarts/coord/scale/*}\n         */\n        this.scale = scale;\n\n        /**\n         * @type {Array.<number>}\n         * @private\n         */\n        this._extent = extent || [0, 0];\n\n        /**\n         * @type {boolean}\n         */\n        this.inverse = false;\n\n        /**\n         * Usually true when axis has a ordinal scale\n         * @type {boolean}\n         */\n        this.onBand = false;\n    };\n\n    Axis.prototype = {\n\n        constructor: Axis,\n\n        /**\n         * If axis extent contain given coord\n         * @param {number} coord\n         * @return {boolean}\n         */\n        contain: function (coord) {\n            var extent = this._extent;\n            var min = Math.min(extent[0], extent[1]);\n            var max = Math.max(extent[0], extent[1]);\n            return coord >= min && coord <= max;\n        },\n\n        /**\n         * If axis extent contain given data\n         * @param {number} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.contain(this.dataToCoord(data));\n        },\n\n        /**\n         * Get coord extent.\n         * @return {Array.<number>}\n         */\n        getExtent: function () {\n            var ret = this._extent.slice();\n            return ret;\n        },\n\n        /**\n         * Get precision used for formatting\n         * @param {Array.<number>} [dataExtent]\n         * @return {number}\n         */\n        getPixelPrecision: function (dataExtent) {\n            return numberUtil.getPixelPrecision(\n                dataExtent || this.scale.getExtent(),\n                this._extent\n            );\n        },\n\n        /**\n         * Set coord extent\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var extent = this._extent;\n            extent[0] = start;\n            extent[1] = end;\n        },\n\n        /**\n         * Convert data to coord. Data is the rank if it has a ordinal scale\n         * @param {number} data\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        dataToCoord: function (data, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n            data = scale.normalize(data);\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            return linearMap(data, normalizedExtent, extent, clamp);\n        },\n\n        /**\n         * Convert coord to data. Data is the rank if it has a ordinal scale\n         * @param {number} coord\n         * @param  {boolean} clamp\n         * @return {number}\n         */\n        coordToData: function (coord, clamp) {\n            var extent = this._extent;\n            var scale = this.scale;\n\n            if (this.onBand && scale.type === 'ordinal') {\n                extent = extent.slice();\n                fixExtentWithBands(extent, scale.count());\n            }\n\n            var t = linearMap(coord, extent, normalizedExtent, clamp);\n\n            return this.scale.scale(t);\n        },\n        /**\n         * @return {Array.<number>}\n         */\n        getTicksCoords: function (alignWithLabel) {\n            if (this.onBand && !alignWithLabel) {\n                var bands = this.getBands();\n                var coords = [];\n                for (var i = 0; i < bands.length; i++) {\n                    coords.push(bands[i][0]);\n                }\n                if (bands[i - 1]) {\n                    coords.push(bands[i - 1][1]);\n                }\n                return coords;\n            }\n            else {\n                return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n            }\n        },\n\n        /**\n         * Coords of labels are on the ticks or on the middle of bands\n         * @return {Array.<number>}\n         */\n        getLabelsCoords: function () {\n            return zrUtil.map(this.scale.getTicks(), this.dataToCoord, this);\n        },\n\n        /**\n         * Get bands.\n         *\n         * If axis has labels [1, 2, 3, 4]. Bands on the axis are\n         * |---1---|---2---|---3---|---4---|.\n         *\n         * @return {Array}\n         */\n         // FIXME Situation when labels is on ticks\n        getBands: function () {\n            var extent = this.getExtent();\n            var bands = [];\n            var len = this.scale.count();\n            var start = extent[0];\n            var end = extent[1];\n            var span = end - start;\n\n            for (var i = 0; i < len; i++) {\n                bands.push([\n                    span * i / len + start,\n                    span * (i + 1) / len + start\n                ]);\n            }\n            return bands;\n        },\n\n        /**\n         * Get width of band\n         * @return {number}\n         */\n        getBandWidth: function () {\n            var axisExtent = this._extent;\n            var dataExtent = this.scale.getExtent();\n\n            var len = dataExtent[1] - dataExtent[0] + (this.onBand ? 1 : 0);\n            // Fix #2728, avoid NaN when only one data.\n            len === 0 && (len = 1);\n\n            var size = Math.abs(axisExtent[1] - axisExtent[0]);\n\n            return Math.abs(size) / len;\n        }\n    };\n\n    module.exports = Axis;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/Axis.js\n// module id = 775\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var defaultOption = {\n        show: true,\n        zlevel: 0,                  // 一级层叠\n        z: 0,                       // 二级层叠\n        // 反向坐标轴\n        inverse: false,\n\n        // 坐标轴名字，默认为空\n        name: '',\n        // 坐标轴名字位置，支持'start' | 'middle' | 'end'\n        nameLocation: 'end',\n        // 坐标轴名字旋转，degree。\n        nameRotate: null, // Adapt to axis rotate, when nameLocation is 'middle'.\n        nameTruncate: {\n            maxWidth: null,\n            ellipsis: '...',\n            placeholder: '.'\n        },\n        // 坐标轴文字样式，默认取全局样式\n        nameTextStyle: {},\n        // 文字与轴线距离\n        nameGap: 15,\n\n        silent: false, // Default false to support tooltip.\n        triggerEvent: false, // Default false to avoid legacy user event listener fail.\n\n        tooltip: {\n            show: false\n        },\n\n        // 坐标轴线\n        axisLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            onZero: true,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                color: '#333',\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // 属性show控制显示与否，默认显示\n            show: true,\n            // 控制小标记是否在grid里\n            inside: false,\n            // 属性length控制线长\n            length: 5,\n            // 属性lineStyle控制线条样式\n            lineStyle: {\n                width: 1\n            }\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            show: true,\n            // 控制文本标签是否在grid里\n            inside: false,\n            rotate: 0,\n            margin: 8,\n            // formatter: null,\n            // 其余属性默认使用全局文本样式，详见TEXTSTYLE\n            textStyle: {\n                fontSize: 12\n            }\n        },\n        // 分隔线\n        splitLine: {\n            // 默认显示，属性show控制显示与否\n            show: true,\n            // 属性lineStyle（详见lineStyle）控制线条样式\n            lineStyle: {\n                color: ['#ccc'],\n                width: 1,\n                type: 'solid'\n            }\n        },\n        // 分隔区域\n        splitArea: {\n            // 默认不显示，属性show控制显示与否\n            show: false,\n            // 属性areaStyle（详见areaStyle）控制区域样式\n            areaStyle: {\n                color: ['rgba(250,250,250,0.3)','rgba(200,200,200,0.3)']\n            }\n        }\n    };\n\n    var categoryAxis = zrUtil.merge({\n        // 类目起始和结束两端空白策略\n        boundaryGap: true,\n        // splitArea: {\n            // show: false\n        // },\n        splitLine: {\n            show: false\n        },\n        // 坐标轴小标记\n        axisTick: {\n            // If tick is align with label when boundaryGap is true\n            // Default with axisTick\n            alignWithLabel: false,\n            interval: 'auto'\n        },\n        // 坐标轴文本标签，详见axis.axisLabel\n        axisLabel: {\n            interval: 'auto'\n        }\n    }, defaultOption);\n\n    var valueAxis = zrUtil.merge({\n        // 数值起始和结束两端空白策略\n        boundaryGap: [0, 0],\n        // 最小值, 设置成 'dataMin' 则从数据中计算最小值\n        // min: null,\n        // 最大值，设置成 'dataMax' 则从数据中计算最大值\n        // max: null,\n        // Readonly prop, specifies start value of the range when using data zoom.\n        // rangeStart: null\n        // Readonly prop, specifies end value of the range when using data zoom.\n        // rangeEnd: null\n        // 脱离0值比例，放大聚焦到最终_min，_max区间\n        // scale: false,\n        // 分割段数，默认为5\n        splitNumber: 5\n        // Minimum interval\n        // minInterval: null\n    }, defaultOption);\n\n    // FIXME\n    var timeAxis = zrUtil.defaults({\n        scale: true,\n        min: 'dataMin',\n        max: 'dataMax'\n    }, valueAxis);\n    var logAxis = zrUtil.defaults({\n        logBase: 10\n    }, valueAxis);\n    logAxis.scale = true;\n\n    module.exports = {\n        categoryAxis: categoryAxis,\n        valueAxis: valueAxis,\n        timeAxis: timeAxis,\n        logAxis: logAxis\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisDefault.js\n// module id = 776\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('./axisHelper');\n\n    function getName(obj) {\n        if (zrUtil.isObject(obj) && obj.value != null) {\n            return obj.value;\n        }\n        else {\n            return obj;\n        }\n    }\n    /**\n     * Get categories\n     */\n    function getCategories() {\n        return this.get('type') === 'category'\n            && zrUtil.map(this.get('data'), getName);\n    }\n\n    /**\n     * Format labels\n     * @return {Array.<string>}\n     */\n    function getFormattedLabels() {\n        return axisHelper.getFormattedLabels(\n            this.axis,\n            this.get('axisLabel.formatter')\n        );\n    }\n\n    module.exports = {\n\n        getFormattedLabels: getFormattedLabels,\n\n        getCategories: getCategories\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCommonMixin.js\n// module id = 777\n// module chunks = 0","\n\n    var axisDefault = require('./axisDefault');\n    var zrUtil = require('zrender/lib/core/util');\n    var ComponentModel = require('../model/Component');\n    var layout = require('../util/layout');\n\n    // FIXME axisType is fixed ?\n    var AXIS_TYPES = ['value', 'category', 'time', 'log'];\n\n    /**\n     * Generate sub axis model class\n     * @param {string} axisName 'x' 'y' 'radius' 'angle' 'parallel'\n     * @param {module:echarts/model/Component} BaseAxisModelClass\n     * @param {Function} axisTypeDefaulter\n     * @param {Object} [extraDefaultOption]\n     */\n    module.exports = function (axisName, BaseAxisModelClass, axisTypeDefaulter, extraDefaultOption) {\n\n        zrUtil.each(AXIS_TYPES, function (axisType) {\n\n            BaseAxisModelClass.extend({\n\n                type: axisName + 'Axis.' + axisType,\n\n                mergeDefaultAndTheme: function (option, ecModel) {\n                    var layoutMode = this.layoutMode;\n                    var inputPositionParams = layoutMode\n                        ? layout.getLayoutParams(option) : {};\n\n                    var themeModel = ecModel.getTheme();\n                    zrUtil.merge(option, themeModel.get(axisType + 'Axis'));\n                    zrUtil.merge(option, this.getDefaultOption());\n\n                    option.type = axisTypeDefaulter(axisName, option);\n\n                    if (layoutMode) {\n                        layout.mergeLayoutParam(option, inputPositionParams, layoutMode);\n                    }\n                },\n\n                defaultOption: zrUtil.mergeAll(\n                    [\n                        {},\n                        axisDefault[axisType + 'Axis'],\n                        extraDefaultOption\n                    ],\n                    true\n                )\n            });\n        });\n\n        ComponentModel.registerSubTypeDefaulter(\n            axisName + 'Axis',\n            zrUtil.curry(axisTypeDefaulter, axisName)\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelCreator.js\n// module id = 778\n// module chunks = 0","\n\n    module.exports = {\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMin: function () {\n            var option = this.option;\n            var min = option.rangeStart != null ? option.rangeStart : option.min;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (min instanceof Date) {\n                min = +min;\n            }\n            return min;\n        },\n\n        /**\n         * @public\n         * @return {Array.<number|string|Date>}\n         */\n        getMax: function () {\n            var option = this.option;\n            var max = option.rangeEnd != null ? option.rangeEnd : option.max;\n            // In case of axis.type === 'time', Date should be converted to timestamp.\n            // In other cases, min/max should be a number or null/undefined or 'dataMin/Max'.\n            if (max instanceof Date) {\n                max = +max;\n            }\n            return max;\n        },\n\n        /**\n         * @public\n         * @return {boolean}\n         */\n        getNeedCrossZero: function () {\n            var option = this.option;\n            return (option.rangeStart != null || option.rangeEnd != null)\n                ? false : !option.scale;\n        },\n\n        /**\n         * @public\n         * @param {number} rangeStart\n         * @param {number} rangeEnd\n         */\n        setRange: function (rangeStart, rangeEnd) {\n            this.option.rangeStart = rangeStart;\n            this.option.rangeEnd = rangeEnd;\n        },\n\n        /**\n         * @public\n         */\n        resetRange: function () {\n            // rangeStart and rangeEnd is readonly.\n            this.option.rangeStart = this.option.rangeEnd = null;\n        }\n    };\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/axisModelZoomMixin.js\n// module id = 779\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Axis = require('../Axis');\n    var axisLabelInterval = require('./axisLabelInterval');\n\n    /**\n     * Extend axis 2d\n     * @constructor module:echarts/coord/cartesian/Axis2D\n     * @extends {module:echarts/coord/cartesian/Axis}\n     * @param {string} dim\n     * @param {*} scale\n     * @param {Array.<number>} coordExtent\n     * @param {string} axisType\n     * @param {string} position\n     */\n    var Axis2D = function (dim, scale, coordExtent, axisType, position) {\n        Axis.call(this, dim, scale, coordExtent);\n        /**\n         * Axis type\n         *  - 'category'\n         *  - 'value'\n         *  - 'time'\n         *  - 'log'\n         * @type {string}\n         */\n        this.type = axisType || 'value';\n\n        /**\n         * Axis position\n         *  - 'top'\n         *  - 'bottom'\n         *  - 'left'\n         *  - 'right'\n         */\n        this.position = position || 'bottom';\n    };\n\n    Axis2D.prototype = {\n\n        constructor: Axis2D,\n\n        /**\n         * Index of axis, can be used as key\n         */\n        index: 0,\n        /**\n         * If axis is on the zero position of the other axis\n         * @type {boolean}\n         */\n        onZero: false,\n\n        /**\n         * Axis model\n         * @param {module:echarts/coord/cartesian/AxisModel}\n         */\n        model: null,\n\n        isHorizontal: function () {\n            var position = this.position;\n            return position === 'top' || position === 'bottom';\n        },\n\n        getGlobalExtent: function () {\n            var ret = this.getExtent();\n            ret[0] = this.toGlobalCoord(ret[0]);\n            ret[1] = this.toGlobalCoord(ret[1]);\n            return ret;\n        },\n\n        /**\n         * @return {number}\n         */\n        getLabelInterval: function () {\n            var labelInterval = this._labelInterval;\n            if (!labelInterval) {\n                labelInterval = this._labelInterval = axisLabelInterval(this);\n            }\n            return labelInterval;\n        },\n\n        /**\n         * If label is ignored.\n         * Automatically used when axis is category and label can not be all shown\n         * @param  {number}  idx\n         * @return {boolean}\n         */\n        isLabelIgnored: function (idx) {\n            if (this.type === 'category') {\n                var labelInterval = this.getLabelInterval();\n                return ((typeof labelInterval === 'function')\n                    && !labelInterval(idx, this.scale.getLabel(idx)))\n                    || idx % (labelInterval + 1);\n            }\n        },\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var localCoord = axis.toLocalCoord(80);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toLocalCoord: null,\n\n        /**\n         * Transform global coord to local coord,\n         * i.e. var globalCoord = axis.toLocalCoord(40);\n         * designate by module:echarts/coord/cartesian/Grid.\n         * @type {Function}\n         */\n        toGlobalCoord: null\n\n    };\n    zrUtil.inherits(Axis2D, Axis);\n\n    module.exports = Axis2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Axis2D.js\n// module id = 780\n// module chunks = 0","'use strict';\n/**\n * Cartesian coordinate system\n * @module  echarts/coord/Cartesian\n *\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    function dimAxisMapper(dim) {\n        return this._axes[dim];\n    }\n\n    /**\n     * @alias module:echarts/coord/Cartesian\n     * @constructor\n     */\n    var Cartesian = function (name) {\n        this._axes = {};\n\n        this._dimList = [];\n\n        /**\n         * @type {string}\n         */\n        this.name = name || '';\n    };\n\n    Cartesian.prototype = {\n\n        constructor: Cartesian,\n\n        type: 'cartesian',\n\n        /**\n         * Get axis\n         * @param  {number|string} dim\n         * @return {module:echarts/coord/Cartesian~Axis}\n         */\n        getAxis: function (dim) {\n            return this._axes[dim];\n        },\n\n        /**\n         * Get axes list\n         * @return {Array.<module:echarts/coord/Cartesian~Axis>}\n         */\n        getAxes: function () {\n            return zrUtil.map(this._dimList, dimAxisMapper, this);\n        },\n\n        /**\n         * Get axes list by given scale type\n         */\n        getAxesByScale: function (scaleType) {\n            scaleType = scaleType.toLowerCase();\n            return zrUtil.filter(\n                this.getAxes(),\n                function (axis) {\n                    return axis.scale.type === scaleType;\n                }\n            );\n        },\n\n        /**\n         * Add axis\n         * @param {module:echarts/coord/Cartesian.Axis}\n         */\n        addAxis: function (axis) {\n            var dim = axis.dim;\n\n            this._axes[dim] = axis;\n\n            this._dimList.push(dim);\n        },\n\n        /**\n         * Convert data to coord in nd space\n         * @param {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        dataToCoord: function (val) {\n            return this._dataCoordConvert(val, 'dataToCoord');\n        },\n\n        /**\n         * Convert coord in nd space to data\n         * @param  {Array.<number>|Object.<string, number>} val\n         * @return {Array.<number>|Object.<string, number>}\n         */\n        coordToData: function (val) {\n            return this._dataCoordConvert(val, 'coordToData');\n        },\n\n        _dataCoordConvert: function (input, method) {\n            var dimList = this._dimList;\n\n            var output = input instanceof Array ? [] : {};\n\n            for (var i = 0; i < dimList.length; i++) {\n                var dim = dimList[i];\n                var axis = this._axes[dim];\n\n                output[dim] = axis[method](input[dim]);\n            }\n\n            return output;\n        }\n    };\n\n    module.exports = Cartesian;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian.js\n// module id = 781\n// module chunks = 0","'use strict';\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian = require('./Cartesian');\n\n    function Cartesian2D(name) {\n\n        Cartesian.call(this, name);\n    }\n\n    Cartesian2D.prototype = {\n\n        constructor: Cartesian2D,\n\n        type: 'cartesian2d',\n\n        /**\n         * @type {Array.<string>}\n         * @readOnly\n         */\n        dimensions: ['x', 'y'],\n\n        /**\n         * Base axis will be used on stacking.\n         *\n         * @return {module:echarts/coord/cartesian/Axis2D}\n         */\n        getBaseAxis: function () {\n            return this.getAxesByScale('ordinal')[0]\n                || this.getAxesByScale('time')[0]\n                || this.getAxis('x');\n        },\n\n        /**\n         * If contain point\n         * @param {Array.<number>} point\n         * @return {boolean}\n         */\n        containPoint: function (point) {\n            var axisX = this.getAxis('x');\n            var axisY = this.getAxis('y');\n            return axisX.contain(axisX.toLocalCoord(point[0]))\n                && axisY.contain(axisY.toLocalCoord(point[1]));\n        },\n\n        /**\n         * If contain data\n         * @param {Array.<number>} data\n         * @return {boolean}\n         */\n        containData: function (data) {\n            return this.getAxis('x').containData(data[0])\n                && this.getAxis('y').containData(data[1]);\n        },\n\n        /**\n         * Convert series data to an array of points\n         * @param {module:echarts/data/List} data\n         * @param {boolean} stack\n         * @return {Array}\n         *  Return array of points. For example:\n         *  `[[10, 10], [20, 20], [30, 30]]`\n         */\n        dataToPoints: function (data, stack) {\n            return data.mapArray(['x', 'y'], function (x, y) {\n                return this.dataToPoint([x, y]);\n            }, stack, this);\n        },\n\n        /**\n         * @param {Array.<number>} data\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        dataToPoint: function (data, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.toGlobalCoord(xAxis.dataToCoord(data[0], clamp)),\n                yAxis.toGlobalCoord(yAxis.dataToCoord(data[1], clamp))\n            ];\n        },\n\n        /**\n         * @param {Array.<number>} point\n         * @param {boolean} [clamp=false]\n         * @return {Array.<number>}\n         */\n        pointToData: function (point, clamp) {\n            var xAxis = this.getAxis('x');\n            var yAxis = this.getAxis('y');\n            return [\n                xAxis.coordToData(xAxis.toLocalCoord(point[0]), clamp),\n                yAxis.coordToData(yAxis.toLocalCoord(point[1]), clamp)\n            ];\n        },\n\n        /**\n         * Get other axis\n         * @param {module:echarts/coord/cartesian/Axis2D} axis\n         */\n        getOtherAxis: function (axis) {\n            return this.getAxis(axis.dim === 'x' ? 'y' : 'x');\n        }\n    };\n\n    zrUtil.inherits(Cartesian2D, Cartesian);\n\n    module.exports = Cartesian2D;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Cartesian2D.js\n// module id = 782\n// module chunks = 0","/**\n * Grid is a region which contains at most 4 cartesian systems\n *\n * TODO Default cartesian\n */\nvar factory = exports;\n\n    var layout = require('../../util/layout');\n    var axisHelper = require('../../coord/axisHelper');\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Cartesian2D = require('./Cartesian2D');\n    var Axis2D = require('./Axis2D');\n\n    var each = zrUtil.each;\n\n    var ifAxisCrossZero = axisHelper.ifAxisCrossZero;\n    var niceScaleExtent = axisHelper.niceScaleExtent;\n\n    // 依赖 GridModel, AxisModel 做预处理\n    require('./GridModel');\n\n    /**\n     * Check if the axis is used in the specified grid\n     * @inner\n     */\n    function isAxisUsedInTheGrid(axisModel, gridModel, ecModel) {\n        return axisModel.findGridModel() === gridModel;\n    }\n\n    function getLabelUnionRect(axis) {\n        var axisModel = axis.model;\n        var labels = axisModel.getFormattedLabels();\n        var textStyleModel = axisModel.getModel('axisLabel.textStyle');\n        var rect;\n        var step = 1;\n        var labelCount = labels.length;\n        if (labelCount > 40) {\n            // Simple optimization for large amount of labels\n            step = Math.ceil(labelCount / 40);\n        }\n        for (var i = 0; i < labelCount; i += step) {\n            if (!axis.isLabelIgnored(i)) {\n                var singleRect = textStyleModel.getTextRect(labels[i]);\n                // FIXME consider label rotate\n                rect ? rect.union(singleRect) : (rect = singleRect);\n            }\n        }\n        return rect;\n    }\n\n    function Grid(gridModel, ecModel, api) {\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Cartesian2D>}\n         * @private\n         */\n        this._coordsMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Cartesian>}\n         * @private\n         */\n        this._coordsList = [];\n\n        /**\n         * @type {Object.<string, module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesMap = {};\n\n        /**\n         * @type {Array.<module:echarts/coord/cartesian/Axis2D>}\n         * @private\n         */\n        this._axesList = [];\n\n        this._initCartesian(gridModel, ecModel, api);\n\n        this._model = gridModel;\n    }\n\n    var gridProto = Grid.prototype;\n\n    gridProto.type = 'grid';\n\n    gridProto.getRect = function () {\n        return this._rect;\n    };\n\n    gridProto.update = function (ecModel, api) {\n\n        var axesMap = this._axesMap;\n\n        this._updateScale(ecModel, this._model);\n\n        function ifAxisCanNotOnZero(otherAxisDim) {\n            var axes = axesMap[otherAxisDim];\n            for (var idx in axes) {\n                if (axes.hasOwnProperty(idx)) {\n                    var axis = axes[idx];\n                    if (axis && (axis.type === 'category' || !ifAxisCrossZero(axis))) {\n                        return true;\n                    }\n                }\n            }\n            return false;\n        }\n\n        each(axesMap.x, function (xAxis) {\n            niceScaleExtent(xAxis, xAxis.model);\n        });\n        each(axesMap.y, function (yAxis) {\n            niceScaleExtent(yAxis, yAxis.model);\n        });\n        // Fix configuration\n        each(axesMap.x, function (xAxis) {\n            // onZero can not be enabled in these two situations\n            // 1. When any other axis is a category axis\n            // 2. When any other axis not across 0 point\n            if (ifAxisCanNotOnZero('y')) {\n                xAxis.onZero = false;\n            }\n        });\n        each(axesMap.y, function (yAxis) {\n            if (ifAxisCanNotOnZero('x')) {\n                yAxis.onZero = false;\n            }\n        });\n\n        // Resize again if containLabel is enabled\n        // FIXME It may cause getting wrong grid size in data processing stage\n        this.resize(this._model, api);\n    };\n\n    /**\n     * Resize the grid\n     * @param {module:echarts/coord/cartesian/GridModel} gridModel\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    gridProto.resize = function (gridModel, api) {\n\n        var gridRect = layout.getLayoutRect(\n            gridModel.getBoxLayoutParams(), {\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n\n        this._rect = gridRect;\n\n        var axesList = this._axesList;\n\n        adjustAxes();\n\n        // Minus label size\n        if (gridModel.get('containLabel')) {\n            each(axesList, function (axis) {\n                if (!axis.model.get('axisLabel.inside')) {\n                    var labelUnionRect = getLabelUnionRect(axis);\n                    if (labelUnionRect) {\n                        var dim = axis.isHorizontal() ? 'height' : 'width';\n                        var margin = axis.model.get('axisLabel.margin');\n                        gridRect[dim] -= labelUnionRect[dim] + margin;\n                        if (axis.position === 'top') {\n                            gridRect.y += labelUnionRect.height + margin;\n                        }\n                        else if (axis.position === 'left')  {\n                            gridRect.x += labelUnionRect.width + margin;\n                        }\n                    }\n                }\n            });\n\n            adjustAxes();\n        }\n\n        function adjustAxes() {\n            each(axesList, function (axis) {\n                var isHorizontal = axis.isHorizontal();\n                var extent = isHorizontal ? [0, gridRect.width] : [0, gridRect.height];\n                var idx = axis.inverse ? 1 : 0;\n                axis.setExtent(extent[idx], extent[1 - idx]);\n                updateAxisTransfrom(axis, isHorizontal ? gridRect.x : gridRect.y);\n            });\n        }\n    };\n\n    /**\n     * @param {string} axisType\n     * @param {ndumber} [axisIndex]\n     */\n    gridProto.getAxis = function (axisType, axisIndex) {\n        var axesMapOnDim = this._axesMap[axisType];\n        if (axesMapOnDim != null) {\n            if (axisIndex == null) {\n                // Find first axis\n                for (var name in axesMapOnDim) {\n                    if (axesMapOnDim.hasOwnProperty(name)) {\n                        return axesMapOnDim[name];\n                    }\n                }\n            }\n            return axesMapOnDim[axisIndex];\n        }\n    };\n\n    gridProto.getCartesian = function (xAxisIndex, yAxisIndex) {\n        if (xAxisIndex != null && yAxisIndex != null) {\n            var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n            return this._coordsMap[key];\n        }\n        else {\n            // When only xAxisIndex or yAxisIndex given, find its first cartesian.\n            for (var i = 0, coordList = this._coordsList; i < coordList.length; i++) {\n                if (coordList[i].getAxis('x').index === xAxisIndex\n                    || coordList[i].getAxis('y').index === yAxisIndex\n                ) {\n                    return coordList[i];\n                }\n            }\n        }\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertToPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.dataToPoint(value)\n            : target.axis\n            ? target.axis.toGlobalCoord(target.axis.dataToCoord(value))\n            : null;\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.convertFromPixel = function (ecModel, finder, value) {\n        var target = this._findConvertTarget(ecModel, finder);\n\n        return target.cartesian\n            ? target.cartesian.pointToData(value)\n            : target.axis\n            ? target.axis.coordToData(target.axis.toLocalCoord(value))\n            : null;\n    };\n\n    /**\n     * @inner\n     */\n    gridProto._findConvertTarget = function (ecModel, finder) {\n        var seriesModel = finder.seriesModel;\n        var xAxisModel = finder.xAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('xAxis')[0]);\n        var yAxisModel = finder.yAxisModel\n            || (seriesModel && seriesModel.getReferringComponents('yAxis')[0]);\n        var gridModel = finder.gridModel;\n        var coordsList = this._coordsList;\n        var cartesian;\n        var axis;\n\n        if (seriesModel) {\n            cartesian = seriesModel.coordinateSystem;\n            zrUtil.indexOf(coordsList, cartesian) < 0 && (cartesian = null);\n        }\n        else if (xAxisModel && yAxisModel) {\n            cartesian = this.getCartesian(xAxisModel.componentIndex, yAxisModel.componentIndex);\n        }\n        else if (xAxisModel) {\n            axis = this.getAxis('x', xAxisModel.componentIndex);\n        }\n        else if (yAxisModel) {\n            axis = this.getAxis('y', yAxisModel.componentIndex);\n        }\n        // Lowest priority.\n        else if (gridModel) {\n            var grid = gridModel.coordinateSystem;\n            if (grid === this) {\n                cartesian = this._coordsList[0];\n            }\n        }\n\n        return {cartesian: cartesian, axis: axis};\n    };\n\n    /**\n     * @implements\n     * see {module:echarts/CoodinateSystem}\n     */\n    gridProto.containPoint = function (point) {\n        var coord = this._coordsList[0];\n        if (coord) {\n            return coord.containPoint(point);\n        }\n    };\n\n    /**\n     * Initialize cartesian coordinate systems\n     * @private\n     */\n    gridProto._initCartesian = function (gridModel, ecModel, api) {\n        var axisPositionUsed = {\n            left: false,\n            right: false,\n            top: false,\n            bottom: false\n        };\n\n        var axesMap = {\n            x: {},\n            y: {}\n        };\n        var axesCount = {\n            x: 0,\n            y: 0\n        };\n\n        /// Create axis\n        ecModel.eachComponent('xAxis', createAxisCreator('x'), this);\n        ecModel.eachComponent('yAxis', createAxisCreator('y'), this);\n\n        if (!axesCount.x || !axesCount.y) {\n            // Roll back when there no either x or y axis\n            this._axesMap = {};\n            this._axesList = [];\n            return;\n        }\n\n        this._axesMap = axesMap;\n\n        /// Create cartesian2d\n        each(axesMap.x, function (xAxis, xAxisIndex) {\n            each(axesMap.y, function (yAxis, yAxisIndex) {\n                var key = 'x' + xAxisIndex + 'y' + yAxisIndex;\n                var cartesian = new Cartesian2D(key);\n\n                cartesian.grid = this;\n\n                this._coordsMap[key] = cartesian;\n                this._coordsList.push(cartesian);\n\n                cartesian.addAxis(xAxis);\n                cartesian.addAxis(yAxis);\n            }, this);\n        }, this);\n\n        function createAxisCreator(axisType) {\n            return function (axisModel, idx) {\n                if (!isAxisUsedInTheGrid(axisModel, gridModel, ecModel)) {\n                    return;\n                }\n\n                var axisPosition = axisModel.get('position');\n                if (axisType === 'x') {\n                    // Fix position\n                    if (axisPosition !== 'top' && axisPosition !== 'bottom') {\n                        // Default bottom of X\n                        axisPosition = 'bottom';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'top' ? 'bottom' : 'top';\n                        }\n                    }\n                }\n                else {\n                    // Fix position\n                    if (axisPosition !== 'left' && axisPosition !== 'right') {\n                        // Default left of Y\n                        axisPosition = 'left';\n                        if (axisPositionUsed[axisPosition]) {\n                            axisPosition = axisPosition === 'left' ? 'right' : 'left';\n                        }\n                    }\n                }\n                axisPositionUsed[axisPosition] = true;\n\n                var axis = new Axis2D(\n                    axisType, axisHelper.createScaleByModel(axisModel),\n                    [0, 0],\n                    axisModel.get('type'),\n                    axisPosition\n                );\n\n                var isCategory = axis.type === 'category';\n                axis.onBand = isCategory && axisModel.get('boundaryGap');\n                axis.inverse = axisModel.get('inverse');\n\n                axis.onZero = axisModel.get('axisLine.onZero');\n\n                // Inject axis into axisModel\n                axisModel.axis = axis;\n\n                // Inject axisModel into axis\n                axis.model = axisModel;\n\n                // Inject grid info axis\n                axis.grid = this;\n\n                // Index of axis, can be used as key\n                axis.index = idx;\n\n                this._axesList.push(axis);\n\n                axesMap[axisType][idx] = axis;\n                axesCount[axisType]++;\n            };\n        }\n    };\n\n    /**\n     * Update cartesian properties from series\n     * @param  {module:echarts/model/Option} option\n     * @private\n     */\n    gridProto._updateScale = function (ecModel, gridModel) {\n        // Reset scale\n        zrUtil.each(this._axesList, function (axis) {\n            axis.scale.setExtent(Infinity, -Infinity);\n        });\n        ecModel.eachSeries(function (seriesModel) {\n            if (isCartesian2D(seriesModel)) {\n                var axesModels = findAxesModels(seriesModel, ecModel);\n                var xAxisModel = axesModels[0];\n                var yAxisModel = axesModels[1];\n\n                if (!isAxisUsedInTheGrid(xAxisModel, gridModel, ecModel)\n                    || !isAxisUsedInTheGrid(yAxisModel, gridModel, ecModel)\n                 ) {\n                    return;\n                }\n\n                var cartesian = this.getCartesian(\n                    xAxisModel.componentIndex, yAxisModel.componentIndex\n                );\n                var data = seriesModel.getData();\n                var xAxis = cartesian.getAxis('x');\n                var yAxis = cartesian.getAxis('y');\n\n                if (data.type === 'list') {\n                    unionExtent(data, xAxis, seriesModel);\n                    unionExtent(data, yAxis, seriesModel);\n                }\n            }\n        }, this);\n\n        function unionExtent(data, axis, seriesModel) {\n            each(seriesModel.coordDimToDataDim(axis.dim), function (dim) {\n                axis.scale.unionExtent(data.getDataExtent(\n                    dim, axis.scale.type !== 'ordinal'\n                ));\n            });\n        }\n    };\n\n    /**\n     * @inner\n     */\n    function updateAxisTransfrom(axis, coordBase) {\n        var axisExtent = axis.getExtent();\n        var axisExtentSum = axisExtent[0] + axisExtent[1];\n\n        // Fast transform\n        axis.toGlobalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord + coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n        axis.toLocalCoord = axis.dim === 'x'\n            ? function (coord) {\n                return coord - coordBase;\n            }\n            : function (coord) {\n                return axisExtentSum - coord + coordBase;\n            };\n    }\n\n    var axesTypes = ['xAxis', 'yAxis'];\n    /**\n     * @inner\n     */\n    function findAxesModels(seriesModel, ecModel) {\n        return zrUtil.map(axesTypes, function (axisType) {\n            var axisModel = seriesModel.getReferringComponents(axisType)[0];\n\n            if (__DEV__) {\n                if (!axisModel) {\n                    throw new Error(axisType + ' \"' + zrUtil.retrieve(\n                        seriesModel.get(axisType + 'Index'),\n                        seriesModel.get(axisType + 'Id'),\n                        0\n                    ) + '\" not found');\n                }\n            }\n            return axisModel;\n        });\n    }\n\n    /**\n     * @inner\n     */\n    function isCartesian2D(seriesModel) {\n        return seriesModel.get('coordinateSystem') === 'cartesian2d';\n    }\n\n    Grid.create = function (ecModel, api) {\n        var grids = [];\n        ecModel.eachComponent('grid', function (gridModel, idx) {\n            var grid = new Grid(gridModel, ecModel, api);\n            grid.name = 'grid_' + idx;\n            grid.resize(gridModel, api);\n\n            gridModel.coordinateSystem = grid;\n\n            grids.push(grid);\n        });\n\n        // Inject the coordinateSystems into seriesModel\n        ecModel.eachSeries(function (seriesModel) {\n            if (!isCartesian2D(seriesModel)) {\n                return;\n            }\n\n            var axesModels = findAxesModels(seriesModel, ecModel);\n            var xAxisModel = axesModels[0];\n            var yAxisModel = axesModels[1];\n\n            var gridModel = xAxisModel.findGridModel();\n\n            if (__DEV__) {\n                if (!gridModel) {\n                    throw new Error(\n                        'Grid \"' + zrUtil.retrieve(\n                            xAxisModel.get('gridIndex'),\n                            xAxisModel.get('gridId'),\n                            0\n                        ) + '\" not found'\n                    );\n                }\n                if (xAxisModel.findGridModel() !== yAxisModel.findGridModel()) {\n                    throw new Error('xAxis and yAxis must use the same grid');\n                }\n            }\n\n            var grid = gridModel.coordinateSystem;\n\n            seriesModel.coordinateSystem = grid.getCartesian(\n                xAxisModel.componentIndex, yAxisModel.componentIndex\n            );\n        });\n\n        return grids;\n    };\n\n    // For deciding which dimensions to use when creating list data\n    Grid.dimensions = Cartesian2D.prototype.dimensions;\n\n    require('../../CoordinateSystem').register('cartesian2d', Grid);\n\n    module.exports = Grid;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/Grid.js\n// module id = 783\n// module chunks = 0","'use strict';\n// Grid 是在有直角坐标系的时候必须要存在的\n// 所以这里也要被 Cartesian2D 依赖\n\n\n    require('./AxisModel');\n    var ComponentModel = require('../../model/Component');\n\n    module.exports = ComponentModel.extend({\n\n        type: 'grid',\n\n        dependencies: ['xAxis', 'yAxis'],\n\n        layoutMode: 'box',\n\n        /**\n         * @type {module:echarts/coord/cartesian/Grid}\n         */\n        coordinateSystem: null,\n\n        defaultOption: {\n            show: false,\n            zlevel: 0,\n            z: 0,\n            left: '10%',\n            top: 60,\n            right: '10%',\n            bottom: 60,\n            // If grid size contain label\n            containLabel: false,\n            // width: {totalWidth} - left - right,\n            // height: {totalHeight} - top - bottom,\n            backgroundColor: 'rgba(0,0,0,0)',\n            borderWidth: 1,\n            borderColor: '#ccc'\n        }\n    });\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/GridModel.js\n// module id = 784\n// module chunks = 0","'use strict';\n/**\n * Helper function for axisLabelInterval calculation\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var axisHelper = require('../axisHelper');\n\n    module.exports = function (axis) {\n        var axisModel = axis.model;\n        var labelModel = axisModel.getModel('axisLabel');\n        var labelInterval = labelModel.get('interval');\n        if (!(axis.type === 'category' && labelInterval === 'auto')) {\n            return labelInterval === 'auto' ? 0 : labelInterval;\n        }\n\n        return axisHelper.getAxisLabelInterval(\n            zrUtil.map(axis.scale.getTicks(), axis.dataToCoord, axis),\n            axisModel.getFormattedLabels(),\n            labelModel.getModel('textStyle').getFont(),\n            axis.isHorizontal()\n        );\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/coord/cartesian/axisLabelInterval.js\n// module id = 785\n// module chunks = 0","'use strict';\n\n\n    function defaultKeyGetter(item) {\n        return item;\n    }\n\n    function DataDiffer(oldArr, newArr, oldKeyGetter, newKeyGetter) {\n        this._old = oldArr;\n        this._new = newArr;\n\n        this._oldKeyGetter = oldKeyGetter || defaultKeyGetter;\n        this._newKeyGetter = newKeyGetter || defaultKeyGetter;\n    }\n\n    DataDiffer.prototype = {\n\n        constructor: DataDiffer,\n\n        /**\n         * Callback function when add a data\n         */\n        add: function (func) {\n            this._add = func;\n            return this;\n        },\n\n        /**\n         * Callback function when update a data\n         */\n        update: function (func) {\n            this._update = func;\n            return this;\n        },\n\n        /**\n         * Callback function when remove a data\n         */\n        remove: function (func) {\n            this._remove = func;\n            return this;\n        },\n\n        execute: function () {\n            var oldArr = this._old;\n            var newArr = this._new;\n            var oldKeyGetter = this._oldKeyGetter;\n            var newKeyGetter = this._newKeyGetter;\n\n            var oldDataIndexMap = {};\n            var newDataIndexMap = {};\n            var oldDataKeyArr = [];\n            var newDataKeyArr = [];\n            var i;\n\n            initIndexMap(oldArr, oldDataIndexMap, oldDataKeyArr, oldKeyGetter);\n            initIndexMap(newArr, newDataIndexMap, newDataKeyArr, newKeyGetter);\n\n            // Travel by inverted order to make sure order consistency\n            // when duplicate keys exists (consider newDataIndex.pop() below).\n            // For performance consideration, these code below do not look neat.\n            for (i = 0; i < oldArr.length; i++) {\n                var key = oldDataKeyArr[i];\n                var idx = newDataIndexMap[key];\n\n                // idx can never be empty array here. see 'set null' logic below.\n                if (idx != null) {\n                    // Consider there is duplicate key (for example, use dataItem.name as key).\n                    // We should make sure every item in newArr and oldArr can be visited.\n                    var len = idx.length;\n                    if (len) {\n                        len === 1 && (newDataIndexMap[key] = null);\n                        idx = idx.unshift();\n                    }\n                    else {\n                        newDataIndexMap[key] = null;\n                    }\n                    this._update && this._update(idx, i);\n                }\n                else {\n                    this._remove && this._remove(i);\n                }\n            }\n\n            for (var i = 0; i < newDataKeyArr.length; i++) {\n                var key = newDataKeyArr[i];\n                if (newDataIndexMap.hasOwnProperty(key)) {\n                    var idx = newDataIndexMap[key];\n                    if (idx == null) {\n                        continue;\n                    }\n                    // idx can never be empty array here. see 'set null' logic above.\n                    if (!idx.length) {\n                        this._add && this._add(idx);\n                    }\n                    else {\n                        for (var j = 0, len = idx.length; j < len; j++) {\n                            this._add && this._add(idx[j]);\n                        }\n                    }\n                }\n            }\n        }\n    };\n\n    function initIndexMap(arr, map, keyArr, keyGetter) {\n        for (var i = 0; i < arr.length; i++) {\n            var key = keyGetter(arr[i], i);\n            var existence = map[key];\n            if (existence == null) {\n                keyArr.push(key);\n                map[key] = i;\n            }\n            else {\n                if (!existence.length) {\n                    map[key] = existence = [existence];\n                }\n                existence.push(i);\n            }\n        }\n    }\n\n    module.exports = DataDiffer;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/data/DataDiffer.js\n// module id = 786\n// module chunks = 0","\n\n    module.exports = function (seriesType, ecModel) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var coordSys = seriesModel.coordinateSystem;\n\n            if (coordSys) {\n                var dims = coordSys.dimensions;\n\n                if (coordSys.type === 'singleAxis') {\n                    data.each(dims[0], function (x, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(idx, isNaN(x) ? [NaN, NaN] : coordSys.dataToPoint(x));\n                    });\n                }\n                else {\n                    data.each(dims, function (x, y, idx) {\n                        // Also {Array.<number>}, not undefined to avoid if...else... statement\n                        data.setItemLayout(\n                            idx, (isNaN(x) || isNaN(y)) ? [NaN, NaN] : coordSys.dataToPoint([x, y])\n                        );\n                    }, true);\n                }\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/layout/points.js\n// module id = 787\n// module chunks = 0","\n\n    var graphic = require('../util/graphic');\n    var zrUtil = require('zrender/lib/core/util');\n    var PI = Math.PI;\n    /**\n     * @param {module:echarts/ExtensionAPI} api\n     * @param {Object} [opts]\n     * @param {string} [opts.text]\n     * @param {string} [opts.color]\n     * @param {string} [opts.textColor]\n     * @return {module:zrender/Element}\n     */\n    module.exports = function (api, opts) {\n        opts = opts || {};\n        zrUtil.defaults(opts, {\n            text: 'loading',\n            color: '#c23531',\n            textColor: '#000',\n            maskColor: 'rgba(255, 255, 255, 0.8)',\n            zlevel: 0\n        });\n        var mask = new graphic.Rect({\n            style: {\n                fill: opts.maskColor\n            },\n            zlevel: opts.zlevel,\n            z: 10000\n        });\n        var arc = new graphic.Arc({\n            shape: {\n                startAngle: -PI / 2,\n                endAngle: -PI / 2 + 0.1,\n                r: 10\n            },\n            style: {\n                stroke: opts.color,\n                lineCap: 'round',\n                lineWidth: 5\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n        var labelRect = new graphic.Rect({\n            style: {\n                fill: 'none',\n                text: opts.text,\n                textPosition: 'right',\n                textDistance: 10,\n                textFill: opts.textColor\n            },\n            zlevel: opts.zlevel,\n            z: 10001\n        });\n\n        arc.animateShape(true)\n            .when(1000, {\n                endAngle: PI * 3 / 2\n            })\n            .start('circularInOut');\n        arc.animateShape(true)\n            .when(1000, {\n                startAngle: PI * 3 / 2\n            })\n            .delay(300)\n            .start('circularInOut');\n\n        var group = new graphic.Group();\n        group.add(arc);\n        group.add(labelRect);\n        group.add(mask);\n        // Inject resize\n        group.resize = function () {\n            var cx = api.getWidth() / 2;\n            var cy = api.getHeight() / 2;\n            arc.setShape({\n                cx: cx,\n                cy: cy\n            });\n            var r = arc.shape.r;\n            labelRect.setShape({\n                x: cx - r,\n                y: cy - r,\n                width: r * 2,\n                height: r * 2\n            });\n\n            mask.setShape({\n                x: 0,\n                y: 0,\n                width: api.getWidth(),\n                height: api.getHeight()\n            });\n        };\n        group.resize();\n        return group;\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/loading/default.js\n// module id = 788\n// module chunks = 0","/**\n * ECharts global model\n *\n * @module {echarts/model/Global}\n */\n\n\n\n    /**\n     * Caution: If the mechanism should be changed some day, these cases\n     * should be considered:\n     *\n     * (1) In `merge option` mode, if using the same option to call `setOption`\n     * many times, the result should be the same (try our best to ensure that).\n     * (2) In `merge option` mode, if a component has no id/name specified, it\n     * will be merged by index, and the result sequence of the components is\n     * consistent to the original sequence.\n     * (3) `reset` feature (in toolbox). Find detailed info in comments about\n     * `mergeOption` in module:echarts/model/OptionManager.\n     */\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var Model = require('./Model');\n    var each = zrUtil.each;\n    var filter = zrUtil.filter;\n    var map = zrUtil.map;\n    var isArray = zrUtil.isArray;\n    var indexOf = zrUtil.indexOf;\n    var isObject = zrUtil.isObject;\n\n    var ComponentModel = require('./Component');\n\n    var globalDefault = require('./globalDefault');\n\n    var OPTION_INNER_KEY = '\\0_ec_inner';\n\n    /**\n     * @alias module:echarts/model/Global\n     *\n     * @param {Object} option\n     * @param {module:echarts/model/Model} parentModel\n     * @param {Object} theme\n     */\n    var GlobalModel = Model.extend({\n\n        constructor: GlobalModel,\n\n        init: function (option, parentModel, theme, optionManager) {\n            theme = theme || {};\n\n            this.option = null; // Mark as not initialized.\n\n            /**\n             * @type {module:echarts/model/Model}\n             * @private\n             */\n            this._theme = new Model(theme);\n\n            /**\n             * @type {module:echarts/model/OptionManager}\n             */\n            this._optionManager = optionManager;\n        },\n\n        setOption: function (option, optionPreprocessorFuncs) {\n            zrUtil.assert(\n                !(OPTION_INNER_KEY in option),\n                'please use chart.getOption()'\n            );\n\n            this._optionManager.setOption(option, optionPreprocessorFuncs);\n\n            this.resetOption();\n        },\n\n        /**\n         * @param {string} type null/undefined: reset all.\n         *                      'recreate': force recreate all.\n         *                      'timeline': only reset timeline option\n         *                      'media': only reset media query option\n         * @return {boolean} Whether option changed.\n         */\n        resetOption: function (type) {\n            var optionChanged = false;\n            var optionManager = this._optionManager;\n\n            if (!type || type === 'recreate') {\n                var baseOption = optionManager.mountOption(type === 'recreate');\n\n                if (!this.option || type === 'recreate') {\n                    initBase.call(this, baseOption);\n                }\n                else {\n                    this.restoreData();\n                    this.mergeOption(baseOption);\n                }\n                optionChanged = true;\n            }\n\n            if (type === 'timeline' || type === 'media') {\n                this.restoreData();\n            }\n\n            if (!type || type === 'recreate' || type === 'timeline') {\n                var timelineOption = optionManager.getTimelineOption(this);\n                timelineOption && (this.mergeOption(timelineOption), optionChanged = true);\n            }\n\n            if (!type || type === 'recreate' || type === 'media') {\n                var mediaOptions = optionManager.getMediaOption(this, this._api);\n                if (mediaOptions.length) {\n                    each(mediaOptions, function (mediaOption) {\n                        this.mergeOption(mediaOption, optionChanged = true);\n                    }, this);\n                }\n            }\n\n            return optionChanged;\n        },\n\n        /**\n         * @protected\n         */\n        mergeOption: function (newOption) {\n            var option = this.option;\n            var componentsMap = this._componentsMap;\n            var newCptTypes = [];\n\n            // 如果不存在对应的 component model 则直接 merge\n            each(newOption, function (componentOption, mainType) {\n                if (componentOption == null) {\n                    return;\n                }\n\n                if (!ComponentModel.hasClass(mainType)) {\n                    option[mainType] = option[mainType] == null\n                        ? zrUtil.clone(componentOption)\n                        : zrUtil.merge(option[mainType], componentOption, true);\n                }\n                else {\n                    newCptTypes.push(mainType);\n                }\n            });\n\n            // FIXME OPTION 同步是否要改回原来的\n            ComponentModel.topologicalTravel(\n                newCptTypes, ComponentModel.getAllClassMainTypes(), visitComponent, this\n            );\n\n            this._seriesIndices = this._seriesIndices || [];\n\n            function visitComponent(mainType, dependencies) {\n                var newCptOptionList = modelUtil.normalizeToArray(newOption[mainType]);\n\n                var mapResult = modelUtil.mappingToExists(\n                    componentsMap[mainType], newCptOptionList\n                );\n\n                modelUtil.makeIdAndName(mapResult);\n\n                // Set mainType and complete subType.\n                each(mapResult, function (item, index) {\n                    var opt = item.option;\n                    if (isObject(opt)) {\n                        item.keyInfo.mainType = mainType;\n                        item.keyInfo.subType = determineSubType(mainType, opt, item.exist);\n                    }\n                });\n\n                var dependentModels = getComponentsByTypes(\n                    componentsMap, dependencies\n                );\n\n                option[mainType] = [];\n                componentsMap[mainType] = [];\n\n                each(mapResult, function (resultItem, index) {\n                    var componentModel = resultItem.exist;\n                    var newCptOption = resultItem.option;\n\n                    zrUtil.assert(\n                        isObject(newCptOption) || componentModel,\n                        'Empty component definition'\n                    );\n\n                    // Consider where is no new option and should be merged using {},\n                    // see removeEdgeAndAdd in topologicalTravel and\n                    // ComponentModel.getAllClassMainTypes.\n                    if (!newCptOption) {\n                        componentModel.mergeOption({}, this);\n                        componentModel.optionUpdated({}, false);\n                    }\n                    else {\n                        var ComponentModelClass = ComponentModel.getClass(\n                            mainType, resultItem.keyInfo.subType, true\n                        );\n\n                        if (componentModel && componentModel instanceof ComponentModelClass) {\n                            componentModel.name = resultItem.keyInfo.name;\n                            componentModel.mergeOption(newCptOption, this);\n                            componentModel.optionUpdated(newCptOption, false);\n                        }\n                        else {\n                            // PENDING Global as parent ?\n                            var extraOpt = zrUtil.extend(\n                                {\n                                    dependentModels: dependentModels,\n                                    componentIndex: index\n                                },\n                                resultItem.keyInfo\n                            );\n                            componentModel = new ComponentModelClass(\n                                newCptOption, this, this, extraOpt\n                            );\n                            zrUtil.extend(componentModel, extraOpt);\n                            componentModel.init(newCptOption, this, this, extraOpt);\n                            // Call optionUpdated after init.\n                            // newCptOption has been used as componentModel.option\n                            // and may be merged with theme and default, so pass null\n                            // to avoid confusion.\n                            componentModel.optionUpdated(null, true);\n                        }\n                    }\n\n                    componentsMap[mainType][index] = componentModel;\n                    option[mainType][index] = componentModel.option;\n                }, this);\n\n                // Backup series for filtering.\n                if (mainType === 'series') {\n                    this._seriesIndices = createSeriesIndices(componentsMap.series);\n                }\n            }\n        },\n\n        /**\n         * Get option for output (cloned option and inner info removed)\n         * @public\n         * @return {Object}\n         */\n        getOption: function () {\n            var option = zrUtil.clone(this.option);\n\n            each(option, function (opts, mainType) {\n                if (ComponentModel.hasClass(mainType)) {\n                    var opts = modelUtil.normalizeToArray(opts);\n                    for (var i = opts.length - 1; i >= 0; i--) {\n                        // Remove options with inner id.\n                        if (modelUtil.isIdInner(opts[i])) {\n                            opts.splice(i, 1);\n                        }\n                    }\n                    option[mainType] = opts;\n                }\n            });\n\n            delete option[OPTION_INNER_KEY];\n\n            return option;\n        },\n\n        /**\n         * @return {module:echarts/model/Model}\n         */\n        getTheme: function () {\n            return this._theme;\n        },\n\n        /**\n         * @param {string} mainType\n         * @param {number} [idx=0]\n         * @return {module:echarts/model/Component}\n         */\n        getComponent: function (mainType, idx) {\n            var list = this._componentsMap[mainType];\n            if (list) {\n                return list[idx || 0];\n            }\n        },\n\n        /**\n         * @param {Object} condition\n         * @param {string} condition.mainType\n         * @param {string} [condition.subType] If ignore, only query by mainType\n         * @param {number|Array.<number>} [condition.index] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.id] Either input index or id or name.\n         * @param {string|Array.<string>} [condition.name] Either input index or id or name.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        queryComponents: function (condition) {\n            var mainType = condition.mainType;\n            if (!mainType) {\n                return [];\n            }\n\n            var index = condition.index;\n            var id = condition.id;\n            var name = condition.name;\n\n            var cpts = this._componentsMap[mainType];\n\n            if (!cpts || !cpts.length) {\n                return [];\n            }\n\n            var result;\n\n            if (index != null) {\n                if (!isArray(index)) {\n                    index = [index];\n                }\n                result = filter(map(index, function (idx) {\n                    return cpts[idx];\n                }), function (val) {\n                    return !!val;\n                });\n            }\n            else if (id != null) {\n                var isIdArray = isArray(id);\n                result = filter(cpts, function (cpt) {\n                    return (isIdArray && indexOf(id, cpt.id) >= 0)\n                        || (!isIdArray && cpt.id === id);\n                });\n            }\n            else if (name != null) {\n                var isNameArray = isArray(name);\n                result = filter(cpts, function (cpt) {\n                    return (isNameArray && indexOf(name, cpt.name) >= 0)\n                        || (!isNameArray && cpt.name === name);\n                });\n            }\n            else {\n                // Return all components with mainType\n                result = cpts;\n            }\n\n            return filterBySubType(result, condition);\n        },\n\n        /**\n         * The interface is different from queryComponents,\n         * which is convenient for inner usage.\n         *\n         * @usage\n         * var result = findComponents(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}}\n         * );\n         * var result = findComponents(\n         *     {mainType: 'series'},\n         *     function (model, index) {...}\n         * );\n         * // result like [component0, componnet1, ...]\n         *\n         * @param {Object} condition\n         * @param {string} condition.mainType Mandatory.\n         * @param {string} [condition.subType] Optional.\n         * @param {Object} [condition.query] like {xxxIndex, xxxId, xxxName},\n         *        where xxx is mainType.\n         *        If query attribute is null/undefined or has no index/id/name,\n         *        do not filtering by query conditions, which is convenient for\n         *        no-payload situations or when target of action is global.\n         * @param {Function} [condition.filter] parameter: component, return boolean.\n         * @return {Array.<module:echarts/model/Component>}\n         */\n        findComponents: function (condition) {\n            var query = condition.query;\n            var mainType = condition.mainType;\n\n            var queryCond = getQueryCond(query);\n            var result = queryCond\n                ? this.queryComponents(queryCond)\n                : this._componentsMap[mainType];\n\n            return doFilter(filterBySubType(result, condition));\n\n            function getQueryCond(q) {\n                var indexAttr = mainType + 'Index';\n                var idAttr = mainType + 'Id';\n                var nameAttr = mainType + 'Name';\n                return q && (\n                        q.hasOwnProperty(indexAttr)\n                        || q.hasOwnProperty(idAttr)\n                        || q.hasOwnProperty(nameAttr)\n                    )\n                    ? {\n                        mainType: mainType,\n                        // subType will be filtered finally.\n                        index: q[indexAttr],\n                        id: q[idAttr],\n                        name: q[nameAttr]\n                    }\n                    : null;\n            }\n\n            function doFilter(res) {\n                return condition.filter\n                     ? filter(res, condition.filter)\n                     : res;\n            }\n        },\n\n        /**\n         * @usage\n         * eachComponent('legend', function (legendModel, index) {\n         *     ...\n         * });\n         * eachComponent(function (componentType, model, index) {\n         *     // componentType does not include subType\n         *     // (componentType is 'xxx' but not 'xxx.aa')\n         * });\n         * eachComponent(\n         *     {mainType: 'dataZoom', query: {dataZoomId: 'abc'}},\n         *     function (model, index) {...}\n         * );\n         * eachComponent(\n         *     {mainType: 'series', subType: 'pie', query: {seriesName: 'uio'}},\n         *     function (model, index) {...}\n         * );\n         *\n         * @param {string|Object=} mainType When mainType is object, the definition\n         *                                  is the same as the method 'findComponents'.\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachComponent: function (mainType, cb, context) {\n            var componentsMap = this._componentsMap;\n\n            if (typeof mainType === 'function') {\n                context = cb;\n                cb = mainType;\n                each(componentsMap, function (components, componentType) {\n                    each(components, function (component, index) {\n                        cb.call(context, componentType, component, index);\n                    });\n                });\n            }\n            else if (zrUtil.isString(mainType)) {\n                each(componentsMap[mainType], cb, context);\n            }\n            else if (isObject(mainType)) {\n                var queryResult = this.findComponents(mainType);\n                each(queryResult, cb, context);\n            }\n        },\n\n        /**\n         * @param {string} name\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByName: function (name) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.name === name;\n            });\n        },\n\n        /**\n         * @param {number} seriesIndex\n         * @return {module:echarts/model/Series}\n         */\n        getSeriesByIndex: function (seriesIndex) {\n            return this._componentsMap.series[seriesIndex];\n        },\n\n        /**\n         * @param {string} subType\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeriesByType: function (subType) {\n            var series = this._componentsMap.series;\n            return filter(series, function (oneSeries) {\n                return oneSeries.subType === subType;\n            });\n        },\n\n        /**\n         * @return {Array.<module:echarts/model/Series>}\n         */\n        getSeries: function () {\n            return this._componentsMap.series.slice();\n        },\n\n        /**\n         * After filtering, series may be different\n         * frome raw series.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                cb.call(context, series, rawSeriesIndex);\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered.\n         *\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeries: function (cb, context) {\n            each(this._componentsMap.series, cb, context);\n        },\n\n        /**\n         * After filtering, series may be different.\n         * frome raw series.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachSeriesByType: function (subType, cb, context) {\n            assertSeriesInitialized(this);\n            each(this._seriesIndices, function (rawSeriesIndex) {\n                var series = this._componentsMap.series[rawSeriesIndex];\n                if (series.subType === subType) {\n                    cb.call(context, series, rawSeriesIndex);\n                }\n            }, this);\n        },\n\n        /**\n         * Iterate raw series before filtered of given type.\n         *\n         * @parma {string} subType\n         * @param {Function} cb\n         * @param {*} context\n         */\n        eachRawSeriesByType: function (subType, cb, context) {\n            return each(this.getSeriesByType(subType), cb, context);\n        },\n\n        /**\n         * @param {module:echarts/model/Series} seriesModel\n         */\n        isSeriesFiltered: function (seriesModel) {\n            assertSeriesInitialized(this);\n            return zrUtil.indexOf(this._seriesIndices, seriesModel.componentIndex) < 0;\n        },\n\n        /**\n         * @param {Function} cb\n         * @param {*} context\n         */\n        filterSeries: function (cb, context) {\n            assertSeriesInitialized(this);\n            var filteredSeries = filter(\n                this._componentsMap.series, cb, context\n            );\n            this._seriesIndices = createSeriesIndices(filteredSeries);\n        },\n\n        restoreData: function () {\n            var componentsMap = this._componentsMap;\n\n            this._seriesIndices = createSeriesIndices(componentsMap.series);\n\n            var componentTypes = [];\n            each(componentsMap, function (components, componentType) {\n                componentTypes.push(componentType);\n            });\n\n            ComponentModel.topologicalTravel(\n                componentTypes,\n                ComponentModel.getAllClassMainTypes(),\n                function (componentType, dependencies) {\n                    each(componentsMap[componentType], function (component) {\n                        component.restoreData();\n                    });\n                }\n            );\n        }\n\n    });\n\n    /**\n     * @inner\n     */\n    function mergeTheme(option, theme) {\n        zrUtil.each(theme, function (themeItem, name) {\n            // 如果有 component model 则把具体的 merge 逻辑交给该 model 处理\n            if (!ComponentModel.hasClass(name)) {\n                if (typeof themeItem === 'object') {\n                    option[name] = !option[name]\n                        ? zrUtil.clone(themeItem)\n                        : zrUtil.merge(option[name], themeItem, false);\n                }\n                else {\n                    if (option[name] == null) {\n                        option[name] = themeItem;\n                    }\n                }\n            }\n        });\n    }\n\n    function initBase(baseOption) {\n        baseOption = baseOption;\n\n        // Using OPTION_INNER_KEY to mark that this option can not be used outside,\n        // i.e. `chart.setOption(chart.getModel().option);` is forbiden.\n        this.option = {};\n        this.option[OPTION_INNER_KEY] = 1;\n\n        /**\n         * @type {Object.<string, Array.<module:echarts/model/Model>>}\n         * @private\n         */\n        this._componentsMap = {};\n\n        /**\n         * Mapping between filtered series list and raw series list.\n         * key: filtered series indices, value: raw series indices.\n         * @type {Array.<nubmer>}\n         * @private\n         */\n        this._seriesIndices = null;\n\n        mergeTheme(baseOption, this._theme.option);\n\n        // TODO Needs clone when merging to the unexisted property\n        zrUtil.merge(baseOption, globalDefault, false);\n\n        this.mergeOption(baseOption);\n    }\n\n    /**\n     * @inner\n     * @param {Array.<string>|string} types model types\n     * @return {Object} key: {string} type, value: {Array.<Object>} models\n     */\n    function getComponentsByTypes(componentsMap, types) {\n        if (!zrUtil.isArray(types)) {\n            types = types ? [types] : [];\n        }\n\n        var ret = {};\n        each(types, function (type) {\n            ret[type] = (componentsMap[type] || []).slice();\n        });\n\n        return ret;\n    }\n\n    /**\n     * @inner\n     */\n    function determineSubType(mainType, newCptOption, existComponent) {\n        var subType = newCptOption.type\n            ? newCptOption.type\n            : existComponent\n            ? existComponent.subType\n            // Use determineSubType only when there is no existComponent.\n            : ComponentModel.determineSubType(mainType, newCptOption);\n\n        // tooltip, markline, markpoint may always has no subType\n        return subType;\n    }\n\n    /**\n     * @inner\n     */\n    function createSeriesIndices(seriesModels) {\n        return map(seriesModels, function (series) {\n            return series.componentIndex;\n        }) || [];\n    }\n\n    /**\n     * @inner\n     */\n    function filterBySubType(components, condition) {\n        // Using hasOwnProperty for restrict. Consider\n        // subType is undefined in user payload.\n        return condition.hasOwnProperty('subType')\n            ? filter(components, function (cpt) {\n                return cpt.subType === condition.subType;\n            })\n            : components;\n    }\n\n    /**\n     * @inner\n     */\n    function assertSeriesInitialized(ecModel) {\n        // Components that use _seriesIndices should depends on series component,\n        // which make sure that their initialization is after series.\n        if (__DEV__) {\n            if (!ecModel._seriesIndices) {\n                throw new Error('Series has not been initialized yet.');\n            }\n        }\n    }\n\n    zrUtil.mixin(GlobalModel, require('./mixin/colorPalette'));\n\n    module.exports = GlobalModel;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/Global.js\n// module id = 789\n// module chunks = 0","/**\n * ECharts option manager\n *\n * @module {echarts/model/OptionManager}\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var modelUtil = require('../util/model');\n    var ComponentModel = require('./Component');\n    var each = zrUtil.each;\n    var clone = zrUtil.clone;\n    var map = zrUtil.map;\n    var merge = zrUtil.merge;\n\n    var QUERY_REG = /^(min|max)?(.+)$/;\n\n    /**\n     * TERM EXPLANATIONS:\n     *\n     * [option]:\n     *\n     *     An object that contains definitions of components. For example:\n     *     var option = {\n     *         title: {...},\n     *         legend: {...},\n     *         visualMap: {...},\n     *         series: [\n     *             {data: [...]},\n     *             {data: [...]},\n     *             ...\n     *         ]\n     *     };\n     *\n     * [rawOption]:\n     *\n     *     An object input to echarts.setOption. 'rawOption' may be an\n     *     'option', or may be an object contains multi-options. For example:\n     *     var option = {\n     *         baseOption: {\n     *             title: {...},\n     *             legend: {...},\n     *             series: [\n     *                 {data: [...]},\n     *                 {data: [...]},\n     *                 ...\n     *             ]\n     *         },\n     *         timeline: {...},\n     *         options: [\n     *             {title: {...}, series: {data: [...]}},\n     *             {title: {...}, series: {data: [...]}},\n     *             ...\n     *         ],\n     *         media: [\n     *             {\n     *                 query: {maxWidth: 320},\n     *                 option: {series: {x: 20}, visualMap: {show: false}}\n     *             },\n     *             {\n     *                 query: {minWidth: 320, maxWidth: 720},\n     *                 option: {series: {x: 500}, visualMap: {show: true}}\n     *             },\n     *             {\n     *                 option: {series: {x: 1200}, visualMap: {show: true}}\n     *             }\n     *         ]\n     *     };\n     *\n     * @alias module:echarts/model/OptionManager\n     * @param {module:echarts/ExtensionAPI} api\n     */\n    function OptionManager(api) {\n\n        /**\n         * @private\n         * @type {module:echarts/ExtensionAPI}\n         */\n        this._api = api;\n\n        /**\n         * @private\n         * @type {Array.<number>}\n         */\n        this._timelineOptions = [];\n\n        /**\n         * @private\n         * @type {Array.<Object>}\n         */\n        this._mediaList = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._mediaDefault;\n\n        /**\n         * -1, means default.\n         * empty means no media.\n         * @private\n         * @type {Array.<number>}\n         */\n        this._currentMediaIndices = [];\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._optionBackup;\n\n        /**\n         * @private\n         * @type {Object}\n         */\n        this._newBaseOption;\n    }\n\n    // timeline.notMerge is not supported in ec3. Firstly there is rearly\n    // case that notMerge is needed. Secondly supporting 'notMerge' requires\n    // rawOption cloned and backuped when timeline changed, which does no\n    // good to performance. What's more, that both timeline and setOption\n    // method supply 'notMerge' brings complex and some problems.\n    // Consider this case:\n    // (step1) chart.setOption({timeline: {notMerge: false}, ...}, false);\n    // (step2) chart.setOption({timeline: {notMerge: true}, ...}, false);\n\n    OptionManager.prototype = {\n\n        constructor: OptionManager,\n\n        /**\n         * @public\n         * @param {Object} rawOption Raw option.\n         * @param {module:echarts/model/Global} ecModel\n         * @param {Array.<Function>} optionPreprocessorFuncs\n         * @return {Object} Init option\n         */\n        setOption: function (rawOption, optionPreprocessorFuncs) {\n            rawOption = clone(rawOption, true);\n\n            // FIXME\n            // 如果 timeline options 或者 media 中设置了某个属性，而baseOption中没有设置，则进行警告。\n\n            var oldOptionBackup = this._optionBackup;\n            var newParsedOption = parseRawOption.call(\n                this, rawOption, optionPreprocessorFuncs, !oldOptionBackup\n            );\n            this._newBaseOption = newParsedOption.baseOption;\n\n            // For setOption at second time (using merge mode);\n            if (oldOptionBackup) {\n                // Only baseOption can be merged.\n                mergeOption(oldOptionBackup.baseOption, newParsedOption.baseOption);\n\n                // For simplicity, timeline options and media options do not support merge,\n                // that is, if you `setOption` twice and both has timeline options, the latter\n                // timeline opitons will not be merged to the formers, but just substitude them.\n                if (newParsedOption.timelineOptions.length) {\n                    oldOptionBackup.timelineOptions = newParsedOption.timelineOptions;\n                }\n                if (newParsedOption.mediaList.length) {\n                    oldOptionBackup.mediaList = newParsedOption.mediaList;\n                }\n                if (newParsedOption.mediaDefault) {\n                    oldOptionBackup.mediaDefault = newParsedOption.mediaDefault;\n                }\n            }\n            else {\n                this._optionBackup = newParsedOption;\n            }\n        },\n\n        /**\n         * @param {boolean} isRecreate\n         * @return {Object}\n         */\n        mountOption: function (isRecreate) {\n            var optionBackup = this._optionBackup;\n\n            // TODO\n            // 如果没有reset功能则不clone。\n\n            this._timelineOptions = map(optionBackup.timelineOptions, clone);\n            this._mediaList = map(optionBackup.mediaList, clone);\n            this._mediaDefault = clone(optionBackup.mediaDefault);\n            this._currentMediaIndices = [];\n\n            return clone(isRecreate\n                // this._optionBackup.baseOption, which is created at the first `setOption`\n                // called, and is merged into every new option by inner method `mergeOption`\n                // each time `setOption` called, can be only used in `isRecreate`, because\n                // its reliability is under suspicion. In other cases option merge is\n                // performed by `model.mergeOption`.\n                ? optionBackup.baseOption : this._newBaseOption\n            );\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Object}\n         */\n        getTimelineOption: function (ecModel) {\n            var option;\n            var timelineOptions = this._timelineOptions;\n\n            if (timelineOptions.length) {\n                // getTimelineOption can only be called after ecModel inited,\n                // so we can get currentIndex from timelineModel.\n                var timelineModel = ecModel.getComponent('timeline');\n                if (timelineModel) {\n                    option = clone(\n                        timelineOptions[timelineModel.getCurrentIndex()],\n                        true\n                    );\n                }\n            }\n\n            return option;\n        },\n\n        /**\n         * @param {module:echarts/model/Global} ecModel\n         * @return {Array.<Object>}\n         */\n        getMediaOption: function (ecModel) {\n            var ecWidth = this._api.getWidth();\n            var ecHeight = this._api.getHeight();\n            var mediaList = this._mediaList;\n            var mediaDefault = this._mediaDefault;\n            var indices = [];\n            var result = [];\n\n            // No media defined.\n            if (!mediaList.length && !mediaDefault) {\n                return result;\n            }\n\n            // Multi media may be applied, the latter defined media has higher priority.\n            for (var i = 0, len = mediaList.length; i < len; i++) {\n                if (applyMediaQuery(mediaList[i].query, ecWidth, ecHeight)) {\n                    indices.push(i);\n                }\n            }\n\n            // FIXME\n            // 是否mediaDefault应该强制用户设置，否则可能修改不能回归。\n            if (!indices.length && mediaDefault) {\n                indices = [-1];\n            }\n\n            if (indices.length && !indicesEquals(indices, this._currentMediaIndices)) {\n                result = map(indices, function (index) {\n                    return clone(\n                        index === -1 ? mediaDefault.option : mediaList[index].option\n                    );\n                });\n            }\n            // Otherwise return nothing.\n\n            this._currentMediaIndices = indices;\n\n            return result;\n        }\n    };\n\n    function parseRawOption(rawOption, optionPreprocessorFuncs, isNew) {\n        var timelineOptions = [];\n        var mediaList = [];\n        var mediaDefault;\n        var baseOption;\n\n        // Compatible with ec2.\n        var timelineOpt = rawOption.timeline;\n\n        if (rawOption.baseOption) {\n            baseOption = rawOption.baseOption;\n        }\n\n        // For timeline\n        if (timelineOpt || rawOption.options) {\n            baseOption = baseOption || {};\n            timelineOptions = (rawOption.options || []).slice();\n        }\n\n        // For media query\n        if (rawOption.media) {\n            baseOption = baseOption || {};\n            var media = rawOption.media;\n            each(media, function (singleMedia) {\n                if (singleMedia && singleMedia.option) {\n                    if (singleMedia.query) {\n                        mediaList.push(singleMedia);\n                    }\n                    else if (!mediaDefault) {\n                        // Use the first media default.\n                        mediaDefault = singleMedia;\n                    }\n                }\n            });\n        }\n\n        // For normal option\n        if (!baseOption) {\n            baseOption = rawOption;\n        }\n\n        // Set timelineOpt to baseOption in ec3,\n        // which is convenient for merge option.\n        if (!baseOption.timeline) {\n            baseOption.timeline = timelineOpt;\n        }\n\n        // Preprocess.\n        each([baseOption].concat(timelineOptions)\n            .concat(zrUtil.map(mediaList, function (media) {\n                return media.option;\n            })),\n            function (option) {\n                each(optionPreprocessorFuncs, function (preProcess) {\n                    preProcess(option, isNew);\n                });\n            }\n        );\n\n        return {\n            baseOption: baseOption,\n            timelineOptions: timelineOptions,\n            mediaDefault: mediaDefault,\n            mediaList: mediaList\n        };\n    }\n\n    /**\n     * @see <http://www.w3.org/TR/css3-mediaqueries/#media1>\n     * Support: width, height, aspectRatio\n     * Can use max or min as prefix.\n     */\n    function applyMediaQuery(query, ecWidth, ecHeight) {\n        var realMap = {\n            width: ecWidth,\n            height: ecHeight,\n            aspectratio: ecWidth / ecHeight // lowser case for convenientce.\n        };\n\n        var applicatable = true;\n\n        zrUtil.each(query, function (value, attr) {\n            var matched = attr.match(QUERY_REG);\n\n            if (!matched || !matched[1] || !matched[2]) {\n                return;\n            }\n\n            var operator = matched[1];\n            var realAttr = matched[2].toLowerCase();\n\n            if (!compare(realMap[realAttr], value, operator)) {\n                applicatable = false;\n            }\n        });\n\n        return applicatable;\n    }\n\n    function compare(real, expect, operator) {\n        if (operator === 'min') {\n            return real >= expect;\n        }\n        else if (operator === 'max') {\n            return real <= expect;\n        }\n        else { // Equals\n            return real === expect;\n        }\n    }\n\n    function indicesEquals(indices1, indices2) {\n        // indices is always order by asc and has only finite number.\n        return indices1.join(',') === indices2.join(',');\n    }\n\n    /**\n     * Consider case:\n     * `chart.setOption(opt1);`\n     * Then user do some interaction like dataZoom, dataView changing.\n     * `chart.setOption(opt2);`\n     * Then user press 'reset button' in toolbox.\n     *\n     * After doing that all of the interaction effects should be reset, the\n     * chart should be the same as the result of invoke\n     * `chart.setOption(opt1); chart.setOption(opt2);`.\n     *\n     * Although it is not able ensure that\n     * `chart.setOption(opt1); chart.setOption(opt2);` is equivalents to\n     * `chart.setOption(merge(opt1, opt2));` exactly,\n     * this might be the only simple way to implement that feature.\n     *\n     * MEMO: We've considered some other approaches:\n     * 1. Each model handle its self restoration but not uniform treatment.\n     *     (Too complex in logic and error-prone)\n     * 2. Use a shadow ecModel. (Performace expensive)\n     */\n    function mergeOption(oldOption, newOption) {\n        newOption = newOption || {};\n\n        each(newOption, function (newCptOpt, mainType) {\n            if (newCptOpt == null) {\n                return;\n            }\n\n            var oldCptOpt = oldOption[mainType];\n\n            if (!ComponentModel.hasClass(mainType)) {\n                oldOption[mainType] = merge(oldCptOpt, newCptOpt, true);\n            }\n            else {\n                newCptOpt = modelUtil.normalizeToArray(newCptOpt);\n                oldCptOpt = modelUtil.normalizeToArray(oldCptOpt);\n\n                var mapResult = modelUtil.mappingToExists(oldCptOpt, newCptOpt);\n\n                oldOption[mainType] = map(mapResult, function (item) {\n                    return (item.option && item.exist)\n                        ? merge(item.exist, item.option, true)\n                        : (item.exist || item.option);\n                });\n            }\n        });\n    }\n\n    module.exports = OptionManager;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/OptionManager.js\n// module id = 790\n// module chunks = 0","\n    var platform = '';\n    // Navigator not exists in node\n    if (typeof navigator !== 'undefined') {\n        platform = navigator.platform || '';\n    }\n    module.exports = {\n        // 全图默认背景\n        // backgroundColor: 'rgba(0,0,0,0)',\n\n        // https://dribbble.com/shots/1065960-Infographic-Pie-chart-visualization\n        // color: ['#5793f3', '#d14a61', '#fd9c35', '#675bba', '#fec42c', '#dd4444', '#d4df5a', '#cd4870'],\n        // 浅色\n        // color: ['#bcd3bb', '#e88f70', '#edc1a5', '#9dc5c8', '#e1e8c8', '#7b7c68', '#e5b5b5', '#f0b489', '#928ea8', '#bda29a'],\n        // color: ['#cc5664', '#9bd6ec', '#ea946e', '#8acaaa', '#f1ec64', '#ee8686', '#a48dc1', '#5da6bc', '#b9dcae'],\n        // 深色\n        color: ['#c23531','#2f4554', '#61a0a8', '#d48265', '#91c7ae','#749f83',  '#ca8622', '#bda29a','#6e7074', '#546570', '#c4ccd3'],\n\n        // 默认需要 Grid 配置项\n        // grid: {},\n        // 主题，主题\n        textStyle: {\n            // color: '#000',\n            // decoration: 'none',\n            // PENDING\n            fontFamily: platform.match(/^Win/) ? 'Microsoft YaHei' : 'sans-serif',\n            // fontFamily: 'Arial, Verdana, sans-serif',\n            fontSize: 12,\n            fontStyle: 'normal',\n            fontWeight: 'normal'\n        },\n\n        // http://blogs.adobe.com/webplatform/2014/02/24/using-blend-modes-in-html-canvas/\n        // https://developer.mozilla.org/en-US/docs/Web/API/CanvasRenderingContext2D/globalCompositeOperation\n        // Default is source-over\n        blendMode: null,\n\n        animation: true,\n        animationDuration: 1000,\n        animationDurationUpdate: 300,\n        animationEasing: 'exponentialOut',\n        animationEasingUpdate: 'cubicOut',\n\n        animationThreshold: 2000,\n        // Configuration for progressive/incremental rendering\n        progressiveThreshold: 3000,\n        progressive: 400,\n\n        // Threshold of if use single hover layer to optimize.\n        // It is recommended that `hoverLayerThreshold` is equivalent to or less than\n        // `progressiveThreshold`, otherwise hover will cause restart of progressive,\n        // which is unexpected.\n        // see example <echarts/test/heatmap-large.html>.\n        hoverLayerThreshold: 3000\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/globalDefault.js\n// module id = 791\n// module chunks = 0","\n    module.exports = {\n        getAreaStyle: require('./makeStyleMapper')(\n            [\n                ['fill', 'color'],\n                ['shadowBlur'],\n                ['shadowOffsetX'],\n                ['shadowOffsetY'],\n                ['opacity'],\n                ['shadowColor']\n            ]\n        )\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/areaStyle.js\n// module id = 792\n// module chunks = 0","\n\n    module.exports = {\n        getBoxLayoutParams: function () {\n            return {\n                left: this.get('left'),\n                top: this.get('top'),\n                right: this.get('right'),\n                bottom: this.get('bottom'),\n                width: this.get('width'),\n                height: this.get('height')\n            };\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/boxLayout.js\n// module id = 793\n// module chunks = 0","\n    var getItemStyle = require('./makeStyleMapper')(\n        [\n            ['fill', 'color'],\n            ['stroke', 'borderColor'],\n            ['lineWidth', 'borderWidth'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor'],\n            ['textPosition'],\n            ['textAlign']\n        ]\n    );\n    module.exports = {\n        getItemStyle: function (excludes) {\n            var style = getItemStyle.call(this, excludes);\n            var lineDash = this.getBorderLineDash();\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getBorderLineDash: function () {\n            var lineType = this.get('borderType');\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [5, 5] : [1, 1]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/itemStyle.js\n// module id = 794\n// module chunks = 0","\n    var getLineStyle = require('./makeStyleMapper')(\n        [\n            ['lineWidth', 'width'],\n            ['stroke', 'color'],\n            ['opacity'],\n            ['shadowBlur'],\n            ['shadowOffsetX'],\n            ['shadowOffsetY'],\n            ['shadowColor']\n        ]\n    );\n    module.exports = {\n        getLineStyle: function (excludes) {\n            var style = getLineStyle.call(this, excludes);\n            var lineDash = this.getLineDash(style.lineWidth);\n            lineDash && (style.lineDash = lineDash);\n            return style;\n        },\n\n        getLineDash: function (lineWidth) {\n            if (lineWidth == null) {\n                lineWidth = 1;\n            }\n            var lineType = this.get('type');\n            var dotSize = Math.max(lineWidth, 2);\n            var dashSize = lineWidth * 4;\n            return (lineType === 'solid' || lineType == null) ? null\n                : (lineType === 'dashed' ? [dashSize, dashSize] : [dotSize, dotSize]);\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/lineStyle.js\n// module id = 795\n// module chunks = 0","\n\n    var textContain = require('zrender/lib/contain/text');\n\n    function getShallow(model, path) {\n        return model && model.getShallow(path);\n    }\n\n    module.exports = {\n        /**\n         * Get color property or get color from option.textStyle.color\n         * @return {string}\n         */\n        getTextColor: function () {\n            var ecModel = this.ecModel;\n            return this.getShallow('color')\n                || (ecModel && ecModel.get('textStyle.color'));\n        },\n\n        /**\n         * Create font string from fontStyle, fontWeight, fontSize, fontFamily\n         * @return {string}\n         */\n        getFont: function () {\n            var ecModel = this.ecModel;\n            var gTextStyleModel = ecModel && ecModel.getModel('textStyle');\n            return [\n                // FIXME in node-canvas fontWeight is before fontStyle\n                this.getShallow('fontStyle') || getShallow(gTextStyleModel, 'fontStyle'),\n                this.getShallow('fontWeight') || getShallow(gTextStyleModel, 'fontWeight'),\n                (this.getShallow('fontSize') || getShallow(gTextStyleModel, 'fontSize') || 12) + 'px',\n                this.getShallow('fontFamily') || getShallow(gTextStyleModel, 'fontFamily') || 'sans-serif'\n            ].join(' ');\n        },\n\n        getTextRect: function (text) {\n            return textContain.getBoundingRect(\n                text,\n                this.getFont(),\n                this.getShallow('align'),\n                this.getShallow('baseline')\n            );\n        },\n\n        truncateText: function (text, containerWidth, ellipsis, options) {\n            return textContain.truncateText(\n                text, containerWidth, this.getFont(), ellipsis, options\n            );\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/model/mixin/textStyle.js\n// module id = 796\n// module chunks = 0","// Compatitable with 2.0\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var compatStyle = require('./helper/compatStyle');\n\n    function get(opt, path) {\n        path = path.split(',');\n        var obj = opt;\n        for (var i = 0; i < path.length; i++) {\n            obj = obj && obj[path[i]];\n            if (obj == null) {\n                break;\n            }\n        }\n        return obj;\n    }\n\n    function set(opt, path, val, overwrite) {\n        path = path.split(',');\n        var obj = opt;\n        var key;\n        for (var i = 0; i < path.length - 1; i++) {\n            key = path[i];\n            if (obj[key] == null) {\n                obj[key] = {};\n            }\n            obj = obj[key];\n        }\n        if (overwrite || obj[path[i]] == null) {\n            obj[path[i]] = val;\n        }\n    }\n\n    function compatLayoutProperties(option) {\n        each(LAYOUT_PROPERTIES, function (prop) {\n            if (prop[0] in option && !(prop[1] in option)) {\n                option[prop[1]] = option[prop[0]];\n            }\n        });\n    }\n\n    var LAYOUT_PROPERTIES = [\n        ['x', 'left'], ['y', 'top'], ['x2', 'right'], ['y2', 'bottom']\n    ];\n\n    var COMPATITABLE_COMPONENTS = [\n        'grid', 'geo', 'parallel', 'legend', 'toolbox', 'title', 'visualMap', 'dataZoom', 'timeline'\n    ];\n\n    var COMPATITABLE_SERIES = [\n        'bar', 'boxplot', 'candlestick', 'chord', 'effectScatter',\n        'funnel', 'gauge', 'lines', 'graph', 'heatmap', 'line', 'map', 'parallel',\n        'pie', 'radar', 'sankey', 'scatter', 'treemap'\n    ];\n\n    var each = zrUtil.each;\n\n    module.exports = function (option) {\n        each(option.series, function (seriesOpt) {\n            if (!zrUtil.isObject(seriesOpt)) {\n                return;\n            }\n\n            var seriesType = seriesOpt.type;\n\n            compatStyle(seriesOpt);\n\n            if (seriesType === 'pie' || seriesType === 'gauge') {\n                if (seriesOpt.clockWise != null) {\n                    seriesOpt.clockwise = seriesOpt.clockWise;\n                }\n            }\n            if (seriesType === 'gauge') {\n                var pointerColor = get(seriesOpt, 'pointer.color');\n                pointerColor != null\n                    && set(seriesOpt, 'itemStyle.normal.color', pointerColor);\n            }\n\n            for (var i = 0; i < COMPATITABLE_SERIES.length; i++) {\n                if (COMPATITABLE_SERIES[i] === seriesOpt.type) {\n                    compatLayoutProperties(seriesOpt);\n                    break;\n                }\n            }\n        });\n\n        // dataRange has changed to visualMap\n        if (option.dataRange) {\n            option.visualMap = option.dataRange;\n        }\n\n        each(COMPATITABLE_COMPONENTS, function (componentName) {\n            var options = option[componentName];\n            if (options) {\n                if (!zrUtil.isArray(options)) {\n                    options = [options];\n                }\n                each(options, function (option) {\n                    compatLayoutProperties(option);\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/backwardCompat.js\n// module id = 797\n// module chunks = 0","\n\n    var zrUtil = require('zrender/lib/core/util');\n\n    var POSSIBLE_STYLES = [\n        'areaStyle', 'lineStyle', 'nodeStyle', 'linkStyle',\n        'chordStyle', 'label', 'labelLine'\n    ];\n\n    function compatItemStyle(opt) {\n        var itemStyleOpt = opt && opt.itemStyle;\n        if (itemStyleOpt) {\n            zrUtil.each(POSSIBLE_STYLES, function (styleName) {\n                var normalItemStyleOpt = itemStyleOpt.normal;\n                var emphasisItemStyleOpt = itemStyleOpt.emphasis;\n                if (normalItemStyleOpt && normalItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].normal) {\n                        opt[styleName].normal = normalItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].normal, normalItemStyleOpt[styleName]);\n                    }\n                    normalItemStyleOpt[styleName] = null;\n                }\n                if (emphasisItemStyleOpt && emphasisItemStyleOpt[styleName]) {\n                    opt[styleName] = opt[styleName] || {};\n                    if (!opt[styleName].emphasis) {\n                        opt[styleName].emphasis = emphasisItemStyleOpt[styleName];\n                    }\n                    else {\n                        zrUtil.merge(opt[styleName].emphasis, emphasisItemStyleOpt[styleName]);\n                    }\n                    emphasisItemStyleOpt[styleName] = null;\n                }\n            });\n        }\n    }\n\n    module.exports = function (seriesOpt) {\n        if (!seriesOpt) {\n            return;\n        }\n        compatItemStyle(seriesOpt);\n        compatItemStyle(seriesOpt.markPoint);\n        compatItemStyle(seriesOpt.markLine);\n        var data = seriesOpt.data;\n        if (data) {\n            for (var i = 0; i < data.length; i++) {\n                compatItemStyle(data[i]);\n            }\n            // mark point data\n            var markPoint = seriesOpt.markPoint;\n            if (markPoint && markPoint.data) {\n                var mpData = markPoint.data;\n                for (var i = 0; i < mpData.length; i++) {\n                    compatItemStyle(mpData[i]);\n                }\n            }\n            // mark line data\n            var markLine = seriesOpt.markLine;\n            if (markLine && markLine.data) {\n                var mlData = markLine.data;\n                for (var i = 0; i < mlData.length; i++) {\n                    if (zrUtil.isArray(mlData[i])) {\n                        compatItemStyle(mlData[i][0]);\n                        compatItemStyle(mlData[i][1]);\n                    }\n                    else {\n                        compatItemStyle(mlData[i]);\n                    }\n                }\n            }\n        }\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/preprocessor/helper/compatStyle.js\n// module id = 798\n// module chunks = 0","\n    module.exports = function (seriesType, ecModel) {\n        var legendModels = ecModel.findComponents({\n            mainType: 'legend'\n        });\n        if (!legendModels || !legendModels.length) {\n            return;\n        }\n        ecModel.eachSeriesByType(seriesType, function (series) {\n            var data = series.getData();\n            data.filterSelf(function (idx) {\n                var name = data.getName(idx);\n                // If in any legend component the status is not selected.\n                for (var i = 0; i < legendModels.length; i++) {\n                    if (!legendModels[i].isSelected(name)) {\n                        return false;\n                    }\n                }\n                return true;\n            }, this);\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataFilter.js\n// module id = 799\n// module chunks = 0","\n    var samplers = {\n        average: function (frame) {\n            var sum = 0;\n            var count = 0;\n            for (var i = 0; i < frame.length; i++) {\n                if (!isNaN(frame[i])) {\n                    sum += frame[i];\n                    count++;\n                }\n            }\n            // Return NaN if count is 0\n            return count === 0 ? NaN : sum / count;\n        },\n        sum: function (frame) {\n            var sum = 0;\n            for (var i = 0; i < frame.length; i++) {\n                // Ignore NaN\n                sum += frame[i] || 0;\n            }\n            return sum;\n        },\n        max: function (frame) {\n            var max = -Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] > max && (max = frame[i]);\n            }\n            return max;\n        },\n        min: function (frame) {\n            var min = Infinity;\n            for (var i = 0; i < frame.length; i++) {\n                frame[i] < min && (min = frame[i]);\n            }\n            return min;\n        },\n        // TODO\n        // Median\n        nearest: function (frame) {\n            return frame[0];\n        }\n    };\n\n    var indexSampler = function (frame, value) {\n        return Math.round(frame.length / 2);\n    };\n    module.exports = function (seriesType, ecModel, api) {\n        ecModel.eachSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n            var sampling = seriesModel.get('sampling');\n            var coordSys = seriesModel.coordinateSystem;\n            // Only cartesian2d support down sampling\n            if (coordSys.type === 'cartesian2d' && sampling) {\n                var baseAxis = coordSys.getBaseAxis();\n                var valueAxis = coordSys.getOtherAxis(baseAxis);\n                var extent = baseAxis.getExtent();\n                // Coordinste system has been resized\n                var size = extent[1] - extent[0];\n                var rate = Math.round(data.count() / size);\n                if (rate > 1) {\n                    var sampler;\n                    if (typeof sampling === 'string') {\n                        sampler = samplers[sampling];\n                    }\n                    else if (typeof sampling === 'function') {\n                        sampler = sampling;\n                    }\n                    if (sampler) {\n                        data = data.downSample(\n                            valueAxis.dim, 1 / rate, sampler, indexSampler\n                        );\n                        seriesModel.setData(data);\n                    }\n                }\n            }\n        }, this);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/processor/dataSample.js\n// module id = 800\n// module chunks = 0","/**\n * Log scale\n * @module echarts/scale/Log\n */\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n    var numberUtil = require('../util/number');\n\n    // Use some method of IntervalScale\n    var IntervalScale = require('./Interval');\n\n    var scaleProto = Scale.prototype;\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var getPrecisionSafe = numberUtil.getPrecisionSafe;\n    var roundingErrorFix = numberUtil.round;\n\n    var mathFloor = Math.floor;\n    var mathCeil = Math.ceil;\n    var mathPow = Math.pow;\n\n    var mathLog = Math.log;\n\n    var LogScale = Scale.extend({\n\n        type: 'log',\n\n        base: 10,\n\n        $constructor: function () {\n            Scale.apply(this, arguments);\n            this._originalScale = new IntervalScale();\n        },\n\n        /**\n         * @return {Array.<number>}\n         */\n        getTicks: function () {\n            var originalScale = this._originalScale;\n            var extent = this._extent;\n            var originalExtent = originalScale.getExtent();\n\n            return zrUtil.map(intervalScaleProto.getTicks.call(this), function (val) {\n                var powVal = numberUtil.round(mathPow(this.base, val));\n\n                // Fix #4158\n                powVal = (val === extent[0] && originalScale.__fixMin)\n                    ? fixRoundingError(powVal, originalExtent[0])\n                    : powVal;\n                powVal = (val === extent[1] && originalScale.__fixMax)\n                    ? fixRoundingError(powVal, originalExtent[1])\n                    : powVal;\n\n                return powVal;\n            }, this);\n        },\n\n        /**\n         * @param {number} val\n         * @return {string}\n         */\n        getLabel: intervalScaleProto.getLabel,\n\n        /**\n         * @param  {number} val\n         * @return {number}\n         */\n        scale: function (val) {\n            val = scaleProto.scale.call(this, val);\n            return mathPow(this.base, val);\n        },\n\n        /**\n         * @param {number} start\n         * @param {number} end\n         */\n        setExtent: function (start, end) {\n            var base = this.base;\n            start = mathLog(start) / mathLog(base);\n            end = mathLog(end) / mathLog(base);\n            intervalScaleProto.setExtent.call(this, start, end);\n        },\n\n        /**\n         * @return {number} end\n         */\n        getExtent: function () {\n            var base = this.base;\n            var extent = scaleProto.getExtent.call(this);\n            extent[0] = mathPow(base, extent[0]);\n            extent[1] = mathPow(base, extent[1]);\n\n            // Fix #4158\n            var originalScale = this._originalScale;\n            var originalExtent = originalScale.getExtent();\n            originalScale.__fixMin && (extent[0] = fixRoundingError(extent[0], originalExtent[0]));\n            originalScale.__fixMax && (extent[1] = fixRoundingError(extent[1], originalExtent[1]));\n\n            return extent;\n        },\n\n        /**\n         * @param  {Array.<number>} extent\n         */\n        unionExtent: function (extent) {\n            this._originalScale.unionExtent(extent);\n\n            var base = this.base;\n            extent[0] = mathLog(extent[0]) / mathLog(base);\n            extent[1] = mathLog(extent[1]) / mathLog(base);\n            scaleProto.unionExtent.call(this, extent);\n        },\n\n        /**\n         * Update interval and extent of intervals for nice ticks\n         * @param  {number} [approxTickNum = 10] Given approx tick number\n         */\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            if (span === Infinity || span <= 0) {\n                return;\n            }\n\n            var interval = numberUtil.quantity(span);\n            var err = approxTickNum / span * interval;\n\n            // Filter ticks to get closer to the desired count.\n            if (err <= 0.5) {\n                interval *= 10;\n            }\n\n            // Interval should be integer\n            while (!isNaN(interval) && Math.abs(interval) < 1 && Math.abs(interval) > 0) {\n                interval *= 10;\n            }\n\n            var niceExtent = [\n                numberUtil.round(mathCeil(extent[0] / interval) * interval),\n                numberUtil.round(mathFloor(extent[1] / interval) * interval)\n            ];\n\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        /**\n         * Nice extent.\n         * @param {number} [approxTickNum = 10] Given approx tick number\n         * @param {boolean} [fixMin=false]\n         * @param {boolean} [fixMax=false]\n         */\n        niceExtent: function (splitNumber, fixMin, fixMax) {\n            intervalScaleProto.niceExtent.call(this, splitNumber, fixMin, fixMax);\n\n            var originalScale = this._originalScale;\n            originalScale.__fixMin = fixMin;\n            originalScale.__fixMax = fixMax;\n        }\n\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        LogScale.prototype[methodName] = function (val) {\n            val = mathLog(val) / mathLog(this.base);\n            return scaleProto[methodName].call(this, val);\n        };\n    });\n\n    LogScale.create = function () {\n        return new LogScale();\n    };\n\n    function fixRoundingError(val, originalVal) {\n        return roundingErrorFix(val, getPrecisionSafe(originalVal));\n    }\n\n    module.exports = LogScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Log.js\n// module id = 801\n// module chunks = 0","/**\n * Linear continuous scale\n * @module echarts/coord/scale/Ordinal\n *\n * http://en.wikipedia.org/wiki/Level_of_measurement\n */\n\n// FIXME only one data\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var Scale = require('./Scale');\n\n    var scaleProto = Scale.prototype;\n\n    var OrdinalScale = Scale.extend({\n\n        type: 'ordinal',\n\n        init: function (data, extent) {\n            this._data = data;\n            this._extent = extent || [0, data.length - 1];\n        },\n\n        parse: function (val) {\n            return typeof val === 'string'\n                ? zrUtil.indexOf(this._data, val)\n                // val might be float.\n                : Math.round(val);\n        },\n\n        contain: function (rank) {\n            rank = this.parse(rank);\n            return scaleProto.contain.call(this, rank)\n                && this._data[rank] != null;\n        },\n\n        /**\n         * Normalize given rank or name to linear [0, 1]\n         * @param {number|string} [val]\n         * @return {number}\n         */\n        normalize: function (val) {\n            return scaleProto.normalize.call(this, this.parse(val));\n        },\n\n        scale: function (val) {\n            return Math.round(scaleProto.scale.call(this, val));\n        },\n\n        /**\n         * @return {Array}\n         */\n        getTicks: function () {\n            var ticks = [];\n            var extent = this._extent;\n            var rank = extent[0];\n\n            while (rank <= extent[1]) {\n                ticks.push(rank);\n                rank++;\n            }\n\n            return ticks;\n        },\n\n        /**\n         * Get item on rank n\n         * @param {number} n\n         * @return {string}\n         */\n        getLabel: function (n) {\n            return this._data[n];\n        },\n\n        /**\n         * @return {number}\n         */\n        count: function () {\n            return this._extent[1] - this._extent[0] + 1;\n        },\n\n        niceTicks: zrUtil.noop,\n        niceExtent: zrUtil.noop\n    });\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    OrdinalScale.create = function () {\n        return new OrdinalScale();\n    };\n\n    module.exports = OrdinalScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Ordinal.js\n// module id = 802\n// module chunks = 0","/**\n * Interval scale\n * @module echarts/coord/scale/Time\n */\n\n\n\n    var zrUtil = require('zrender/lib/core/util');\n    var numberUtil = require('../util/number');\n    var formatUtil = require('../util/format');\n\n    var IntervalScale = require('./Interval');\n\n    var intervalScaleProto = IntervalScale.prototype;\n\n    var mathCeil = Math.ceil;\n    var mathFloor = Math.floor;\n    var ONE_SECOND = 1000;\n    var ONE_MINUTE = ONE_SECOND * 60;\n    var ONE_HOUR = ONE_MINUTE * 60;\n    var ONE_DAY = ONE_HOUR * 24;\n\n    // FIXME 公用？\n    var bisect = function (a, x, lo, hi) {\n        while (lo < hi) {\n            var mid = lo + hi >>> 1;\n            if (a[mid][2] < x) {\n                lo = mid + 1;\n            }\n            else {\n                hi  = mid;\n            }\n        }\n        return lo;\n    };\n\n    /**\n     * @alias module:echarts/coord/scale/Time\n     * @constructor\n     */\n    var TimeScale = IntervalScale.extend({\n        type: 'time',\n\n        // Overwrite\n        getLabel: function (val) {\n            var stepLvl = this._stepLvl;\n\n            var date = new Date(val);\n\n            return formatUtil.formatTime(stepLvl[0], date);\n        },\n\n        // Overwrite\n        niceExtent: function (approxTickNum, fixMin, fixMax) {\n            var extent = this._extent;\n            // If extent start and end are same, expand them\n            if (extent[0] === extent[1]) {\n                // Expand extent\n                extent[0] -= ONE_DAY;\n                extent[1] += ONE_DAY;\n            }\n            // If there are no data and extent are [Infinity, -Infinity]\n            if (extent[1] === -Infinity && extent[0] === Infinity) {\n                var d = new Date();\n                extent[1] = new Date(d.getFullYear(), d.getMonth(), d.getDate());\n                extent[0] = extent[1] - ONE_DAY;\n            }\n\n            this.niceTicks(approxTickNum);\n\n            // var extent = this._extent;\n            var interval = this._interval;\n\n            if (!fixMin) {\n                extent[0] = numberUtil.round(mathFloor(extent[0] / interval) * interval);\n            }\n            if (!fixMax) {\n                extent[1] = numberUtil.round(mathCeil(extent[1] / interval) * interval);\n            }\n        },\n\n        // Overwrite\n        niceTicks: function (approxTickNum) {\n            approxTickNum = approxTickNum || 10;\n\n            var extent = this._extent;\n            var span = extent[1] - extent[0];\n            var approxInterval = span / approxTickNum;\n            var scaleLevelsLen = scaleLevels.length;\n            var idx = bisect(scaleLevels, approxInterval, 0, scaleLevelsLen);\n\n            var level = scaleLevels[Math.min(idx, scaleLevelsLen - 1)];\n            var interval = level[2];\n            // Same with interval scale if span is much larger than 1 year\n            if (level[0] === 'year') {\n                var yearSpan = span / interval;\n\n                // From \"Nice Numbers for Graph Labels\" of Graphic Gems\n                // var niceYearSpan = numberUtil.nice(yearSpan, false);\n                var yearStep = numberUtil.nice(yearSpan / approxTickNum, true);\n\n                interval *= yearStep;\n            }\n\n            var niceExtent = [\n                mathCeil(extent[0] / interval) * interval,\n                mathFloor(extent[1] / interval) * interval\n            ];\n\n            this._stepLvl = level;\n            // Interval will be used in getTicks\n            this._interval = interval;\n            this._niceExtent = niceExtent;\n        },\n\n        parse: function (val) {\n            // val might be float.\n            return +numberUtil.parseDate(val);\n        }\n    });\n\n    zrUtil.each(['contain', 'normalize'], function (methodName) {\n        TimeScale.prototype[methodName] = function (val) {\n            return intervalScaleProto[methodName].call(this, this.parse(val));\n        };\n    });\n\n    // Steps from d3\n    var scaleLevels = [\n        // Format       step    interval\n        ['hh:mm:ss',    1,      ONE_SECOND],           // 1s\n        ['hh:mm:ss',    5,      ONE_SECOND * 5],       // 5s\n        ['hh:mm:ss',    10,     ONE_SECOND * 10],      // 10s\n        ['hh:mm:ss',    15,     ONE_SECOND * 15],      // 15s\n        ['hh:mm:ss',    30,     ONE_SECOND * 30],      // 30s\n        ['hh:mm\\nMM-dd',1,      ONE_MINUTE],          // 1m\n        ['hh:mm\\nMM-dd',5,      ONE_MINUTE * 5],      // 5m\n        ['hh:mm\\nMM-dd',10,     ONE_MINUTE * 10],     // 10m\n        ['hh:mm\\nMM-dd',15,     ONE_MINUTE * 15],     // 15m\n        ['hh:mm\\nMM-dd',30,     ONE_MINUTE * 30],     // 30m\n        ['hh:mm\\nMM-dd',1,      ONE_HOUR],        // 1h\n        ['hh:mm\\nMM-dd',2,      ONE_HOUR * 2],    // 2h\n        ['hh:mm\\nMM-dd',6,      ONE_HOUR * 6],    // 6h\n        ['hh:mm\\nMM-dd',12,     ONE_HOUR * 12],   // 12h\n        ['MM-dd\\nyyyy', 1,      ONE_DAY],   // 1d\n        ['week',        7,      ONE_DAY * 7],        // 7d\n        ['month',       1,      ONE_DAY * 31],       // 1M\n        ['quarter',     3,      ONE_DAY * 380 / 4],  // 3M\n        ['half-year',   6,      ONE_DAY * 380 / 2],  // 6M\n        ['year',        1,      ONE_DAY * 380]       // 1Y\n    ];\n\n    /**\n     * @return {module:echarts/scale/Time}\n     */\n    TimeScale.create = function () {\n        return new TimeScale();\n    };\n\n    module.exports = TimeScale;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/scale/Time.js\n// module id = 803\n// module chunks = 0","\n\n    var lib = {};\n\n    var ORIGIN_METHOD = '\\0__throttleOriginMethod';\n    var RATE = '\\0__throttleRate';\n    var THROTTLE_TYPE = '\\0__throttleType';\n\n    /**\n     * @public\n     * @param {(Function)} fn\n     * @param {number} [delay=0] Unit: ms.\n     * @param {boolean} [debounce=false]\n     *        true: If call interval less than `delay`, only the last call works.\n     *        false: If call interval less than `delay, call works on fixed rate.\n     * @return {(Function)} throttled fn.\n     */\n    lib.throttle = function (fn, delay, debounce) {\n\n        var currCall;\n        var lastCall = 0;\n        var lastExec = 0;\n        var timer = null;\n        var diff;\n        var scope;\n        var args;\n\n        delay = delay || 0;\n\n        function exec() {\n            lastExec = (new Date()).getTime();\n            timer = null;\n            fn.apply(scope, args || []);\n        }\n\n        var cb = function () {\n            currCall = (new Date()).getTime();\n            scope = this;\n            args = arguments;\n            diff = currCall - (debounce ? lastCall : lastExec) - delay;\n\n            clearTimeout(timer);\n\n            if (debounce) {\n                timer = setTimeout(exec, delay);\n            }\n            else {\n                if (diff >= 0) {\n                    exec();\n                }\n                else {\n                    timer = setTimeout(exec, -diff);\n                }\n            }\n\n            lastCall = currCall;\n        };\n\n        /**\n         * Clear throttle.\n         * @public\n         */\n        cb.clear = function () {\n            if (timer) {\n                clearTimeout(timer);\n                timer = null;\n            }\n        };\n\n        return cb;\n    };\n\n    /**\n     * Create throttle method or update throttle rate.\n     *\n     * @example\n     * ComponentView.prototype.render = function () {\n     *     ...\n     *     throttle.createOrUpdate(\n     *         this,\n     *         '_dispatchAction',\n     *         this.model.get('throttle'),\n     *         'fixRate'\n     *     );\n     * };\n     * ComponentView.prototype.remove = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     * ComponentView.prototype.dispose = function () {\n     *     throttle.clear(this, '_dispatchAction');\n     * };\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     * @param {number} [rate]\n     * @param {string} [throttleType='fixRate'] 'fixRate' or 'debounce'\n     * @return {Function} throttled function.\n     */\n    lib.createOrUpdate = function (obj, fnAttr, rate, throttleType) {\n        var fn = obj[fnAttr];\n\n        if (!fn) {\n            return;\n        }\n\n        var originFn = fn[ORIGIN_METHOD] || fn;\n        var lastThrottleType = fn[THROTTLE_TYPE];\n        var lastRate = fn[RATE];\n\n        if (lastRate !== rate || lastThrottleType !== throttleType) {\n            if (rate == null || !throttleType) {\n                return (obj[fnAttr] = originFn);\n            }\n\n            fn = obj[fnAttr] = lib.throttle(\n                originFn, rate, throttleType === 'debounce'\n            );\n            fn[ORIGIN_METHOD] = originFn;\n            fn[THROTTLE_TYPE] = throttleType;\n            fn[RATE] = rate;\n        }\n\n        return fn;\n    };\n\n    /**\n     * Clear throttle. Example see throttle.createOrUpdate.\n     *\n     * @public\n     * @param {Object} obj\n     * @param {string} fnAttr\n     */\n    lib.clear = function (obj, fnAttr) {\n        var fn = obj[fnAttr];\n        if (fn && fn[ORIGIN_METHOD]) {\n            obj[fnAttr] = fn[ORIGIN_METHOD];\n        }\n    };\n\n    module.exports = lib;\n\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/util/throttle.js\n// module id = 804\n// module chunks = 0","\n\n    var Group = require('zrender/lib/container/Group');\n    var componentUtil = require('../util/component');\n    var clazzUtil = require('../util/clazz');\n\n    var Component = function () {\n        /**\n         * @type {module:zrender/container/Group}\n         * @readOnly\n         */\n        this.group = new Group();\n\n        /**\n         * @type {string}\n         * @readOnly\n         */\n        this.uid = componentUtil.getUID('viewComponent');\n    };\n\n    Component.prototype = {\n\n        constructor: Component,\n\n        init: function (ecModel, api) {},\n\n        render: function (componentModel, ecModel, api, payload) {},\n\n        dispose: function () {}\n\n    };\n\n    var componentProto = Component.prototype;\n    componentProto.updateView\n        = componentProto.updateLayout\n        = componentProto.updateVisual\n        = function (seriesModel, ecModel, api, payload) {\n            // Do nothing;\n        };\n    // Enable Component.extend.\n    clazzUtil.enableClassExtend(Component);\n\n    // Enable capability of registerClass, getClass, hasClass, registerSubTypeDefaulter and so on.\n    clazzUtil.enableClassManagement(Component, {registerWhenExtend: true});\n\n    module.exports = Component;\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/view/Component.js\n// module id = 805\n// module chunks = 0","// Pick color from palette for each data item\n\n\n    module.exports = function (seriesType, ecModel) {\n        // Pie and funnel may use diferrent scope\n        var paletteScope = {};\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var dataAll = seriesModel.getRawData();\n            var idxMap = {};\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                var data = seriesModel.getData();\n                data.each(function (idx) {\n                    var rawIdx = data.getRawIndex(idx);\n                    idxMap[rawIdx] = idx;\n                });\n                dataAll.each(function (rawIdx) {\n                    // FIXME Performance\n                    var itemModel = dataAll.getItemModel(rawIdx);\n                    var filteredIdx = idxMap[rawIdx];\n\n                    // If series.itemStyle.normal.color is a function. itemVisual may be encoded\n                    var singleDataColor = filteredIdx != null\n                        && data.getItemVisual(filteredIdx, 'color', true);\n\n                    if (!singleDataColor) {\n                        var color = itemModel.get('itemStyle.normal.color')\n                            || seriesModel.getColorFromPalette(dataAll.getName(rawIdx), paletteScope);\n                        // Legend may use the visual info in data before processed\n                        dataAll.setItemVisual(rawIdx, 'color', color);\n\n                        // Data is not filtered\n                        if (filteredIdx != null) {\n                            data.setItemVisual(filteredIdx, 'color', color);\n                        }\n                    }\n                    else {\n                        // Set data all color for legend\n                        dataAll.setItemVisual(rawIdx, 'color', singleDataColor);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/dataColor.js\n// module id = 806\n// module chunks = 0","\n    var Gradient = require('zrender/lib/graphic/Gradient');\n    module.exports = function (ecModel) {\n        function encodeColor(seriesModel) {\n            var colorAccessPath = (seriesModel.visualColorAccessPath || 'itemStyle.normal.color').split('.');\n            var data = seriesModel.getData();\n            var color = seriesModel.get(colorAccessPath) // Set in itemStyle\n                || seriesModel.getColorFromPalette(seriesModel.get('name'));  // Default color\n\n            // FIXME Set color function or use the platte color\n            data.setVisual('color', color);\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof color === 'function' && !(color instanceof Gradient)) {\n                    data.each(function (idx) {\n                        data.setItemVisual(\n                            idx, 'color', color(seriesModel.getDataParams(idx))\n                        );\n                    });\n                }\n\n                // itemStyle in each data item\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var color = itemModel.get(colorAccessPath, true);\n                    if (color != null) {\n                        data.setItemVisual(idx, 'color', color);\n                    }\n                });\n            }\n        }\n        ecModel.eachRawSeries(encodeColor);\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/seriesColor.js\n// module id = 807\n// module chunks = 0","\n\n    module.exports = function (seriesType, defaultSymbolType, legendSymbol, ecModel, api) {\n\n        // Encoding visual for all series include which is filtered for legend drawing\n        ecModel.eachRawSeriesByType(seriesType, function (seriesModel) {\n            var data = seriesModel.getData();\n\n            var symbolType = seriesModel.get('symbol') || defaultSymbolType;\n            var symbolSize = seriesModel.get('symbolSize');\n\n            data.setVisual({\n                legendSymbol: legendSymbol || symbolType,\n                symbol: symbolType,\n                symbolSize: symbolSize\n            });\n\n            // Only visible series has each data be visual encoded\n            if (!ecModel.isSeriesFiltered(seriesModel)) {\n                if (typeof symbolSize === 'function') {\n                    data.each(function (idx) {\n                        var rawValue = seriesModel.getRawValue(idx);\n                        // FIXME\n                        var params = seriesModel.getDataParams(idx);\n                        data.setItemVisual(idx, 'symbolSize', symbolSize(rawValue, params));\n                    });\n                }\n                data.each(function (idx) {\n                    var itemModel = data.getItemModel(idx);\n                    var itemSymbolType = itemModel.getShallow('symbol', true);\n                    var itemSymbolSize = itemModel.getShallow('symbolSize', true);\n                    // If has item symbol\n                    if (itemSymbolType != null) {\n                        data.setItemVisual(idx, 'symbol', itemSymbolType);\n                    }\n                    if (itemSymbolSize != null) {\n                        // PENDING Transform symbolSize ?\n                        data.setItemVisual(idx, 'symbolSize', itemSymbolSize);\n                    }\n                });\n            }\n        });\n    };\n\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/echarts/lib/visual/symbol.js\n// module id = 808\n// module chunks = 0","import template from './gaugechart.html';\nimport controller from './gaugechart.controller.js';\nimport './gaugechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/gaugechart/gaugechart.component.js","\nexport default class GaugechartController {\n\tconstructor($state) {\n\t\t\"ngInject\";\n\t\tthis.$state = $state;\n\t\tthis.initGaugeChart();\n\t}\n\n\tinitGaugeChart() {\n\t\tthis.gaugeConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tthis.gaugeOption = {\n\t\t\tseries: [{\n\t\t\t\tname: \"外层\",\n\t\t\t\tz: 3,\n\t\t\t\ttype: \"gauge\",\n\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\tendAngle: 0,\n\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\tradius: 80,\n\t\t\t\taxisLine: {\n\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\twidth: 3, //柱子的宽度\n\t\t\t\t\t\tcolor: [[1, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t}\n\t\t\t\t},\n\t\t\t\taxisTick: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\taxisLabel: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tsplitLine: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tpointer: {\n\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t},\n\t\t\t\ttitle: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tdetail: {\n\t\t\t\t\tshow: false\n\t\t\t\t},\n\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\tvalue: 100,\n\t\t\t\t\tname: \"100%\"\n\t\t\t\t}]\n\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: \"内层\",\n\t\t\t\t\ttype: \"gauge\",\n\t\t\t\t\tstartAngle: 180, //总的360，设置180就是半圆\n\t\t\t\t\tendAngle: 0,\n\t\t\t\t\tcenter: [\"50%\", \"77%\"], //整体的位置设置\n\t\t\t\t\tradius: 75,\n\t\t\t\t\taxisLine: {\n\t\t\t\t\t\tlineStyle: {\n\t\t\t\t\t\t\twidth: 30, //柱子的宽度\n\t\t\t\t\t\t\tcolor: [[0.305, \"#1fbba6\"], [1, \"#dbdbdb\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\taxisTick: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\taxisLabel: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tsplitLine: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tpointer: {\n\t\t\t\t\t\twidth: 0, //指针的宽度\n\t\t\t\t\t\tlength: \"80%\", //指针长度，按照半圆半径的百分比\n\t\t\t\t\t\tcolor: \"#2d99e2\"\n\t\t\t\t\t},\n\t\t\t\t\ttitle: {\n\t\t\t\t\t\tshow: true,\n\t\t\t\t\t\toffsetCenter: [0, '-10px'], //标题位置设置\n\t\t\t\t\t\ttextStyle: { //标题样式设置\n\t\t\t\t\t\t\tcolor: \"#1fbba6\",\n\t\t\t\t\t\t\tfontSize: 18,\n\t\t\t\t\t\t\tfontFamily: \"Arial\",\n\t\t\t\t\t\t\tfontWeight: \"normal\"\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tdetail: {\n\t\t\t\t\t\tshow: false\n\t\t\t\t\t},\n\t\t\t\t\tdata: [{ //显示数据\n\t\t\t\t\t\tvalue: 30.50,\n\t\t\t\t\t\tname: \"30.50%\"\n\t\t\t\t\t}]\n\t\t\t\t}]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/gaugechart/gaugechart.controller.js","import template from './linechart.html';\nimport controller from './linechart.controller.js';\nimport './linechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/linechart/linechart.component.js","/**\n * (description)\n *\n * @author yourname\n */\nexport default class LinechartController {\n\tconstructor($state) {\n\t\t\"ngInject\";\n\t\tthis.$state = $state;\n\t\tthis.initLineChart();\n\t}\n\n\tinitLineChart() {\n\t\tlet self =  this;\n\t\tthis.lineConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tthis.lineOption = {\n\t\t\ttitle: {\n\t\t\t\ttext: '内存使用情况',\n\t\t\t\tsubtext: 'pod memory usage',\n\t\t\t\ttextAlign: 'left',\n\t\t\t\tx: \"0\",\n\t\t\t\ttextStyle: {\n\t\t\t\t\tcolor: '#666',\n\t\t\t\t\tfontSize: '14'\n\t\t\t\t},\n\t\t\t\tsubtextStyle: {\n\t\t\t\t\tcolor: '#d6d6d6',\n\t\t\t\t\tfontSize: '12',\n\t\t\t\t\tdisplay: 'inline'\n\t\t\t\t}\n\t\t\t},\n\t\t\tgrid: {\n\t\t\t\tborderWidth: 0,\n\t\t\t\tborderColor: '#f2f2f2'\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\torient: 'horizontal',\n\t\t\t\ttop: '0',\n\t\t\t\tright: '0',\n\t\t\t\talign: 'left',\n\t\t\t\tdata: ['op-lodgings-sync', 'elasticsearch-logging']\n\t\t\t},\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'axis'\n\t\t\t},\n\t\t\txAxis: {\n\t\t\t\ttype: 'category',\n\t\t\t\tboundaryGap: false,\n\t\t\t\tdata: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\n\t\t\t\tsplitLine: {\n\t\t\t\t\tshow: true,\n\t\t\t\t\tinterval: 'auto'\n\t\t\t\t}\n\t\t\t},\n\t\t\tyAxis: {\n\t\t\t\ttype: 'value',\n\t\t\t\taxisLabel: {\n\t\t\t\t\tformatter: '{value} GiB'\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolor: ['#64b1e4', '#fa9073'],\n\t\t\tseries: [\n\t\t\t\t{\n\t\t\t\t\tname: 'op-lodgings-sync',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\n\t\t\t\t},\n\t\t\t\t{\n\t\t\t\t\tname: 'elasticsearch-logging',\n\t\t\t\t\ttype: 'line',\n\t\t\t\t\tsmooth: false,\n\t\t\t\t\tdata: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\n\t\t\t\t}\n\t\t\t]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/linechart/linechart.controller.js","import template from './piechart.html';\nimport controller from './piechart.controller.js';\nimport './piechart.less';\n\nexport default {\n  restrict: 'E',\n  bindings: {},\n  template,\n  controller,\n  controllerAs: 'vm'\n};\n\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/piechart/piechart.component.js","/**\n * (description)\n *\n * @author yourname\n */\n\nexport default class PiechartController {\n\tconstructor($state) {\n\t\t\"ngInject\";\n\t\tthis.$state = $state;\n\t\tthis.initPieChart();\n\t}\n\n\tinitPieChart() {\n\t\tlet self = this;\n\t\tself.pieConfig = {\n\t\t\ttheme: 'default',\n\t\t\tdataLoaded: true\n\t\t};\n\n\t\tself.pieOption = {\n\t\t\ttooltip: {\n\t\t\t\ttrigger: 'item',\n\t\t\t\tformatter: \"{a} <br/>{b} : {c} ({d}%)\"\n\t\t\t},\n\t\t\tlegend: {\n\t\t\t\torient: 'vertical',\n\t\t\t\tx: '65%',\n\t\t\t\ttop: '25%',\n\t\t\t\tdata: ['正常', '断开', '等待'],\n\t\t\t\tformatter: function (name) {\n\t\t\t\t\tvar oa = self.pieOption.series[0].data;\n\t\t\t\t\tfor (var i = 0; i < self.pieOption.series[0].data.length; i++) {\n\t\t\t\t\t\tif (name == oa[i].name) {\n\t\t\t\t\t\t\treturn name + ':' + oa[i].value + '个';\n\t\t\t\t\t\t}\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t},\n\t\t\tcolor: ['#bdea75', '#fe5454', '#faba3c'],\n\t\t\tseries: [{\n\t\t\t\tname: '比例分析',\n\t\t\t\ttype: 'pie',\n\t\t\t\tradius: '55%',\n\t\t\t\tcenter: ['35%', '50%'],\n\t\t\t\tdata: [{\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '正常'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '断开'\n\t\t\t\t}, {\n\t\t\t\t\tvalue: '2',\n\t\t\t\t\tname: '等待'\n\t\t\t\t}],\n\t\t\t\titemStyle: {\n\t\t\t\t\tnormal: {\n\t\t\t\t\t\tlabel: {\n\t\t\t\t\t\t\tshow: false,\n\t\t\t\t\t\t\tformatter: '{b} : {c} ({d}%)'\n\t\t\t\t\t\t}\n\t\t\t\t\t},\n\t\t\t\t\tlabelLine: {\n\t\t\t\t\t\tshow: true\n\t\t\t\t\t}\n\t\t\t\t}\n\t\t\t}]\n\t\t};\n\t}\n}\n\n\n// WEBPACK FOOTER //\n// ./example/app/components/piechart/piechart.controller.js","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport gaugechartComponent from './gaugechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('gaugeChart', [\\n  Charts.name\\n])\\n.component('gaugeChart', gaugechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-4 echarts-container\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.gaugeConfig\\\" ec-option=\\\"vm.gaugeOption\\\" ></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nthis.gaugeConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\nthis.gaugeOption = {\\n  series: [\\n  {\\n    name: \\\"外层\\\",\\n    z: 3,\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 80,\\n    axisLine: {\\n      lineStyle: {\\n        width: 3, //柱子的宽度\\n        color: [[1, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]]\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: false\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 100,\\n      name: \\\"100%\\\"\\n    }]\\n  },\\n  {\\n    name: \\\"内层\\\",\\n    type: \\\"gauge\\\",\\n    startAngle: 180, //总的360，设置180就是半圆\\n    endAngle: 0,\\n    center: [\\\"50%\\\", \\\"77%\\\"], //整体的位置设置\\n    radius: 75,\\n    axisLine: {\\n      lineStyle: {\\n        width: 30, //柱子的宽度\\n        color: [[0.305, \\\"#1fbba6\\\"], [1, \\\"#dbdbdb\\\"]] //0.298是百分比的比例值（小数），还有对应两个颜色值\\n      }\\n    },\\n    axisTick: {\\n      show: false\\n    },\\n    axisLabel: {\\n      show: false\\n    },\\n    splitLine: {\\n      show: false\\n    },\\n    pointer: {\\n      width: 0, //指针的宽度\\n      length: \\\"80%\\\", //指针长度，按照半圆半径的百分比\\n      color: \\\"#2d99e2\\\"\\n    },\\n    title: {\\n      show: true,\\n      offsetCenter: [0, '-10px'], //标题位置设置\\n      textStyle: { //标题样式设置\\n        color: \\\"#1fbba6\\\",\\n        fontSize: 18,\\n        fontFamily: \\\"Arial\\\",\\n        fontWeight: \\\"normal\\\"\\n      }\\n    },\\n    detail: {\\n      show: false\\n    },\\n    data: [{ //显示数据\\n      value: 30.50,\\n      name: \\\"30.50%\\\"\\n    }]\\n  }]\\n};\\n</div>\\n</div>\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/gaugechart/gaugechart.html\n// module id = 989\n// module chunks = 0","module.exports = \"<section class=\\\"intro-content\\\">\\n\\t<h1 translate='{{vm.$state.current.name}}'></h1>\\n</section>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Install' | translate}}</h2>\\n\\t<p>{{'Install_FancyUI'|translate}}</p>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"bash\\\">\\nnpm install fancyui --save</div>\\n</div>\\n\\n<section class=\\\"intro-content\\\">\\n\\t<h2>{{'Inject_Module'|translate}}</h2>\\n</section>\\n\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight no-border\\\" hljs hljs-language=\\\"javascript\\\">\\nimport linechartComponent from './linechart.component';\\nimport {Charts} from 'fancyui';\\n\\nexport default angular.module('lineChart', [\\n  Charts.name\\n])\\n.component('lineChart', linechartComponent);</div>\\n</div>\\n\\n<h2>{{'Example'|translate}}</h2>\\n\\n<div class=\\\"example-block\\\" style=\\\"margin-top: 30px\\\">\\n\\t<div class=\\\"bs-example\\\">\\n\\t\\t<div class=\\\"col-md-12 echarts-container\\\" style=\\\"height: 400px\\\">\\n\\t\\t\\t<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\" ></ng-echarts>\\n\\t\\t</div>\\n\\t</div>\\n</div>\\n\\n<h3>view</h3>\\n<div class=\\\"example-block\\\">\\n  <div class=\\\"highlight\\\" hljs hljs-language=\\\"html\\\">\\n<ng-echarts class=\\\"echarts\\\" ec-config=\\\"vm.lineConfig\\\" ec-option=\\\"vm.lineOption\\\"></ng-echarts></div>\\n</div>\\n\\n<h3>controller</h3>\\n<div class=\\\"example-block\\\">\\n<div class=\\\"highlight\\\" hljs hljs-language=\\\"javascript\\\">\\nlet self = this;\\nthis.lineConfig = {\\n  theme: 'default',\\n  dataLoaded: true\\n};\\n\\nthis.lineOption = {\\n  title: {\\n    text: '内存使用情况',\\n    subtext: 'pod memory usage',\\n    textAlign: 'left',\\n    x: \\\"0\\\",\\n    textStyle: {\\n      color: '#666',\\n      fontSize: '14'\\n    },\\n    subtextStyle: {\\n      color: '#d6d6d6',\\n      fontSize: '12',\\n      display: 'inline'\\n    }\\n  },\\n  grid: {\\n    borderWidth: 0,\\n    borderColor: '#f2f2f2'\\n  },\\n  legend: {\\n    orient: 'horizontal',\\n    top: '0',\\n    right: '0',\\n    align: 'left',\\n    data: ['op-lodgings-sync', 'elasticsearch-logging']\\n  },\\n  tooltip: {\\n    trigger: 'axis'\\n  },\\n  xAxis: {\\n    type: 'category',\\n    boundaryGap: false,\\n    data: ['13:25', '13:30', '13:35', '13:40', '13:45', '13:50', '13:55', '14:00', '14:05', '14:10', '14:15', '14:20'],\\n      splitLine: {\\n      show: true,\\n      interval: 'auto'\\n    }\\n  },\\n  yAxis: {\\n    type: 'value',\\n    axisLabel: {\\n      formatter: '{value} GiB'\\n    }\\n  },\\n  color: ['#64b1e4', '#fa9073'],\\n  series: [\\n    {\\n      name: 'op-lodgings-sync',\\n      type: 'line',\\n      smooth: false,\\n      data: [1.1, 4.5, 3.4, 1.7, 3.8, 2.1, 4.5, 4.7, 5.1, 3.8, 5.5, 6.2]\\n    },\\n    {\\n      name: 'elasticsearch-logging',\\n      type: 'line',\\n      smooth: false,\\n      data: [2.6, 3.7, 5.1, 8.2, 3.2, 6.1, 3.9, 4.5, 3.4, 1.7, 3.8, 2.1]\\n    }\\n  ]\\n};\\n</div>\\n</div>\\n\"\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./example/app/components/linechart/linechart.html\n// module id = 998\n// module chunks = 0"],"sourceRoot":""}